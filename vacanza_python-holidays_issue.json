[
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1677",
        "title": "Fix README links targets",
        "count": 0,
        "turns": [
            "Some of the README.rst's Contributions and License section links looks right on Github but result in 404 on PYPI and RTD platforms. We need to fix it so links would work right everywhere."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1676",
        "title": "Standardize Islamic holidays comments",
        "count": 0,
        "turns": [
            "Yes, for some Islamic holidays we use here \"traditional\" version of the name rather than translated one. Where Eid al-Fitr and Eid al-Adha can still be translated (as \"Feast of Breaking the Fast\" and \"Feast of Sacrifice\"), I can't find a suitable short name for Isra' and Mi'raj and Ashura, for example :)\n\nOriginally posted by @KJhellico in #1673 (comment)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1674",
        "title": "Australia NSW - Bank Holiday only within Holiday data",
        "count": 0,
        "turns": [
            "Hi\nWell done on maintaining library!\nFurther to the original request, which I see has been closed, this 5th August Subdiv=NSW Australia Holiday remains.\nThis 1st Monday August entry here:\nCode Link - Australia.py\naustralia.py\n    def _populate_subdiv_nsw_public_holidays(self):\n        # Easter\n        self._add_holy_saturday(\"Easter Saturday\")\n        self._add_easter_sunday(\"Easter Sunday\")\n\n        # Labour Day\n        self._add_holiday_1st_mon_of_oct(\"Labour Day\")\n\n        # Sovereign's Birthday\n        if self._year >= 1936:\n            self._add_holiday_2nd_mon_of_jun(self.sovereign_birthday)\n\n        # Bank Holiday\n        if self._year >= 1912:\n            self._add_holiday_1st_mon_of_aug(\"Bank Holiday\")\n\nThis Bank Holiday one‚Ä¶\nNSW Public Holidays\n(It is referenced here - but with caveat only applies to Bank workers.)\nIt is a ‚ÄòBank employee‚Äô only holiday and not a public holiday for the vast majority of population.\n? Seems to be misreported still currently in 0.41\nIt could be removed, in my mind altogether, OR have add a new category for bank for AU added- and include this current entry as a bank only holiday?\nThanks for reviewing.\nOriginally posted by @Ghawken in #293 (comment)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1666",
        "title": "Add _add_holiday_* methods documentation",
        "count": 0,
        "turns": [
            "See #1665 for more details."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1660",
        "title": "Implement subdivision aliases support",
        "count": 9,
        "turns": [
            "Per #1656 discussion it'd be great to have an ability to assign aliases to ISO3166-2 subdivision codes.\nLet's figure out complexity and priority of the task (v0 vs v1) and implement this feature. It would provide better user experience.",
            "BTW I could help implementing this, but I noticed that you seem to have very strict ideas, how the API should work and I guess also how it should be implemented. If you don't have the time to do it yourself and you give me some valuable hints, I could help out ‚Ä¶",
            "Yeah, that'd be much appreciated.\nThe main priority for the current PH version is compatibility. This may be the reason for the seemed strictness you've mentioned. Then goes performance and code readability. Those are sort of my promises to previous code author/maintainer.\nWe've started working on v1 of the library. If you have improvement ideas or with to participate in some other way -- check out #1649",
            "In other words the only strict requirement for any contribution is compatible and well tested code made right from performance perspective (we have ~5M monthly downloads relying on that).",
            "I can have a go, if you like. Three different approaches come do mind (all without in-depth investigation): Using a dictionary, where the key is the official ISO code and the value a tuple of all aliases. Secondly, use a tuple with a tuple for each subregion, where the first element is the official ISO code and all other elements aliases. And finally keep the subregion tuple as it is and have a separate dictionary with the aliases. Any preferences?",
            "The idea with mapping is right -- use alias subdiv as a key and iso3166 code as a value:\nsubdivisions_aliases = {\n    \"B\": \"1\",\n    \"K\": \"2\",\n    ...\n}\nThis way you'd have average O(1) lookup. Then just swap alias to an official subdiv code at right place of HolidayBase::init. I guess that would be it (no in-depth investigation as well). You'll need to update TestArgs::test_subiv of tests/test_holiday_base.py to make sure it works as expected.\nAn apparent drawback of this simple approach is that the holidays object would have the subdiv code implicitly changed from the user perspective.\nJust create a PR or use this thread for further questions if any.",
            "I also thought about this approach, because of the same reason: the quick lookup. The reason why I did not propose it, was the other major drawback: You are limited to just one alias. In the Austrian case: You can only use 'N', but not 'N√ñ' or even 'Nieder√∂sterreich', all valid and widely used aliases for the subregion 3!",
            "Thinking further about it, we could use:\nsubdivisions_aliases = {\n    \"B\": \"1\",\n    \"K\": \"2\",\n    \"N\": \"3\",\n    \"N√ñ\": \"3\",\n    \"Nieder√∂sterreich\": \"3\",\n    ...\n}\nQuick lookup vs. readability ‚Ä¶",
            "I believe that wouldn't be the case:\nsubdivisions_aliases = {\n    \"N\": \"3\",\n    \"N√ñ\": \"3\",\n    \"Nieder√∂sterreich\": \"3\"\n}\nAll mapped to \"3\". Am I missing something?",
            "Same idea at the same time! üòÖ"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1658",
        "title": "Generate l10n file on per locale basis",
        "count": 1,
        "turns": [
            "Currently we generate .po/.mo files for every entity. This approach is not ideal for l10n management and produces somewhat redundant l10n items. The better approach would be generate .po/.mo files on per locale basis. We need to consider switching to more simple mechanism and implement it when we have a chance. This would be a significant improvement for Weblate integration management too.",
            "I have some ideas about new l10n layout.\nPO files use unified strings (derived from English name) as msgids. For holidays with the same name in all countries msgid begin with just \"_\" or some common prefix: \"_new_years_day\", \"_good_friday\", \"_immaculate_conception\" etc.\nHowever, in some countries, the names of common holidays differ. For them, we use separate msgid with country code prefix:  \"ar_immaculate_conception\", \"bg_independence_day\" etc.\nSo PO files will contain:\nen_US.po:\n#. New Year's Day.\nmsgid \"_new_years_day\"\nmsgstr \"New Year's Day\"\n...\n#. Good Friday.\nmsgid \"_good_friday\"\nmsgstr \"Good Friday\"\n...\n#. Immaculate Conception.\nmsgid \"_immaculate_conception\"\nmsgstr \"Immaculate Conception\"\n...\n#. Immaculate Conception.\nmsgid \"ar_immaculate_conception\"\nmsgstr \"Immaculate Conception\"\n\n#. Independence Day.\nmsgid \"_independence_day\"\nmsgstr \"Independence Day\"\n\n#. Independence Day.\nmsgid \"bg_independence_day\"\nmsgstr \"Independence Day\"\n\n(in en_US locale names for Immaculate Conception in Argentina and Independence Day in Bulgaria doesn't differ from common)\nes.po:\n#. New Year's Day.\nmsgid \"_new_years_day\"\nmsgstr \"A√±o Nuevo\"\n...\n#. Good Friday.\nmsgid \"_good_friday\"\nmsgstr \"Viernes Santo\"\n...\n#. Immaculate Conception.\nmsgid \"_immaculate_conception\"\nmsgstr \"Inmaculada Concepci√≥n\"\n...\n#. Immaculate Conception.\nmsgid \"ar_immaculate_conception\"\nmsgstr \"Inmaculada Concepci√≥n de Mar√≠a\"\n(in es locale name for Immaculate Conception in Argentina is different)\nbg.po:\n...\n#. Independence Day.\nmsgid \"_independence_day\"\nmsgstr \"–î–µ–Ω –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—Ç–∞\"\n# or there is simply no translation, if we don't yet need Bulgarian translation of countries other than Bulgaria\n\n#. Independence Day.\nmsgid \"bg_independence_day\"\nmsgstr \"–î–µ–Ω –Ω–∞ –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—Ç–∞ –Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è\"\n(in bg locale name for Independence Day in Bulgaria is different)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1655",
        "title": "v1: entity class naming",
        "count": 1,
        "turns": [
            "Currently there is no standard on entity holiday class naming. In general it somehow aligns with a country name. The idea is to use unified approach on entity class naming. For iso3166 entities it could be based either on alpha-2 or alpha-3 code, e.g. UsHolidays or UsaHolidays. The classes should still be available via their alpha-2 (and probably alpha-3) code aliases so for example US() and USA() imports would also work.",
            "See #998 (comment) for the original discussion."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1654",
        "title": "Verify SE holiday calendar",
        "count": 1,
        "turns": [
            "SE has every Saturday included as a public holiday, even though only the banks are closed. Is this intended? If so it is at least misleading as BANK is not the primary category if I understand it correctly.\nOriginally posted by @nick2202 in #1646 (comment)",
            "Actually, it's every Sunday we have as public holiday (with special arg include_sundays=True). I've always wondered how Sundays in Sweden differ from Sundays in other countries (where they are also days off). As far as I understood, the reason for this difference is that\n\nIn Sweden, public holidays are defined in the Swedish Constitution as a Sunday, or another day in a list of public holidays\n\n(from Wiki, machine translation to English)\nIs this a enough reason for us to include all Sundays in the list of holidays? Maybe we could at least set include_sundays default value to False? (exactly how it's done for Norway now)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1652",
        "title": "Verify IE holiday calendar",
        "count": 0,
        "turns": [
            "2024-03-18 should not be a holiday as you do get compensation for a holiday on the weekend but it is not automatically the following Monday (https://www.citizensinformation.ie/en/employment/employment-rights-and-conditions/leave-and-holidays/public-holidays/)\nOriginally posted by @nick2202 in #1646 (comment)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1651",
        "title": "v1: subdivision codes standardization",
        "count": 0,
        "turns": [
            "It'd be fair to revisit the current subdivision handling approach too. PH had prov and state fields before adopting subdiv as the parameter name. I can't think of a better naming suggestions atm.\nFollowing #1650 approach we should focus on subcodes defined by ISO3166-2, apparently remove deprecated stuff and some supported subdivisions that don't follow ISO3166-2 format (city names instead of their ISO codes)."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1650",
        "title": "v1: entity types and structure standardization",
        "count": 1,
        "turns": [
            "The current version has 2 main types of supported entities: country and financial. Not all entities of the country type can be countries per se. As ISO3166 defines a broader set of supported entities, e.g. names of countries, dependent territories, and special areas of geographical interest it'd be fair to rename accordingly, use iso3166 as a placeholder for iso3166 based entities. Keeping it as is for financial/market category can be a good idea.\nThe iso3166 entity files would be named according to their iso3166-1 codes.\nAnother point is the difference for specifying the code for country/market entities: using a standardized attribute name for both types would be more consistent. The difference could be provided based on class inheritance (separate base classes for iso3166 and financial entities) and/or entity_type field.\nQuestions and ideas are welcome!",
            "This also should address concerns raised in #1063"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1649",
        "title": "v1 roadmap",
        "count": 0,
        "turns": [
            "This is a placeholder for all tickets that need to be addressed to release library first stable version.\nThe v1 version isn't going to be backward compatible with v0 instead it'll be focused on better user experience and standardization of supported entities and provided API. The v1 and following versions should comply with semantic versioning approach.\nAt some point v0 library support will be limited to maintenance releases / bug fixes only.\n\nv1: entity types and structure standardization¬†#1650\nv1: subdivision codes standardization¬†#1651\nIntroduce custom exceptions¬†#1151\nUpdate project documentation¬†#1474\nv1: entity class naming¬†#1655\nGenerate l10n file on per locale basis¬†#1658"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1647",
        "title": "Jersey",
        "count": 4,
        "turns": [
            "Hello,\nWould it be possible to add Jersey as a country to Holidays please?\nMany thanks",
            "@jjanderson I assume these two are usable sources, right?\nhttps://www.jerseylaw.je/laws/current/Pages/15.560.aspx (Original 1951 Law)\nhttps://www.jerseylaw.je/laws/current/Pages/15.560.20.aspx (Current 2010 Act)",
            "oh wow! Thanks for such a quick response. Yes those look good. Thanks very much",
            "@jjanderson I assume these two are usable sources, right?\nhttps://www.jerseylaw.je/laws/current/Pages/15.560.aspx (Original 1951 Law) https://www.jerseylaw.je/laws/current/Pages/15.560.20.aspx (Current 2010 Act)\n\nHey @PPsyrius, does it mean you're going to take care of this one?",
            "Hey @PPsyrius, does it mean you're going to take care of this one?\n\nYes, I have a PR for this being worked on at the moment"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1643",
        "title": "Additional Holidays ",
        "count": 5,
        "turns": [
            "Valentine's Day (02/14), St. Patrick's Day (03/17), Halloween (10/31) and Election Day (First Tues every 4 years ((this year is 11/05)) ). Could you please add these to the US Holiday Calendar?",
            "Thanks for the correction, I'll get a PR to get this fixed ASAP",
            "@KJhellico While the first 3 of the list above aren't official holidays for the US, which category would be the most appropriate here? WORKDAY, OPTIONAL, or some new ones altogether?",
            "I think, if such holidays are to be added, there should be a new category for them (UNOFFICIAL or something like that).",
            "@KJhellico While the first 3 of the list above aren't official holidays for the US, which category would be the most appropriate here? WORKDAY, OPTIONAL, or some new ones altogether?\n\nThe category support was started as ad-hoc feature and has been improved recently. I think it still needs some more attention in terms of standardized across entities and proper documentation.\nUNOFFICIAL / NON_PUBLIC would do it for now.",
            "I'll use NON_PUBLIC for this case then üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1604",
        "title": "When I followed the contributor guildline,\"make pre-commit\" ourred an error\"rstcheck Failed\"",
        "count": 6,
        "turns": [
            "env:python 3.9 linux ubuntun\nrstcheck.................................................................Failed\n\nhook id: rstcheck\nexit code: 1\n\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/contributing.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/changelog.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/index.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\ndocs/source/api.rst:4: (INFO/1) No directive entry for \"automodule\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/api.rst:4: (ERROR/3) Unknown directive type \"automodule\".\ndocs/source/api.rst:5: (INFO/1) No directive entry for \"automodule\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/api.rst:5: (ERROR/3) Unknown directive type \"automodule\".\ndocs/source/modules.rst:4: (INFO/1) No directive entry for \"autosummary\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/modules.rst:4: (ERROR/3) Unknown directive type \"autosummary\".\nError! Issues detected.",
            "as usual ,I didn't change anything.",
            "@peter-ni-noob Please ensure you've pip install -r insert_filename_here.txt everything in the python-holidays\\requirements folder.\nI'm still determining how to proceed if that doesn't work since I've only coded with WSL2 on Windows, but @arkid15r likely has the answer here.",
            "Thank you for your help,I apply \"make setup\" to install this project,and I saw\npip install --upgrade pip\npip install --requirement requirements/dev.txt\npip install --requirement requirements/docs.txt\npip install --requirement requirements/runtime.txt\npip install --requirement requirements/tests.txt\nin MakeFile,so I have installed everything in the python-holidays\\requirements. I think the cause of the error is in docs/source/api.rst:4: (ERROR/3) Unknown directive type \"automodule\", but I dont really know rstcheck/(„Ñío„Ñí)/~~.",
            "I was able to reproduce this with python3.9\nI guess the best work around now would be commenting related pre-commit configuration block out.\nYou might also need to run make package after make setup if you see importlib_metadata.PackageNotFoundError: No package metadata was found for holidays error.\nThanks for reporting this!",
            "I just commented related pre-commit configuration block out,and all passed.\nthe this issue will be closed.",
            "Yeah, that's a workaround for now. I'd prefer to not close the issue yet if you don't mind. At least until we look deeper into the problem."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1570",
        "title": "Revisit nested functions usage",
        "count": 0,
        "turns": [
            "Figure out and implement the preferred approach of using/not using nested functions (vs object/static methods)."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1569",
        "title": "Pot file for United States it not generated",
        "count": 1,
        "turns": [
            "The reason could be that countries/united_states.py is not using tr.",
            "Yes, the US holidays hasn't been localized yet."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1514",
        "title": "Feature request: add option to warm-up country import cache",
        "count": 2,
        "turns": [
            "Hello,\nThanks for this library, nice work!\nI'm using it in a web application that receives lots of requests, and recently had to debug an issue of thread contention caused by the importlib.import_module here: \n\n\npython-holidays/holidays/registry.py\n\n\n         Line 213\n      in\n      600ac69\n\n\n\n\n\n\n self.entity = getattr(importlib.import_module(self.module_name), self.entity_name) \n\n\n\n\n\nThe threads were getting stuck trying to acquire the import lock, the call stack (obtained with py-spy) looked like this:\nThread 1525 (active): \"AnyIO worker thread\"\n    _get_module_lock (<frozen importlib._bootstrap>:185)\n    __enter__ (<frozen importlib._bootstrap>:170)\n    _find_and_load (<frozen importlib._bootstrap>:1173)\n    _gcd_import (<frozen importlib._bootstrap>:1204)\n    import_module (importlib/__init__.py:126)\n    get_entity (holidays/registry.py:211)\n    __call__ (holidays/registry.py:193)\n    country_holidays (holidays/utils.py:187)\n\nThe fix for it was to call country_holidays in my code at import time for every country i care about, thus avoiding the importlib.import_module from being called from inside the request lifecycle as the entity attribute will be already loaded.\nWhat do you think of adding an option to do that by default?\nFor example, something like:\nif os.getenv('PYTHON_HOLIDAYS_CACHE_WARMUP_ENABLED') == 'true':\n    # preload it here",
            "Hi @eliasdorneles,\nI know we don't have an issue template yet so I blame myself only for the fact I can't figure out what exactly caused the issue and what the preferred fix would be. In general, I'd avoid introducing env variable dependency but the PH code is totally open for contributions that fix existing users headaches.\nHaving said that, I'd like to request some clarification on this (multi-threading?) issue. It'd be ideal to have a PR (draft is okay) to understand the problem and assess the fix implementation approach.\nThank you!",
            "Hello,\nRight, I understand, I will try to get a minimal example that shows the problem.\nI believe it's an issue related to importlib.import_module not being thread-safe.\nThe web application I mentioned (which I unfortunately cannot share the code as-is) is a FastAPI app, with endpoints defined as \"sync\" (using regular def and not async def), so the requests are served by anyio worker threads.\nI will come back with more details later!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1492",
        "title": "Day in Lieu / observed day for National Day for Truth and Reconciliation in BC?",
        "count": 10,
        "turns": [
            "Title edited to reflect change in direction in the conversation.\nNew description:\nShould there be a day in lieu for National Day for Truth and Reconciliation when it falls on a weekend?\nOriginal description:\n\nBasically an updated version of this. National Day for Truth and Reconciliation is not recognized as an official statutory holiday in BC as of March 9, 2023.\nSource:\n\nhttps://www2.gov.bc.ca/gov/content/governments/indigenous-people/national-day-for-truth-and-reconciliation#:~:text=On%20March%209%2C%202023%2C%20the,on%20September%2030%20each%20year.\nhttps://dailyhive.com/canada/statutory-holiday-canada-truth-reconciliation-day-2023\n\nWhen it falls on a weekend it is taken as a day I leu. So this year (2023) we have Monday Oct 2nd off work and school.\nI guess we can finally add it as an official stat? üòä",
            "Never mind, it looks like it was added in 0ba670c. Perhaps Home Assistant just hasn't updated to that version of python-holidays yet?",
            "Yes, HA may not be using the most recent version. I believe this issue can be closed @bverkron ?",
            "Yes, can indeed be closed. Sorry for wasting your time!",
            "@arkid15r I am curious about something though. It seems this change was made in v0.20 and HA is using v0.28 so it should have this change. However, when I setup a test sensor for today (Oct 2nd 2023, which is our actual day off) it says it is a workday.\nI'm not sure if this is an issue on the HA side or perhaps holidays isn't indicating that today is a day in leu since the actual stat fell on a weekend (Saturday)?\n\n\n\nThoughts?",
            "So, it's on Sep 30th and is observed Oct 2nd this year? If so we'll need to add an observance rule for that as it's currently doesn't have one.",
            "@bverkron Do all employees in BC have in lieu holiday on Monday when NDTR falls on weekend? Then we need to add observance rule for it.\nBy the way, is Remembrance Day have the same rule in BC?",
            "So, it's on Sep 30th and is observed Oct 2nd this year?\n\nIf by \"observed\" you mean the way we get off work and school, etc then yes. My employer (crown corporation so pseudo government) and the school system have the day in lieu and thus we get a paid day off (or day off school) on Oct 2nd this year.\n\n@bverkron Do all employees in BC have in lieu holiday on Monday when NDTR falls on weekend?\n\nI'm having a hard time telling if that universally applies to all industries. The general rules according to this link says:\n\n\"Substitute a different day: Employers and employees may agree (in writing) to substitute another day for a statutory holiday. The substitute day must be treated the same as a statutory holiday.\"\n\nThese pages do not really add any extra clarity, as least I don't think so.\n\nhttps://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/forms-resources/igm/esa-part-5-section-45\nhttps://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/forms-resources/igm/esa-part-5-section-48\n\nThis article says vaguely:\n\nSaturday, Sept. 30, is Truth and Reconciliation Day in B.C., although many businesses and schools will take the statutory holiday on Monday.\n\nThis site (which I'm not familiar with but is a law site) says few things of note:\n\n\n\nNational Day for Truth and Reconciliation (federally regulated workplaces only) (also applies to Easter Monday but not Remembrance Day\n\n\n\"If a holiday is designated for federally regulated workplaces only, such as banks and post offices, non-federal employees will not necessarily have a paid day off work. Non-federal employees may take the day off of work if their non-federal employer chooses to recognize the holiday and pay their employees.\"\n\n\n\"If a holiday falls on a non-work day, another day will be observed as the holiday, typically the preceding Friday or the following Monday.\n\n\n\nI am not sure how this all this aligns with the stances of python-holidays. The above may add more confusion than clarity üòï\nEdit: Here is one more resource: https://www.peninsulagrouplimited.com/ca/resource-hub/stat-holidays-and-pay/statutory-holidays-british-columbia/\n\nNational Day for Truth and Reconciliation now officially a statutory holiday in BC\nThe new stat holiday became official after the National Day for Truth and Reconciliation Act, 2023, received royal assent in B.C.‚Äôs legislature on March 9th, 2023.  Employers in BC will now be required to provide eligible employees under the Employment Standards Act, a day off with pay on September 30.\nThis year, the holiday falls on a Saturday. This means all eligible employees are entitled to stat holiday pay irrespective of whether they work on Saturdays or not.\nFor those who work on Saturdays, employers can agree in writing to substitute another day off for the statutory holiday, but they are not required to do so.",
            "One more note. I just noticed the Apple provided Canadian Holidays calendar shows today as \"National Day for Truth and Reconciliation (observed)\" so at least that answers the \"observed\" question and might help with the decision?\n\nBEGIN:VEVENT\nDTSTAMP;VALUE=DATE:19760401\nUID:d7b0957c-4379-3d35-acb9-13ff4fdc97c9\nDTSTART;VALUE=DATE:20231002\nCLASS:PUBLIC\nSUMMARY;LANGUAGE=en:National Day for Truth and Reconciliation (observed)\nTRANSP:TRANSPARENT\nCATEGORIES:Holidays\nX-APPLE-UNIVERSAL-ID:b7206b3d-0fe9-016e-3a16-75b21eb9d029\nEND:VEVENT\n\nThough there is this on the actual date as well...\n\nBEGIN:VEVENT\nDTSTAMP;VALUE=DATE:19760401\nUID:f08ff108-8e0e-3086-93ee-2d4fd6529390\nDTSTART;VALUE=DATE:20220930\nCLASS:PUBLIC\nSUMMARY;LANGUAGE=en:National Day for Truth and Reconciliation\nTRANSP:TRANSPARENT\nRRULE:FREQ=YEARLY;COUNT=6\nCATEGORIES:Holidays\nX-APPLE-UNIVERSAL-ID:b7206b3d-0fe9-016e-3a16-75b21eb9d029\nEND:VEVENT",
            "I appreciate the context you've provided, @bverkron!\nYeah, it's not that simple when it comes to subdivision+category holidays. I didn't look into all those links yet. ATM I see this holiday as a subdivision based (BC) not-for-everyone (fed. regulated workplaces) day-off. This leads us to the categories. I guess in this case it would be the GOVERNMENT? If my vision of this situation is correct then we could work on changing the code to reflect these rules.\n\nI am not sure how this all this aligns with the stances of python-holidays.\n\nThe main goal of PH is providing the end users with a list of an entity holidays as close to the reality as possible. In our case it's a part of CA/BC population. I'd prefer making a decision on the users feedback rather than on ambiguous sources when it comes to this kind of discrepancy. So your input here is quite valuable -- we need to identify this group of \"federally regulated workplaces\". What's that?\nI hope we'll be able to figure out the right solution soon!\n// I guess other Canada provinces/territories may follow similar logic. It'd be great to identify those too.",
            "I'm not familiar with Categories in the context of PH but it sounds like it's for filtering to only holidays that are applicable to different sectors like public vs government?\nRegarding which category to use it looks like there is already some code around this for Canada and NDTR is already included?\n\n\n\npython-holidays/holidays/countries/canada.py\n\n\n         Line 106\n      in\n      fbefb92\n\n\n\n\n\n\n \"\"\"Holidays for federally regulated workplaces.\"\"\" \n\n\n\n\n\nSeems like this was added just recently by @KJhellico here: #1448\nI'm not familiar with how categories are utilized in PH and have not see options for that in HA so I may need to submit an enhancement request on the HA side to leverage it. Searching the doc for 'category' this is all I could find. https://python-holidays.readthedocs.io/en/latest/changelog.html#version-0-32\nAs for defining what a federally regulated workplace is there is a list here: https://www.canada.ca/en/services/jobs/workplace/federally-regulated-industries.html\nInterestingly the 'observed' example I showed here  for NDTR in 2023 only seems to be done by Apple for that holiday, not Remembrance Day or any other day for the entire year as far as I can tell. Though not all of the 11 Canadian stat holidays have fallen on a weekend in either 2022 or 2023 so I have limited data to check.\nNot sure how much any of this helps with the decision."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1490",
        "title": "Pylance: \"IT\" is not exported from module \"holidays.countries\"",
        "count": 1,
        "turns": [
            "Hi,\ni started using Pylance in VSCode and noted that it complains that:\nfrom holidays.countries import IT\n\"IT\" is not exported from module \"holidays.countries\"\n¬†¬†Import from \"holidays.countries.italy\" instead\n\nIs this a false positive? Because my code actually works.\nThanks!",
            "Hi @steakhutzeee,\n\nIs this a false positive? Because my code actually works.\n\nWe don't have __all__ specified for countries (and financial) module reimports. I believe Pylance complains exactly because of that.\nTry playing with\n  \"python.analysis.diagnosticSeverityOverrides\": {\n    \"reportPrivateImportUsage\":\"none\" \n  }\n\nsettings if that's too annoying.\nI'll look into what can be done on the PH side later.\nThank you for reporting this!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1479",
        "title": "Add PH resulting package tests",
        "count": 0,
        "turns": [
            "Make sure the packaging works as expected, smoke check distribution builds."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1474",
        "title": "Update project documentation",
        "count": 0,
        "turns": [
            "This is a ticket for tracking our documentation updates debt and other ideas on the docs improvement:\n\nDocument the holiday categories usage¬†#1348\nUpdate documentation for way to get list of all supported countries¬†#1093\nUpdate documentation for cross-platform development¬†#1089\nAdd _add_holiday_* methods documentation¬†#1666"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1471",
        "title": "Unify French holiday names for different countries",
        "count": 0,
        "turns": [
            "The holidays/coutnries/france.py may need to be changed.\nI guess identifying such cases (e.g, Algeria/France New Year's Day) may take some time.\nCurrently we have these l10n files:\nholidays/locale/en_US/LC_MESSAGES/FR.po\nholidays/locale/uk/LC_MESSAGES/FR.po\nholidays/locale/fr/LC_MESSAGES/DJ.po\nholidays/locale/fr/LC_MESSAGES/FR.po\nholidays/locale/fr/LC_MESSAGES/LU.po\nholidays/locale/fr/LC_MESSAGES/BE.po\nholidays/locale/fr/LC_MESSAGES/CA.po\nholidays/locale/fr/LC_MESSAGES/MC.po\nholidays/locale/fr/LC_MESSAGES/MA.po\nholidays/locale/fr/LC_MESSAGES/CH.po"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1445",
        "title": "Consider extending subdiv arg to accept multiple values",
        "count": 0,
        "turns": [
            "Add ability to request holidays for more than one entity's subdivision. Keep it backward compatible."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1439",
        "title": "For Canada, 'subdivision' is NULL for the province ON but populated for other provinces",
        "count": 1,
        "turns": [
            "subdivision is NULL in the data for province of Ontario. A simple query also shows that ON is the only province that does not appear in the data for Canada at all. However, there are many holidays with NULL subdivision for Canada. I confirmed that at least some of them are associated with ON based on a Canadian holiday that's unique to that province only - Boxing Day. I would assume all of the NULL subdivision values are associated with ON.",
            "Hi @cybersyn-rayna, thank you for bringing this up!\nFor some (historical?) reason the \"ON\" subdivision has been set as the default one for Canada holidays implementation. Not sure if that causes the output not meeting your expectations.\nCould you add more context as it's not clear what issue you're reporting and it looks like you aren't using our package directly (based on the NULL value appearance).\nThank you!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1394",
        "title": "Introduce entity holidays start/end year controls",
        "count": 0,
        "turns": [
            "Introduce start/end year control later and raise or warn when user requests holidays out of range of supported years (instead of returning an empty dict). Both start/end year range would be optional and enforced if they were set only."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1358",
        "title": "Create an issue template",
        "count": 0,
        "turns": [
            "Add instructions on suggested issue filing format."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1299",
        "title": "Add Yemen holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Yemen\nhttps://www.timeanddate.com/holidays/yemen/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1292",
        "title": "Add Uganda holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Uganda\nhttps://www.timeanddate.com/holidays/uganda/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1291",
        "title": "Add Tuvalu holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Tuvalu\nhttps://www.timeanddate.com/holidays/tuvalu/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1290",
        "title": "Add Turkmenistan holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Turkmenistan\nhttps://www.timeanddate.com/holidays/turkmenistan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1289",
        "title": "Add Trinidad and Tobago holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Trinidad_and_Tobago\nhttps://www.timeanddate.com/holidays/trinidad/\nhttps://otp.tt/trinidad-and-tobago/national-holidays-and-awards/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1287",
        "title": "Add Togo holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Togo\nhttps://www.timeanddate.com/holidays/togo/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1285",
        "title": "Add Tajikistan holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Tajikistan\nhttps://www.timeanddate.com/holidays/tajikistan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1275",
        "title": "Add Syrian Arab Republic holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Syria\nhttps://www.timeanddate.com/holidays/syria/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1274",
        "title": "Add Suriname holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Suriname#National_holidays\nhttps://www.timeanddate.com/holidays/suriname/\nhttps://www.cbvs.sr/en/statistics/financial-market-statistics/daily-publications/147-public-holidays-in-suriname"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1273",
        "title": "Add Sudan holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Sudan\nhttps://www.timeanddate.com/holidays/sudan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1272",
        "title": "Add Sri Lanka holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Culture_of_Sri_Lanka#List_of_holidays\nhttps://www.timeanddate.com/holidays/sri-lanka/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1271",
        "title": "Add South Sudan holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_South_Sudan\nhttps://www.timeanddate.com/holidays/south-sudan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1270",
        "title": "Add Somalia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Somalia\nhttps://www.timeanddate.com/holidays/somalia/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1269",
        "title": "Add Solomon Islands holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Solomon_Islands\nhttps://www.timeanddate.com/holidays/solomon-islands/\nhttps://solomons.gov.sb/12100-2/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1268",
        "title": "Add Sierra Leone holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Sierra_Leone\nhttps://www.timeanddate.com/holidays/sierra-leone/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1267",
        "title": "Add Seychelles holidays",
        "count": 2,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Seychelles\nhttps://www.timeanddate.com/holidays/seychelles/\nhttps://www.cbs.sc/PublicHolidays.html",
            "I'm working on this one, here's the actual Public Holidays Act.",
            "Thanks a lot, @PPsyrius!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1266",
        "title": "Add Senegal holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Senegal\nhttps://www.timeanddate.com/holidays/senegal/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1265",
        "title": "Add Sao Tome and Principe holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe\nhttps://www.timeanddate.com/holidays/sao-tome-and-principe/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1264",
        "title": "Add Samoa holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Samoa\nhttps://www.timeanddate.com/holidays/samoa/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1263",
        "title": "Add Saint Vincent and the Grenadines holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Saint_Vincent_and_the_Grenadines\nhttps://www.timeanddate.com/holidays/saint-vincent-and-the-grenadines/\nhttp://pmoffice.gov.vc/pmoffice/index.php/public-holidays"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1262",
        "title": "Add Saint Lucia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Saint_Lucia\nhttps://www.timeanddate.com/holidays/saint-lucia/\nhttps://archive.stlucia.gov.lc/saint_lucia/public_holidays.htm"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1261",
        "title": "Add Saint Kitts and Nevis holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Saint_Kitts_and_Nevis\nhttps://www.timeanddate.com/holidays/saint-kitts-and-nevis/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1254",
        "title": "Add Rwanda holidays",
        "count": 3,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Rwanda\nhttps://www.timeanddate.com/holidays/rwanda/\nhttps://www.gov.rw/holidays",
            "I would be more than happy to contribute on this issue!",
            "HI @fishem, thank you for doing this!",
            "Hey @fishem, how is your Rwanda PR going? Anything you need help with?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1253",
        "title": "Add Qatar holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Qatar\nhttps://www.timeanddate.com/holidays/qatar/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1252",
        "title": "Unify observed holidays handling",
        "count": 0,
        "turns": [
            "Identify acceptable common approach(-es?), naming convention and code structuring for country observed holidays.\nRefactor existing code, update documentation to ensure future PRs compliance"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1238",
        "title": "Add Palau holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Palau\nhttps://www.timeanddate.com/holidays/palau/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1237",
        "title": "Add Oman holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Oman\nhttps://www.timeanddate.com/holidays/oman/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1235",
        "title": "Add Niger holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Niger\nhttps://www.timeanddate.com/holidays/niger/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1234",
        "title": "Add Nepal holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Nepal\nhttps://www.timeanddate.com/holidays/nepal/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1233",
        "title": "Add Nauru holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Nauru\nhttps://www.timeanddate.com/holidays/nauru/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1228",
        "title": "Add Myanmar holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Myanmar\nhttps://www.timeanddate.com/holidays/myanmar/\nhttps://evisa.moip.gov.mm/home/publicholiday\nhttps://myanmar.gov.mm/upcoming-holidays",
            "Note on this: Myanmar need its own traditional Burmese Calendar to be mapped out first for their Buddhist Holidays - akin to the Indochinese ones used by Thailand, Laos, and Cambodia."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1227",
        "title": "Add Mongolia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Mongolia\nhttps://www.timeanddate.com/holidays/mongolia/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1226",
        "title": "Add Micronesia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Federated_States_of_Micronesia\nhttps://www.timeanddate.com/holidays/micronesia/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1225",
        "title": "Add Mauritania holidays",
        "count": 2,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Mauritania\nhttps://www.timeanddate.com/holidays/mauritania/",
            "I'd like to work on this one üëçüèº",
            "Thanks a lot, @kasya!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1224",
        "title": "Add Mali holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Mali\nhttps://www.timeanddate.com/holidays/mali/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1218",
        "title": "Add Libya holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Libya\nhttps://www.timeanddate.com/holidays/libya/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1217",
        "title": "Add Liberia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Liberia\nhttps://www.timeanddate.com/holidays/liberia/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1216",
        "title": "Add Lebanon holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Lebanon\nhttps://www.timeanddate.com/holidays/lebanon/\nhttps://www.bdl.gov.lb/pages/index/9/154/Official-Banking-Holidays.html"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1211",
        "title": "Add Kuwait holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Kuwait\nhttps://www.timeanddate.com/holidays/kuwait/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1210",
        "title": "Add Kiribati holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Kiribati\nhttps://www.timeanddate.com/holidays/kiribati/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1209",
        "title": "Add Jordan holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Jordan\nhttps://www.timeanddate.com/holidays/jordan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1203",
        "title": "Add Iraq holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Iraq\nhttps://www.timeanddate.com/holidays/iraq/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1199",
        "title": "Add Haiti holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Haiti\nhttps://www.timeanddate.com/holidays/haiti/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1197",
        "title": "Add Mauritius holidays",
        "count": 0,
        "turns": [
            "Hello,\nGrateful if you could add Mauritius holidays.\nLinks:\n\nhttps://pmo.govmu.org/Communique/Public_Holidays_2023.pdf\nhttps://publicholidays.mu/2023-dates/\nhttps://www.timeanddate.com/holidays/mauritius/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1196",
        "title": "Add Guyana holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Guyana\nhttps://www.timeanddate.com/holidays/guyana/\nhttps://moha.gov.gy/public-holidays/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1195",
        "title": "Add Guinea Bissau holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Guinea-Bissau\nhttps://www.timeanddate.com/holidays/guinea-bissau/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1194",
        "title": "Add Guinea holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Guinea\nhttps://www.timeanddate.com/holidays/guinea/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1192",
        "title": "Add Grenada holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Grenada\nhttps://www.timeanddate.com/holidays/grenada/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1190",
        "title": "Add Gambia holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Gambia\nhttps://www.timeanddate.com/holidays/gambia/\nhttp://www.visitthegambia.gm/public-holidays"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1183",
        "title": "Add Arabic language localisation",
        "count": 8,
        "turns": [
            "Hi. I saw that your library doesn't support Arabic localisation. As a native speaker, I'd like to contribute to add support for it. Thanks.",
            "Hi @abh31000,\nit's great to hear that you're willing to add Arabic language support for PH!\nThe l10n process is not hard but not ideal yet. A (non language specific) help is available from other contributors. I suggest starting here. And here you can find several PRs you could use as an example.\nLet me know in case you have l10n related questions.\nThanks again, we're very lucky to have a native Arabic speaker in our l10n team!",
            "Hi @abh31000,\nit's great to hear that you're willing to add Arabic language support for PH!\nThe l10n process is not hard but not ideal yet. A (non language specific) help is available from other contributors. I suggest starting here. And here you can find several PRs you could use as an example.\nLet me know in case you have l10n related questions.\nThanks again, we're very lucky to have a native Arabic speaker in our l10n team!\n\nI'll start working on it right away! If I encounter any difficulties or get stuck on something, I'll make sure to get back to you!",
            "Hi @arkid15r,\nThere are some updates that should be made to the countries that need Arabic localization. Should I include them in one PR or work on them on a separate one?\nThank you!",
            "Hey @abh31000,\nit's okay to combine multi-country changes if they are related. So a single PR would be fine.",
            "Hi @arkid15r,\nThis is actually my first l10n work.\nI implented the arabic localization for some countries. And they all work as expected.\nSince all Islamic holidays are estimated. Please if you can, tell me how do I add localization for the estimated_label attributes in IslamicHolidays class.\nThank you.",
            "Hi @abh31000, that's a totally valid point which requires some attention. I expect the issue to be addressed in https://github.com/dr-prodigy/python-holidays/pull/1140 end of the week -- early next week. I hope this won't block you from submitting your PR",
            "Hey @abh31000, how is it going with your first l10n attempt? Do you need help with anything (just want to make sure you aren't stuck with some technical difficulty)?",
            "Hey @abh31000, how is it going with your first l10n attempt? Do you need help with anything (just want to make sure you aren't stuck with some technical difficulty)?\n\nHey! It's just that I have been very busy lately. I will continue working on it when I find some free time.\nThank you."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1180",
        "title": "Add Fiji holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://www.fiji.gov.fj/About-Fiji/Public-Holidays\nhttps://www.timeanddate.com/holidays/fiji/\nhttps://en.wikipedia.org/wiki/List_of_festivals_in_Fiji"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1179",
        "title": "Add Eritrea holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Eritrea\nhttps://www.timeanddate.com/holidays/eritrea/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1178",
        "title": "Add Equatorial Guinea holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Equatorial_Guinea\nhttps://www.timeanddate.com/holidays/guineaecuatorial/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1172",
        "title": "Add Dominica holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Dominica\nhttps://www.timeanddate.com/holidays/dominica/\nhttp://dominica.gov.dm/about-dominica/public-holidays"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1171",
        "title": "Add Democratic Republic of the Congo holidays",
        "count": 0,
        "turns": [
            "Not to be confused with the Congo\nUseful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Democratic_Republic_of_the_Congo\nhttps://www.timeanddate.com/holidays/dr-congo/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1170",
        "title": "Add Democratic People's Republic of Korea holidays",
        "count": 0,
        "turns": [
            "a.k.a North Korea\nUseful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_North_Korea\nhttps://www.timeanddate.com/holidays/north-korea/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1166",
        "title": "Add Ivory Coast holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Ivory_Coast\nhttps://www.timeanddate.com/holidays/ivory-coast/\nhttps://holidayapi.com/countries/ci/2022"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1165",
        "title": "Add Congo holidays",
        "count": 0,
        "turns": [
            "Not to be confused with the neighboring Democratic Republic of the Congo\nUseful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Republic_of_the_Congo\nhttps://www.timeanddate.com/holidays/republic-of-the-congo/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1164",
        "title": "Add Comoros holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Comoros\nhttps://www.timeanddate.com/holidays/comores/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1162",
        "title": "Add Central African Republic holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Central_African_Republic\nhttps://www.timeanddate.com/holidays/central-african-republic/\nhttps://holidayapi.com/countries/cf/2023"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1159",
        "title": "Add Cabo Verde holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Cape_Verde\nhttps://www.timeanddate.com/holidays/cape-verde/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1156",
        "title": "Add Bhutan holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Bhutan\nhttps://www.timeanddate.com/holidays/bhutan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1155",
        "title": "Add Benin holidays",
        "count": 0,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Benin\nhttps://www.timeanddate.com/holidays/benin/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1151",
        "title": "Introduce custom exceptions",
        "count": 0,
        "turns": [
            "The package has been using quite plain (NotImplementedError which is a quite bad choice) exceptions for handling erroneous situations. The idea is to introduce a set of tailored exceptions for handling those cases, e.g., a country/financial not supported, a year not covered for a country/financial, and other cases if any."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1146",
        "title": "Add Antigua and Barbuda holidays",
        "count": 2,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Antigua_and_Barbuda\nhttps://www.timeanddate.com/holidays/antigua-and-barbuda/",
            "I can take this one, as it's an English speaking country.",
            "Thank you üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1144",
        "title": "Add Afghanistan holidays",
        "count": 0,
        "turns": [
            "Some links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Afghanistan\nhttps://www.timeanddate.com/holidays/afghanistan/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1141",
        "title": "Add new countries list",
        "count": 0,
        "turns": [
            "This is a placeholder issue for tracking the list of countries we want to be supported by PH (based on https://github.com/dr-prodigy/python-holidays/discussions/959)\nPlease reply to a corresponding thread when you start working on a new country holidays implementation. This will help to avoid multiple contributors working on the same issue situation.\nA\n\nAdd Afghanistan holidays¬†#1144\nAdd Algeria holidays¬†#1145, implemented by @abh31000 in Add Algeria holidays¬†#1176\nAdd Antigua and Barbuda holidays¬†#1146\n\nB\n\nAdd Bahamas holidays¬†#1152, implemented by @PPsyrius  in Add Bahamas holidays¬†#1152\nAdd Barbados holidays¬†#1153, implemented by @arjunanan6 in Add Barbados holidays¬†#1393\nAdd Belize holidays¬†#1154, implemented by @KJhellico in Add Belize holidays¬†#1181\nAdd Benin holidays¬†#1155\nAdd Bhutan holidays¬†#1156\nAdd Brunei Darussalam holidays¬†#1157, implemented by @PPsyrius in Add Brunei Darussalam holidays¬†#1168\nAdd Burkina Faso holidays¬†#1158, implemented by @KJhellico in Add Burkina Faso holidays¬†#1278\n\nC\n\nAdd Cabo Verde holidays¬†#1159\nAdd Cambodia holidays¬†#1160, implemented by @PPsyrius in Add Cambodia holidays¬†#1294\nAdd Cameroon holidays¬†#1161, implemented by @KJhellico in Add Cameroon holidays¬†#1243\nAdd Central African Republic holidays¬†#1162\nAdd Chad holidays¬†#1163, implemented by @KJhellico in Add Chad holidays¬†#1279\nAdd Comoros holidays¬†#1164\nAdd Congo holidays¬†#1165\nAdd Ivory Coast holidays¬†#1166\n\nD\n\nAdd Democratic People's Republic of Korea holidays¬†#1170\nAdd Democratic Republic of the Congo holidays¬†#1171\nAdd Dominica holidays¬†#1172\n\nE\n\nAdd El Salvador holidays¬†#1177, implemented by @KJhellico in Add El Salvador holidays¬†#1198\nAdd Equatorial Guinea holidays¬†#1178\nAdd Eritrea holidays¬†#1179\n\nF\n\nAdd Fiji holidays¬†#1180\n\nG:\n\nAdd Gabon holidays¬†#1189, implemented by @KJhellico in Add Gabon holidays¬†#1244\nAdd Gambia holidays¬†#1190\nAdd Ghana holidays¬†#1191, implemented by @JerryAgbesi in Add Ghana holidays¬†#1639\nAdd Grenada holidays¬†#1192\nAdd Guatemala holidays¬†#1193, implemented by @aztrock in Add Guatemala holidays¬†#1364\nAdd Guinea holidays¬†#1194\nAdd Guinea Bissau holidays¬†#1195\nAdd Guyana holidays¬†#1196\n\nH:\n\nAdd Haiti holidays¬†#1199\n\nI:\n\nAdd Iran holidays¬†#1202, implemented by @KJhellico in Add Iran holidays¬†#1409\nAdd Iraq holidays¬†#1203\n\nJ:\n\nAdd Jordan holidays¬†#1209\n\nK:\n\nAdd Kiribati holidays¬†#1210\nAdd Kuwait holidays¬†#1211\n\nL:\n\nAdd Laos holidays¬†#1215, implemented by @PPsyrius in Add Laos holidays¬†#1483\nAdd Lebanon holidays¬†#1216\nAdd Liberia holidays¬†#1217\nAdd Libya holidays¬†#1218\n\nM:\n\nAdd Maldives holidays¬†#1223, implemented by @kasya in Add Maldives holidays¬†#1508\nAdd Mali holidays¬†#1224\nAdd Mauritania holidays¬†#1225\nAdd Mauritius holidays¬†#1197\nAdd Micronesia holidays¬†#1226\nAdd Mongolia holidays¬†#1227\nAdd Myanmar holidays¬†#1228\n\nN:\n\nAdd Nauru holidays¬†#1233\nAdd Nepal holidays¬†#1234\nAdd Niger holidays¬†#1235\n\nO:\n\nAdd Oman holidays¬†#1237\n\nP:\n\nAdd Palau holidays¬†#1238\nAdd Papua New Guinea holidays¬†#1239, implemented by @PPsyrius in Add Papua New Guinea holidays¬†#1605\n\nQ:\n\nAdd Qatar holidays¬†#1253\n\nR:\n\nAdd Rwanda holidays¬†#1254\n\nS:\n\nAdd Saint Kitts and Nevis holidays¬†#1261\nAdd Saint Lucia holidays¬†#1262\nAdd Saint Vincent and the Grenadines holidays¬†#1263\nAdd Samoa holidays¬†#1264\nAdd Sao Tome and Principe holidays¬†#1265\nAdd Senegal holidays¬†#1266\nAdd Seychelles holidays¬†#1267\nAdd Sierra Leone holidays¬†#1268\nAdd Solomon Islands holidays¬†#1269\nAdd Somalia holidays¬†#1270\nAdd South Sudan holidays¬†#1271\nAdd Sri Lanka holidays¬†#1272\nAdd Sudan holidays¬†#1273\nAdd Suriname holidays¬†#1274\nAdd Syrian Arab Republic holidays¬†#1275\n\nT:\n\nAdd Tajikistan holidays¬†#1285\nAdd Timor-Leste holidays¬†#1286, implemented by @PPsyrius in Add Timor-Leste holidays¬†#1516\nAdd Togo holidays¬†#1287\nAdd Tonga holidays¬†#1288, implemented by @PPsyrius in Add Tonga holidays¬†#1288\nAdd Trinidad and Tobago holidays¬†#1289\nAdd Turkmenistan holidays¬†#1290\nAdd Tuvalu holidays¬†#1291\n\nU:\n\nAdd Uganda holidays¬†#1292\nAdd United Republic of Tanzania holidays¬†#1293, implemented by @PPsyrius in Add Tanzania holidays¬†#1505\n\nV:\n\nAdd Vanuatu holidays¬†#1298, implemented by @Strategos1 in Add Vanuatu holidays¬†#1423\n\nY:\n\nAdd Yemen holidays¬†#1299"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1130",
        "title": "Migrate remaining subdivision holidays to their own methods",
        "count": 1,
        "turns": [
            "As per https://github.com/dr-prodigy/python-holidays/pull/1057 and https://github.com/dr-prodigy/python-holidays/pull/1097/ (just another example).",
            "I plan to migrate New Zealand in a few days."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1093",
        "title": "Update documentation for way to get list of all supported countries",
        "count": 0,
        "turns": [
            "Per #1022 (now closed), it probably should be documented"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/1089",
        "title": "Update documentation for cross-platform development",
        "count": 1,
        "turns": [
            "Update Contributing documentation with instructions that do not require the use of make, a utility which is not native to Python or Windows but only to Unix and derivatives.",
            "More on this, the current pre-commit doesn't work on Windows for some reason, but it seems to work just fine on Ubuntu (though slow as I'm running this through WSL2 rather than a separate VM)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/983",
        "title": "Add a test for pypi README syntax validation",
        "count": 0,
        "turns": [
            "Based on failed deploy \nChecking dist/holidays-0.20-py3-none-any.whl: FAILED\nERROR    `long_description` has syntax errors in markup and would not be        \n         rendered on PyPI.                                                      \n         line 515: Error: Unknown interpreted text role \"py:attr\".              \nChecking dist/holidays-0.[20](https://github.com/dr-prodigy/python-holidays/actions/runs/4255685517/jobs/7403860606#step:7:21).tar.gz: FAILED\nERROR    `long_description` has syntax errors in markup and would not be        \n         rendered on PyPI.                                                      \n         line 515: Error: Unknown interpreted text role \"py:attr\"."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/956",
        "title": "L10n howto for Windows based contributors",
        "count": 2,
        "turns": [
            "I am thinking of contributing Italian names for Italian holidays and am following this thread closely. I too am on Windows but don't know the technology/library used here, and am a bit worried as I don't really want to install WSL2. Also worrisome is the lack of support for UTF-8 (based on the error reported above) as it's required for Italian.\nAs the author of #827 and the make file that doesn't seem to work on Windows, do you have any input on where I should look to be able to contribute a Windows-native solution?\nOriginally posted by @mborsetti in https://github.com/dr-prodigy/python-holidays/issues/946#issuecomment-1432731177",
            "Here's one of the placeholder methods until we get this working natively on Windows (not ideal, but it works for now).\n\nEnable \"Windows Subsystem for Linux\" (WSL2)\n\nwsl --install, select your repo of choice (I picked Ubuntu 22.04 LTS for this case)\nAfter setting everything up, wsl ~ to enter WSL\n\n\nInstalling additional packages:\n\nsudo apt update && sudo apt upgrade -y to update Linux distro.\nsudo apt install gettext -y needed for localisation.\n\n\ncd to the installed location: cd /mnt/[drive no]/[whatever folders]/python-holidays\nCheck echo $PYTHONPATH; if this is not set yet, run export PYTHONPATH=/mnt/[drive no]/[whatever folders]/python-holidays\nInstalling additional python requirements: pip install --requirement requirements/dev.txt\nCreating the following files and folders (either in Windows Explorer's GUI or mkdir in the command line):\n\nholidays/locale/pot\nholidays/locale/[new_language_code]/LC_MESSAGES/[new_language_code].po ‚Üê (if new translation files, both for the new languages and in the English folder)\n\n\nYou should now be able to run make l10n\n\nEdit:\nFor countries with non-ASCII holiday names, instead of merely blank files you'll need to add header to the file itself to get the code working, here's an example:\n# CountryName holidays English translation.\n# Authors: AuthorName <YourEmail@Mail.Com>, (c) 2023.\n#\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: Python Holidays 0.20\\n\"\n\"POT-Creation-Date:\\n\"\n\"PO-Revision-Date: \\n\"\n\"Last-Translator: AuthorName <YourEmail@Mail.Com>\\n\"\n\"Language-Team: Python Holidays localization team\\n\"\n\"Language: en_US\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"",
            "Respectfully, this is not a recipe on how to enable contributions from the Windows community (~50+% of computers).  It's one for installing a brand new operating system chewing up over ~5GB of space, which is a huge ask!!\nI think we can do better; most open source projects I am aware of are cross-platform compatible."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/852",
        "title": "Support for USGS and USNY",
        "count": 0,
        "turns": [
            "Hi,  would it be possible to add support for USGS and USNY as they have in OpenGamma?\nOriginally posted by @mg3146 in https://github.com/dr-prodigy/python-holidays/discussions/690"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/784",
        "title": "Zurich half-day holidays in Switzerland",
        "count": 4,
        "turns": [
            "Zurich has 2 half-day holidays every year: Sechsel√§uten and Knabenschiessen.\nI wonder if we can somehow include this in the library?\nBut then not sure how to mark them. I don't know if any other country has something similar so it is worth doing.",
            "Hi @dragoon thank you!\nI can't give a final answer to your question, but if there are other countries with similar cases in existence, as of now we surely neither currently manage, nor even know them :-D\nThis said, to avoid implementing an impacting change for those 2 half days only (which I currently don't see a point in), I would suggest (very trivially..) to manage them just adding a note to their names, such as \"Sechsel√§uten (half day)\" or similar.. as we already do with observed holidays, in other words.\nNot very accurate, while still better than nothing! üëç",
            "I observe that a similar situation takes place for NYSE, which has so-called reduced trading hours days when it closes at 13:00 (see footnotes at https://www.nyse.com/markets/hours-calendars#holidays).\nHaving some sort of standardized mechanism to handle those days would be nice and potentially very useful. Maybe add a partial boolean argument to the method, which if set to True will cause partial holidays to be returned as well as the full day ones, and that the partial ones have a label which ends with a country-standardized annotation in brackets (e.g., for NYSE, \"Day after Thanksgiving [13:00 close]\"?",
            "(+1) We have it in Germany too for Christmas Eve (12-24) and New Years Eve (12-31). Right now, we manually add these edge cases in our application, but support for a flag would be preferred.",
            "I came from https://github.com/commenthol/date-holidays to check, how the python library is faring, when dealing with shortened workdays. I'm just adding 2 euro cents.\nThe node version has type for every holiday https://github.com/commenthol/date-holidays#types-of-holidays\nI have a vague feeling, that we need more attributes to holidays. Is it a shortened day or what kind of holiday this is. How many hours is the workday shortened or at what time does the workday end.\nUse case: Baltic states use shortened workdays before some public holidays. Estonian rule is simple, shorten the workday by 3 hours. The shortened days are fixed (23.02, 22.06, 23.12 and 31.12). Latvia and Lithuania shorten the workday by 1 hour, but they have bizarre rules, how the public holidays are moving from weekend to weekdays and thus, the shortened days are also not fixed."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/432",
        "title": "Russian holidays for 2021 are missing some reschedulings",
        "count": 4,
        "turns": [
            "Specifically:\nFor the rational use of weekends and non-working holidays, the Government of the Russian Federation decides:\nReschedule the following weekend in 2021:\nfrom Saturday 2 January to Friday 5 November;\nfrom Sunday 3 January to Friday 31 December;\nfrom Saturday 20 February to Monday 22 February.\nSource:\nhttp://www.consultant.ru/law/ref/calendar/proizvodstvennye/2021/",
            "@master0v is there some logic to this (can it be computed), or do they randomly decide to change them?",
            "I don't think this can be computed.  The logic, I believe, is to create continuous holidays without holes in them, so for example Feb 23 is a holiday, so they move the Saturday to Monday, so that people can have 3 continuous days off.  For the other ones, I am not so sure.  Lately the logic of Russian leaders escapes me ;)",
            "This given, we can't implement this change with static logic rules as we normally do. Anyone interested in adding year-specific rules is appreciated, thx.",
            "The #1365 has introduced substituted holidays support recently.\nPlease consider filing a PR to fix the issue."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/413",
        "title": "India - Optional Holiday and Other Holidays which depend on Lunar dates",
        "count": 7,
        "turns": [
            "Hi Guys,\nIs there an option to specify optional holidays based or religion?\nTo give you an example Christmas is a public holiday irrespective of the religion, but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People following Jainism). Similarly there are plenty of examples for Hindus, Sikhs, Muslims etc.\nAlso most of these very much depend on lunar dates and not on Georgian calendar. Is there a library that you are aware of that can provide the correct phase of moon? I can use those to specify the other major Holidays in India.\nRishab",
            "I would like to work on and submit a patch for an Indian holiday for 19th Feb, which is Shivaji Jayanti in Maharashtra, India. Is it fine if I submit a patch as part of this PR?",
            "I would like to work on and submit a patch for an Indian holiday for 19th Feb, which is Shivaji Jayanti in Maharashtra, India. Is it fine if I submit a patch as part of this PR?\n\n@xames3 PRs are always welcomed! Just start a new PR (this one here is an issue to begin with) with the code.",
            "Rashid,\n\nIs there an option to specify optional holidays based or religion? To give you an example Christmas is a public holiday irrespective of the religion, but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People following Jainism). Similarly there are plenty of examples for Hindus, Sikhs, Muslims etc.\n\nThat's an interesting use case and for the moment only states or provinces are allowed, but of course code could be modified.\n\nAlso most of these very much depend on lunar dates and not on Georgian calendar. Is there a library that you are aware of that can provide the correct phase of moon? I can use those to specify the other major Holidays in India.\n\nWe already import the convertdate package and it appears to handle Indian civil calendar dates.",
            "You got my name wrong üòï\n\nI'll look at the Chinese calendar and see how similar or not it is to\nIndian Calendar.\n\nThanks\n‚Ä¶\nOn Fri, 8 Oct, 2021, 4:52 am Mike Borsetti, ***@***.***> wrote:\n Rashid,\n\n Is there an option to specify optional holidays based or religion? To give\n you an example Christmas is a public holiday irrespective of the religion,\n but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People\n following Jainism). Similarly there are plenty of examples for Hindus,\n Sikhs, Muslims etc.\n\n That's an interesting use case and for the moment only states or provinces\n are allowed, but of course code could be modified.\n\n Also most of these very much depend on lunar dates and not on Georgian\n calendar. Is there a library that you are aware of that can provide the\n correct phase of moon? I can use those to specify the other major Holidays\n in India.\n\n There's now a lunar calendar function in the utils module. It is based on\n the Chinese lunar calendar, and I am not familiar enough to know if the\n Indian calendar is any different.\n\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/413#issuecomment-938222588>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AK5X3XXK3HD6HZ67NEZF7ATUFYTRZANCNFSM4V2BDHBQ>\n .",
            "You got my name wrong üòï\n\nWhoops, may apologies Rishab!\n\nI'll look at the Chinese calendar and see how similar or not it is to Indian Calendar.\n\nActually, I edited my response to \"we already import the convertdate package and it appears to handle Indian civil calendar dates.\"\nThanks for your looking into contributing to this project!",
            "Hi @rishabmehta7\nsorry for getting to this so late.\nAt the current time, religious holidays are not taken into account by python-holidays, so an improvement like this, although meaningful, is out of the current scope of the lib, so it would ask for a similar review for every supported country.\nDue to this, I consider it as a long running (and low-priority) task, but if you wish to work on it for India, we will later consider it / review it as a global lib improvement.\nThanks! üëç",
            "PH supports more granular holidays definition based on region/category/special or regular status now. It should be much easier to implement those holidays support atm."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aopen",
        "link": "https://github.com/vacanza/python-holidays/issues/331",
        "title": "Holidays in Portugal",
        "count": 6,
        "turns": [
            "Even though in Portugal there are nationwide holidays, others are regional or municipal (depending on the city).\nIf one runs the following script, to access the holidays in Portugal plus extended days most people have off:\nfrom datetime import date\nimport holidays\nfor date, name in sorted(holidays.PTE(years=2020).items()):\n    print(date, name)\n\nOne gets the following list:\n\n2020-01-01 Ano Novo\n2020-02-25 Carnaval\n2020-04-10 Sexta-feira Santa\n2020-04-12 P√°scoa\n2020-04-25 Dia da Liberdade\n2020-05-01 Dia do Trabalhador\n2020-06-10 Dia de Portugal\n2020-06-11 Corpo de Deus\n2020-06-13 Dia de Santo Ant√≥nio\n2020-08-15 Assun√ß√£o de Nossa Senhora\n2020-10-05 Implanta√ß√£o da Rep√∫blica\n2020-11-01 Dia de Todos os Santos\n2020-12-01 Restaura√ß√£o da Independ√™ncia\n2020-12-08 Imaculada Concei√ß√£o\n2020-12-24 V√©spera de Natal\n2020-12-25 Dia de Natal\n2020-12-26 26 de Dezembro\n2020-12-31 V√©spera de Ano Novo\n\nI have seen that the general/national holidays for Portugal are missing, here is its list:\n\n\n\nDate\nName\n\n\n\n\n1 of January\nAno Novo\n\n\nTuesday (between 3 of February and 9 of March)\nEntrudo/Carnaval\n\n\nFriday (between 20 of March and 23 of April)\nSexta-Feira Santa\n\n\nSunday (between 22 of March and 25 of April)\nP√°scoa\n\n\n25 of April\nDia da Liberdade\n\n\n1 of May\nDia do Trabalhador\n\n\nThursday (between 21 of May and 24 of June)\nCorpo de Deus\n\n\n10 of June\nDia de Portugal\n\n\n15 of August\nAssun√ß√£o de Nossa Senhora\n\n\n5 of October\nImplanta√ß√£o da Rep√∫blica\n\n\n1 of November\nTodos os Santos\n\n\n1 of December\nRestaura√ß√£o da Independ√™ncia\n\n\n8 of December\nImaculada Concei√ß√£o\n\n\n25 of December\nNatal\n\n\n\nAs one can see, it is slightly different than the one above, as the first one considers some municipal holidays. Here is a detailed list of the holidays in Portugal, in their specific months.",
            "Additional Notes:\n‚Ä¢ The state has been giving \"Entrudo\" since 1978, but there were some exceptions: 1993 and 2012‚Äì2015.\n‚Ä¢ Corpus Cristus and Implanta√ß√£o da Rep√∫blica were suspended between 2013 and 2015 (inclusive).",
            "I may suggest adding the 18 district holidays: Aveiro, Beja, Braga, Bragan√ßa, Castelo Branco, Coimbra, √âvora, Faro, Guarda, Leiria, Lisboa, Portalegre, Porto, Santar√©m, Set√∫bal, Viana do Castelo, Vila Real e Viseu.\nI can create a PR with this addition if you agree @dr-prodigy\nTo get more granular, we would need to add the 318 municipal holidays ... that would take considerably more time to implement.",
            "@Nalguedo it sounds like a good plan.. I definitely agree on it! If you wish to implement this first version, please do and I'll be happy to include it.. then there's always time to improve and proceed with the other 300 :-)\nThank you very much!",
            "@dr-prodigy This is now solved with the latest release.",
            "Not sure if we want to keep it open to track progress on adding those ~300 holidays mentioned by @goncaloperes  and @pmpbaptista",
            "It makes sense to keep it open ;)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1670",
        "title": "Consider migration to ruff",
        "count": 0,
        "turns": [
            "It may make sense to use ruff instead of black + flake8. Figure out what needs to be done and whether there are any serious challenges to implement this step."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1653",
        "title": "Verify NL holiday calendar",
        "count": 3,
        "turns": [
            "2024-03-29 Good Friday is missing, 2024-05-05 Liberation Day is missing (https://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands)\nOriginally posted by @nick2202 in #1646 (comment)",
            "Now in PH both of these holidays belong to OPTIONAL category - according to Dutch Wiki and info from #1590.\n@nick2202, if you have other info, feel free to comment.",
            "I have looked here: https://wetten.overheid.nl/BWBR0002448/2010-10-10#:~:text=236-,1,is%20equated%20with%20the%20days%20referred%20to%20in%20the%20previous%20paragraph.,-3\nThis does mention May 5 and Good Friday in the same breath as other public holidays (I do not speak Dutch so this is only the translation).\nBut I guess I would trust the apparently Dutch person commenting in #1590 more.",
            "All right, let's keep them optional with no changes at this time."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1646",
        "title": "Some public holidays missing for some countries",
        "count": 13,
        "turns": [
            "I scraped holidays for some countries:\n['AT', 'BE', 'CZ', 'DE', 'ES', 'FR', 'GB', 'HU', 'IE', 'IT', 'LI', 'LT', 'LV', 'NL', 'PL', 'RO']\noff a website:\nofficeholidays.com\nand compared some of them with the ones in the library, there are quite a few differences. For most (but definitely not all!) of them, I think the scraped data is correct (yours in \"self\", the scraped ones in \"other\"):\ndifference_holidays.xlsx",
            "Compared them to a few more a colleague at work scraped:\ndifference_holidays2.xlsx",
            "@nick2202, thank you for bringing up this issue.\n\nFor most (but definitely not all!) of them, I think the scraped data is correct\n\nCan you give a few examples?",
            "Can you give a few examples?\n\nSure.\nlibrary incorrect\nSpain:\n\n2020-11-01: All Saints Day\n2020-12-06: Constitution Day\netc.\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Spain\n\nUK/GB:\n\n2020-04-13, 2021-04-05, 2022-04-18 etc.: Easter Monday\n2022-08-29 etc.: Summer Bank Holiday\nhttps://www.gov.uk/bank-holidays\n\nI suppose there are quite a few more examples, in the other file in my second comment there a few regional holidays listed as public ones for BA for example.\nlibrary correct\nPoland\n\n2021-01-06: Epiphany\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Poland",
            "Spain:\n\n2020-11-01: All Saints Day\n2020-12-06: Constitution Day\netc.\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Spain\n\n\nOfficial source for 2020.\n\nUK/GB:\n\n2020-04-13, 2021-04-05, 2022-04-18 etc.: Easter Monday\n2022-08-29 etc.: Summer Bank Holiday\nhttps://www.gov.uk/bank-holidays\n\n\nThese holidays are relevant only for England, Wales and Northern Ireland, not the entire United Kingdom. They are available in Python Holidays for relevant subdivisions, e.g. UnitedKingdom(subdiv=\"ENG\").",
            "I suppose there are quite a few more examples, in the other file in my second comment there a few regional holidays listed as public ones for BA for example.\n\nYes, perhaps it's worth revisiting holidays of all subdivisions. But I see, for example, that Officeholidays lists Orthodox Christmas as local holiday only for Republika Srpska, although according to official sources, it is also holiday in Federation of Bosnia and Herzegovina and Brƒçko District.",
            "Okay, I see, quite a few intricacies I was not aware of.\nThanks for taking the time to answer, actually not that surprising that your dates are more correct :D\nOne more try, what about?:\nCH:\n\n2024-05-19: marked as holiday (maybe supposed to be 2024-05-20 Whit Monday?)",
            "One more try, what about?:\nCH:\n\n2024-05-19: marked as holiday (maybe supposed to be 2024-05-20 Whit Monday?)\n\n\nYes, Switzerland needs to be seriously revised.  I already see that we have at least Easter Sunday and Whit Sunday, which are not listed as a holidays, and there are many more‚Ä¶ Thank you for this catch! üëç",
            "May I ask how you compile the holiday data? Do you try to find official sources and then manually define rules for each country (and region) from which you build the modules with which the user checks for holidays?",
            "@nick2202 That's indeed the case for the newer added/updated countries, i.e. see China (CN) and South Korea (KR). I usually start with the latest holiday act available for that particular administration, then backtrack from there and, if available, all the exceptions/one-off holidays.",
            "South Korea:\n\n2024-04-10 is the provisional National Assembly Election Day\n2024-05-06 is the Alternative holiday for Children's Day\n\nChina:\n\n2024: see ÂõΩÂä°Èô¢ÂäûÂÖ¨ÂéÖÂÖ≥‰∫é2024Âπ¥ÈÉ®ÂàÜËäÇÂÅáÊó•ÂÆâÊéíÁöÑÈÄöÁü•\n\nJapan:\n\n2024: see Japanese Cabinet Office's data\n2025-01-08: I'm pretty sure both https://www.officeholidays.com/countries/japan/2025 and https://www.timeanddate.com/calendar/?year=2025&country=26 has already updated their data on Coming of Age Day to Jan 13",
            "@nick2202 thank you for pointing out to the discrepancies. Normally we address them on a per-entity basis. And it seems Switzerland holidays have already been updated in #1648\nCould you create a separate issue for each country if there anything that needs to be fixed from your perspective?\nThank you!",
            "Okay, I think I found a few more and will just comment here for now:\n\nIE: 2024-03-18 should not be a holiday as you do get compensation for a holiday on the weekend but it is not automatically the following Monday (https://www.citizensinformation.ie/en/employment/employment-rights-and-conditions/leave-and-holidays/public-holidays/)\nNL: 2024-03-29 Good Friday is missing, 2024-05-05 Liberation Day is missing (https://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands)\nSE has every Saturday included as a public holiday, even though only the banks are closed. Is this intended? If so it is at least misleading as BANK is not the primary category if I understand it correctly.",
            "Thanks a lot, @nick2202!\nI've created the per-country tickets to address the reported issues.\nThe reports like this one are really important for keeping the library contents up to date. If you find more cases, please let us know."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1644",
        "title": "Chinese Spring Festival holiday in 2020 error",
        "count": 1,
        "turns": [
            "The Chinese Spring Festival holiday in 2020 was extended until February 2nd due to COVID-19.\nNow Script Result:\n2020-01-24Ôºö‰ºëÊÅØÊó•Ôºà2020-01-19Êó•Ëµ∑Âèñ‰ª£Ôºâ\n2020-01-25ÔºöÊò•ËäÇ\n2020-01-26ÔºöÊò•ËäÇ\n2020-01-27ÔºöÊò•ËäÇ\n2020-01-28ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ\n2020-01-29ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ\n2020-01-30Ôºö‰ºëÊÅØÊó•Ôºà2020-02-01Êó•Ëµ∑Âèñ‰ª£Ôºâ\nActual Holidays:\n2020-01-24Ôºö‰ºëÊÅØÊó•Ôºà2020-01-19Êó•Ëµ∑Âèñ‰ª£Ôºâ\n2020-01-25ÔºöÊò•ËäÇ\n2020-01-26ÔºöÊò•ËäÇ\n2020-01-27ÔºöÊò•ËäÇ\n2020-01-28ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ\n2020-01-29ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ\n2020-01-30ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ\n2020-01-31ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü\n2020-02-01ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü\n2020-02-02ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü\nRef:\nhttps://www.gov.cn/zhengce/zhengceku/2020-01/27/content_5472352.htm",
            "@DarkKnightYHJ Thanks for the correction - I'll get a PR for this error done in the next 15 minutes;  if you spot any other discrepancies, feel free to open additional issues. üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1640",
        "title": "holiday in Brazil",
        "count": 1,
        "turns": [
            "As of version 0.32, several Brazilian holidays from 2024 have disappeared.\nBelow is the list between the two versions:\nv0.32\n(datetime.date(2024, 1, 1), 'Confraterniza√ß√£o Universal')\n(datetime.date(2024, 2, 12), 'Carnaval')\n(datetime.date(2024, 2, 13), 'Carnaval')\n(datetime.date(2024, 2, 14), 'In√≠cio da Quaresma')\n(datetime.date(2024, 3, 29), 'Sexta-feira Santa')\n(datetime.date(2024, 4, 21), 'Tiradentes')\n(datetime.date(2024, 5, 1), 'Dia do Trabalhador')\n(datetime.date(2024, 5, 30), 'Corpus Christi')\n(datetime.date(2024, 9, 7), 'Independ√™ncia do Brasil')\n(datetime.date(2024, 10, 12), 'Nossa Senhora Aparecida')\n(datetime.date(2024, 10, 28), 'Dia do Servidor P√∫blico')\n(datetime.date(2024, 11, 2), 'Finados')\n(datetime.date(2024, 11, 15), 'Proclama√ß√£o da Rep√∫blica')\n(datetime.date(2024, 12, 24), 'V√©spera de Natal')\n(datetime.date(2024, 12, 25), 'Natal')\n(datetime.date(2024, 12, 31), 'V√©spera de Ano-Novo')\nv0.33\n(datetime.date(2024, 1, 1), 'Confraterniza√ß√£o Universal)\n(datetime.date(2024, 3, 29), 'Sexta-feira Santa')\n(datetime.date(2024, 4, 21), 'Tiradentes')\n(datetime.date(2024, 5, 1), 'Dia do Trabalhador')\n(datetime.date(2024, 9, 7), 'Independ√™ncia do Brasil')\n(datetime.date(2024, 10, 12), 'Nossa Senhora Aparecida')\n(datetime.date(2024, 11, 2), 'Finados')\n(datetime.date(2024, 11, 15), 'Proclama√ß√£o da Rep√∫blica')\n(datetime.date(2024, 12, 25), 'Natal')",
            "There is a separate category for optional BR holidays. Just pass all categories you need on initialization."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1638",
        "title": "2023-12-30/31 is holiday in China. However, this library reports false result. It may be a bug. ",
        "count": 2,
        "turns": [
            "2023-12-30/31 is holiday in China. However, this library reports false result. It may be a bug. The corresponding codes are as follows:\n`from datetime import date\nimport holidays\ncn_holidays = holidays.China()\ncheck_date = date(2023, 12, 30)\nif check_date in cn_holidays:\nprint(f\"{check_date} is a holiday in China: {cn_holidays.get(check_date)}\")\nelse:\nprint(f\"{check_date} is not a holiday in China.\")`",
            "Dec 30 and 31 is Saturday and Sunday, they are non-working days, just like regular weekends. Do you mean that they have some kind of special holiday status?",
            "I couldn't find any confirmation of 2023-12-30 being a holiday in China. Please reopen with a link to a source attached.\nThank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1612",
        "title": "SyntaxError: invalid escape sequence '\\_' with Python 3.11",
        "count": 1,
        "turns": [
            "Running Python 3.11.4 from a Dockerfile (python:3.11.4-alpine). When loading the library, I get this:\n app/facilities/holidays/datastructures/standard_holiday_calendar.py:4: in <module>\n     from holidays.countries import united_states\n  /opt/pysetup/.venv/lib/python3.11/site-packages/holidays/countries/__init__.py:83: in <module>\n      from .kazakhstan import Kazakhstan, KZ, KAZ\n  E     File \"/opt/pysetup/.venv/lib/python3.11/site-packages/holidays/countries/kazakhstan.py\", line 18\n  E       \"\"\"\n  E       ^^^\n  E   SyntaxError: invalid escape sequence '\\_'\n  make: *** [Makefile:11: test] Error 4\n 2\n\nLooks like the problematic code was added at aa78057#diff-3835a4c66a509f1de886fe22c21ea9c22d7e83d49203fdb4dfc448ec56527549R23\nthe linter also gave a violation here W605 which was ignored explicitly with `# noqa: W605, not sure why",
            "Thanks for reporting this, it's fixed in #1619"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1603",
        "title": "[BUG]when I followed Contributing guildline ,found scripts/generate_release_notes.py:82: error: Module has no attribute \"BooleanOptionalAction\"  [attr-defined]",
        "count": 5,
        "turns": [
            "[env]linux unbuntu 18,python=3.8.raw conda envirionment.\nI just follow the CONTRIBUTING.rst,and dont change anything,after \"make setup\",\"make pre-commit\" is not passed because :\nscripts/generate_release_notes.py:82: error: Module has no attribute \"BooleanOptionalAction\"  [attr-defined]\nFound 1 error in 1 file (checked 339 source files)\nrst code is two backticks............................................Passed\nrstcheck.................................................................Failed\n\nhook id: rstcheck\nexit code: 1\n\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/contributing.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/changelog.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\nWARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/index.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.\ndocs/source/api.rst:4: (INFO/1) No directive entry for \"automodule\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/api.rst:4: (ERROR/3) Unknown directive type \"automodule\".\ndocs/source/api.rst:5: (INFO/1) No directive entry for \"automodule\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/api.rst:5: (ERROR/3) Unknown directive type \"automodule\".\ndocs/source/modules.rst:4: (INFO/1) No directive entry for \"autosummary\" in module \"docutils.parsers.rst.languages.en\".\ndocs/source/modules.rst:4: (ERROR/3) Unknown directive type \"autosummary\".\nError! Issues detected.",
            "I found the cause of this problem is the version of python,it needs python 3.9+,I think we need specify the version recommendation for this project.ref:https://stackoverflow.com/questions/15008758/parsing-boolean-values-with-argparse",
            "or I can change the code to make it compatible with python 3.8",
            "Hi @peter-ni-noob, it seems you're right as BooleanOptionalAction is not available for python3.8\nThe issue is with our internal script that supports our release process. I guess it'd be fine just suppress the error if possible.\nI'll look into it. Thanks for bringing this up!",
            "I solved this bug in #1627",
            "Fixed in #1627"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1601",
        "title": "Update 2024 Chinese holiday",
        "count": 2,
        "turns": [
            "I am Chinese, and Chinese holidy is various from other years,and the holidays of 2024 is published by Chinese government,ref:https://www.gov.cn/yaowen/liebiao/202310/content_6911540.htm„ÄÇ\nI want to update this information as my first issue good issue,Can I do this?",
            "Hi @peter-ni-noob ,\nit you feel it's something you can do -- go ahead. Our community welcomes all contributions and ready to help in case you have questions or face issues during the process.\nIt's great to have another open source contributor interested in Python Holidays!",
            "Hi @peter-ni-noob, it seems the issue has been resolved via #1601\nLet me know if you'd like other good first issue for contribution, I'll try to figure something out."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1590",
        "title": "Regression in holidays in the Netherlands",
        "count": 3,
        "turns": [
            "I noticed the change Update Netherlands holidays: add holiday categories #1552 broke my unit tests as it no longer considers Liberation day as a holiday on the 5yr interval even though it is a holiday for most people in the Netherlands every 5 years.\nOn Liberation day (Bevrijdingsdag) the majority of employees have a day off every 5 years (2005, 2010, 2015, etc.). This was the previous behaviour which worked as expected.\nNow the 5-year rule of Liberation day is combined with Good Friday in the OPTIONAL category. This equates the status of Liberation day with Good Friday, but this is not logical. Good Fridays is more similar to Liberation Day on the non 5yr-years as those are still a bank holiday but fewer people have a guaranteed holiday than in the 5-yr years. There is no option to add the non-5yr holidays it seems.\nThe behaviour I would expect is:\n\nPUBLIC includes 5yr Liberation days\nOPTIONAL includes Good Friday and the non-5yr liberation days",
            "Hi @harmbuisman and thanks for bringing this up!\nI understand your concern about the breaking change introduced in #1552 . Sorry about that.\nI found a couple of .nl resources mentioning \"Liberation day\":\n\nhttps://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands\nhttps://business.gov.nl/regulation/holiday-entitlement/#art:liberation-day-5-may\n\n@KJhellico, should this be revisited based on the report and the resources informaion I've just mentioned?\nThank you!",
            "Yes, it seems that information about Liberation Day in Wiki is not entirely correct:\n\n5 mei is sinds 1990 aangewezen als jaarlijkse nationale feestdag. Hiermee kwam een einde aan de situatie dat 5 mei alleen eens in de vijf jaar een nationale feestdag was.\n\n@harmbuisman, thank you for this info, and sorry for inconvenience caused by these changes. I agree with this position:\n\nPUBLIC includes 5yr Liberation days\nOPTIONAL includes Good Friday and the non-5yr liberation days\n\nbut can you say whether there were any changes in 1990?",
            "Hi, thanks for considering the changes. I was a kid in those days, but from what I understand is that.\n\nSince 1990, Liberation Day has been a bank holiday every year during which people in some sectors are free (e.g., government), and every 5 years, most sectors have a holiday (as most labor agreements have this in).  (1990, 1991, 1992, 1993, 1994, 1995, 1996, ... etc.),\nBefore 1990, Liberation Day was a bank holiday every 5 years (so only 1950, .. 1985, 1990)."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1583",
        "title": "NYSE holidays incorrectly includes new years eve (2021/12/31) when new years day (2022/01/01) falls on Saturday",
        "count": 2,
        "turns": [
            "The NYSE 2021 holiday calendar lists new years eve (2021/12/31) as a holiday for new years day observed (2022/01/01) as the latter falls on a Saturday.  However, per NYSE Rule 7.2:\nThe Exchange will not be open for business on New Year's Day, Martin Luther King Jr. Day, Presidents' Day, Good Friday, Memorial Day, Independence Day, Labor Day, Thanksgiving Day and Christmas Day. When a holiday observed by the Exchange falls on a Saturday, the Exchange will not be open for business on the preceding Friday and when any holiday observed by the Exchange falls on a Sunday, the Exchange will not be open for business on the succeeding Monday, unless unusual business conditions exist, such as the ending of a monthly or yearly accounting period. Adopted: December 30, 2015 (NYSE-2015-67)\nBecause 2021/12/31 is the end of the yearly accounting period, new years day is not observed on that date and should not be included as a holiday for the NYSE calendar.\nSee also\nhttps://capital.com/no-new-year-s-holiday-for-wall-street#:~:text=Rule%207.2%20was%20adopted%20in,an%20exception%20to%20the%20rule.\nhttps://www.nasdaqtrader.com/content/technicalsupport/2021tradingcalendar.pdf\nhttps://www.businesswire.com/news/home/20181204005629/en/NYSE-Group-Announces-2019-2020-and-2021-Holiday-and-Early-Closings-Calendar",
            "@ryanlardinois, thank you for your suggestion! It seems that Friday, December 31, was not a holiday even before 2015 (Rule 7.2 adoption), according to Rule 51. So I think it would be right to remove holiday shift to December 31 completely. It will be fixed in next release.",
            "cheers! Thanks very much."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1582",
        "title": "DeprecationWarning after release of 0.38",
        "count": 4,
        "turns": [
            "I have a project where holidays is a dependency. I run Python 3.10 on Linux and Windows. This error only shows on Linux. The error was first noticed in a Github action Linux workflow. Then tested also on Windows WSL. It breaks during the collection phase of my test suite. If I pin the holidays version to 0.37 the error goes away.\nApologies if this is a bit thin. I am a self taught in Python mostly.",
            "Hi Martin, thanks for reporting this.\nI guess the issue is related to one of the recent changes. I'll try to look into this today or tomorrow. It's interesting our CI/CD didn't catch it.",
            "Before you do any work... I have the below section in my pyproject.toml config file. It turns warnings into fails. When I remove it the test suite runs and the line with noqa W605 raise a warning only.\n[tool.pytest.ini_options]\nfilterwarnings = [\n    \"error\",\n    'ignore::DeprecationWarning:dateutil.*:',\n    'ignore::DeprecationWarning:openpyxl.*:',\n    \"ignore::DeprecationWarning:pandas_datareader.*:\"\n]",
            "It's good to know, thanks for adding more context!",
            "I believe this was fixed in #1619"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1577",
        "title": "Update snapshot generator: group holidays by subdiv",
        "count": 0,
        "turns": [
            "Add grouping by subdiv for better difference visibility.\n// suggested by @KJhellico"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1575",
        "title": "TypeError: ObservedHolidayBase._add_observed() got an unexpected keyword argument 'before'",
        "count": 6,
        "turns": [
            "this test code was working fine under 0.27.1 (where the method was still named _add_with_observed()) but now with the latest 0.37 it complains about 'unexpected argument' as in the title.\nwhat is the new way of adding custom holidays so they can only be pushed forward?\nfrom holidays.countries import US\nfrom holidays.constants import JAN, JUL\n\nclass MyCivilHolidays(US):\n    def _populate(self, year):\n        super()._populate(year)\n        self.pop_named('New Year')\n        self.pop_named('Independence')\n\n        self._add_observed(date(year, JAN, 1), \"New Year's Day\", before=False) # strictly no backtracks to friday\n        self._add_observed(date(year, JUL, 4), 'Independence Day', before=False) # if these fall on saturday then they must be pushed to monday\n\nmy_holidays = MyCivilHolidays()\n\ndate(2024, 1, 1) in my_holidays```",
            "Yes, code for observed holidays handling has been significantly changed and unified.\nIf you want to exactly implement the behavior of before=False parameter, you need code like:\nfrom holidays.countries import US\nfrom holidays.observed_holiday_base import ObservedHolidayBase, SUN_TO_NEXT_MON\n\nclass MyCivilHolidays(US):\n    def _populate(self, year):\n        super()._populate(year)\n        self.pop_named(\"New Year\")\n        self.pop_named(\"Independence\")\n\n        self._add_observed(self._add_new_years_day(\"New Year's Day\"), rule=SUN_TO_NEXT_MON)\n        self._add_observed(self._add_holiday_jul_4(\"Independence Day\"), rule=SUN_TO_NEXT_MON)\nBut when holiday falls on a Saturday, there will be no observed at all.\nIf it should be exactly as comment says, \"if these fall on saturday then they must be pushed to monday\", then code should be like:\nfrom holidays.countries import US\nfrom holidays.observed_holiday_base import ObservedHolidayBase, SAT_SUN_TO_NEXT_MON\n\nclass MyCivilHolidays(US):\n    def _populate(self, year):\n        super()._populate(year)\n        self.pop_named(\"New Year\")\n        self.pop_named(\"Independence\")\n\n        self._add_observed(self._add_new_years_day(\"New Year's Day\"), rule=SAT_SUN_TO_NEXT_MON)\n        self._add_observed(self._add_holiday_jul_4(\"Independence Day\"), rule=SAT_SUN_TO_NEXT_MON)",
            "this works, thanks.\nbtw, what are those methods _add_new_years_day() and _add_holiday_jul_4()?\nif i wanted to add ninja turtle day is there a special method for that? or can i just name these things whatever on the fly?",
            "No, those are predefined methods. However, their nature differs a bit. While _add_new_years_day() is part of international holidays group the _add_holiday_jul_4() is a syntactic sugar method handled by HolidayBase::__getattr__() logic -- you can use _add_holiday_<3_letter_month_name>_<day_number>() for adding custom holidays.",
            "but self._add_holiday_jul_13(\"Ninja Turtle Day\") and self[date(year, 7, 13)] = \"Ninja Turtle Day\" still do the same thing, yes? or is the latter expected to be deprecated in the future?",
            "Right, both examples result in the same holidays object state as HolidayBase is a dict based object. I don't think the __setitem__ functionality is going to be deprecated so you can continue using it directly (self[date(year, 7, 13)] = \"Ninja Turtle Day\").",
            "ok, thank you very much for this useful library"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1559",
        "title": "Holiday categories: inconsistent behaviour and ghost categories üå´Ô∏è",
        "count": 8,
        "turns": [
            "Hey holiday folks!\nWhile exploring this package, I came across a few unexpected and inconsistent behaviours regarding holiday categories. I hope you can shed some light on where I'm going wrong.\nStrange behaviour 1\nWhile all entities can declare a set of supported_categories, this is never validated, enforced, or otherwise used anywhere else in the codebase.\n$ find . -name '*.py' | xargs grep -nr 'supported_categories'\n./holiday_base.py:232:    supported_categories: Set[str] = set()\n./countries/south_korea.py:53:    supported_categories = {BANK, PUBLIC}\n./countries/bulgaria.py:49:    supported_categories = {PUBLIC, SCHOOL}\n./countries/austria.py:22:    supported_categories = {BANK, PUBLIC}\n./countries/canada.py:46:    supported_categories = {GOVERNMENT, OPTIONAL, PUBLIC}\n./countries/greece.py:32:    supported_categories = {HALF_DAY, PUBLIC}\n./countries/indonesia.py:53:    supported_categories = {GOVERNMENT, PUBLIC}\n./countries/slovakia.py:29:    supported_categories = {PUBLIC, WORKDAY}\n./countries/thailand.py:139:    supported_categories = {ARMED_FORCES, BANK, GOVERNMENT, PUBLIC, SCHOOL, WORKDAY}\n./countries/japan.py:34:    supported_categories = {BANK, PUBLIC}\n./countries/china.py:65:    supported_categories = {PUBLIC, HALF_DAY}\n./countries/laos.py:67:    supported_categories = {BANK, PUBLIC, SCHOOL, WORKDAY}\n./countries/brazil.py:61:    supported_categories = {OPTIONAL, PUBLIC}\n./countries/liechtenstein.py:30:    supported_categories = {BANK, PUBLIC}\n./countries/timor_leste.py:44:    supported_categories = {GOVERNMENT, PUBLIC, WORKDAY}\n./countries/uruguay.py:40:    supported_categories = {BANK, PUBLIC}\n./countries/portugal.py:50:    supported_categories = {OPTIONAL, PUBLIC}\n./countries/tanzania.py:61:    supported_categories = {BANK, PUBLIC}\n./countries/belgium.py:30:    supported_categories = {BANK, PUBLIC}\nFor instance, should this not be checked here:\n\n\n\npython-holidays/holidays/holiday_base.py\n\n\n        Lines 320 to 324\n      in\n      daa4b80\n\n\n\n\n\n\n unknown_categories = self.categories.difference(ALL_CATEGORIES) \n\n\n\n if len(unknown_categories) > 0: \n\n\n\n raise NotImplementedError( \n\n\n\n f\"Category is not supported: {', '.join(unknown_categories)}.\" \n\n\n\n     ) \n\n\n\n\n\ne.g.,\n    unsupported_categories = self.categories - self.supported_categories\n    if unsupported_categories:\n        raise ValueError(f\"Categories are not supported: {unsupported_categories}.\")\nStrange behaviour 2\nThe categories field has to be a tuple but when left empty defaults to the {PUBLIC} set. On the other hand, the supported_categories attribute is an empty set by default. So, by default, you always query PUBLIC holidays from an entity with no supported categories.\nShould this be standardized such that both categories and supported_categories are sets (or just iterables) and both default to {PUBLIC} (such that, by default, all entities support PUBLIC holidays)?\nStrange behaviour 3.1\nSometimes... you can query unsupported categories from entities that do specify supported_categories\n>>> holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023).supported_categories\n{'optional', 'public'}\n>>> holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023, categories=(\"islamic\",))\n{datetime.date(2023, 3, 18): 'Dia da Autonomia', datetime.date(2023, 9, 8): 'Nossa Senhora da Natividade', datetime.date(2023, 10, 5): 'Cria√ß√£o do Estado'}\nI believe this happens because of the logic defined in the base _add_subdiv_holidays() method which tries to register _add_subdiv_to_islamic_holidays() (doesn't register anything in this case) and _add_subdiv_to_holidays() which is called no matter the values the categories tuple.\nI'm not sure what the solution should be here but it looks like _add_subdiv_{subdiv}_holidays should default to _add_subdiv_{subdiv}_public_holidays to respect the category filters. I believe this would also be consistent with my suggestion in \"Strange behaviour 2\".\nThis becomes even more unintuitive when the user gets different results for different categories:\n>>> len(holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023, categories=(\"optional\",)))\n10\n>>> len(holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023, categories=(\"public\",)))\n12\n>>> len(holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023, categories=(\"islamic\",)))\n3\nwhich would lead the user to believe that these 3 holidays were islamic but they are in-fact \"categoryless\" or \"pan-categorical\" since they always get returned no matter the categories passed\n>>> len(holidays.country_holidays(\"BR\", subdiv=\"TO\", years=2023, categories=(\"islamic\", \"christian\", \"government\")))\n3\nStrange behaviour 3.2\nOther times... you can only query categories that are defined in supported_categories.\n>>> # Portugal only supports 'public' and 'optional' holidays\n>>> holidays.country_holidays(\"PT\").supported_categories\n{'optional', 'public'}\n\n>>> # As expected, not filtering is the same as filtering only on `PUBLIC`\n>>> holidays.country_holidays(\"PT\", years=2020) == holidays.country_holidays(\"PT\", years=2020, categories=(\"public\",))\nTrue\n>>> holidays.country_holidays(\"PT\", years=2020) == holidays.country_holidays(\"PT\", years=2020, categories=(\"public\", 'optional'))\nFalse\n\n>>> # Filtering on 'optional' also works ‚úÖ \n>>> holidays.country_holidays(\"PT\", years=2020, categories=('optional',))\n{datetime.date(2020, 2, 24): 'Carnaval', datetime.date(2020, 6, 13): 'Dia de Santo Ant√≥nio', ...\n\nHowever, this time filtering on non-existing categories returned an empty calendar\n>>> holidays.country_holidays(\"PT\", years=2020, categories=(\"bank\",))\n{}\n>>> holidays.country_holidays(\"PT\", years=2020, categories=(\"bank\", \"christian\", \"government\"))\n{}\nWhich happens because Portugal explicitly marks all holidays as either OPTIONAL or PUBLIC (i.e., there are no \"categoryless\" holidays).\n\n\n\npython-holidays/holidays/countries/portugal.py\n\n\n        Lines 194 to 208\n      in\n      daa4b80\n\n\n\n\n\n\n def _add_subdiv_15_public_holidays(self): \n\n\n\n self._add_holiday_sep_15(tr(\"Dia de Bocage\")) \n\n\n\n \n\n\n\n def _add_subdiv_16_public_holidays(self): \n\n\n\n self._add_holiday_aug_20(tr(\"Dia de Nossa Senhora da Agonia\")) \n\n\n\n \n\n\n\n def _add_subdiv_17_public_holidays(self): \n\n\n\n self._add_holiday_jun_13(tr(\"Dia de Santo Ant√≥nio\")) \n\n\n\n \n\n\n\n def _add_subdiv_18_public_holidays(self): \n\n\n\n self._add_holiday_sep_21(tr(\"Dia de S√£o Mateus\")) \n\n\n\n \n\n\n\n def _add_subdiv_20_public_holidays(self): \n\n\n\n if self._year >= 1981: \n\n\n\n self._add_whit_monday(tr(\"Dia da Regi√£o Aut√≥noma dos A√ßores\")) \n\n\n\n\n\nPossible solutions\nIn order to make the category filtering behaviour more intuitive and internally consistent, I can only think of the following two options:\n\nFirst-class support for \"categoryless\" holidays. The user should be able to control whether these are returned or not. If this is desired, maybe the sentinel value of category=None should be used for this special case.\nIf you don't want to support \"categoryless\" holidays, this should be implicitly converted to PUBLIC holidays.\n\nIdeally, this snippet would work exactly the same if the user set categories = holidays.ALL_CATEGORIES.\ncountry_alpha2 = \"BR\"\nsubdiv = \"TO\"\ncategories = holidays.country_holidays(country_alpha2, subdiv=subdiv).supported_categories\nall_holidays = [\n    {\"category\": cat, \"date\": date, \"name\": name}\n    for cat in categories\n    for date, name in holidays.country_holidays(\n        country=country_alpha2,\n        categories=(cat,),\n        years=2023,\n        language=\"en_US\",\n        subdiv=subdiv,\n    ).items()\n]\nüëÜ Alternatively, you could also raise a ValueError for unsupported categories as suggested in \"Strange behaviour 1\".\n\nSorry for the long post... I hope this helps :)",
            "Hi, @tpvasconcelos! Thank you for a very clear and detailed issue description!\n\nFor instance, should this not be checked here:\n\nYes, we will most likely do that. üëç\n\nShould this be standardized such that both categories and supported_categories are sets (or just iterables)\n\ncategories made as tuple in order to be immutable, to avoid the following situations.\n\nI'm not sure what the solution should be here but it looks like add_subdiv{subdiv}_holidays should default to add_subdiv{subdiv}_public_holidays to respect the category filters.\n\nExactly! Fixed in #1562.\n\nWhich happens because Portugal explicitly marks all holidays as either OPTIONAL or PUBLIC (i.e., there are no \"categoryless\" holidays).\n\nThis is how it should be everywhere. Brazil was simply \"lost\". üôÇ",
            "Hi @tpvasconcelos, thanks for posting this!\nThe PH categories support is quite recent addition to the library and is still WIP. I appreciate the meaningful feedback you've provided. This will definitely help us improve the end-user experience.\nIt has already been addressed partially in today's v0.37 release (#1562 by @KJhellico) and I expect the rest to be sorted out in v0.38.",
            "Thanks for the quick responses @arkid15r and @KJhellico!\nThis behaviour can also be seen with holiday subdivisions. However, in this case, I guess that the default behaviour does make sense. i.e., holidays with no explicit subdivision should implicitly apply to all country subdivisions.\nThat said, I still think that this behaviour does not make sense for categories. If you agree that holidays.PUBLIC should be the default category (which already happens for the categories search field), then we could work towards enforcing it.\nOption 1 (explicit)\nThe explicit approach would be to not allow adding categoryless holidays, forcing the user to explicit mark them as PUBLIC\nFor instance, this line would be removed:\n\n\n\npython-holidays/holidays/holiday_base.py\n\n\n         Line 656\n      in\n      4eed261\n\n\n\n\n\n\n method_names = [f\"_add_subdiv_{subdiv}_holidays\"] \n\n\n\n\n\nThe all instances of _add_subdiv_{subdiv}_holidays() would have to be refactored to _add_subdiv_{subdiv}_public_holidays().\nA big downside of this approach is that it introduces a big regression and will likely break lots of user code. If this route is considered, them maybe an initial step towards this would be to add a deprecation warning to _add_subdiv_{subdiv}_holidays() usages. And, in a later version, raise a ValueError and only accept _add_subdiv_{subdiv}_{category}_holidays() definitions.\nOption 2 (implicit)\nThis option avoids breaking lots of user code but would probably warrant careful documentation of the behaviours making it very clear that \"public\" is treated as the default category throughout the package. I think that this approach would require changing the following lines:\n\n\n\npython-holidays/holidays/holiday_base.py\n\n\n        Lines 656 to 659\n      in\n      4eed261\n\n\n\n\n\n\n method_names = [f\"_add_subdiv_{subdiv}_holidays\"] \n\n\n\n \n\n\n\n for category in sorted(self.categories): \n\n\n\n method_names.append(f\"_add_subdiv_{subdiv}_{category}_holidays\") \n\n\n\n\n\nto:\nmethod_names = []\nif PUBLIC in self.categories:\n    method_names.append(f\"_add_subdiv_{subdiv}_holidays\")\n\nfor category in sorted(self.categories):\n    method_names.append(f\"_add_subdiv_{subdiv}_{category}_holidays\")\n\nIf you wish, I would be happy to help out üëç",
            "That said, I still think that this behaviour does not make sense for categories. If you agree that holidays.PUBLIC should be the default category (which already happens for the categories search field), then we could work towards enforcing it.\n\nThat's exactly what we planned - PUBLIC as category supported by default. And over time, all countries will switch to this format (with _populate_xxxx_holidays() instead of _populate()). Perhaps this time has already come...\n\nA big downside of this approach is that it introduces a big regression and will likely break lots of user code.\n\nThey are the internal methods of HolidayBase and its descendants, and user code should not call them or depend on them.",
            "They are the internal methods of HolidayBase and its descendants, and user code should not call them or depend on them\n\nDo you mean that users should only interact with _populate_{category}_holidays() and never use the _add_subdiv_{subdiv}_{category}_holidays() etc variants?",
            "I initially assumed that these methods were free game for users of the holidays package to define custom Holiday classes. I can see now that only _populate() is documented in your docs:",
            "It would be great to support the creation of arbitrary holidays. This might be a new issue altogether but it doesn't seem like it would be hard to implement. Take, for instance, the example where you want to create a custom holiday class for your company's holidays:\nclass MyCompanyHolidays(holidays.HolidayBase):\n    supported_categories = {\"ALL\", \"CONTRACT\", \"EXTERNAL\"}\n    subdivisions = (\"EMEA\", \"APLA\", \"NA\")\n \n    # For everyone in EMEA\n    def _add_subdiv_emea_all_holidays(self):\n        self._add_holiday_jan_1(\"New Year\")\n \n    # Only for full-time employees in North America\n    def _add_subdiv_na_contract_holidays(self):\n        self._add_holiday_feb_2(\"Mental health day\")\n\n    # This should fail instead of defaulting to PUBLIC\n    def _add_subdiv_apla_holidays(self):\n        self._add_holiday_mar_3(\"A holiday for everyone in APLA\")\n   \n    # For all external workers (across all subdivisions)\n    def _populate_external_holidays(self):\n        self._add_holiday_jul_4(\"Forced time off\")\nI believe that the only thing in the way of allowing a user to create this is again the unknown_categories check (which is straightforward to fix)\n\n\n\npython-holidays/holidays/holiday_base.py\n\n\n        Lines 320 to 324\n      in\n      daa4b80\n\n\n\n\n\n\n unknown_categories = self.categories.difference(ALL_CATEGORIES) \n\n\n\n if len(unknown_categories) > 0: \n\n\n\n raise NotImplementedError( \n\n\n\n f\"Category is not supported: {', '.join(unknown_categories)}.\" \n\n\n\n     )",
            "Hi @tpvasconcelos, it's great to have such a detailed and valuable feedback from time to time. We've created several PRs and significantly improved the code quality based on your ideas.\nTaking into account your interest I'd like to mention that this year our goal is to release v1 of the library. We could definitely use suggestions on what features would be useful to implement from users' perspective. Any input is appreciated!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1553",
        "title": "Update Denmark holidays",
        "count": 0,
        "turns": [
            "I've received an email with a link to https://www.norden.org/en/info-norden/public-holidays-denmark\nThe author complained about absence of June 5th in the list of holiday dates:\n\nThe calendar for Denmark does not include 5 June.\n\nDenmark holidays need to be extended using categories approach."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1549",
        "title": "Localize Israel holidays",
        "count": 0,
        "turns": [
            "Next step is l10n. :)\nOriginally posted by @KJhellico in #1541 (comment)\n\nadd native holidays names\nadd en_US translation"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1524",
        "title": "Revisit README.rst badge section",
        "count": 0,
        "turns": [
            "It's time to take another look at shields.io badges\nThe focus should be on these 2 aspects:\n\nupdate the code snippets for rst format\nmake badges look more visually consistent\n\nIt'd also be a great idea to make sure we use all related badges available on shields.io"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1497",
        "title": "py.typed marker is missing in 0.34",
        "count": 1,
        "turns": [
            "Hey, since the release of 0.34 mypy is complaining with\nRun tox -e type_check\n##[debug]/usr/bin/bash -e /home/runner/work/_temp/bd19b5f4-fb3e-460f-b257-cb95c16b7b7d.sh\ntype_check: install_deps> python -I -m pip install mypy types-python-dateutil types-pytz -r requirements.txt\ntype_check: freeze> python -m pip freeze --all\ntype_check: holidays==0.34,mypy==1.5.1,mypy-extensions==1.0.0,pip==23.2.1,python-dateutil==2.8.2,pytz==2023.3.post1,setuptools==68.2.0,six==1.16.0,types-python-dateutil==2.8.19.14,types-pytz==2023.3.1.1,typing_extensions==4.8.0,wheel==0.41.2\ntype_check: commands[0]> mypy --show-error-codes src/bdew_datetimes\nsrc/bdew_datetimes/calendar.py:7: error: Skipping analyzing \"holidays\": module is installed, but missing library stubs or py.typed marker  [import]\nsrc/bdew_datetimes/calendar.py:8: error: Skipping analyzing \"holidays.constants\": module is installed, but missing library stubs or py.typed marker  [import]\nsrc/bdew_datetimes/calendar.py:9: error: Skipping analyzing \"holidays.countries.germany\": module is installed, but missing library stubs or py.typed marker  [import]\nsrc/bdew_datetimes/calendar.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsrc/bdew_datetimes/periods.py:14: error: Skipping analyzing \"holidays\": module is installed, but missing library stubs or py.typed marker  [import]\nFound 4 errors in 2 files (checked 4 source files)\ntype_check: exit 1 (1.43 seconds) /home/runner/work/bdew-datetimes/bdew-datetimes> mypy --show-error-codes src/bdew_datetimes pid=1834\n  type_check: FAIL code 1 (6.75=setup[5.32]+cmd[1.43] seconds)\n  evaluation failed :( (6.82 seconds)\nError: Process completed with exit code 1.\n\nThe following screenshot shows both tarballs from pypi:\n\nComparing both releases show that with ac29789 include holidays/py.typed in MANIFEST.in was dropped.\n\nOrigin: mj0nez/bdew-datetimes#55",
            "Hi Marcel,\nthat one is indeed missing. Thanks for reporting it!\nThe fix in on the way."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1494",
        "title": "Canada Object is not running _populate_government_holidays",
        "count": 4,
        "turns": [
            "When querying Canadian holidays, the method _populate_government_holidays is not called. Probably even other methods from Canada",
            "Hey @AntonioVentilii,\ndid you specify you wanted the GOVERNMENT category holidays to be included? The default one is PUBLIC.\nIf so, please share some code examples to reproduce the issue.\nThank you!",
            "Hi @arkid15r ! Tks for the answer!\nActually, I did not specify it, I imagined all of them would appear if I do a generic search. For example, the Reconciliation Day should appear (30th september 2023, obs. 2nd october 2023), but it doesn't.\nimport holidays\n\nca_holidays = holidays.country_holidays('Canada', observed=True, years=[2023])\n\nprint(ca_holidays)",
            "Hey Antonio,\ncurrently CA holidays implementation adds that holiday for either GOVERNMENT category or multiple subdivisions that recognize the holiday. The default CA holidays set does not include \"National Day for Truth and Reconciliation\" related holidays.\nThis would work, though:\nholidays.country_holidays('Canada', years=2023, categories=(holidays.GOVERNMENT,))\nholidays.country_holidays('Canada', years=2023, subdiv=\"BC\")\n\nPlease also note we have sort of related discussion here - #1492",
            "Understood! Thank you for the answer!\nI will close the issue"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1489",
        "title": "Revisit holidays entity class structure",
        "count": 0,
        "turns": [
            "Consider moving special/substituted holidays to a separate entities. Reduce the boilerplate look of country classes."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1488",
        "title": "Simplify PR template checklist",
        "count": 0,
        "turns": [
            "Keep essentials, remove low priority items in order to decrease newcomer entrance threshold."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1487",
        "title": "Add UK easter holidays",
        "count": 2,
        "turns": [
            "The holidays in UK don't include easter and the summer bank holiday",
            "Hi @remipham, try checking the UK holidays for ENG and WLS subdivs, e.g., holidays.UK(years=2023, subdiv=\"ENG\")",
            "Thanks, got everything I need!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=1&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1485",
        "title": "Coverall Errors: wrong filepath setup?",
        "count": 2,
        "turns": [
            "From #1483, the result all appears incorrectly and are marked with either \"Source not available\" or \"incorrect hash\"",
            "@PPsyrius, I can see source now. Try to sign in on coveralls.io with your GitHub account.",
            "@PPsyrius, I can see source now. Try to sign in on coveralls.io with your GitHub account.\n\nOh, that explains it"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1482",
        "title": "Juneteenth is a NYSE holiday only starting from 2022 and not 2021",
        "count": 1,
        "turns": [
            "The NYSE and other markets have recognized Juneteenth only starting 2022, however when running the following code it recognizes 2021 Juneteenth as a NYSE holiday:\nimport holidays\nfrom datetime import date\n\nnyse_holidays = holidays.NYSE()\nprint(date(2021, 6, 18) in nyse_holidays)\n\nExpected Output:\nFalse\nActual Output:\nTrue",
            "@roy-themachine, thank you for your suggestion! It will be fixed in next release."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1475",
        "title": "Incomplete list of Chinese holidays",
        "count": 1,
        "turns": [
            "Hello, I'd like to ask you to check list of  Chinese (CN) holidays. Based on my research (see links below) it seems that some of public holidays are missing there, for example 4.-6.10.2023 (week of National Day).\nhttps://www.officeholidays.com/countries/china/2023\nhttps://www.china-briefing.com/news/china-public-holiday-2023-schedule/\nhttps://en.wikipedia.org/wiki/Public_holidays_in_China\nCould you please have a look?\nThank you in advance!",
            "Seems like none of the English version sources pre-2022 are reliable, though the Chinese government appears to have official ones from 2007 onwards from their website, which I'm working on at the moment - as well as adding both l10n support (English(US)/Thai/Simplified Chinese/Traditional Chinese) and half-day holiday supports."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1465",
        "title": "Clean up package build log warnings",
        "count": 0,
        "turns": [
            "Take care of a bunch of\n  check.warn(importable)\n/private/var/folders/wr/zbdvblqs5fqff7xr1gqgg03c0000gn/T/build-env-v7q9lxn2/lib/python3.11/site-packages/setuptools/command/build_py.py:204: _Warning: Package 'holidays.locale.uk.LC_MESSAGES' is absent from the `packages` configuration.\n!!\n\n        ********************************************************************************\n        ############################\n        # Package would be ignored #\n        ############################\n        Python recognizes 'holidays.locale.uk.LC_MESSAGES' as an importable package[^1],\n        but it is absent from setuptools' `packages` configuration.\n\n        This leads to an ambiguous overall configuration. If you want to distribute this\n        package, please make sure that 'holidays.locale.uk.LC_MESSAGES' is explicitly added\n        to the `packages` configuration field.\n\n        Alternatively, you can also rely on setuptools' discovery methods\n        (for example by using `find_namespace_packages(...)`/`find_namespace:`\n        instead of `find_packages(...)`/`find:`).\n\n        You can read more about \"package discovery\" on setuptools documentation page:\n\n        - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html\n\n        If you don't want 'holidays.locale.uk.LC_MESSAGES' to be distributed and are\n        already explicitly excluding 'holidays.locale.uk.LC_MESSAGES' via\n        `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,\n        you can try to use `exclude_package_data`, or `include-package-data=False` in\n        combination with a more fine grained `package-data` configuration.\n\n        You can read more about \"package data files\" on setuptools documentation page:\n\n        - https://setuptools.pypa.io/en/latest/userguide/datafiles.html\n\n\n        [^1]: For Python, any directory (with suitable naming) can be imported,\n              even if it does not contain any `.py` files.\n              On the other hand, currently there is no concept of package data\n              directory, all directories are treated like packages.\n        ********************************************************************************\n\n!!\n  check.warn(importable)\n\nwarning messages generated during make package command run."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1459",
        "title": "Add per subdiv special holidays support",
        "count": 1,
        "turns": [
            "Implement it in a similar to country wide special holidays.\n(use Canada for further refactoring).",
            "Resolved in #1520."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1453",
        "title": "Return wrong language for the Netherlands holidays",
        "count": 3,
        "turns": [
            "I have updated my code to the latest version and it seems the holiday names do not return in it's own language.\nRunning this code:\nimport datetime\nimport holidays\n\nfor ptr in holidays.NL(datetime.datetime.now().year).items():\n    print(ptr)\n\n\n‚úÖ Running the above code using version 0.22 gives (good and expected results):\n(datetime.date(2023, 1, 1), 'Nieuwjaarsdag')\n(datetime.date(2023, 4, 9), 'Eerste paasdag')\n(datetime.date(2023, 4, 7), 'Goede Vrijdag')\n(datetime.date(2023, 4, 10), 'Tweede paasdag')\n(datetime.date(2023, 5, 18), 'Hemelvaart')\n(datetime.date(2023, 5, 28), 'Eerste Pinksterdag')\n(datetime.date(2023, 5, 29), 'Tweede Pinksterdag')\n(datetime.date(2023, 12, 25), 'Eerste Kerstdag')\n(datetime.date(2023, 12, 26), 'Tweede Kerstdag')\n(datetime.date(2023, 4, 27), 'Koningsdag')\n\nüî¥ Running the code from version 0.23 (also the same results running 0.32) gives the below wrong result:\n(datetime.date(2023, 1, 1), \"New Year's Day\")\n(datetime.date(2023, 4, 7), 'Good Friday')\n(datetime.date(2023, 4, 9), 'Easter Sunday')\n(datetime.date(2023, 4, 10), 'Easter Monday')\n(datetime.date(2023, 4, 27), \"King's Day\")\n(datetime.date(2023, 5, 18), 'Ascension Day')\n(datetime.date(2023, 5, 28), 'Whit Sunday')\n(datetime.date(2023, 5, 29), 'Whit Monday')\n(datetime.date(2023, 12, 25), 'Christmas Day')\n(datetime.date(2023, 12, 26), 'Second Day of Christmas')\n\nSo you can see the dates are correct but the labels (naming) are in English instead of Dutch. If this is the new standard, this is fine for me then I will translate myself. Otherwise, I hope you can fix this.\nIf you need more info, please me know. I will run version 0.22 in the mean time.\nMany thanks for this library!",
            "Hey @jovana\nthanks for the detailed issue description!\nThe reason for this (unexpected) behavior is that we've localized NL holidays some time ago. There are currently 3 languages supported: nl (default), en_US, and uk.\nAnd it seems you're running it under en locale. Please try setting the language explicitly:\nimport datetime\nimport holidays\n\nfor ptr in holidays.NL(datetime.datetime.now().year, language=\"nl\").items():\n    print(ptr)\n\nIf you're a native Dutch language speaker we'd appreciate you taking a look at those labels and let us know if something isn't correct.\nThank you!",
            "Hi @arkid15r , Thanks for the quick reply!\nOkay, I understand now! I have added the language=\"nl\" option and it gives the correct output.\nMany thanks!\nI have looked into the documentation, now I know I can find it. But it would be nice if there is an example in the readthedocs.",
            "Hey @jovana thanks for the detailed issue description!\nThe reason for this (unexpected) behavior is that we've localized NL holidays some time ago. There are currently 3 languages supported: nl (default), en_US, and uk.\nAnd it seems you're running it under en locale. Please try setting the language explicitly:\nimport datetime\nimport holidays\n\nfor ptr in holidays.NL(datetime.datetime.now().year, language=\"nl\").items():\n    print(ptr)\n\nIf you're a native Dutch language speaker we'd appreciate you taking a look at those labels and let us know if something isn't correct.\nThank you!\n\nI have added an update in the documentation, in this pull request. Not sure if it is usefull: #1456\nThanks for helping and this great lib!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1451",
        "title": "[br] Optional holiday - Dia do servidor p√∫blico",
        "count": 2,
        "turns": [
            "python-holidays/holidays/countries/brazil.py\n\n\n         Line 130\n      in\n      110e3cc\n\n\n\n\n\n\n self._add_holiday_oct_28(\"Dia do Servidor P√∫blico\") \n\n\n\n\n\nOn brazilian holidays, some are considered 'optional' (feriado facultativo).\nWhen verifying for a holiday, I'd like to get the fixed holidays, or filter out these 'optional' ones.\nThat is because, as the name suggests, its observance will depend on employer, region, government decision, etc.\nhttps://blog-grancursosonline-com-br.translate.goog/feriados-pontos-facultativos/?_x_tr_sl=pt&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp\nHow could I handle a case like that?",
            "@rulrok, thank you for your remark about Brazilian optional holidays.\nAs Python Holidays now support holidays categories, in PR #1452 we have implemented correct categorization of Brazil holidays. So now you can distinguish fixed and optional holidays.\nCode example:\n>>> from holidays.countries.brazil import Brazil\n>>> from holidays.constants import OPTIONAL, PUBLIC\n>>> br = Brazil(years=2023)  # equivalent to: br = Brazil(categories=(PUBLIC,), years=2023)\n>>> br_full = Brazil(categories=(OPTIONAL, PUBLIC), years=2023)\n>>> \"2023-10-28\" in br\nFalse\n>>> \"2023-10-28\" in br_full\nTrue\nThese changes are currently available in beta version, and version 0.33 will be released next week. I hope this will be useful.",
            "Nice. Thank you :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1449",
        "title": "2 Missing UK Bank holidays",
        "count": 3,
        "turns": [
            "There are normally 8 bank holidays in the UK each year (https://www.gov.uk/bank-holidays), whilst holidays.CountryHoliday(\"UnitedKingdom\", years=2023) lists 6 regulars bank holidays.\nThe missing bank holidays are the \"Summer bank holiday\" and the \"Easter Monday bank holiday\". This error occurs in both 2023 and 2024.",
            "@will-judge, thank you for your comments and useful source!\nThese holidays (Easter Monday and Late Summer Bank Holiday) are not common to the entire United Kingdom, but only to England, Wales and Northern Ireland (they are not holidays in Scotland). So you may find them in something like\nholidays.CountryHoliday(\"UK\", subdiv=\"ENG\", years=2023)\n(also \"NIR\" or \"WLS\" instead of \"ENG\").",
            "Yeah, I was just going to reply with pretty much the same code example.\nThe UK holidays implementation was revamped recently (see #1316)\nI hope this helps.",
            "I believe this can be closed."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1443",
        "title": "For Canada, Remembrance Day is treated differently depending on subdivisions",
        "count": 5,
        "turns": [
            "First, thanks for the great package! Very helpful.\nSome Canadian subdivisions use the _add_observed method before adding 'Remembrance Day' as a holiday, whereas others don't use this. The effect is that Remembrance Day falling on a Sunday will have an observed day on the following Monday in 5 subdivisions but not the other 6. I haven't seen anything that these holidays are actually treated differently in this way.\nIn addition for those that use the self._add_observed() method, they have include_sat=False. I also haven't seen any reference that says this holiday doesn't count for a day in-lieu (i.e., observed) if falling on the Saturday but does if falling on the Sunday.\nself._add_observed(self._add_remembrance_day(tr(\"Remembrance Day\")), include_sat=False)\nUsed by:\nNL, NS, NT, PE, SK\n_add_subdiv_pe_holidays\nself._add_remembrance_day(tr(\"Remembrance Day\"))\nUsed by:\nAB, BC, MB, NB, NU, YT\nRecommended fixes:\n\nChange all uses to use self._add_observed() before self._add_remembrance_day() (In Canada)\nSet include_sat=True in all uses of self._add_observed() for Remembrance Day (In Canada)\n\nIf you agree with the changes, I can make a PR for this.",
            "Hi Tim, thanks for filing this.\nYeah, I can't deny Canada holidays implementation needs some attention (see another recent issue #1439).\nBTW, the issue detailed description is much appreciated üëç\nI took a quick look and it seems those changes were added by @KJhellico (who is really good in figuring out holidays and respective observance rules). I guess it was done based on this source https://en.wikipedia.org/wiki/Public_holidays_in_Canada\n\nIf you agree with the changes, I can make a PR for this.\n\nThis would be totally awesome as we always encourage people to submit their contributions. I'd wait for a reply from @KJhellico though to make sure that proposed changes are what we want.\nIf you have any questions -- just let us know.",
            "@timcashion, thank you for your feedback! I'll take a closer look at this.",
            "I started with Alberta. Official source says nothing about additional holiday if Remembrance Day falls on weekend. The only holiday to be shifted in Alberta is Canada Day (and only if on Sunday):\n\nCanada Day is on July 1 every year except when it falls on a Sunday, then it‚Äôs on July 2.",
            "Thanks for the quick responses!\nI guess maybe I'm misinterpreting 'observed'. My use case is to get days when offices are usually closed after a holiday that falls on a weekend. This might be a grey area as it's fairly standard practice for this to happen even if it's not in the legal definitions provided (such as your link to AB government).\nFor example, Canada Day was on Saturday, July 1st this year and most office workers will get the Monday off in lieu. It's not that the holiday is 'Observed' on that day, but you get a day off regardless and this day off is taken on the Monday following the holiday. The treatment of Christmas Day and Boxing Day in the package seems to follow this logic, but Remembrance Day doesn't seem to.",
            "Yes, \"Observed\" in this project - it's something like \"additional day off that appears when holiday falls on non-working day (weekend/Sunday/other holiday etc)\". But we are trying to use reliable sources, especially official ones, to determine the rules of this \"Observed\" calculation."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1434",
        "title": "Creating custom holidays - entity inheritance error",
        "count": 2,
        "turns": [
            "Hello,\ni was using the following code with holidays v0.16. Now after i updated it to v0.30 i'm getting an error.\nCode is in a module that's imported in another one.\nCode is:\n# Import datetime classes to operate with dates\nfrom datetime import date\n\n# Import the holidays library to check for holidays\nimport holidays\n\n\n# Inherit IT holidays and add custom ones\nclass MyHolidays(holidays.IT):\n    def _populate(self, year):\n\n        holidays.IT._populate(self, year)\n\n        # Add custom holidays\n        [...]\n\nThe error i receive is:\n  File \"xxx\\my_holidays.py\", line 9, in <module>\n    class MyHolidays(holidays.IT):\n  File \"xxx\\Lib\\site-packages\\holidays\\registry.py\", line 172, in __init__\n    raise TypeError(\nTypeError: This is a python-holidays entity loader class. For entity inheritance purposes please import a class you want to derive from directly: e.g., `from holidays.countries import Entity` or `from holidays.financial import Entity`.\n\nCode follows the docs https://python-holidays.readthedocs.io/en/latest/examples.html\nImplementation changed? Thank you!",
            "Following #1260 i modified my code this way:\n# Import datetime classes to operate with dates\nfrom datetime import date\n\n# Import the holidays library to check for holidays\nfrom holidays.countries import IT\n\n\n# Inherit IT holidays and add custom ones\nclass MyHolidays(IT):\n    def _populate(self, year):\n        IT._populate(self, year)\n\n        # Add custom holidays\n        [...]\n\nand now is working.\nDocs should probably be updated.",
            "Hi @steakhutzeee\nthanks for opening this issue!\nIt seems you did pretty much what the error message had suggested -- imported IT from the countries module instead of the top level module:\n\nThis is a python-holidays entity loader class. For entity inheritance purposes please import a class you want to derive from directly: e.g., from holidays.countries import Entity or from holidays.financial import Entity.\n\nWe'll take care of the stale documentation update as it slipped our attention in #1087. I appreciated for pointing out to that!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1418",
        "title": "Add l10n tests",
        "count": 1,
        "turns": [
            "Cover at least duplicated entries check.\nOriginally posted by @arkid15r in #1416 (comment)",
            "resolved in #1420"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1404",
        "title": "Error with Austrian holidays from version 0.22",
        "count": 5,
        "turns": [
            "import holidays\nat_holidays = holidays.AT(state=9)\n'2023-12-25' in at_holidays\n\nThis code works fine up to version 0.21.13, but breaks at version 0.22 and above:\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py\", line 406, in __contains__\n    cast(\"Mapping[Any, Any]\", self), self.__keytransform__(key)\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py\", line 384, in __keytransform__\n    self._populate(dt.year)\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/countries/austria.py\", line 34, in _populate\n    super()._populate(year)\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py\", line 794, in _populate\n    self._add_subdiv_holidays()\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py\", line 764, in _add_subdiv_holidays\n    self, f\"_add_subdiv_{self.subdiv.lower()}_holidays\", None\nAttributeError: 'int' object has no attribute 'lower'\n\nIt's the same in Python 3.9. I got the error on MacOS Catalina as well as FreeBSD 13.2",
            "I got somewhat a similar error.\nAttributeError: module 'holidays' has no attribute 'CountryHoliday'\nThe same code was working just a couple of days ago on OSX. Now I have the same exact line on another OS (Debian), same error.",
            "Hi @georgpfolz,\nthanks for the report!\nThe state arg has been deprecated for a while. You can use either at_holidays = holidays.AT(subdiv=9) or at_holidays = holidays.AT(state=\"9\") to avoid the error.\nI'll look into what can be done to improve the subdivision handling on our side.\nThank you!",
            "I got somewhat a similar error. AttributeError: module 'holidays' has no attribute 'CountryHoliday'\nThe same code was working just a couple of days ago on OSX. Now I have the same exact line on another OS (Debian), same error.\n\nHi @hinson-x,\nthis doesn't look the same to me. Could you file a separate issue w/ a detailed description?\nThank you!",
            "Hello @arkid15r\nActually I found the issue. I was not too smart where I named my new test python file holiday.py too, so it was trying to.... import itself thus not finding any functions/attributes. Thanks anyhow, appreciate it.",
            "The issue has been resolved in v0.30"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1378",
        "title": "Add REVISED_JULIAN_CALENDAR",
        "count": 1,
        "turns": [
            "Add REVISED_JULIAN_CALENDAR constant for Christian holidays of Eastern Orthodox countries that use this calendar (Bulgaria, Cyprus, Greece, Romania, from Sep 2023 - Ukraine).",
            "I believe this was resolved by #1380"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1356",
        "title": "No module named 'holidays.financial'",
        "count": 2,
        "turns": [
            "when i make .exe app with auto-py-to-exe\nand run it\nit says that\nNo module named 'holidays.financial'",
            "Hi @siavashvampire\nthanks for bringing this up.\nCould you provide more details on how to reproduce the issue? Also it's not clear what version of python-holidays you've been using.",
            "It might happen if one of your local files is named as holidays.py\nI'd start from checking no that.\nClosing this, feel free to re-open if you have more information."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1348",
        "title": "Document the holiday categories usage",
        "count": 0,
        "turns": [
            "The category list keeps growing. It has to be documented when/how each of the categories should be used. Ideally with some use case examples.\n\nOriginally posted by @arkid15r in #1347 (comment)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1329",
        "title": "holiday date not correct",
        "count": 6,
        "turns": [
            "please update the holiday of diwali in month of november instead in october.The date for diwali is 12/11/2023 not 12/10/2023.",
            "Which country is this for? @tyagi858",
            "India\n‚Ä¶\nOn Thu, 22 Jun 2023, 2:22 pm PPsyrius, ***@***.***> wrote:\n Which country is this for? @tyagi858 <https://github.com/tyagi858>\n\n ‚Äî\n Reply to this email directly, view it on GitHub\n <#1329 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A6O2EO3XZAPTH6V5BFCY6SDXMQBT5ANCNFSM6AAAAAAZPWLIK4>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
            "Can you confirm a bit whether if your version of python-holidays is up-to-date? Here's the code for v0.27 for example which seems correct to me: @tyagi858\n        # Directly lifted Diwali and Holi dates from FBProphet from:\n        # https://github.com/facebook/prophet/blob/main/python/prophet/hdays.py\n        # Warnings kept in place so that users are aware\n        if year < 2001 or year > 2030:\n            warning_msg = \"Diwali and Holi holidays available from 2001 to 2030 only\"\n            warnings.warn(warning_msg, Warning)\n\n        # https://www.timeanddate.com/holidays/india/diwali\n        diwali_dates = {\n            2001: (NOV, 14),\n            2002: (NOV, 4),\n            2003: (OCT, 25),\n            2004: (NOV, 12),\n            2005: (NOV, 1),\n            2006: (OCT, 21),\n            2007: (NOV, 9),\n            2008: (OCT, 28),\n            2009: (OCT, 17),\n            2010: (NOV, 5),\n            2011: (OCT, 26),\n            2012: (NOV, 13),\n            2013: (NOV, 3),\n            2014: (OCT, 23),\n            2015: (NOV, 11),\n            2016: (OCT, 30),\n            2017: (OCT, 19),\n            2018: (NOV, 7),\n            2019: (OCT, 27),\n            2020: (NOV, 14),\n            2021: (NOV, 4),\n            2022: (OCT, 24),\n            2023: (NOV, 12),\n            2024: (NOV, 1),\n            2025: (OCT, 20),\n            2026: (NOV, 8),\n            2027: (OCT, 29),\n            2028: (OCT, 17),\n            2029: (NOV, 5),\n            2030: (OCT, 26),\n        }\n\n        # https://www.timeanddate.com/holidays/india/holi\n        holi_dates = {\n            2001: (MAR, 10),\n            2002: (MAR, 29),\n            2003: (MAR, 18),\n            2004: (MAR, 7),\n            2005: (MAR, 26),\n            2006: (MAR, 15),\n            2007: (MAR, 4),\n            2008: (MAR, 22),\n            2009: (MAR, 11),\n            2010: (MAR, 1),\n            2011: (MAR, 20),\n            2012: (MAR, 8),\n            2013: (MAR, 27),\n            2014: (MAR, 17),\n            2015: (MAR, 6),\n            2016: (MAR, 24),\n            2017: (MAR, 13),\n            2018: (MAR, 2),\n            2019: (MAR, 21),\n            2020: (MAR, 10),\n            2021: (MAR, 29),\n            2022: (MAR, 18),\n            2023: (MAR, 8),\n            2024: (MAR, 25),\n            2025: (MAR, 14),\n            2026: (MAR, 4),\n            2027: (MAR, 22),\n            2028: (MAR, 11),\n            2029: (MAR, 1),\n            2030: (MAR, 20),\n        }\n\n        if year in diwali_dates:\n            self._add_holiday(\"Diwali\", *diwali_dates[year])\n\n        if year in holi_dates:\n            self._add_holiday(\"Holi\", *holi_dates[year])\nSame goes for the ones used by Malaysia and Singapore.",
            "Can u check for 0.13 version beacuse i use python3.6 version\n‚Ä¶\nOn Thu, 22 Jun 2023, 3:25 pm PPsyrius, ***@***.***> wrote:\n Can you confirm a bit whether if your version of python-holidays is\n up-to-date? Here's the code for v0.26 for example\n <https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/india.py>\n which seems correct to me: @tyagi858 <https://github.com/tyagi858>\n\n         # Directly lifted Diwali and Holi dates from FBProphet from:\n         # https://github.com/facebook/prophet/blob/main/python/prophet/hdays.py\n         # Warnings kept in place so that users are aware\n         if year < 2001 or year > 2030:\n             warning_msg = \"Diwali and Holi holidays available from 2001 to 2030 only\"\n             warnings.warn(warning_msg, Warning)\n\n         # https://www.timeanddate.com/holidays/india/diwali\n         diwali_dates = {\n             2001: (NOV, 14),\n             2002: (NOV, 4),\n             2003: (OCT, 25),\n             2004: (NOV, 12),\n             2005: (NOV, 1),\n             2006: (OCT, 21),\n             2007: (NOV, 9),\n             2008: (OCT, 28),\n             2009: (OCT, 17),\n             2010: (NOV, 5),\n             2011: (OCT, 26),\n             2012: (NOV, 13),\n             2013: (NOV, 3),\n             2014: (OCT, 23),\n             2015: (NOV, 11),\n             2016: (OCT, 30),\n             2017: (OCT, 19),\n             2018: (NOV, 7),\n             2019: (OCT, 27),\n             2020: (NOV, 14),\n             2021: (NOV, 4),\n             2022: (OCT, 24),\n             2023: (NOV, 12),\n             2024: (NOV, 1),\n             2025: (OCT, 20),\n             2026: (NOV, 8),\n             2027: (OCT, 29),\n             2028: (OCT, 17),\n             2029: (NOV, 5),\n             2030: (OCT, 26),\n         }\n\n         # https://www.timeanddate.com/holidays/india/holi\n         holi_dates = {\n             2001: (MAR, 10),\n             2002: (MAR, 29),\n             2003: (MAR, 18),\n             2004: (MAR, 7),\n             2005: (MAR, 26),\n             2006: (MAR, 15),\n             2007: (MAR, 4),\n             2008: (MAR, 22),\n             2009: (MAR, 11),\n             2010: (MAR, 1),\n             2011: (MAR, 20),\n             2012: (MAR, 8),\n             2013: (MAR, 27),\n             2014: (MAR, 17),\n             2015: (MAR, 6),\n             2016: (MAR, 24),\n             2017: (MAR, 13),\n             2018: (MAR, 2),\n             2019: (MAR, 21),\n             2020: (MAR, 10),\n             2021: (MAR, 29),\n             2022: (MAR, 18),\n             2023: (MAR, 8),\n             2024: (MAR, 25),\n             2025: (MAR, 14),\n             2026: (MAR, 4),\n             2027: (MAR, 22),\n             2028: (MAR, 11),\n             2029: (MAR, 1),\n             2030: (MAR, 20),\n         }\n\n         if year in diwali_dates:\n             self._add_holiday(\"Diwali\", *diwali_dates[year])\n\n         if year in holi_dates:\n             self._add_holiday(\"Holi\", *holi_dates[year])\n\n ‚Äî\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/1329#issuecomment-1602351453>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A6O2EO3TRBV3CE4LKKGQW73XMQI75ANCNFSM6AAAAAAZPWLIK4>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
            "I did check and it seems that the correction above was done in v0.18 which requires python >=3.7 at the very least.",
            "Ok, thanks for the clarification.\n‚Ä¶\nOn Thu, 22 Jun 2023, 3:41 pm PPsyrius, ***@***.***> wrote:\n I did check and it seems that the correction above was done in v0.18\n <https://github.com/dr-prodigy/python-holidays/releases/tag/v.0.18> which\n requires python >=3.7 at the very least.\n\n ‚Äî\n Reply to this email directly, view it on GitHub\n <#1329 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/A6O2EOY4BPCW6AKTSFUQKKTXMQK5DANCNFSM6AAAAAAZPWLIK4>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1321",
        "title": "HolidayBase::pop_named won't remove holiday by a partial name",
        "count": 0,
        "turns": [
            "File \".../home-assistant-core/venv/lib/python3.10/site-packages/holidays/holiday_base.py\", line 825, in pop_named\n    holiday_names.remove(name)\nValueError: list.remove(x): x not in list"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1298",
        "title": "Add Vanuatu holidays",
        "count": 5,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Vanuatu\nhttps://www.timeanddate.com/holidays/vanuatu/\nhttps://www.gov.vu/index.php/events/holidays",
            "Issue with make check and make pre-commit\nHi.\nI want to contribute to the module because it helped me, so I want to return the favour and contribute with Adding Vanuatu.\nI made two files vanuatu.py, test_vanuatu.py. I modified registry.py, init.py and README.srt\nI created a new environment and started with $ make setup I ran into a problem with makefile errors\n\nI tried to $ make check. The same error\nIt passed $ make test, even $ pytest -s tests/countries/test_vanuatu.py\nAnd on $ make pre-commit, it failed rstcheck\n\nCould someone please help me?",
            "Hi @Strategos1\nthank you for making Vanuatu holidays support possible!\nI guess it would be easier to help you if you exported your code (I understand it's WIP). Try git commit / git push with --no-verify flag.\nFor the next troubleshooting step I'd run scripts/l10n/generate_po_files.py",
            "@Strategos1,\nSeems it's babel problem. As advised here, try to run:\nTZ=UTC make setup\nI just tried this on gitpod.io and there are no errors. Same for other make commands.",
            "Accepted and merged, thank you!",
            "No I thank you for all your help :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1293",
        "title": "Add United Republic of Tanzania holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Tanzania\nhttps://www.timeanddate.com/holidays/tanzania/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1288",
        "title": "Add Tonga holidays",
        "count": 0,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Culture_of_Tonga#Public_holidays\nhttps://www.timeanddate.com/holidays/tonga/"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1286",
        "title": "Add Timor-Leste holidays",
        "count": 3,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Culture_of_East_Timor#Public_holidays\nhttps://www.timeanddate.com/holidays/timor-leste/\nhttp://timor-leste.gov.tl/wp-content/uploads/2022/03/EN_CdI_National-holidays-2.pdf",
            "I'm working on this atm, also found the exact law wording for East Timor here: https://www.ilo.org/dyn/natlex/docs/ELECTRONIC/79910/86128/F-358739794/TMP79910.pdf",
            "@arkid15r @KJhellico Hi, I got some quick questions here before I create a PR on this after wrapping the translation for this one, should Timor-Leste appear in the holiday registry as holidays.countries.timorleste or holidays.countries.timor_leste ?\nThe official country name always includes the hyphen (Timor-Leste) i.e. as seen here, pretty sure it's the same case for Guinea-Bissau (#1195) too, but the python interpreter seems to not take this well:\nE     File \"[directory name]\\python-holidays\\holidays\\countries\\__init__.py\", line 134\nE       from .timor-leste import TimorLeste, TL, TLS\nE                  ^\nE   SyntaxError: invalid syntax\nPlease let me know if you have reached a consensus on this.",
            "He @PPsyrius,\nyeah, you can't do that in Python.\nI'd go with holidays.countries.timor_leste for the module name and TimorLeste for the class name based on your description."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1281",
        "title": "Cannot \"Pop\" Combined Texas Emancipation/Juneteenth Holiday",
        "count": 6,
        "turns": [
            "Creating a holiday using TX as the state, there is the combined holiday 'Emancipation Day In Texas; Juneteenth National Independence Day'\nPrevious versions of python-holidays seemed to treat this concatenation with a comma a such: 'Emancipation Day In Texas, Juneteenth National Independence Day'\nI am able to 'pop_named' the holiday in the older version, not in the newer with the semicolon seperator:\npython3.6/holidays 0.11.3.1:\n\npython 3.10/holidays .25:",
            "I guess technically these are two separate holidays. I can pop_named them individually but it ends up removing both anyways since it pops the date itself.",
            "seems like 'get_names' has changed since version .20 with this code from #991",
            "Hi @jasonalsing,\nI agree w/ your point that pop_named() should have kept the second holiday present. We'll spend some time to make sure the fix is ready before the next release.\nThanks for bringing this up!",
            "thanks, that makes sense to keep secondary holidays if one is pop_named()\nHowever, what will the behavior be if both are pop_named() in the concatenated form:\npop_named('Emancipation Day In Texas; Juneteenth National Independence Day')\ncurrently this just fails. Should users of this module expect to have to pop them individually as well? (like two separate pops) can pop_named() method support sending multiple with the HOLIDAY_NAME_DELIMITER included?\nThanks!",
            "Ideally it'd cover all of these use cases:\n\ndelete both for pop_named('Emancipation Day In Texas; Juneteenth National Independence Day')\ndelete respective holidays for pop_named('Emancipation Day In Texas) and pop_named('Juneteenth National Independence Day')\n\nAs for now I don't see any reason why it should be implemented in a different way. I'll confirm when we get closer to the implementation process.",
            "Implemented in #1306, in beta now"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1280",
        "title": "Bug in version 0.25: TypeError: object.__init__() takes exactly one argument (the instance to initialize)",
        "count": 1,
        "turns": [
            "Ran into a bug that was solved by downgrading to 0.24.\nHere's the errror:\nhttps://github.com/dr-prodigy/python-holidays/blob/6ce469d50ff2be42cb4cd4dbc6b150fe02791edf/holidays/registry.py#L178\nTypeError: object.__init__() takes exactly one argument (the instance to initialize) \nTraceback (most recent call last):   File \"/opt/main.py\", line 247, in <module>     from model.predict import predict as entrypoint   File \"/usr/local/lib/python3.8/site-packages/model/predict.py\", line 7, in <module>     from prophet import Prophet   File \"/usr/local/lib/python3.8/site-packages/prophet/__init__.py\", line 7, in <module>     from prophet.forecaster import Prophet   File \"/usr/local/lib/python3.8/site-packages/prophet/forecaster.py\", line 19, in <module>     from prophet.make_holidays import get_holiday_names, make_holidays_df   File \"/usr/local/lib/python3.8/site-packages/prophet/make_holidays.py\", line 14, in <module>     import prophet.hdays as hdays_part2   File \"/usr/local/lib/python3.8/site-packages/prophet/hdays.py\", line 779, in <module>     class TU(Turkey):   File \"/usr/local/lib/python3.8/site-packages/holidays/registry.py\", line 178, in __init__     super().__init__(*args, **kwargs)",
            "Duplicate of https://github.com/dr-prodigy/python-holidays/issues/1200.\nThe https://github.com/dr-prodigy/python-holidays/issues/1260 might also be useful."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=2&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1260",
        "title": "TypeError: object.__init__() takes exactly one argument (the instance to initialize)",
        "count": 10,
        "turns": [
            "Hi,\nI have been using the holidays package since the last six months for my enterprise's project and never have had this issue before:\n\nI don't know if this comes from the recent release of version 0.25 or not. But could someone please check on this and help me out. Thanks a ton in advance!",
            "This is an issue with v0.25 - use v0.24 instead",
            "Thanks for teh response @ngerald . Could you please provide some sort of evidence to back this claim? For instance, is this bug a result of introducing entity lazy loading as in https://github.com/dr-prodigy/python-holidays/pull/1087?",
            "This issue on the holidays package repo should serve as evidence: https://github.com/dr-prodigy/python-holidays/issues/1200. Yes, it was an issue with the EntityLoader in the issue you mentioned.",
            "@TaherHabib if it's related to prophet you need to update to the most recent version that has the issue fixed.\nIf it's something else -- your enterprise project's code needs to be changed to import entries from holidays.countries / holidays.financial instead of directly from holidays for inheritance.",
            "Hi @arkid15r, many thanks for responding.\nNo, the issue is not related to prophet in this particular case. It is rather that I am creating my enterprise's own holiday class which, by design, inherits from holidays.AT or holidays.DE to populate the standard calendar holidays; and on top, I am adding a few more holidays to the dict which are unique to my enterprise.\nIt is when the interpreter executes this inheritance code that the error gets generated.",
            "Also, your proposed fix doesn't solve my issue. Based on your suggestion, I basically:\nchanged the class definition/inheritance from this:\nimport holidays\nclass SomeHolidays(holidays.AT)\n    \"\"\"\n    <Body of the class>\n    \"\"\"\nTo this:\nimport holidays\nclass SomeHolidays(holidays.countries.AT)\n    \"\"\"\n    <Body of the class>\n    \"\"\"\nAnd now, it gives me this error:  AttributeError: module 'holidays' has no attribute 'countries'\nI am sure I am making some mistake here in terms of interpreting your suggested solution, could you please elaborate on the matter? Thanks!",
            "@TaherHabib, please, try\nfrom holidays.countries import AT\n\nclass SomeHolidays(AT):\n    \"\"\"\n    <Body of the class>\n    \"\"\"",
            "Thank you @KJhellico for the suggestion. It seems to have worked for me :)\nHowever, now I am faced with a different issue! :/\nThe inheritance and class initialization works fine now, however, when I call the MyEnterpriseHolidays method get_dict_holidays(self, subdiv) which basically returns the holiday dictionary (object of SomeHolidays(<country_code: AT or DE>)) based on the country and the subdivision, I get the following error traceback when running for Austria:\n\nLine where the error occurs:\n\nPytest Summary of all tests using MyEnterpriseHolidays():\n\nSkeleton of my class:\nfrom holidays.countries import AT\n\nclass MyEnterpriseHolidays():\n    def __init__(self, ...):\n        # <class attributes incl. `country_code`>\n    \n    def get_dict_holidays(self, subdiv):\n        if self.country_code == 'AT':\n            return SomeHolidaysAT(\n                        subdiv=subdiv, \n                        years=list(range(some_past_yr, some_future_yr))\n                        )\n        elif self.country_code == 'DE':\n            return SomeHolidaysDE(\n                        subdiv=subdiv, \n                        years=list(range(some_past_yr, some_future_yr))\n                        )\n\nclass SomeHolidaysAT(AT):\n   \n    def _populate(self, year):\n        AT._populate(self, year)\n        # Further Add customized holidays\n\nclass SomeHolidaysDE(DE):\n\n    def _populate(self, year):\n        DE._populate(self, year)\n        # Further Add customized holidays\nAny suggestions on where this might be going wrong or how to fix it? Thanks once again! Really appreciate the help",
            "This error means that most likely holiday from year other than year is being added somewhere in SomeHolidaysAT::_populate().",
            "@KJhellico Thanks a lot for your inputs. The package now works just fine, as expected, again! :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1255",
        "title": "Missing Orthodox Good Friday in Greece national holiday",
        "count": 7,
        "turns": [
            "Hello team,\nI was looking at your package's data and noticed one missing day for Greece.\nSource: https://www.officeholidays.com/countries/greece/2022\nMissing day: 2023 Fri, Apr 14 National Holiday (Orthodox Good Friday)\nWould it be possible to include it in your package, please?\nBest regards,\nDavid Boudart",
            "Hi @DBoudart23,\nI guess somebody will volunteer and fix this soon as it's quite simple and straightforward.\nHuge thanks for reporting this, David!",
            "Thank you very much, @arkid15r",
            "Implemented in https://github.com/dr-prodigy/python-holidays/pull/1257\nThanks everyone!",
            "Thank you!!",
            "Hi @arkid15r ,\nI looked at the holiday package and couldn't find the mentioned national holiday configured.\ngk_holidays = holidays.country_holidays('Greece')\ngk_holidays.get('2023-04-14')  # Good friday\n\nReturns no records at all.\nCan you kindly help me understand the reason?",
            "It'll be available starting v0.26 that's going to be released today.",
            "Gotcha - thank you very much for the quick answer"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1239",
        "title": "Add Papua New Guinea holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Papua_New_Guinea\nhttps://www.timeanddate.com/holidays/papua-new-guinea/",
            "I'm working on this at the moment based on the actual law itself as of 1953 and wayback machine copy for actual holiday dates between 2021-2024"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1223",
        "title": "Add Maldives holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Maldives\nhttps://www.timeanddate.com/holidays/maldives/\nhttp://www.mma.gov.mv/#/about/bankholidays",
            "Implemented in #1508."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1215",
        "title": "Add Laos holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Laos\nhttps://www.timeanddate.com/holidays/laos/",
            "More on this, aside from the official ASEAN calendar for 2022-2023 we use for double-checking in Brunei and Cambodia's PR:\n\n\nThere appears to be a Laotian Securities Exchange Official Calendar here which from a quick check only works from 2019 only. Interestingly enough the calendar indicates that observance/in-lieu are added to the next working day if existing holiday fall on the weekends. -> ‡∫û‡∫±‡∫Å‡∫ä‡∫ª‡∫î‡ªÄ‡∫ä‡∫µ‡∫ç%s\n\n\nLaotian Keyword search: ‡∫ß‡∫±‡∫ô‡∫û‡∫±‡∫Å on Lao Official Gazette i.e. 2018 Official Calendar"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1214",
        "title": "Missing: Victoria Day (Nova Scotia, Canada)",
        "count": 3,
        "turns": [
            "Looks like most provinces in https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/canada.py have Victoria Day listed.\nVictoria Day is also celebrated here in Nova Scotia but there is no reference in the _add_subdiv_ns_holidays function.",
            "I'm afraid that isn't the case according to RCC:\n\nNova Scotia: Despite provincial tradition, Victoria Day is not a statutory holiday nor is it a retail closing day. This creates confusion in the province as many Nova Scotia businesses close for Victoria Day and some even provide their employees with a paid day off. Yet, under the law, retailers are free to open on this day and employees do not have the right to refuse to work.",
            "Hi @program-the-brain-not-the-heartbeat,\ncould you provide some additional information or references to look into in order to confirm the claim?\nThank you!",
            "Sorry for the delay, my apologies. It is a non-statutory holiday.\nWasn't sure if this library considers non-statutory holidays as holidays or not."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1202",
        "title": "Add Iran holidays",
        "count": 8,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Iran\nhttps://www.timeanddate.com/holidays/iran/",
            "Hi @arkid15r\nThis is a list of Iranian holidays (en-IR),\nBased on the official document:\nhttps://calendar.ut.ac.ir/Fa/News/Data/Doc/Calendar%201402.pdf\nUsed Google Calendar translation:\nhttps://calendar.google.com/calendar/embed?src=en.ir%23holiday%40group.v.calendar.google.com\nhttps://calendar.google.com/calendar/ical/en.ir%23holiday%40group.v.calendar.google.com/public/basic.ics\n\n\n\n#\nTitle\nDay\nMonth\nCalendar\n\n\n\n\n1\nRevolution Day\n2\n11\nGregorian\n\n\n2\nOil   Nationalization Day\n3\n20\nGregorian\n\n\n3\nNorooz (Persian New Year)\n3\n21\nGregorian\n\n\n4\nNorooz   Holiday\n3\n22\nGregorian\n\n\n5\nNorooz Holiday\n3\n23\nGregorian\n\n\n6\nNorooz   Holiday\n3\n24\nGregorian\n\n\n7\nIslamic Republic Day\n4\n1\nGregorian\n\n\n8\nNature   Day\n4\n2\nGregorian\n\n\n9\nDemise of Imam Khomeini\n6\n4\nGregorian\n\n\n10\nKhordad   National Uprising\n6\n5\nGregorian\n\n\n11\nTassoua\n1\n9\nIslamic\n\n\n12\nAshura\n1\n10\nIslamic\n\n\n13\nArbaeen\n2\n20\nIslamic\n\n\n14\nDemise   of Prophet Muhammad and Martyrdom of Imam Hassan\n2\n28\nIslamic\n\n\n15\nMartyrdom of Imam Reza\n2\n29\nIslamic\n\n\n16\nMartyrdom   of Imam Hasan al-Askari\n3\n8\nIslamic\n\n\n17\nBirthday of Prophet Muhammad and   Imam Sadeq\n3\n17\nIslamic\n\n\n18\nMartyrdom   of Hazrat Fatima\n6\n3\nIslamic\n\n\n19\nBirthday of Imam Ali and   Father's Day\n7\n13\nIslamic\n\n\n20\nProphet's   Ascension\n7\n27\nIslamic\n\n\n21\nImam Mahdi's birthday\n8\n15\nIslamic\n\n\n22\nMartyrdom of Imam Ali\n9\n21\nIslamic\n\n\n23\nEid-e-Fetr (End of Ramadan)\n10\n1\nIslamic\n\n\n24\nEid-e-Fetr   (Additional Holiday)\n10\n2\nIslamic\n\n\n25\nMartyrdom of Imam Sadeq\n10\n25\nIslamic\n\n\n26\nEid-e-Ghorban   (Feast of Sacrifice)\n12\n10\nIslamic\n\n\n27\nEid-e-Ghadir\n12\n18\nIslamic\n\n\n\n(Download JSON version: fa-IR.json)",
            "Thanks for sharing this @xmha97!",
            "Thanks for sharing this @xmha97!\n\n@arkid15r You're welcome.\nBut note that some events in Iran are based on the Gregorian calendar and others are based on the Islamic calendar.",
            "In addition, can I add events of Iran in Persian language (fa-IR)?\nI haven't used your library yet and I don't know if it has language capability or not.",
            "But note that some events in Iran are based on the Gregorian calendar and others are based on the Islamic calendar.\n\nYeah, that's fine. We have countries that use multiple calendars for their holidays.\n\nIn addition, can I add events of Iran in Persian language (fa-IR)?\nI haven't used your library yet and I don't know if it has language capability or not.\n\nYes, it's possible to localize holiday names. The original holiday names should (preferably) be in country's official language which I believe fa_IR actually is.",
            "Yes, it's possible to localize holiday names.\n\nThis is great. üëç\nIn what format should I send events? I need a template.\nDo you agree with posting a comment on this issue?",
            "Normally, when a person volunteers to add a new country holidays support it goes straight to the library code of the new country (see #1168 as one of the most recent examples). If a country support has already been implemented the l10n process requires regular .po files like this one. You can find some additional info here.\nPosting the original holiday names here would of course be appreciated but does not guaranty adding them to the python-holidays until somebody implements the code.\nI hope I interpreted your questions correctly.",
            "Implemented in #1409"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1200",
        "title": "TypeError: object.__init__() takes exactly one argument (the instance to initialize)",
        "count": 3,
        "turns": [
            "When using the latest version of the holidays, getting the following error.\nFile \"/usr/local/airflow/.local/lib/python3.7/site-packages/prophet/hdays.py\", line 683, in <module> class TU(Turkey): File \"/usr/local/airflow/.local/lib/python3.7/site-packages/holidays/registry.py\", line 178, in __init__ super().__init__(*args, **kwargs) TypeError: object.__init__() takes exactly one argument (the instance to initialize)\nPlease help someone to fix this issue in the holidays module",
            "+1 -  v0.25 does't work for me, but v0.24 was OK.",
            "+1 Holidays v0.24 worked for me - fixed the prophet issue",
            "This was addressed in #1208\nPlease use v0.24 as a workaround or let me know if you need help w/ class inheritance migration."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1193",
        "title": "Add Guatemala holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Guatemala\nhttps://www.timeanddate.com/holidays/guatemala/",
            "Implemented in https://github.com/dr-prodigy/python-holidays/pull/1364"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1191",
        "title": "Add Ghana holidays",
        "count": 3,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Ghana\nhttps://www.timeanddate.com/holidays/ghana/\nhttps://www.mint.gov.gh/statutory-public-holidays/\nhttps://www.bog.gov.gh/official-holidays/",
            "I can pick this up if it's still available",
            "Hi @JerryAgbesi, assigning this to you\nThank you!",
            "@JerryAgbesi this has been merged into beta!\nThanks a lot for your contribution and the efforts to address the PR review comments!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1189",
        "title": "Add Gabon holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Gabon\nhttps://www.timeanddate.com/holidays/gabon/",
            "Implemented in #1244."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1188",
        "title": "Error being emitted by holidays==0.25",
        "count": 3,
        "turns": [
            "Just had pytest tests in a pipeline start emitting an error culminating in:\n../../anaconda3/envs/dp_env_new/lib/python3.8/site-packages/holidays/registry.py:178: in init\nsuper().init(*args, **kwargs)\nE   TypeError: object.init() takes exactly one argument (the instance to initialize)\nThe error goes away if I force holidays==0.24 (holidays was being installed as a dependency of prophet==1.1).  The pipeline is using Python 3.8.",
            "Hi @rdunlap-inspire11,\nthanks for reporting this.\nPlease see facebook/prophet#2431",
            "same issue is occurring with greykite import as well when running\nfrom greykite.framework.templates.forecaster import Forecaster",
            "The corresponding prophet issue has been resolved.\nClosing this.\n\nsame issue is occurring with greykite import as well when running from greykite.framework.templates.forecaster import Forecaster\n\nIf the issue had been caused by prophet was also fixed (prophet v1.1.3)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1187",
        "title": "Update README.rst: consider merging available and localized country tables",
        "count": 1,
        "turns": [
            "The default / supported languages can be integrated into \"Available countries\" table.\n// based on @KJhellico's idea",
            "Implemented in https://github.com/dr-prodigy/python-holidays/pull/1241"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1177",
        "title": "Add El Salvador holidays",
        "count": 1,
        "turns": [
            "Links:\n\nhttps://www.timeanddate.com/holidays/el-salvador/\nhttps://www.officeholidays.com/countries/el-salvador/2022",
            "Implemented in #1198."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1163",
        "title": "Add Chad holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Chad\nhttps://www.timeanddate.com/holidays/chad/",
            "Implemented in #1279."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1161",
        "title": "Add Cameroon holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Cameroon\nhttps://www.timeanddate.com/holidays/cameroon/",
            "Implemented in #1243."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1160",
        "title": "Add Cambodia holidays",
        "count": 3,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Cambodia\nhttps://www.nbc.gov.kh/english/news_and_events/official_holiday.php\nhttps://www.timeanddate.com/holidays/cambodia/",
            "I'll try to tackle this myself later (as well as Laos) - considering the fact that their Buddhist calendar are the same as Thailand's",
            "Additional source: https://mef.gov.kh/calendar-2021/ got official calendars for cross-checking from 2020-2023 though their 2020 ones has yet to accounted for Covid-19 postponements.",
            "Resolved in #1294"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1158",
        "title": "Add Burkina Faso holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Burkina_Faso\nhttps://www.timeanddate.com/holidays/burkina-faso/",
            "Implemented in #1278."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1157",
        "title": "Add Brunei Darussalam holidays",
        "count": 3,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Brunei\nhttps://www.timeanddate.com/holidays/brunei/",
            "I'm working on this at the moment, though I've yet to find the relevant legal clause on in-lieu holidays being observed on the following Saturday and Monday if they fall on Friday and Sunday yet based on ASEAN's 2022 and 2023 calendar.\nOther sources I'm working with right now (Wikipedia didn't cite any sources, so it's hardly usable):\n\nBrunei's Ministry of Labour website\nSpecific Clause on Employment Order, 2009\n\nThat and the Armed Forces Day despite being a public holiday, are not covered in Employment Order, 2009.",
            "Gonna move the to-do codes here for possible #1168 extensions should anyone be up for it:\n# Former Holidays\n# This section is here should we extend our calendar coverage later on.\n\n# Good Friday\n# Good Friday\n# Status: No longer observed post-Independence.\n\n# Freedom Day\n# Hari Kebebasan\n# Status: No longer observed.\n# Commemorating the landing of the Allies in Muara to liberate Brunei\n#   on June 10, 1945. Presumed to be observed from 1946-1983.\n\n# Queen Elizabeth II's Birthday\n# Hari Lahir Queen\n# Status: No longer observed.\n# Observed on June, 12 from 1952-1983.\n\n# Sultan Omar Ali Saifuddien III's Birthday\n# Hari Lahir Duli Yang Maha Mulia\n# Status: No longer observed.\n# Observed on September, 23 from 1950-1967.\n\n# Safar Bath\n# Mandi Safar\n# Status: No longer observed.\n# Observed on last Wednesday on the month of Safar until around 1963.",
            "Implemented in #1168."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1154",
        "title": "Add Belize holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Belize\nhttps://www.pressoffice.gov.bz/public-and-bank-holidays-2022-updated/\nhttps://www.timeanddate.com/holidays/belize/",
            "Implemented in #1181."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1153",
        "title": "Add Barbados holidays",
        "count": 35,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Barbados\nhttps://www.timeanddate.com/holidays/barbados/",
            "Assign to me please, I'd like to help out.  Possibly even with more.",
            "@arjunanan6 you got it.\nThank you!",
            "@arkid15r Pretty much done here, but I can't commit.. I get a lot of errors relating to the pre-checks:\n[INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1689880665-42063.\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...........................................(no files to check)Skipped\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Failed\n- hook id: trailing-whitespace\n- exit code: 1\n- files were modified by this hook\n\nFixing tests/countries/test_barbados.py\n\nblack....................................................................Failed\n- hook id: black\n- files were modified by this hook\n\nreformatted holidays/countries/barbados.py\n\nAll done! ‚ú® üç∞ ‚ú®\n1 file reformatted, 1 file left unchanged.\n\nflake8...................................................................Failed\n- hook id: flake8\n- exit code: 1\n\nholidays/countries/barbados.py:66:100: E501 line too long (110 > 99 characters)\n\nisort....................................................................Failed\n- hook id: isort\n- files were modified by this hook\n\nFixing /Users/arjun/Documents/git/python-holidays/holidays/countries/barbados.py\n\nmypy.....................................................................Passed\nrst ``code`` is two backticks........................(no files to check)Skipped\nrstcheck.............................................(no files to check)Skipped\ntox-ini-fmt..........................................(no files to check)Skipped\nsetup-cfg-fmt........................................(no files to check)Skipped\n[WARNING] Stashed changes conflicted with hook auto-fixes... Rolling back fixes...\n\nAny idea what's happening here? I believe I set up everything according to the contributor's guide.",
            "Issue is with: make l10n",
            "@arjunanan6 try to run make pre-commit, this should fix these errors.",
            "@KJhellico Thanks. make pre-commit goes through without a hitch, but when I push my changes it once again fails at \"run tests\":\nrun tests................................................................Failed\n- hook id: tests\n- exit code: 2\n\nmake l10n\nmake[1]: Entering directory 'C:/Users/arjun/Documents/git/python-holidays'\nscripts/l10n/generate_po_files.py >/dev/null 2>&1\nmake[1]: *** [Makefile:27: l10n] Error 1\nmake[1]: Leaving directory 'C:/Users/arjun/Documents/git/python-holidays'\nmake: *** [Makefile:15: check] Error 2",
            "The pre-commit runs make check (includes make l10n, make pre-commit, make doc, and make test) command via pre-commit/pre-push hooks.\nIt seems the problem is w/ scripts/l10n/generate_po_files.py. Its output is suppressed when running via make l10n\nCould you run scripts/l10n/generate_po_files.py directly for (hopefully) more descriptive error message?\nA link to your exported code branch could also help to troubleshoot it.\nMy guess is that .po files have some unresolved conflicts (or malformated in some other way).",
            "A link to your exported code branch could also help to troubleshoot it.\n\nI can't commit as it stands, so can't even get the branch pushed. :(\nI just ran scripts/l10n/generate_po_files.py and this is the output:\nTraceback (most recent call last):\n  File \"C:\\Users\\arjun\\Documents\\git\\python-holidays\\scripts\\l10n\\generate_po_files.py\", line 111, in <module>\n    POGenerator.run()\n  File \"C:\\Users\\arjun\\Documents\\git\\python-holidays\\scripts\\l10n\\generate_po_files.py\", line 107, in run\n    POGenerator().process_countries()\n  File \"C:\\Users\\arjun\\Documents\\git\\python-holidays\\scripts\\l10n\\generate_po_files.py\", line 73, in process_countries\n    create_pot_file(\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1130, in __call__\n    return self.main(*args, **kwargs)\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1055, in main\n    rv = self.invoke(ctx)\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 1404, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\click\\core.py\", line 760, in invoke\n    return __callback(*args, **kwargs)\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\lingua\\extract.py\", line 426, in main\n    for message in extractor(real_filename, extractor_options):\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\lingua\\extractors\\python.py\", line 415, in __call__\n    return parser(token_stream, options, filename, lineno)\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\lingua\\extractors\\python.py\", line 187, in __call__\n    for (token_type, token, location, _) in token_stream:\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\lingua\\extractors\\python.py\", line 162, in next\n    token = self._transform(next(self.queue))\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\tokenize.py\", line 452, in _tokenize\n    line = readline()\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\lingua\\extractors\\python.py\", line 122, in __call__\n    line = self.readline()\n  File \"C:\\Users\\arjun\\AppData\\Local\\Programs\\Python\\Python310\\lib\\encodings\\cp1252.py\", line 23, in decode\n    return codecs.charmap_decode(input,self.errors,decoding_table)[0]\nUnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 2954: character maps to <undefined>",
            "I've tried this out on my win. machine by the way, on my mac it gives me all the errors from my first comment. I tried out the same files on win. where it reports just this issue with l10n.",
            "On Windows, localization process is currently problematic. If you want to try this on Win, to solve encoding problem, you need to set environment variable:\nset PYTHONUTF8=1\n(and better to delete holidays\\locale\\pot\\*.* files, if any exist). So it's easier to try it on Mac, if you can.\n\non my mac it gives me all the errors from my first comment\n\nIt's pre-commit hook output. These errors were fixed by make pre-commit. Now try to run scripts/l10n/generate_po_files.py there, on Mac. What will it show?",
            "I ran scripts/l10n/generate_po_files.py now on my mac and it outputs:\nNo changes found - not replacing holidays/locale/pot/AM.pot\nNo changes found - not replacing holidays/locale/pot/AR.pot\nNo changes found - not replacing holidays/locale/pot/AW.pot\nNo changes found - not replacing holidays/locale/pot/BA.pot\nNo translatable strings found, aborting",
            "And this is the output of make pre-commit from the mac:\npre-commit run --all-files\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...............................................................Passed\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Passed\nblack....................................................................Passed\nflake8...................................................................Passed\nisort....................................................................Passed\nmypy.....................................................................Failed\n- hook id: mypy\n- exit code: 1\n\nscripts/generate_release_notes.py:82: error: Module has no attribute \"BooleanOptionalAction\"  [attr-defined]\nFound 1 error in 1 file (checked 314 source files)\n\nrst ``code`` is two backticks............................................Passed\nrstcheck.................................................................Passed\ntox-ini-fmt..............................................................Passed\nsetup-cfg-fmt............................................................Passed\nmake: *** [pre-commit] Error 1",
            "I ran scripts/l10n/generate_po_files.py now on my mac and it outputs:\n\nTry to delete holidays/locale/pot/*.pot files first.\n\nscripts/generate_release_notes.py:82: error: Module has no attribute \"BooleanOptionalAction\"  [attr-defined]\n\nWhat's your Python version? This argparse option was added in 3.9. @arkid15r , looks like we have a bit of an inconsistency here üôÑ",
            "Deleted *.pot files as suggested, but I am not really seeing a difference. My python version is 3.8.5.",
            "Do you think upgrading to 3.9 will help? I have no problems doing that.",
            "Yes, try with 3.9 minimum.",
            "scripts/generate_release_notes.py:82: error: Module has no attribute \"BooleanOptionalAction\"  [attr-defined]\nWhat's your Python version? This argparse option was added in 3.9. @arkid15r , looks like we have a bit of an inconsistency here üôÑ\n\n\nYeah, I guess # type: ignore[attr-defined] should be added to L82. It's not a big deal as the script is for internal purposes, but you're right, we should address that.\n@arjunanan6 either that or upgrade to python 3.9 should help.",
            "So I am now using python 3.11.1 and have set up a new venv and ran make setup.\nFollowing that, I ran make pre-commit which outputs:\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...............................................................Passed\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Passed\nblack....................................................................Passed\nflake8...................................................................Passed\nisort....................................................................Passed\nmypy.....................................................................Passed\nrst ``code`` is two backticks............................................Passed\nrstcheck.................................................................Passed\ntox-ini-fmt..............................................................Passed\nsetup-cfg-fmt............................................................Passed\n\nHowever, if I were to commit something after that, it is back to the same situation as before:\n% git commit -m \"Add Barbados holidays\"\n[WARNING] Unstaged files detected.\n[INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1690020648-79795.\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...........................................(no files to check)Skipped\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Failed\n- hook id: trailing-whitespace\n- exit code: 1\n- files were modified by this hook\n\nFixing tests/countries/test_barbados.py\n\nblack....................................................................Failed\n- hook id: black\n- files were modified by this hook\n\nreformatted holidays/countries/barbados.py\n\nAll done! ‚ú® üç∞ ‚ú®\n1 file reformatted, 1 file left unchanged.\n\nflake8...................................................................Failed\n- hook id: flake8\n- exit code: 1\n\nholidays/countries/barbados.py:66:100: E501 line too long (110 > 99 characters)\n\nisort....................................................................Failed\n- hook id: isort\n- files were modified by this hook\n\nFixing /Users/arjun/Documents/git/python-holidays/holidays/countries/barbados.py\n\nmypy.....................................................................Passed\nrst ``code`` is two backticks........................(no files to check)Skipped\nrstcheck.............................................(no files to check)Skipped\ntox-ini-fmt..........................................(no files to check)Skipped\nsetup-cfg-fmt........................................(no files to check)Skipped\n[WARNING] Stashed changes conflicted with hook auto-fixes... Rolling back fixes...\n\nI'm at a loss :/",
            "> [WARNING] Unstaged files detected.\n> [INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1690020648-79795.\n\nMaybe you have unstaged changes made by pre-commit? Try to look with git status and add them with git add if necessary.",
            "Oh damn, that was it. Such a silly mistake! I can now run commit, however, when I push..:\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...........................................(no files to check)Skipped\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Passed\nblack....................................................................Passed\nflake8...................................................................Passed\nisort....................................................................Passed\nmypy.....................................................................Passed\nrst ``code`` is two backticks........................(no files to check)Skipped\nrstcheck.............................................(no files to check)Skipped\ntox-ini-fmt..........................................(no files to check)Skipped\nsetup-cfg-fmt........................................(no files to check)Skipped\nrun tests................................................................Failed\n- hook id: tests\n- exit code: 2\n\nmake l10n\nscripts/l10n/generate_po_files.py >/dev/null 2>&1\nmake[1]: *** [l10n] Error 2\nmake: *** [check] Error 2\n\nerror: failed to push some refs to 'github.com:arjunanan6/python-holidays.git'\n\nI can however run generate_po_files.py on its own without any errors.",
            "> run tests................................................................Failed\n> - hook id: tests\n> - exit code: 2\n\nRun make test, you should see errors.",
            "I ran make test now, and indeed, I missed out on a doc change. That''s fixed, and make test runs without errors now. However, I am still getting an error when pushing:\ncheck python ast.........................................................Passed\ncheck builtin type constructor use.......................................Passed\ncheck yaml...........................................(no files to check)Skipped\nfix end of files.........................................................Passed\nfix python encoding pragma...............................................Passed\nmixed line ending........................................................Passed\ntrim trailing whitespace.................................................Passed\nblack....................................................................Passed\nflake8...................................................................Passed\nisort....................................................................Passed\nmypy.....................................................................Passed\nrst ``code`` is two backticks............................................Passed\nrstcheck.................................................................Passed\ntox-ini-fmt..........................................(no files to check)Skipped\nsetup-cfg-fmt........................................(no files to check)Skipped\nrun tests................................................................Failed\n- hook id: tests\n- exit code: 2\n\nmake l10n\nscripts/l10n/generate_po_files.py >/dev/null 2>&1\nmake[1]: *** [l10n] Error 2\nmake: *** [check] Error 2\n\nerror: failed to push some refs to 'github.com:arjunanan6/python-holidays.git'\n\nTruncated output from make test:\n1852 passed in 32.50s",
            "scripts/l10n/generate_po_files.py executed without errors? And scripts/l10n/generate_mo_files.py too?",
            "Yes, both of those execute without any errors.",
            "As I understand, the issue is with \tmake l10n. I can run make pre-commit just fine. But if run make l10n, I get this:\nscripts/l10n/generate_po_files.py >/dev/null 2>&1\nmake: *** [l10n] Error 2\n\nAnd there's no problem executing scripts/l10n/generate_mo_files.py or scripts/l10n/generate_po_files.py.",
            "Well, that doesn't make too much sense to me as make l10 is just an alias for running those 2 script consequently (see https://github.com/vacanza/python-holidays/blob/master/Makefile#L26).\nDoes make l10 command fail when you run it explicitly?\nAs this is just a local hook you should be able to suppress it w/ --no-verify flag and export your code. This would simplify the troubleshooting process a lot.\nI hope this would work for you.",
            "Does make l10 command fail when you run it explicitly?\n\nIt does, weirdly. I've looked at the Makefile and figured out what it does, but I can't seem to figure out why the two scripts execute individually, but not when run with make l10.\nAnyway, I've pushed the changes with --no-verify. Thanks a lot for your support and patience!",
            "That's a great progress! Thanks for getting it done, Arjun.\nI'd think of it as a part of the process. I bet you already have or will learn something new during your work on this PR :)",
            "Absolutely, and it was a great experience.\nSorry, I've made it against the master branch and not beta. Fixing that now and I will send in the new PR! :)",
            "@arkid15r Sorry, I might need your help again, I've made a PR in the 'right' way, but it looks like it still wants to go to master rather than beta.\nI've forked this repo and cloned my fork, switched to the beta branch and then made my own branch. Should do the trick normally. Or did I miss something?",
            "You can select target branch when creating PR on Github",
            "I changed the branch to beta :)",
            "Nice, thank you! :)\nI will keep that in mind for next time.",
            "I suppose this one can be closed now @arkid15r.",
            "That's right, I'll take care of it.\nIt hasn't been auto-closed after the merge as beta isn't the default branch (may be revisited soon).\nImplemented by @arjunanan6 in #1393"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1152",
        "title": "Add Bahamas holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_Bahamas\nhttps://www.timeanddate.com/holidays/bahamas/",
            "Ironically enough, none of the government site got usable data except for https://www.bahamashclondon.net/consular-information/public-holidays/, but that was for 2020.\nWith some random resort got better formatted sources (but still only on par to Wikipedia): https://tainobeach.com/amenities/grand-bahama-island/holidays/\nEdit: nvm, found it - thank god ILO source exists: https://www.ilo.org/dyn/travail/docs/1204/PublicHolidaysAct_1.pdf"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1145",
        "title": "Add Algeria holidays",
        "count": 1,
        "turns": [
            "Useful links:\n\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Algeria\nhttps://www.timeanddate.com/holidays/algeria/",
            "Implemented in #1176"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1138",
        "title": "Add a list_all_countries_with_translations() function?",
        "count": 5,
        "turns": [
            "Dear python-holiday devs,\nFirst of all, thank you very much for this very useful library and for all the hard work you put in it! üëè\nThat said, I'd love if there could be an option to get a list of the countries that have at least one translation (and also get the languages they're translated into).\nI'm testing a function I've written, which at first sight seems to be working, but I haven't thoroughly checked it. I assume stuff (explained in the pydocs for the function) that just might be wrong.\nIf you happen to find some time and feel like it, would you mind taking a quick look at it?\ndef list_all_countries_with_translations() -> Dict[str, List[Optional[str]]]:\n    \"\"\"\n    Recursively search for all .po files in python-holidays's locale dir.\n    Assume the filename is the country code the parent's parent dir is the language.\n\n    The structure looks like this:\n\n    holidays/locale/{lang}/LC_MESSAGES/{country_code}.po\n\n    Returns a dict whose keys are the country_codes and whose values are the list of\n    languages that are available for that country.\n\n    Beware that countries without any translation won't have their key present in\n    the resulting dictionary.\n    \"\"\"\n    module_dir = os.path.dirname(os.path.abspath(holidays.__file__))\n    locale_dir = os.path.join(module_dir, 'locale')\n    country_codes = {}\n    for root, dirs, files in os.walk(locale_dir):\n        for file in files:\n            if file.endswith('.po'):\n                country_code = re.sub(r'(.*)\\.po', r'\\1', file)\n                lang = os.path.basename(os.path.dirname(root))\n                country_codes.setdefault(country_code, []).append(lang)\n    return dict(sorted(country_codes.items()))\nIf you like the idea, and feel like adding it to holidays, please feel free to do so. If not, it doesn't really bother me having it somewhere in my python code. I am just not sure if my assumptions are correct.\nP.D.- As to why I'd like to have something like this. I was looking for an ICS URL for the city I live in so that I could subscribe to it. And just couldn't find it, which brought me to trying to generate one. Which brought me to your lib. And it worked great! Then I thought I might as well just export all ICS files and publish them. So I ended up creating a super simple GitLab page[1] so that I can set my calendar apps to update from there periodically ü§∑\nHoly Moly Days!\nAnd I though I could add the translations whenever available... üòä",
            "Hi @juanitobananas, thanks for your request!\nThis is totally valid idea that should be implemented as our l10n approach has been in place for a while and seems to be working fine. We could reuse the code you kindly provided (or similar, depending on the implementation details) to close https://github.com/dr-prodigy/python-holidays/issues/984 as well.\nI guess these are the parts of PH you might find useful:\n\nhttps://github.com/dr-prodigy/python-holidays/blob/master/holidays/holiday_base.py#L291\nhttps://github.com/dr-prodigy/python-holidays/blob/master/scripts/l10n/generate_mo_files.py#L25\n\nor just wait until the utils::list_localized_countries() is implemented.\nYour project looks great and the name is lit üî•",
            "Hey @arkid15r, thanks for getting back to me that fast!\n\nThis is totally valid idea that should be implemented as our l10n approach has been in place for a while and seems to be working fine.\n\nNice!\n\nWe could reuse the code you kindly provided (or similar, depending on the implementation details) to close https://github.com/dr-prodigy/python-holidays/issues/984 as well.\n\nIf it's worth anything, please do so üòÑ\n\nI guess these are the parts of PH you might find useful:\n\nhttps://github.com/dr-prodigy/python-holidays/blob/master/holidays/holiday_base.py#L291\nhttps://github.com/dr-prodigy/python-holidays/blob/master/scripts/l10n/generate_mo_files.py#L25\n\nThanks, I'll take a closer look at that.\n\nor just wait until the utils::list_localized_countries() is implemented.\n\nAnd will most probably still wait for this. For the moment, my code seems to work. Well enough for the (very probably) sole user üòâ\nAgain, thank you very much!\nCheers",
            "Okay, the #1185 with utils::list_localized_countries()has just been merged into beta.",
            "Beautiful! Thank you so much for that!\nI haven't had time to test it out until now. And I had completely forgotten how everything worked. Fortunately, I can just use it as a drop-in replacement of my own code üòâ\nThank you so much again!",
            "Sure!\nThanks for the suggestion @juanitobananas, it was quite valuable üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1135",
        "title": "Add pre-calculated data for Korean lunar calendar",
        "count": 1,
        "turns": [
            "Similar to https://github.com/dr-prodigy/python-holidays/pull/1090 and https://github.com/dr-prodigy/python-holidays/pull/1104 we need to apply the approach  to use cases of the korean-lunar-calendar.",
            "Implemented in #1148."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=3&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1127",
        "title": "ImportError after updating to newer version",
        "count": 2,
        "turns": [
            "I updated from holidays==0.11.1 to 0.23 and got the following error\nException has occurred: ImportError       (note: full exception trace is shown but execution is paused at: _run_module_as_main)\ncannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura' (d:\\workspace\\cerox\\venv\\lib\\site-packages\\hijri_converter\\ummalqura.py)\n\nI installed hijri-converter==2.3.1 manually to fix it.\nI propose to add a constraint to the version of hijri-converter in setup.cfg\nmay be related to #425",
            "I believe that's a pip cache issue. When the hijri-converter package is required without a version specifier, the pip tends to install a cached version, which could be missing new features used.\nTo solve this temporarily, run pip install -U hijri-converter.\nHowever, as you said, a compatible version should be specified in setup.cfg.",
            "This dependency is no longer in use for the recent PH version(s).\nPlease upgrade if possible.\nThank for reporting this."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1124",
        "title": "Add pre-calculated holidays scripts",
        "count": 3,
        "turns": [
            "The documentation part need some attention. The docstring has to include some information on how these dates have been generated so next time we could try this process to extend the date list.\n\nI have a script for this class code generation. Probably, it should be added in scripts/.\nOriginally posted by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1090#discussion_r1172628892",
            "It seems that dependencies need to be updated too.",
            "It'd be great to update the script with the changes related to the latest calendars data migrations!",
            "Closed by #1128, #1219, #1222."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1123",
        "title": "Depend on hijridate rather than hijri-converter",
        "count": 3,
        "turns": [
            "Greetings holidays maintainers! Thanks for making working with the world's holidays in Python fast and flexible.\nI see that hijri-converter has been deprecated and hijridate is the recommended dependency to take. Are there plans to migrate to hijridate in the near future?",
            "Hi @metrizable, thanks for the question!\nLet me share a link to this PR first.\nWe'll make sure the mentioned deprecation doesn't affect PH.\nThank you for bringing our attention to this!",
            "Currently, both packages hijri-coverter and hijridate are fully compatible except for the name, which only requires replacement.\nAdditionally, to avoid breaking changes or issues such as #1127 in the future, I highly recommend specifying the required version to a compatible version, e.g. hijridate~=2.3.0",
            "hijridate is now a source for estimated Islamic holidays.\nThank you!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1107",
        "title": "Time span performance",
        "count": 4,
        "turns": [
            "Firstly, thank you for producing a great library! This tool is invaluable!\nProblem\nWas curious if the following performance characteristics are expected, or if there is scope to enhance lazy loading?\nIn [1]: import holidays\n\nIn [2]: %timeit holidays.country_holidays(\"GB\", years=range(2000, 2100))\n2.14 ms ¬± 4.18 ms per loop (mean ¬± std. dev. of 7 runs, 10 loops each)\nVs manually querying each year. For my use case, I would prefer to be able query holidays lazily (for a given year), vs eagerly loading a given time period.\nIn [3]: def manual():\n    ...:     for year in range(2000, 2100):\n    ...:         holidays.country_holidays(\"GB\", years=year)\n\nIn [4]: %timeit manual()\n11.1 ms ¬± 993 ¬µs per loop (mean ¬± std. dev. of 7 runs, 10 loops each)",
            "Hi,\nthank you for your appreciation in our lib :-)\nI hope I'm catching it right, but in fact, in python_holidays' standard usage you shouldn't definitely need to pre-initialize a year range.\nHere's a sample code to check a date, as taken from here:\nfrom datetime import date\nimport holidays\n\nus_holidays = holidays.US()  # this is a dict\ndate(2015, 1, 1) in us_holidays  # True\n\nAs you can see, it is sufficient to check presence of a specific date in a holidays dict to have it initialized for that year.\nDoes this answer your question?",
            "Hello,\nThank you for you reply,\nIt looks like %timeit may have been disguising some caching\nIn [1]: def manual():\n    ...:     for i in range(2000, 2100):\n    ...:         holidays.country_holidays(\"GB\", years=i)\n    ...: \n\nIn [2]: %time _ = manual()\nCPU times: user 183 ms, sys: 8.08 ms, total: 191 ms\nWall time: 193 ms\n\nIn [3]: %time _ =  holidays.country_holidays(\"GB\", years=range(2000, 2100))\nCPU times: user 124 ms, sys: 0 ns, total: 124 ms\nWall time: 123 ms",
            "Happy to close üëç",
            "Thank you!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1083",
        "title": "Add dependency requirements tests",
        "count": 1,
        "turns": [
            "The test should make sure that README.rst reflects dependency requirements properly for each country.",
            "Closing as obsolete (https://github.com/dr-prodigy/python-holidays/pull/889 has been closed w/o merging)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1066",
        "title": "Revisit black/isort config settings",
        "count": 1,
        "turns": [
            "I always had this issue too on Windows (with Python 3.11). Just check on Ubuntu (with Python 3.8) - the same, isort splits a long multiline import string into two shorter ones. With isort 5.12.0 (latest from https://github.com/pycqa/isort) - the same.\n.pre-commit-config.yaml\n# holidays/countries/__init__.py is excluded due to imports being in\n# relevance order vs. alphabetical one.\n# tests/countries/test_united_states_virgin_islands.py is excluded due\n# to a bug whereby black and isort don't agree and enter into an\n# infinite fix loop.\n# TODO remove this exclusion when isort and black play nice again.\n            \nOriginally posted by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1049#discussion_r1154347452",
            "Resolved by https://github.com/dr-prodigy/python-holidays/pull/1297"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1040",
        "title": "TypeError: Invalid input types when passing years=np.array() (only for CL?)",
        "count": 1,
        "turns": [
            "I just encountered this error when trying to build up a bunch of holidays for different countries:\n>>> import holidays\n>>> import numpy as np\n>>> holidays.CL(years=np.array([2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029]))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/mark/.local/lib/python3.8/site-packages/holidays/holiday_base.py\", line 318, in __init__\n    self._populate(year)\n  File \"/home/mark/.local/lib/python3.8/site-packages/holidays/countries/chile.py\", line 113, in _populate\n    epoch = Sun.get_equinox_solstice(year, target=\"summer\")\n  File \"/home/mark/.local/lib/python3.8/site-packages/pymeeus/Sun.py\", line 503, in get_equinox_solstice\n    raise TypeError(\"Invalid input types\")\n>>> holidays.UK(years=np.array([2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029]))\n{datetime.date(2020, 1, 1): \"New Year's Day\", datetime.date(2020, 4, 10): 'Good Friday', datetime.date(20... etc\nI guess the pymeeus library is expecting a plain int rather than numpy.int64 which is why it's choking on my input.\nIt's straightforward to workaround (I'll just use a regular Python list for my dates!) but just seemed strange that the other countries I tried were OK (guess they arent hitting this particular code path) - but also happy enough if you want to close this as \"WONTFIX\".\nI also guess you're using lrucache or similar too for the call to the pymeeus library, because once I've got my dates using a regular list, I can get the dates using a numpy array (this made me doubt my sanity as I starting writing this issue!):\n>>> holidays.CL(years=np.array([2020, 2021]))\n{datetime.date(2020, 1, 1): \"New Year's Day\", datetime.date(2020, 4, 10): 'Good Friday', datetime.date(20... etc\nEDIT: source of the issue is passing the np.int64 to the Epoch constructor here, which I guess could be wrapped in an int() cast, but feels a little icky.\n>>> from pymeeus.Epoch import Epoch\n>>> Epoch(1)\nEpoch(1.0)\n>>> import numpy as np\n>>> Epoch(np.int64(1))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/mark/.local/lib/python3.8/site-packages/pymeeus/Epoch.py\", line 199, in __init__\n    self.set(*args, **kwargs)  # Use 'set()' method to handle the setup\n  File \"/home/mark/.local/lib/python3.8/site-packages/pymeeus/Epoch.py\", line 351, in set\n    raise TypeError(\"Invalid input type\")\nTypeError: Invalid input type\n>>> Epoch(int(np.int64(1)))\nEpoch(1.0)",
            "It seems you've figured out how to make that right!\nI can only add that you may experience similar behavior for JP as well."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1022",
        "title": "Question: python way to get list of all supported countries",
        "count": 2,
        "turns": [
            "Hello !\nI have a strong interest in this library and I was wondering whether there is a way to get a list of all supported countries ?\nThanks in advance !",
            "Hello @laurent-brisbois! There is a function list_supported_countries() for this purpose. For example:\nimport holidays\ncountries = holidays.list_supported_countries()",
            "@KJhellico\nOk thanks and sorry, I didn't see it while browsing the repo !\nPerfect üëå !"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1010",
        "title": "This one also is no more a holiday in Ukraine",
        "count": 1,
        "turns": [
            "https://github.com/dr-prodigy/python-holidays/blob/d4cfc391d1562f33f8be9fd692c85a97544786ad/holidays/countries/ukraine.py#L187",
            "Look at the date trigger again: @foxtrot-dfm1\n        # USSR Constitution day\n        name = self.tr(\"–î–µ–Ω—å –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü—ñ—ó –°–†–°–†\")\n        if 1981 <= year <= 1990:\n            self[date(year, OCT, 7)] = name\n        elif 1937 <= year <= 1980:\n            self[date(year, DEC, 5)] = name"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1009",
        "title": "I am sure that is not more a holiday in Ukraine",
        "count": 2,
        "turns": [
            "https://github.com/dr-prodigy/python-holidays/blob/d4cfc391d1562f33f8be9fd692c85a97544786ad/holidays/locale/uk/LC_MESSAGES/UA.po#L86",
            "It's there for historical coverage with date trigger for pre-2000:\n        # October Revolution\n        if year <= 1999:\n            name = self.tr(\n                \"–†—ñ—á–Ω–∏—Ü—è –í–µ–ª–∏–∫–æ—ó –ñ–æ–≤—Ç–Ω–µ–≤–æ—ó —Å–æ—Ü—ñ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≤–æ–ª—é—Ü—ñ—ó\"\n            )\n            _add_with_observed(date(year, NOV, 7), name, days=2)\n            _add_with_observed(date(year, NOV, 8), name, days=2)",
            "It's there for historical coverage with date trigger for pre-2000:\n        # October Revolution\n        if year <= 1999:\n            name = self.tr(\n                \"–†—ñ—á–Ω–∏—Ü—è –í–µ–ª–∏–∫–æ—ó –ñ–æ–≤—Ç–Ω–µ–≤–æ—ó —Å–æ—Ü—ñ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≤–æ–ª—é—Ü—ñ—ó\"\n            )\n            _add_with_observed(date(year, NOV, 7), name, days=2)\n            _add_with_observed(date(year, NOV, 8), name, days=2)\n\nOkay thanks for explaining"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1008",
        "title": "Update MANIFEST.in",
        "count": 1,
        "turns": [
            "Clean up and make sure sdist contains all needed files.",
            "Fixed in https://github.com/dr-prodigy/python-holidays/pull/1028"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1007",
        "title": "Add NYSE years coverage",
        "count": 1,
        "turns": [
            "Add all financials 1950-2050 test coverage.",
            "Resolved by #1061"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1005",
        "title": "\"RuntimeError: Set changed size during iteration\" in version 0.20",
        "count": 1,
        "turns": [
            "Hello, I would like to report a bug when doing the following:\nholidays.financial_holidays('NYSE', years=2020)\nIt will give  RuntimeError: Set changed size during iteration in version 0.20\nI reverted to version 0.19 and it works again, tested on miniconda3 on win server.",
            "HI @lunarflint,\nthanks for reporting this!\nThe good news is that the issue has already been addressed in https://github.com/dr-prodigy/python-holidays/pull/1000\nYou might be interested in using beta (0.21)\npip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/beta\nI hope to release the 0.21 today."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/998",
        "title": "Maximize load performance ",
        "count": 9,
        "turns": [
            "We advertise this library as \"fast, efficient\", and is performance or memory footprint affected by loading every single class for every single country (that's 360+ classes) even when the user needs holidays only for a single country, which I assume this to be 90%+ of use cases, or just a few countries? What about on small footprints (e.g. Raspberry Pi)? I would assume so, but am not very familiar with Python innards.\nIf so, are there architectures that we can implement to maximize load performance especially when only one (or a few) countries are needed?\nOriginally posted by @mborsetti in https://github.com/dr-prodigy/python-holidays/issues/948#issuecomment-1432382359",
            "Some thoughts\n\nWe're importing a ton of alpha-3 codes, and nowhere in the documentation we say we support them. I don't really see a reason why we should support them (they are superfluous to the alpha-2 codes that are very familiar due to their use as TLDs); maybe it's a good time to start deprecating the existing alpha-3 codes (and stop adding them when new countries are added)?\nDo we even want a long-form nonstandard for countries, which also opens ourselves up to discussions on political issues such as whether the class for HK should be HongKong vs. HongKongSAR (the latter being closer to the official name), CN be China vs. PeoplesRepublicOfChina and on and on?\nI also found IRL that finding a class called \"HongKong\" (\"HongKongSAR\"?) or \"Eswatini\" or similar in the debugger is very confusing -- Eswatini what? What is the Eswatini or China or whatever object supposed to be? We should consider calling the base class in the format of HolidaysHK, HolidaysSZ, etc. to make it very clear when debugging what is the function of an object of this class.\n\nI can (slowly) work on all of this if there's interest.",
            "I have found this issue because I'm profiling a project's startup time (as per this blog post), and holidays is one of the slower-to-import libraries. It takes 56ms on my machine, most of which is indeed wasted on loading countries which the project doesn't need.\nHere's a profile:\n\npython -X importtime -c 'import holidays'\n\nimport time: self [us] | cumulative | imported package\nimport time:       268 |        268 |   _io\nimport time:        40 |         40 |   marshal\nimport time:       539 |        539 |   posix\nimport time:       586 |       1430 | _frozen_importlib_external\nimport time:       198 |        198 |   time\nimport time:       142 |        340 | zipimport\nimport time:        94 |         94 |     _codecs\nimport time:       493 |        587 |   codecs\nimport time:       908 |        908 |   encodings.aliases\nimport time:      1493 |       2987 | encodings\nimport time:       365 |        365 | encodings.utf_8\nimport time:       293 |        293 | _signal\nimport time:        48 |         48 |     _abc\nimport time:       260 |        308 |   abc\nimport time:       358 |        666 | io\nimport time:        64 |         64 |       _stat\nimport time:       114 |        178 |     stat\nimport time:       944 |        944 |     _collections_abc\nimport time:        18 |         18 |       genericpath\nimport time:        40 |         58 |     posixpath\nimport time:       271 |       1449 |   os\nimport time:        36 |         36 |   _sitebuiltins\nimport time:      1174 |       1174 |   _distutils_hack\nimport time:       238 |        238 |   types\nimport time:       211 |        211 |       warnings\nimport time:       123 |        333 |     importlib\nimport time:       199 |        199 |     importlib._abc\nimport time:        74 |         74 |         itertools\nimport time:        78 |         78 |         keyword\nimport time:        48 |         48 |           _operator\nimport time:       217 |        264 |         operator\nimport time:       112 |        112 |         reprlib\nimport time:        82 |         82 |         _collections\nimport time:       771 |       1380 |       collections\nimport time:        85 |         85 |         _functools\nimport time:      1065 |       1150 |       functools\nimport time:       710 |       3239 |     contextlib\nimport time:       135 |       3904 |   importlib.util\nimport time:        69 |         69 |   importlib.machinery\nimport time:        66 |         66 |   sitecustomize\nimport time:     11430 |      18363 | site\nimport time:       193 |        193 |   holidays.constants\nimport time:       196 |        196 |         math\nimport time:       177 |        177 |         _datetime\nimport time:      1205 |       1578 |       datetime\nimport time:        91 |         91 |           dateutil._version\nimport time:       147 |        238 |         dateutil\nimport time:       131 |        368 |       dateutil.easter\nimport time:       159 |        159 |           collections.abc\nimport time:      1070 |       1070 |             enum\nimport time:        44 |         44 |               _sre\nimport time:       175 |        175 |                 re._constants\nimport time:       458 |        633 |               re._parser\nimport time:        69 |         69 |               re._casefix\nimport time:       249 |        993 |             re._compiler\nimport time:       144 |        144 |             copyreg\nimport time:       402 |       2607 |           re\nimport time:       109 |        109 |           _typing\nimport time:      1881 |       4755 |         typing\nimport time:        98 |         98 |               _bisect\nimport time:        97 |        195 |             bisect\nimport time:        61 |         61 |             hijri_converter.helpers\nimport time:      1125 |       1125 |             hijri_converter.locales\nimport time:       178 |        178 |             hijri_converter.ummalqura\nimport time:       260 |       1817 |           hijri_converter.convert\nimport time:       143 |       1960 |         hijri_converter\nimport time:       277 |       6991 |       holidays.calendars\nimport time:       137 |        137 |             _weakrefset\nimport time:       381 |        517 |           weakref\nimport time:        47 |         47 |               org\nimport time:        16 |         63 |             org.python\nimport time:         9 |         71 |           org.python.core\nimport time:       156 |        743 |         copy\nimport time:        62 |         62 |             _locale\nimport time:      3489 |       3550 |           locale\nimport time:       389 |       3939 |         calendar\nimport time:       617 |        617 |         gettext\nimport time:        94 |         94 |           fnmatch\nimport time:        59 |         59 |             _winapi\nimport time:        41 |         41 |             nt\nimport time:        35 |         35 |             nt\nimport time:        32 |         32 |             nt\nimport time:        51 |         51 |             nt\nimport time:       167 |        167 |             nt\nimport time:       134 |        516 |           ntpath\nimport time:        42 |         42 |           errno\nimport time:        85 |         85 |             urllib\nimport time:       993 |       1077 |           urllib.parse\nimport time:       616 |       2345 |         pathlib\nimport time:       116 |        116 |             __future__\nimport time:        20 |         20 |               _string\nimport time:       470 |        490 |             string\nimport time:       164 |        164 |                 _struct\nimport time:       141 |        304 |               struct\nimport time:       730 |       1033 |             six\nimport time:       223 |        223 |                 numbers\nimport time:       514 |        737 |               _decimal\nimport time:        88 |        824 |             decimal\nimport time:       616 |        616 |               dateutil._common\nimport time:       187 |        802 |             dateutil.relativedelta\nimport time:        24 |         24 |                 six.moves\nimport time:       140 |        140 |                 dateutil.tz._common\nimport time:       140 |        140 |                 dateutil.tz._factories\nimport time:        18 |         18 |                   six.moves.winreg\nimport time:       185 |        203 |                 dateutil.tz.win\nimport time:       849 |       1355 |               dateutil.tz.tz\nimport time:       118 |       1472 |             dateutil.tz\nimport time:       752 |       5487 |           dateutil.parser._parser\nimport time:       236 |        236 |           dateutil.parser.isoparser\nimport time:       258 |       5980 |         dateutil.parser\nimport time:       706 |      14327 |       holidays.holiday_base\nimport time:       377 |      23638 |     holidays.countries.albania\nimport time:       212 |        212 |       holidays.countries.united_states\nimport time:       160 |        372 |     holidays.countries.american_samoa\nimport time:       113 |        113 |     holidays.countries.andorra\nimport time:       165 |        165 |     holidays.countries.angola\nimport time:       335 |        335 |     holidays.countries.argentina\nimport time:       103 |        103 |     holidays.countries.armenia\nimport time:       210 |        210 |     holidays.countries.aruba\nimport time:       122 |        122 |     holidays.countries.australia\nimport time:       112 |        112 |     holidays.countries.austria\nimport time:       136 |        136 |     holidays.countries.azerbaijan\nimport time:       108 |        108 |     holidays.countries.bahrain\nimport time:        82 |         82 |     holidays.countries.bangladesh\nimport time:       329 |        329 |     holidays.countries.belarus\nimport time:       127 |        127 |     holidays.countries.belgium\nimport time:       136 |        136 |     holidays.countries.bolivia\nimport time:       150 |        150 |     holidays.countries.bosnia_and_herzegovina\nimport time:       124 |        124 |     holidays.countries.botswana\nimport time:       125 |        125 |     holidays.countries.brazil\nimport time:       117 |        117 |     holidays.countries.bulgaria\nimport time:       112 |        112 |     holidays.countries.burundi\nimport time:       164 |        164 |     holidays.countries.canada\nimport time:       122 |        122 |         pymeeus\nimport time:        74 |         74 |         pymeeus.base\nimport time:       261 |        261 |         pymeeus.Angle\nimport time:       502 |        959 |       pymeeus.Epoch\nimport time:       139 |        139 |           pymeeus.Interpolation\nimport time:       569 |        707 |         pymeeus.Coordinates\nimport time:      1136 |       1136 |         pymeeus.Earth\nimport time:       190 |       2031 |       pymeeus.Sun\nimport time:       328 |        328 |           sysconfig\nimport time:       476 |        476 |           _sysconfigdata__linux_aarch64-linux-gnu\nimport time:      1204 |       2007 |         zoneinfo._tzpath\nimport time:       843 |        843 |         zoneinfo._common\nimport time:       133 |        133 |         _zoneinfo\nimport time:       423 |       3405 |       zoneinfo\nimport time:       234 |       6627 |     holidays.countries.chile\nimport time:       106 |        106 |     holidays.countries.china\nimport time:       125 |        125 |     holidays.countries.colombia\nimport time:        87 |         87 |     holidays.countries.croatia\nimport time:        91 |         91 |     holidays.countries.cuba\nimport time:       104 |        104 |     holidays.countries.curacao\nimport time:        80 |         80 |     holidays.countries.cyprus\nimport time:        99 |         99 |     holidays.countries.czechia\nimport time:        83 |         83 |     holidays.countries.denmark\nimport time:       107 |        107 |     holidays.countries.djibouti\nimport time:       489 |        489 |     holidays.countries.dominican_republic\nimport time:        98 |         98 |     holidays.countries.egypt\nimport time:       107 |        107 |     holidays.countries.estonia\nimport time:       100 |        100 |     holidays.countries.eswatini\nimport time:       175 |        175 |     holidays.countries.ethiopia\nimport time:       143 |        143 |     holidays.countries.finland\nimport time:       137 |        137 |     holidays.countries.france\nimport time:       113 |        113 |     holidays.countries.georgia\nimport time:       126 |        126 |     holidays.countries.germany\nimport time:       199 |        199 |     holidays.countries.greece\nimport time:       184 |        184 |     holidays.countries.guam\nimport time:       133 |        133 |     holidays.countries.honduras\nimport time:       141 |        141 |     holidays.countries.hongkong\nimport time:       186 |        186 |     holidays.countries.hungary\nimport time:       124 |        124 |     holidays.countries.iceland\nimport time:       117 |        117 |     holidays.countries.india\nimport time:       196 |        196 |     holidays.countries.indonesia\nimport time:       149 |        149 |     holidays.countries.ireland\nimport time:       180 |        180 |       holidays.countries.united_kingdom\nimport time:       107 |        286 |     holidays.countries.isle_of_man\nimport time:        94 |         94 |             convertdate.utils\nimport time:       160 |        253 |           convertdate.gregorian\nimport time:        65 |         65 |           convertdate.julian\nimport time:       154 |        471 |         convertdate.armenian\nimport time:        89 |         89 |         convertdate.bahai\nimport time:        58 |         58 |         convertdate.coptic\nimport time:        56 |         56 |           convertdate.julianday\nimport time:       114 |        170 |         convertdate.daycount\nimport time:        46 |         46 |         convertdate.dublin\nimport time:        74 |         74 |             convertdate.data\nimport time:       169 |        243 |           convertdate.data.french_republican_days\nimport time:        99 |        342 |         convertdate.french_republican\nimport time:        95 |         95 |         convertdate.hebrew\nimport time:        78 |         78 |           convertdate.islamic\nimport time:       203 |        280 |         convertdate.holidays\nimport time:        83 |         83 |         convertdate.indian_civil\nimport time:       129 |        129 |         convertdate.iso\nimport time:       122 |        122 |         convertdate.mayan\nimport time:        92 |         92 |         convertdate.persian\nimport time:       505 |        505 |           convertdate.data.positivist\nimport time:        94 |        598 |         convertdate.positivist\nimport time:        62 |         62 |         convertdate.ordinal\nimport time:       326 |       2956 |       convertdate\nimport time:       132 |       3088 |     holidays.countries.israel\nimport time:       164 |        164 |     holidays.countries.italy\nimport time:        80 |         80 |     holidays.countries.jamaica\nimport time:       236 |        236 |     holidays.countries.japan\nimport time:        84 |         84 |     holidays.countries.kazakhstan\nimport time:       101 |        101 |     holidays.countries.kenya\nimport time:        87 |         87 |     holidays.countries.kyrgyzstan\nimport time:        87 |         87 |     holidays.countries.latvia\nimport time:        88 |         88 |     holidays.countries.lesotho\nimport time:        93 |         93 |     holidays.countries.liechtenstein\nimport time:        74 |         74 |     holidays.countries.lithuania\nimport time:       101 |        101 |     holidays.countries.luxembourg\nimport time:        71 |         71 |     holidays.countries.madagascar\nimport time:        70 |         70 |     holidays.countries.malawi\nimport time:       235 |        235 |     holidays.countries.malaysia\nimport time:        75 |         75 |     holidays.countries.malta\nimport time:       110 |        110 |     holidays.countries.marshall_islands\nimport time:        64 |         64 |     holidays.countries.mexico\nimport time:        85 |         85 |     holidays.countries.moldova\nimport time:       123 |        123 |     holidays.countries.monaco\nimport time:        87 |         87 |     holidays.countries.montenegro\nimport time:        80 |         80 |     holidays.countries.morocco\nimport time:        86 |         86 |     holidays.countries.mozambique\nimport time:        87 |         87 |     holidays.countries.namibia\nimport time:        92 |         92 |     holidays.countries.netherlands\nimport time:       121 |        121 |     holidays.countries.new_zealand\nimport time:       100 |        100 |     holidays.countries.nicaragua\nimport time:       104 |        104 |     holidays.countries.nigeria\nimport time:        83 |         83 |     holidays.countries.north_macedonia\nimport time:        86 |         86 |     holidays.countries.northern_mariana_islands\nimport time:        97 |         97 |           _heapq\nimport time:       152 |        248 |         heapq\nimport time:       371 |        619 |       dateutil.rrule\nimport time:       108 |        726 |     holidays.countries.norway\nimport time:       169 |        169 |     holidays.countries.pakistan\nimport time:        70 |         70 |     holidays.countries.panama\nimport time:        80 |         80 |     holidays.countries.paraguay\nimport time:        83 |         83 |     holidays.countries.peru\nimport time:        71 |         71 |     holidays.countries.philippines\nimport time:       223 |        223 |     holidays.countries.poland\nimport time:       190 |        190 |     holidays.countries.portugal\nimport time:       148 |        148 |     holidays.countries.puerto_rico\nimport time:       110 |        110 |     holidays.countries.romania\nimport time:       105 |        105 |     holidays.countries.russia\nimport time:        98 |         98 |     holidays.countries.san_marino\nimport time:       110 |        110 |     holidays.countries.saudi_arabia\nimport time:        93 |         93 |     holidays.countries.serbia\nimport time:       288 |        288 |     holidays.countries.singapore\nimport time:        87 |         87 |     holidays.countries.slovakia\nimport time:       114 |        114 |     holidays.countries.slovenia\nimport time:        89 |         89 |     holidays.countries.south_africa\nimport time:       214 |        214 |         korean_lunar_calendar.korean_lunar_calendar\nimport time:       120 |        333 |       korean_lunar_calendar\nimport time:       164 |        497 |     holidays.countries.south_korea\nimport time:       178 |        178 |     holidays.countries.spain\nimport time:       134 |        134 |     holidays.countries.sweden\nimport time:        90 |         90 |     holidays.countries.switzerland\nimport time:        92 |         92 |     holidays.countries.taiwan\nimport time:       520 |        520 |     holidays.countries.thailand\nimport time:       123 |        123 |     holidays.countries.tunisia\nimport time:       152 |        152 |     holidays.countries.turkey\nimport time:       148 |        148 |     holidays.countries.ukraine\nimport time:        88 |         88 |     holidays.countries.united_arab_emirates\nimport time:       110 |        110 |     holidays.countries.united_states_minor_outlying_islands\nimport time:        92 |         92 |     holidays.countries.united_states_virgin_islands\nimport time:       160 |        160 |     holidays.countries.uruguay\nimport time:       102 |        102 |     holidays.countries.uzbekistan\nimport time:        76 |         76 |     holidays.countries.vatican_city\nimport time:        70 |         70 |     holidays.countries.venezuela\nimport time:       176 |        176 |     holidays.countries.vietnam\nimport time:       122 |        122 |     holidays.countries.zambia\nimport time:        81 |         81 |     holidays.countries.zimbabwe\nimport time:      1783 |      51229 |   holidays.countries\nimport time:       110 |        110 |     holidays.financial.european_central_bank\nimport time:       125 |        125 |     holidays.financial.ny_stock_exchange\nimport time:       109 |        343 |   holidays.financial\nimport time:        47 |         47 |         _ast\nimport time:       856 |        902 |       ast\nimport time:        93 |         93 |           _opcode\nimport time:       220 |        312 |         opcode\nimport time:       549 |        861 |       dis\nimport time:        90 |         90 |           token\nimport time:       578 |        668 |         tokenize\nimport time:       112 |        780 |       linecache\nimport time:      1343 |       3885 |     inspect\nimport time:       174 |       4058 |   holidays.utils\nimport time:       581 |      56402 | holidays\n\n\nLazy-loading these modules would be the biggest win for speed, I think. This may involve moving some attributes like the alpha codes into a centralized dictionary, rather than pulling them from the classes, since you want to avoid importing the class until requested.",
            "I can (slowly) work on all of this if there's interest.\n\n@arkid15r Any interest?  We'd probably be looking at a transition architecture with deprecation followed by a much faster v1.0.",
            "@arkid15r Any interest? We'd probably be looking at a transition architecture with deprecation followed by a much faster v1.0.\n\nHey Mike, absolutely!\nThis idea is great! The library performance is the second highest priority for us. I didn't look into any implementation details yet and at this point I can only see potential compatibility issues that could be a show stopper for this. I'm looking forward to seeing any early stage PR(s) or PoC code to discuss specifics.\nThank you!\n// @adamchainz I appreciate your input too!",
            "Hey Mike, absolutely! This idea is great! The library performance is the second highest priority for us. I didn't look into any implementation details yet and at this point I can only see potential compatibility issues that could be a show stopper for this. I'm looking forward to seeing any early stage PR(s) or PoC code to discuss specifics.\n\nHi Arkadii, I think I found a way to solve all three issues simply and elegantly ,and still be backwards compatible. However, I hit an undocumented function argument, which you added; can you please see my comments in https://github.com/dr-prodigy/python-holidays/pull/878?",
            "Hey Mike, that sounds promising! I'm eager to see your solution!\nI replied to your comments for #878, let me know if you still have questions.",
            "The v0.25 with the lazy loading implementation has just been released.",
            "üëç Thank you for doing this.\npython -X importtime -c 'import holidays' now shows 29ms for me, compared to 56ms before. A 27ms saving, and most of the time is now in Python standard library modules.",
            "Thanks for your input and the feedback @adamchainz"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/984",
        "title": "Add README supported languages tests",
        "count": 1,
        "turns": [
            "Make sure the table gets updated when a new language is added.",
            "Added in https://github.com/dr-prodigy/python-holidays/pull/1241"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/976",
        "title": "Update Mexico holidays",
        "count": 1,
        "turns": [
            "According to this official document from the Mexico government (https://www.gob.mx/profedet/articulos/sabes-cuales-son-los-dias-de-descanso-obligatorios-163134?idiom=es) (in Spanish) New Year's and Independence Day are not re-calculated even if they happen on a weekend day\nFrom the list in the doc, holidays should be:\n\nJanuary 1st\nFebruary 5th, or the first Monday in February\nMarch 21st, or the third Monday in March\nMay 1st\nSeptember 16th\nNovember 20th, or the third Monday in November\nEvery 6 years, December 1st, corresponding to Change of Federal Government\nDecember 25th\n\nI've created a Pull Request #977 trying to help update these, but I'm not sure how to fix the tests, so I'd appreciate it if you could take a look.\nThanks!",
            "https://github.com/dr-prodigy/python-holidays/pull/980 has been merged into v0.21 beta.\nThank you for making python-holidays better!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/958",
        "title": "Invalid multibyte sequence error on make l10n",
        "count": 4,
        "turns": [
            "A bit minor note: I did try switching to having Thai text as default based on this PR, and the issue still persists when using make l10n as you can see below:\nholidays/locale/pot/TH.pot:53: warning: The following msgid contains non-ASCII characters.\n                                        This will cause problems to translators who use a character encoding\n                                        different from yours. Consider using a pure ASCII msgid instead.\n                                        ‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏û‡∏¥‡∏ò‡∏µ‡∏â‡∏•‡∏≠‡∏á‡∏™‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ñ‡∏£‡∏ö 60 ‡∏õ‡∏µ ‡∏û.‡∏®. 2549\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nholidays/locale/pot/TH.pot:53: invalid multibyte sequence\nWith this in mind, I'm considering continuing my approach on #946 instead, but will switch around the test cases to generate our desired result of having th as default and en_US as supported.\nOriginally posted by @PPsyrius in https://github.com/dr-prodigy/python-holidays/issues/955#issuecomment-1434250465",
            "Hey @PPsyrius,\ncould you share your code - I'll try to reproduce the error and fix it.",
            "@arkid15r Sure, here's the version of the code I used https://github.com/PPsyrius/python-holidays/tree/955_thailand_i18n_support",
            "@arkid15r Found solution to this now, turns out on top of adding blank files, headers are also needed so that the reader would accept UTF-8 charset:\nHere's one of the examples that finally get the script working for me:\nTH.po\n# Thailand holidays English translation.\n# Authors: PPsyrius <ppsyrius@ppsyrius.dev>, (c) 2023.\n#\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: Python Holidays 0.20\\n\"\n\"POT-Creation-Date: 2023-02-19 14:03+0700\\n\"\n\"PO-Revision-Date: \\n\"\n\"Last-Translator: PPsyrius <ppsyrius@ppsyrius.dev>\\n\"\n\"Language-Team: Python Holidays Translation Team\\n\"\n\"Language: en_US\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\nThis issue can be closed down, IMO.",
            "Hey @PPsyrius,\nit's great you figured that out without my help!\nJust FYI the misformatted .po file hadn't been included into https://github.com/PPsyrius/python-holidays/tree/955_thailand_i18n_support when I looked into it.\nAnyway, it seems the error had to do with this specific header \"Content-Type: text/plain; charset=UTF-8\\n\" absence.\nClosing this out."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/957",
        "title": "Add non-observed holidays tests support",
        "count": 1,
        "turns": [
            "Introduce TestCase::assertNoObservedHoliday(s)",
            "Implemented in https://github.com/dr-prodigy/python-holidays/pull/979"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/931",
        "title": "Missing holidays in Spain",
        "count": 7,
        "turns": [
            "Hi,\nHoliday Easter Monday (10th of April) is missing in the CT subdivision in Spain.\nThanks,",
            "Seems to be fixed in #902. Please, check with beta version, if you can.",
            "Looks good in v0.20\nWhen will be released?",
            "Looks good in v0.20 When will be released?\n\nIt's my plan to release it within the next 2 weeks (pessimistic ETA -- by end of this month)",
            "ok, thanks a lot!",
            "Hi, is this fix included in 0.21.13? Today is being shown as a working day to me.",
            "Hi, @cdeharo! Yes, it was included in 0.20. I've just checked:\n>>> import holidays\n>>> ct = holidays.ES(subdiv=\"CT\")\n>>> ct[\"2023-04-10\"]\n'Lunes de Pascua'\n>>> holidays.__version__\n'0.20'\n\nSame with 0.21.13.",
            "Hi, is this fix included in 0.21.13? Today is being shown as a working day to me.\n\nHI @cdeharo,\nthe issue was resolved in v0.20 and closed by the OP.\nPlease open a new ticket if you're still experiencing holidays inconsistency."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/919",
        "title": "Ireland - St Bridget's Day",
        "count": 1,
        "turns": [
            "I believe that the implementation of St Bridget's Day in Ireland is incorrect.\nThe code (ireland.py) marks 1st February as a \"holiday\", and 6th February as the Observed Holiday (2023).\n1st February is the saints day but is not the Holiday. The 6th February is the Holiday (1st Monday in February), unless the 1st falls on a Friday.\nI believe that this is the code change required:\ndiff --git a/holidays/countries/ireland.py b/holidays/countries/ireland.py\n@@ -39,9 +39,10 @@ class Ireland(HolidayBase):\n         if year >= 2023:\n             name = \"St. Brigid's Day\"\n             dt = date(year, FEB, 1)\n-            self[dt] = name\n-            if self.observed and dt.weekday() != FRI:\n-                self[dt + rd(weekday=MO)] = name + \" (Observed)\"\n+            if dt.weekday() == FRI:\n+                self[dt] = name\n+            else:\n+                self[dt + rd(weekday=MO)] = name",
            "Sorry - I see I duplicated #917 - closing"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/918",
        "title": "Version 0.19 throws ImportError on hijri_converter.ummalqura",
        "count": 2,
        "turns": [
            "I have just upgraded to python-holidays 0.19 and have no restrictions on hijri_converter in my venv requirements, but holidays is now throwing an ImportError:\ncannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura'\n\nIt happens in holidays/utils.py:28. hijri_converter, as installed by pip, is on this version:\n# pip freeze | grep hijri\nhijri-converter==2.1.1\n\n... looking at their repo they're on 2.2.4.",
            "Hi @inputvalidation, thanks for bringing this up.\nI tried to reproduce the error:\nvirtualenv venv && source venv/bin/activate\n\ncreated virtual environment CPython3.9.12.final.0-64 in 157ms\ncreator CPython3Posix(dest=/Users/ark/Dev/ph-test/venv, clear=False, no_vcs_ignore=False, global=False)\nseeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/ark/Library/Application Support/virtualenv)\nadded seed packages: pip==22.3.1, setuptools==65.6.3, wheel==0.38.4\nactivators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n\npip install holidays==0.19\n\nCollecting holidays==0.19\nUsing cached holidays-0.19-py3-none-any.whl (208 kB)\nCollecting korean-lunar-calendar\nUsing cached korean_lunar_calendar-0.3.1-py3-none-any.whl (9.0 kB)\nCollecting convertdate>=2.3.0\nUsing cached convertdate-2.4.0-py3-none-any.whl (47 kB)\nCollecting hijri-converter\nUsing cached hijri_converter-2.2.4-py3-none-any.whl (14 kB)\nCollecting PyMeeus\nUsing cached PyMeeus-0.5.12-py3-none-any.whl\nCollecting python-dateutil\nUsing cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\nCollecting six>=1.5\nUsing cached six-1.16.0-py2.py3-none-any.whl (11 kB)\nInstalling collected packages: PyMeeus, korean-lunar-calendar, six, hijri-converter, convertdate, python-dateutil, holidays\nSuccessfully installed PyMeeus-0.5.12 convertdate-2.4.0 hijri-converter-2.2.4 holidays-0.19 korean-lunar-calendar-0.3.1 python-dateutil-2.8.2 six-1.16.0\n\npython -c \"from holidays import utils\" worked fine.\nThen I pinned hijri-converter to 2.1.1\npip freeze\n\nconvertdate==2.4.0\nhijri-converter==2.1.1\nholidays==0.19\nkorean-lunar-calendar==0.3.1\nPyMeeus==0.5.12\npython-dateutil==2.8.2\nsix==1.16.0\n\nand successfully reproduced the error message\npython -c \"from holidays import utils\"\n\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/init.py\", line 13, in \nfrom holidays.countries import *\nFile \"/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/countries/init.py\", line 12, in \nfrom .albania import AL, ALB, Albania\nFile \"/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/countries/albania.py\", line 20, in \nfrom holidays.utils import _islamic_to_gre\nFile \"/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/utils.py\", line 28, in \nfrom hijri_converter.ummalqura import GREGORIAN_RANGE\nImportError: cannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura' (/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/hijri_converter/ummalqura.py)\n\nSo a workaround would be pip install -U hijri-converter.\nA permanent fix may require setting specific versions for python-holidays dependencies (we'll look into this option).\nPlease let me know if you have questions/suggestion regarding this issue.\nThank you!",
            "Closing this out. Please let me know if you need additional assistance with the issue."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/917",
        "title": "February Bank Holiday in Ireland calculated wrong",
        "count": 2,
        "turns": [
            "Today -1st February - is incorrectly marked as a holiday in Ireland.\nThe bank holiday this year is on the 6th - the first Monday of the month.\nIt should only be marked as a bank holiday on the 1st if the day is a Friday.\nhttps://www.irishcentral.com/roots/st-brigids-day-traditions",
            "I agree.\nThe code (ireland.py) marks 1st February as a \"holiday\", and 6th February as the Observed Holiday (2023).\n1st February is the saints day but is not the Holiday. The 6th February is the Holiday (1st Monday in February), unless the 1st falls on a Friday.\nI believe that this is the code change required:\ndiff --git a/holidays/countries/ireland.py b/holidays/countries/ireland.py\n@@ -39,9 +39,10 @@ class Ireland(HolidayBase):\n         if year >= 2023:\n             name = \"St. Brigid's Day\"\n             dt = date(year, FEB, 1)\n-            self[dt] = name\n-            if self.observed and dt.weekday() != FRI:\n-                self[dt + rd(weekday=MO)] = name + \" (Observed)\"\n+            if dt.weekday() == FRI:\n+                self[dt] = name\n+            else:\n+                self[dt + rd(weekday=MO)] = name",
            "Updated in https://github.com/dr-prodigy/python-holidays/pull/953\nThank you!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/907",
        "title": "Holidays in Panam√°",
        "count": 2,
        "turns": [
            "Hi there!\nI'm very thankful for this project, it had really helped me :)\nI did not find the Panam√° holidays list, so I've been wondering if you have an special format to add a new country or is it a different process?\nI've read the contributing guidelines but I am not sure if this applies to this kind of request.",
            "Hi @Afroefras,\nthere is no special process for adding new country to python-holidays (PH). The contribution guidelines cover general approach for any PH contribution (new country, bug fix, tests, chores, etc).\nIf you're interested in adding a new country into PH you may find similar examples of recently accepted PRs here:\n\nhttps://github.com/dr-prodigy/python-holidays/pull/888\nhttps://github.com/dr-prodigy/python-holidays/pull/877\nhttps://github.com/dr-prodigy/python-holidays/pull/875\n\nLet me know if you need further assistance or have any questions.",
            "Hey @Afroefras, Panama holidays support PR has been merged into beta.\n@KJhellico went ahead and implemented it.\nClosing this out."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=4&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/905",
        "title": "Streamline PRs creation process",
        "count": 1,
        "turns": [
            "Introduce a PR template with basic checkboxes, pre-filled blocks, useful info for first-time contributors.",
            "Closing as completed for now."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/885",
        "title": "Today (2022/01/02) is not holiday in Madrid (province: MD), Spain",
        "count": 3,
        "turns": [
            "Hi, the workday_sensor is returning Off, holiday today January 2 for Madrid (MD), Spain. That's wrong. Today is working day.",
            "Hello, also Spain (ES) and Autonomous community: CT (Catalonia), January 2 is a working day.",
            "Seems it resolved by #902",
            "The fix was merged into beta. Closing this out.\n@ifajardoj, @flipdream  thank you for bringing this up!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/873",
        "title": "Multiple holidays delimiter",
        "count": 1,
        "turns": [
            "Now we use comma (,) as delimiter when several holidays fall on the same date. But some countries have holidays with comma in name (BR, BG, LT, TR). For these cases get_list() function does not work correctly. We need to global change delimiter symbol (e.g. to semicolon) or introduce something like self.delimiter and change it for these countries.",
            "Thanks for reporting this issue @KJhellico!\nThe fix has been merged into beta."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/843",
        "title": "TestCase::parse_argument ignoring HolidayBase instance",
        "count": 3,
        "turns": [
            "I unfortunately had to revert this PR with #842, due to a failing test on an observed holiday (2012-01-03).\nCould you please review and provide a fix for that @KJhellico ?\nThx as usual! üëç\nOriginally posted by @dr-prodigy in https://github.com/dr-prodigy/python-holidays/issues/829#issuecomment-1350118826",
            "@dr-prodigy, now I need to repeat Kazakhstan PR?",
            "@dr-prodigy, now I need to repeat Kazakhstan PR?\nNope @KJhellico it seems #844 fixed the issue (thx @arkid15r !), so I will try to re-apply your Kazakhstan update.. pls hold on, thx both üëç",
            "All done and working properly.. closing, thx üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/838",
        "title": "South Africa new public holiday 27th December 2022",
        "count": 2,
        "turns": [
            "27th of December is a public holiday in South Africa\nProof:\nhttps://www.gov.za/speeches/president-cyril-ramaphosa-declares-27-december-public-holiday-8-dec-2022-0000\nSouth Africans will enjoy Tuesday, 27 December 2022, as a public holiday in lieu of Christmas Day falling on a Sunday.\nThis doesn't seem to be updated in the current holidays db.  Can it be added?\nimport holidays #Version (0.17.2)\nsa_holidays =  holidays.country_holidays('ZA')\n'2022-12-27' in sa_holidays\nFalse",
            "Have created a pull request with the change\nhttps://github.com/dr-prodigy/python-holidays/pull/839",
            "Fixed in beta with #848 .. closing this, thank you! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/814",
        "title": "Add Bahrain holidays",
        "count": 1,
        "turns": [
            "To track BH holidays adding process (requested by @taljishi in #813).\nSome sources:\n\nhttps://www.cbb.gov.bh/official-bank-holidays/\nhttps://www.officeholidays.com/countries/bahrain/2022\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Bahrain",
            "Implemented in https://github.com/dr-prodigy/python-holidays/pull/888"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/808",
        "title": "Countrycode LI for Liechtenstein not working in HA",
        "count": 5,
        "turns": [
            "When i put in the Countrycode for Liechtenstein \"LI\" Home Assistant says the configuration is not valid.\n\"Invalid config for [binary_sensor.workday]: Country is not supported. for dictionary value @ data['country']. Got 'LI'. (See ?, line ?). \"\nIf i change it to Switzerland (CH) or Germany (DE) it is valid and works.",
            "Hi @MartinR80 ,\nunfortunately this doesn't seem to be related to python_holidays, as you can check from here:\n>>> import holidays\n>>> import datetime\n>>> x = holidays.country_holidays('LI')\n>>> x\nholidays.country_holidays('LI')\n>>> datetime.date(2022,1,1) in x\nTrue\n>>> x\n{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}\n>>> x = holidays.LI()\n>>> datetime.date(2022,1,1) in x\nTrue\n>>> x\n{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}\n>>> x = holidays.Liechtenstein()\n>>> datetime.date(2022,1,1) in x\nTrue\n>>> x\n{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}\n\nNo clues about why it is not working on Home Assistant, but in case you have no other evidences to shed light on a possible issue on python_holidays side, I suggest you to report this to the HA project.\nGood luck üëç",
            "Thanks for your quick replay and the info. Ill check with HA then.",
            "Thanks for your quick replay and the info. Ill check with HA then.\n\nHey @MartinR80,\nIt does look like an HA issue so far. The LI support was added not very long time ago. Could be just an old version issue. I'll add more details later after looking into it.",
            "The issue should be fixed in HA soon - home-assistant/core#82799.",
            "Yep.. caused by outdated (0.16) holidays dependency.\n@MartinR80 even if HA is probably about to release a fix for this, you still can manually upgrade holidays yourself to the latest version (0.17) to get support for Liechtenstein prior to that fix.\nThis said I'm closing this.. cheers everyone üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/793",
        "title": "DeprecationWarning upon \"import holidays\" in version 0.17",
        "count": 9,
        "turns": [
            "The implementation of deprecating the Swaziland calendar contains a bug. Just importing the holidays package is enough to fire the DeprecationWarning.\nSteps to reproduce (in bash):\n# Setup\npython -m venv demo\nsource demo/bin/activate\npip install --upgrade pip\n\n# Bad version\npip install holidays==0.17\n\n# Expose bug\npython -W error::DeprecationWarning -c 'import holidays'\n\n# Workoround\npip uninstall -y holidays\npip install holidays!=0.17\npython -W error::DeprecationWarning -c 'import holidays'\n\n# Cleanup\ndeactivate\nrm -rf demo\nExpected behavior:\nThe DeprecationWarning should only fire when the user constructs an instance of the Swaziland or a subclass.",
            "HI @walkerh,\nthanks for the detailed issue explanation!\nMy understanding is that the root cause of the problem is not the deprecation warning itself but the way you're treating them with -W error::DeprecationWarning options. What is your use-case for turning the warning into an exception?\nWhile I can help \"fixing\" the issue in this particular case with Swaziland there is no guarantee that another warning won't arise in next python-holidays version. The class level warning can be fixed by wrapping it to a constructor method. With module level deprecation warnings there wouldn't be such a workaround possible.\nI'm working on a PR to fix the reported issue for now.",
            "The -W error::DeprecationWarning flag was a simple way of demonstrating the problem. I first became aware of this issue when updating holidays cause my pytest output to start emitting these warnings. I could have just suppressed the warnings, but that just hides the real problem.\nThanks for getting on this.",
            "Got it, thanks for the explanation @walkerh!\nI agree that in this particular case the warning could be fired in a more sophisticated way (#794 PR filed). However, as I  understand the concept, a warning itself is not a problem but an intentionally shown piece of information notifying the end users about upcoming changes.\nPlease let me know if you have any suggestions regarding the way you'd prefer to work with the deprecation warnings in the future.\nThank you!",
            "My suggestion is to implement a constructor for Swaziland that:\n\nemits the warning\ninvokes super(*args, **kwargs)\n\nThen the warning will only show up when someone actually invokes Swaziland(). The vast, vast majority of users of this package have never and will never use the deprecated Swaziland calendar. They shouldn't have to see this deprecation warning just because they run pytest.",
            "The suggested fix was implemented in #794 PR yesterday.\nThank you!",
            "What is your use-case for turning the warning into an exception?\n\nAnother answer to this question: Our CI runs with -W error::DeprecationWarning to allow us to spot any upcoming issues early. We then either fix the warning right away or explicitly ignore it.\nThanks for fixing it!",
            "Another answer to this question: Our CI runs with -W error::DeprecationWarning to allow us to spot any upcoming issues early. We then either fix the warning right away or explicitly ignore it.\n\nSame here\nIs there a release schedule for the fix?",
            "Is there a release schedule for the fix?\n\nNot that I'm aware of.",
            "Unfortunately I could not work on a new release for some days.. now it's online and should be okay. Thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/790",
        "title": "Hangeul day in South Korea",
        "count": 6,
        "turns": [
            "I found that there is an error about the Hangeul day.\nOriginally, Hangeul day was a holiday, but during the period from 1991 to 2012, it was removed from the holiday.\nAfter 2013, it was redesignated as a holiday again.\nhttps://elaw.klri.re.kr/kor_service/lawView.do?hseq=59601&lang=ENG ‚Üê This is the Decree on which it is based.\nThe ADDENDUM <Presidential Decree No. 24273, Dec. 28, 2012> below in the Decree is notifying that Hanguel day would be redesignated as a holiday again.\nI could not find the addendum in English, so I attached in Korean version(https://law.go.kr/LSW/lsInfoP.do?lsiSeq=234501&viewCls=lsRvsDocInfoR#).",
            "@Inundata does #791 fix it? Pls let us know, thx",
            "@dr-prodigy, #791 does not fix yet üò•\nI have upgraded the package version to 0.17.2, but the errors still exist.\nI have attached the screenshots.",
            "I clicked the wrong button. Sorry. I reopen it.",
            "Hi @Inundata\nthanks for your check / feedback.. in fact, #791 is currently released on beta branch only, so in order to test the new behaviour, you should upgrade your python-holidays to the current beta version version using the procedure explained here:\nhttps://github.com/dr-prodigy/python-holidays#beta-version\n#791 will then be made available into the next official version, ie: v0.18, which is currently being finalized with the last PRs, theoretically in some weeks.\nPls let me know, thank you again",
            "Hi @dr-prodigy ,\nI checked it by updating it to the beta version.\nIt works well. Thank you for all your help!üòÄ",
            "Thank you, closing this then! Pls let us know if we can do it with your other 2 currently open issues!\nCheers üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/789",
        "title": "Labour day in South Korea",
        "count": 2,
        "turns": [
            "There is an error about Labour day in South Korea.\nLabour day was a holiday on March 10, before 1994, and it changes to May 1 after 1994.\nIn the Package, Labour day was returned on May 1 even if it was before 1994.\nhttps://elaw.klri.re.kr/kor_service/lawView.do?lang=ENG&hseq=23586 ‚Üê This is the Decree on which it is based.",
            "@Inundata does #791 fix it? Pls let us know, thx",
            "Also was fixed in #791, closing out.\nThanks everyone!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/788",
        "title": "Tree planting day in South Korea",
        "count": 2,
        "turns": [
            "I found that there is an error about the tree-planting day.\nThis day was ruled out from the holiday after 2006.\nHowever, the package still returns this day as a holiday on 2006-4-5 and 2007-4-5.\nhttps://glaw.scourt.go.kr/wsjo/lawod/sjo190.do?contId=1680822#1668387535738 ‚Üê This is the Decree on which it is based.\nTranslating the Decree shortly, the Tree planting day and the Constitution day would be ruled out after 2006 and 2008, respectively.",
            "@Inundata does #791 fix it? Pls let us know, thx",
            "Fixed in #791, closing this.\n@Inundata thanks for reporting the issue!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/778",
        "title": "HK holiday , 30 September 2022  (The day following the Chinese Mid-Autumn Festival) problem, day of the Mid-Autumn Festival not a holiday , only (T+1) is the public holiday!",
        "count": 8,
        "turns": [
            "It cannot show the day following the Chinese Mid-Autumn Festival for 30 sept 2022\n2022-09-10 Chinese Mid-Autumn Festival\nday of the Mid-Autumn Festival  , it itself is not a holiday , only the day after it (T+1)  is the public holiday\ni think the logic should be :\nif \"the day following the Chinese Mid-Autumn Festival\"  lays on a Sunday , then there will be  \"\"The second weekday after Chinese Mid-Autumn Festival  \"\nMAYBE this can be changed to\n    # Chinese Mid-Autumn Festival\n    name = \"Chinese Mid-Autumn Festival\"\n    first_after_mid_autumn= \"The day following the \" + name\n    second_after_mid_autumn = \"The second following the \" + name\n\n    dt = self.cnls.lunar_to_gre(year, 8, 15)\n    mid_autumn_date = date(dt.year, dt.month, dt.day)\n\n    if self.observed:\n        if mid_autumn_date.weekday() == SAT:\n            self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn\n            self[mid_autumn_date + rd(days=+2)] = second_after_mid_autumn \n        else:\n            self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn\n        mid_autumn_date = mid_autumn_date + rd(days=+1)\n    else:\n        self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn",
            "Hi @magggzzz this should be fixed with #779 (now merged in beta). Could you please confirm?\nThx!",
            "hi @dr-prodigy , checked , confirm working fine, thank you very much, but the day of mid autumn it self is not a public holiday",
            "Hi @magggzzz , the situation is like this:\n3 Oct 2009 (SAT) is Chinese Mid-Autumn Festival and GOV set the same day as public holiday.\n10 Sep 2022 (SAT) is Chinese Mid-Autumn Festival and GOV set the 12 Sep 2022 (MON) as public holiday.\n#779 added speiacl case for this situation on 2022, further may need to add the case depend on the GOV if Chinese Mid-Autumn Festival on saturday and GOV set the public holiday to next monday.\nREF:\nhttps://www.gov.hk/en/about/abouthk/holiday/2009.htm\nhttps://www.gov.hk/en/about/abouthk/holiday/2022.htm",
            "HI, @poshingchu , it is not a special case\nit has always been like this , the day of mid autumn , is not a holiday , only the following day is public holiday !\n\n\nfrom 1983 to 2010, the logic goes :\nif mid autumn lies on a sat , i.e.: the following day is a sunday , then the mid autumn day will be a full day holiday\n** 2009 is the last time it happened\n\n\nsince 2011 the legislation has changed , the following is the changes in legislation. can check the link below\n(o)the day following the Chinese Mid-Autumn Festival (or if that day is a Sunday, then the second day following that Festival) or such other day as the Chief Executive in Council may, by order in the Gazette, appoint in place of that day; (Amended 23 of 2011 s. 3)\n\n\nref:  https://www.elegislation.gov.hk/hk/cap149?xpid=ID_1438402723242_002",
            "Hi @magggzzz , you mean that 2022 is not a special case, 2009 is. And want to switch?\nAs my understand, point (o) can negotiate but more chance to set public holiday on Monday if Chinese Mid-Autumn Festival lies on Saturday. The next Chinese Mid-Autumn Festival lies on Saturday will be 22 Sep 2029.",
            "hi @dr-prodigy  ,\nso both of them are not special case\nfrom 1983 to 2010, the gov 's logic was  :\nif mid autumn lies on a sat , i.e.: the following day is a sunday ,\nthen the mid autumn day ITSELF will be a full day public holiday\nfrom 2011  HK government change the logic :\nif mid autumn lies on a sat , i.e.: the following day is a sunday ,\nthen  INSTEAD of making  the mid autumn day ITSELF will be a full day public holiday,\nthe next non holiday work day will be made into a public holiday\n(or if that day is a Sunday, then the second day following that Festival) or such other day as the Chief Executive in Council may,\nSpecial case only occurs  when and if other wise appointed by the Chief Executive in Council",
            "Hi @magggzzz  and @dr-prodigy , #782 is fixed branch, if have other concern please sugguest.\nOtherwise this case can be closed.",
            "Thank you @poshingchu , closing! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/774",
        "title": "November 2nd is a holiday in Lithuania",
        "count": 4,
        "turns": [
            "Since 2020. Source: https://publicholidays.lt/2022-dates/",
            "Suggested change - https://github.com/dr-prodigy/python-holidays/pull/781.\n@vytautasgimbutas can you please check if there's any typo or semantic error in the holiday name?",
            "@Nalguedo  Seems correct. Thanks!",
            "I guess this can be closed @dr-prodigy ;)",
            "Oooops, this one got unseen! Thank you very much @vytautasgimbutas  + @Nalguedo!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/768",
        "title": "Optimize Kst day lookup process",
        "count": 3,
        "turns": [
            "Replace while loops with dateutil logic:\nThe list of code parts to optimize:\n\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/angola.py#L63\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/botswana.py#L57\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/mozambique.py#L38\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L138\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L158\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L169\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L176\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/zimbabwe.py#L56\nhttps://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/zimbabwe.py#L67",
            "Hey @KJhellico, would you like to look into this?\nFor some reason I thought you may be interested :)",
            "Definitely! üòã I will look into it",
            "#770 merged right now.. thank you both! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/762",
        "title": "Isle of Man Code IM Doesn't Work",
        "count": 2,
        "turns": [
            "Setting country to IM in configuration.yaml results in the check configuration button reporting invalid country data. IM is in the list of support countries.\nConfiguration invalid!\nInvalid config for [binary_sensor.workday]: Country is not supported. for dictionary value @ data['country']. Got 'IM'. (See ?, line ?).\nThere is a note in GB section for Isle of Man to use IM.",
            "Well, that's a bug. Thanks for reporting this!\nI looked into this briefly and here is what I found:\nThe available country list is filtered by __base__ [undocumented Python?] attribute here https://github.com/dr-prodigy/python-holidays/blob/390f59c386b15485c78550a6b4c017b7a6e09f67/holidays/utils.py#L287\nIt works for usual cases (direct inheritance) and fails for more complex cases when country is derived from another HolidayBase based class.\nNext step.\nThe list_supported_countries (and at least list_supported_financial) needs to be reworked to include all supported Alpha-2 country codes.\nI'll file a fix for the issue later today.",
            "Merged, thank you! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/751",
        "title": "Diwali Singapore is on 24th of October not 24th of November",
        "count": 1,
        "turns": [
            "Holidays returns (datetime.date(2022, 11, 24), 'Deepavali') not the actual day which is this coming Monday the 24th of October.\nFull list here https://www.mom.gov.sg/employment-practices/public-holidays",
            "@jgriem , fixed it for this year's Diwali in #754 .\nThanks!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/745",
        "title": "Some holidays of Uruguay are incorrect.",
        "count": 6,
        "turns": [
            "Hello.\nSome holidays for Uruguay are incorrect.\n\nThe Battle of stones was in May, 18.\nThe Respect for Cultural Diversity Day or Columbus day is October, 12.\n\nIn Uruguay are 2 categories of holidays (laborables and not laborables). In the not laborable holidays nobody works while in the laborable holidays the work is optional.\nThe not laborables holidays are:\n\n01/01\n01/05\n18/07\n25/08\n25/12\n\nThe rest of holidays are laborables, and depending of the day of the week, some of them are moved to earlier monday or to the next friday. The rule is:\n\nIf the holiday is tuesday or wednesday, they moved to earlier monday.\nIf the holiday is thursday, is moved to next friday.\nIf the holiday is in monday or friday, doesn't move.\n\nThat is the reason of the error.\nFor example, the Battle of the Stones is the May, 18. In 2021 was tuesday and was moved to the earlier monday that was May, 17.\nOne exception to this rule is the November, 2 (\"D√≠a de los difuntos\"). This holiday is laborable, but doesn't move.\nBest regards.",
            "@oteroalejandro  I'm working on this issue. Thanks for pointing out the problem.\nOne question:  do you get an extra day off (observance) if not laborable holiday falls on weekend?",
            "By the way, this is what Wikipedia states:\nAccording to Uruguayan Law 16,805 with modifications of Law 17,414, the holidays declared by law, subject to the commemoration of them, follow the following scheme (whose commemoration as ‚Äúmoveable holidays‚Äù):\n\nIf coincide on Saturday, Sunday or Monday will be observed in those days.\nIf occur on Tuesday or Wednesday, will be observed on Monday immediately preceding.\nIf occur on Thursday or Friday shall be observed on the Monday immediately following\n\nIt is a bit different from your explanation. Could you please clarify this? Thanks!",
            "Hi Kate.\n\nIn the case a not laborable holiday falls on weekend, we don't get any\nextra day.\n\n\n\n[image: Logo]\n<https://mailtrack.io/trace/link/1198366dea37c3e1f186c6569157d85010525afa?url=https%3A%2F%2Fwww.acceleanation.com&userId=7259985&signature=f5b9c321d1b4c8b6>\n*Cr. Alejandro Otero*\n*Consulting Manager*\n*e:* ***@***.***\n*w:* acceleanation.com\n<https://mailtrack.io/trace/link/796c3c61a2a904b5f2e5e6a20a7bcc6f31db93fe?url=https%3A%2F%2Fwww.acceleanation.com&userId=7259985&signature=034bc373cc95696f>\n*m:* +598 99119120\nBook a meeting with me: 15min\n<https://mailtrack.io/trace/link/7d344c211d5d322a1276818422b980f22bbe6057?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F15min&userId=7259985&signature=e0a6ac9c0fbe139d>\n | 25min\n<https://mailtrack.io/trace/link/2332a2f58c83ca7c5f312b106a0793f9a2a7c7fe?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F25min&userId=7259985&signature=56ab97f153373533>\n | 50min\n<https://mailtrack.io/trace/link/cb411452873f7e8a99c7f015769f7fa632e58206?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F50min&userId=7259985&signature=02b6aca2a820a339>\n\n\nEl vie, 21 oct 2022 a la(s) 15:12, Kate ***@***.***) escribi√≥:\n‚Ä¶\n @oteroalejandro <https://github.com/oteroalejandro> I'm working on this\n issue. Thanks for pointing out the problem.\n One question: do you get an extra day off (observance) if not laborable\n holiday falls on weekend?\n\n ‚Äî\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/745#issuecomment-1287288094>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/ARMB7HUKBESZJPI5XRWA3ALWELMI5ANCNFSM6AAAAAARJCG7LE>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
            "Hi Kate.\n\nI checked with colleagues, and wikipedia is right. If the holiday is\nThursday or Friday, it's moved to next monday.\n\nAnother thing... In addition to November 2, exceptions to the holiday\nmovement rules are on January 06 and June 19. These holidays do not move\ndespite being working days.\n\nThanks a lot for your work.\nBest regards.\n\n\n\n\n\n\n[image: Logo] <https://www.acceleanation.com>\n*Cr. Alejandro Otero*\n*Consulting Manager*\n*e:* ***@***.***\n*w:* acceleanation.com <https://www.acceleanation.com>\n*m:* +598 99119120\nBook a meeting with me: 15min <https://calendly.com/oteroalejandro/15min> |\n25min <https://calendly.com/oteroalejandro/25min> | 50min\n<https://calendly.com/oteroalejandro/50min>\n\n\nEl vie, 21 oct 2022 a la(s) 15:17, Kate ***@***.***) escribi√≥:\n‚Ä¶\n By the way, this is what Wikipedia\n <https://en.wikipedia.org/wiki/Public_holidays_in_Uruguay#Moveable_holidays>\n states:\n\n According to Uruguayan Law 16,805 with modifications of Law 17,414, the\n holidays declared by law, subject to the commemoration of them, follow the\n following scheme (whose commemoration as ‚Äúmoveable holidays‚Äù):\n\n    - If coincide on Saturday, Sunday or Monday will be observed in those\n    days.\n    - If occur on Tuesday or Wednesday, will be observed on Monday\n    immediately preceding.\n    - If occur on Thursday or Friday shall be observed on the Monday\n    immediately following\n\n It is a bit different from your explanation. Could you please clarify\n this? Thanks!\n\n ‚Äî\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/745#issuecomment-1287293377>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/ARMB7HX47FOE744ZFT2KQQ3WELM4FANCNFSM6AAAAAARJCG7LE>\n .\n You are receiving this because you were mentioned.Message ID:\n ***@***.***>",
            "In addition to November 2, exceptions to the holiday movement rules are on January 06 and June 19. These holidays do not move despite being working days. Thanks a lot for your work. Best regards. >\n\nYes, I noticed that as well in Wikipedia.\nThanks for the clarification!",
            "Fixed by @kasya and merged in beta.. thx! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/727",
        "title": "South Africa rollover rules regarding holidays falling on Sundays don't appear to be correct",
        "count": 2,
        "turns": [
            "#392 changed South African holiday calculations to add observed holidays when the existing holiday falls on a Sunday, per:\nThe Public Holidays Act (Act No 36 of 1994) determines that whenever any public holiday falls on a Sunday, the Monday following on it shall be a public holiday.\nHowever it doesn't just check if it can add it to the following Monday but continues checking for an \"open\" day until it can place it, leading to it incorrectly marking 27 December 2022 as a public holiday:\nIn [80]: list(sorted(holidays.ZA(years=2022).items()))\nOut[80]:\n[(datetime.date(2022, 1, 1), \"New Year's Day\"),\n (datetime.date(2022, 3, 21), 'Human Rights Day'),\n (datetime.date(2022, 4, 15), 'Good Friday'),\n (datetime.date(2022, 4, 18), 'Family Day'),\n (datetime.date(2022, 4, 27), 'Freedom Day'),\n (datetime.date(2022, 5, 1), \"Workers' Day\"),\n (datetime.date(2022, 5, 2), \"Workers' Day (Observed)\"),\n (datetime.date(2022, 6, 16), 'Youth Day'),\n (datetime.date(2022, 8, 9), \"National Women's Day\"),\n (datetime.date(2022, 9, 24), 'Heritage Day'),\n (datetime.date(2022, 12, 16), 'Day of Reconciliation'),\n (datetime.date(2022, 12, 25), 'Christmas Day'),\n (datetime.date(2022, 12, 26), 'Day of Goodwill'),\n (datetime.date(2022, 12, 27), 'Christmas Day (Observed)')]```",
            "@pietervdw115 since you submitted the original change just want to check if there's something I'm missing here?",
            "Issue fixed and released. Closing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/714",
        "title": "Add Halloween to US Holiday Schedule",
        "count": 3,
        "turns": [
            "Please add Halloween (Oct 31st) to US Holiday schedule. I use this code to automate my outdoor lights based on holiday. Halloween is a fun holiday to change lights.",
            "Hi @schmittyice-hyp!\nThanks for the idea!\nI love this holiday! And it's quite unfortunate that at this moment python-holidays provides official holiday list (both federal and regional ones) only.\nI don't know what your automation looks like but it sounds like you might benefit from forking the repo and adding that holiday by yourself for using the fork further in your automation. Another way would be extending the python-holidays to optionally include non-official holidays based on some parameter value. This may or may not be ready before this year's Halloween.\n--\nArk",
            "You can easily add this on your own. Here is a simple example:\nclass HalloweenHolidays(holidays.HolidayBase):\n    def _populate(self, year):\n        self[date(year, 10, 31)] = \"Halloween\"\n\ngerman_holidays = holidays.country_holidays('DE', subdiv='NW', years=2022)\ngerman_holidays += HalloweenHolidays()\n\nfor date, name in sorted(german_holidays.items()):\n    print(date, name)\nThis is all documented quite well. You can create new custom holiday classes and merge different holiday classes. This way I add halloween to the german holidays and debug print the result afterwards.",
            "At the current time, I agree with @NicoHood : the right way to go is using a custom class to implement your required additional days. Anyway, thanks everyone for your interest and support!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/709",
        "title": "Sovereign's Birthday updates for New Zealand",
        "count": 1,
        "turns": [
            "With the passing of Queen Elizabeth II the Sovereign's Birthday public holiday will be called King's Birthday from 2023 for Charles III. Also see #708 for new temporary holiday in 2022.\nMore information here.",
            "Hi @markhoneth thank you, today I've released in beta an update on this.\nI'm closing this, please follow up in case of any review required.\nThanks, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/708",
        "title": "New temporary public holiday in New Zealand",
        "count": 1,
        "turns": [
            "New Zealand will mark the passing of Queen Elizabeth II with a one-off public holiday on Monday 26 September.\nThe Public Holiday will be called Queen Elizabeth II Memorial Day.\nLegislation will be passed next week to bring the holiday into force.\n\nMore information here.",
            "Hi @markhoneth thank you, today I've released in beta an update on this.\nI'm closing this, please follow up in case of any review required.\nThanks, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/707",
        "title": "Canada: Observed New Year's day for 2021/2022 incorrect",
        "count": 4,
        "turns": [
            "When querying December 31st, 2021 in Ontario, Canada, it is listed as \"New Year's Day (Observed)\", but this is not the case, it was observed on the following Monday. (see for example here: https://www.timeanddate.com/calendar/?year=2022&country=27 , and here https://www.timeanddate.com/holidays/canada/new-year-day)\nThis doesn't seem to be a problem with the data but with the logic of when the observed day falls. This seems related to these issues/PRs:\nhttps://github.com/dr-prodigy/python-holidays/pull/579\nhttps://github.com/dr-prodigy/python-holidays/issues/581\nThank you for maintaining this package.\nimport holidays\nfrom datetime import datetime\nh = holidays.country_holidays(\"CA\", subdiv=\"ON\")\nh.get(datetime(2021,12,31))",
            "Seems to be fixed in #811",
            "Thank you @KJhellico , it seems correct to me as well.. can you confirm @jasonjensen ? Thx",
            "Thank you @KJhellico , it seems correct to me as well.. can you confirm @jasonjensen ? Thx\n\nYes, thank you @dr-prodigy and @KJhellico , this was the one and same issue. This can be closed once #811 is incorporated into the main branch, or now if that is your convention.",
            "Yes, we usually close issues upon their release on beta branch. Thank you @jasonjensen !"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/706",
        "title": "Australia one-off public holiday",
        "count": 1,
        "turns": [
            "Hi there,\nJust thought I'd flag the one-off public holiday that Australia is getting across all states on the Thursday 2022-09-22, see below:\nhttps://www.theguardian.com/australia-news/2022/sep/11/australia-to-have-public-holiday-to-mark-the-death-of-queen-elizabeth-ii-anthony-albanese-announces\nKeep up the good work!",
            "Hi @cozimapotato thank you: we have just sorted this out by merging #699 . It is currently released in beta, and will be included in the next release.\nCheers! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/705",
        "title": "Holiday names sorting",
        "count": 4,
        "turns": [
            "While I was working on Bolivia holidays one of my tests caught an error with holiday names when two holidays fall on the same day. In this particular case it was one regional holiday (La Tablada in Tarija) and Viernes Santo holiday. In 2022 they both fell on Apr 15, so I had to make a separate test for this case. But to test it I needed to know the logic behind how names are combined.\nI checked the code and noticed that there was no \"rule\" for holiday names order in such cases, and that makes testing much harder.\n@dr-prodigy  Would it be ok to submit a PR with a change to this fundamental logic?",
            "Hi @kasya thank you for this interesting case!\nIndeed, we don't have a clear definition of behaviour in case of holidays overlapping.. being holidays a Dict-based class, we can't in fact add more than one holiday on the same date right away.\nThen, it would surely be valuable to add a standard logic to cover those cases: it would be useful especially regarding moving holidays (eg: Easter, Good Friday, etc.).\nMy suggestion, whenever it happens, is, while keeping one single date element, to define a standard format to include all the holiday descriptions: they could be comma/semicolon separated, or new lines.\nThis will probably imply some country holidays code refactoring too (I remember we have some custom logic regarding this in the project already), but that will come probably later..\nPlease, go on.. I'll be glad to participate to this development and include it in a PR.\nThank you!",
            "Is this still an issue, or has #713 closed/solved this? :)",
            "Is this still an issue, or has #713 closed/solved this? :)\n\n#713 solved this issue (holiday names are now sorted alphabetically when 2 or more holidays fall on the same date).",
            "Confirm.. PR released in beta. Closing this, thx everyone!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=5&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/704",
        "title": "Singapore adds additional holidays every time _populate function is run for 2017",
        "count": 9,
        "turns": [
            "For Singapore holidays, if the _populate function is run multiple times for the year 2017 it continues to add more and more holidays:\nx = country_holidays(\"SG\")\n\nIn [3]: x._populate(2017)\n\nIn [5]: len(x)\nOut[5]: 17\n\nIn [6]: x._populate(2017)\n\nIn [7]: len(x)\nOut[7]: 20\n\nIn [8]: x._populate(2017)\n\nIn [9]: len(x)\nOut[9]: 23\n\nIn [10]: x._populate(2017)\n\nIn [11]: len(x)\nOut[11]: 26\n\nIn [12]: x._populate(2017)\n\nIn [13]: len(x)\nOut[13]: 29\n\nIn [15]: pprint(x)\n{datetime.date(2017, 1, 1): \"New Year's Day\",\n datetime.date(2017, 1, 2): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 3): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 4): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 5): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 6): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 7): \"New Year's Day [In lieu]\",\n datetime.date(2017, 1, 28): 'Chinese New Year',\n datetime.date(2017, 1, 29): 'Chinese New Year',\n datetime.date(2017, 1, 30): 'Chinese New Year [In lieu]',\n datetime.date(2017, 1, 31): 'Chinese New Year [In lieu]',\n datetime.date(2017, 2, 1): 'Chinese New Year [In lieu]',\n datetime.date(2017, 2, 2): 'Chinese New Year [In lieu]',\n datetime.date(2017, 2, 3): 'Chinese New Year [In lieu]',\n datetime.date(2017, 2, 4): 'Chinese New Year [In lieu]',\n datetime.date(2017, 4, 14): 'Good Friday',\n datetime.date(2017, 5, 1): 'Labour Day',\n datetime.date(2017, 5, 10): 'Vesak Day',\n datetime.date(2017, 6, 25): 'Hari Raya Puasa',\n datetime.date(2017, 6, 26): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 6, 27): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 6, 28): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 6, 29): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 6, 30): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 7, 1): 'Hari Raya Puasa [In lieu]',\n datetime.date(2017, 8, 9): 'National Day',\n datetime.date(2017, 9, 1): 'Hari Raya Haji',\n datetime.date(2017, 10, 18): 'Deepavali',\n datetime.date(2017, 12, 25): 'Christmas Day'}",
            "@amas01 Thanks for taking the time to file a bug report!\n@dr-prodigy  I can take a look at this, but probably not until next week due to commitments.",
            "Thank you both @amas01 @mborsetti !\nYes Mike, please, if you can, definitely happy if you work on it.. no prob about your time availability: at the current time I'm almost done with closing a new version (release required due to Queen Elizabeth mourning holidays), so merging of this PR will come later, with less urgency.\nThx!",
            "I've had time to look into this and the reported behavior is present for all of the following countries:\n\nGR\nKR\nMY\nSG\nSZ\nZA\nZW\n\nI traced it down to the logic employed in the code for movable (observed) holidays, which, roughly speaking, is: if the day is already marked as a holiday (or a Sunday), find the first non-holiday day and mark that one as an \"in lieu\" holiday. As a result of this logic if  _populate() is called when holidays are already loaded/present, new \"in lieu\" holidays might be added.\n@amas01 What is the use case for calling _populate(), which is a private (and undocumented) method, directly?  I am trying to understand whether a \"fix\" is even necessary!",
            "We pass the country holidays oject around and add aditional years if they are required. When the code was originally written _populate was used to produce a complete list of the holidays for the required years. Not sure if there is a better way of doing this now but I have written a fix for the singapore case and raised a PR. Happy for you to ignore if you don't think it's required: #717",
            "Oh, I see.\n@dr-prodigy Your architectural choice! Here are the options I can think of:\n(1) _populate() should be callable on an already-populated object, in which case we should fix all 7 countries affected and have a unit test for this condition; furthermore, we should rename the method to populate() to make it clear that it's a public method; or\n(2) we better document that _populate() is a private method not to be called directly, and suggest that to add years to an existing holidays object one should use the update() method as follows:\nimport holidays\nx = holidays.country_holidays(\"SG\", years=2017)\nlen(x)\nOut[4]: 14\nx.update(holidays.country_holidays(\"SG\", years=2017))\nlen(x)\nOut[6]: 14\n\nPersonally, I'm indifferent but I don't know the history; let me know and I can contribute a PR.",
            "Hey @mborsetti thank you for pointing this out, and sorry for getting back here only after weeks:  I had some stop and I restarted today merging some PRs, such as #717 in fact.\nAt a first glance, I found #717, even if not very \"strategic\", to be an improvement at some degree, so I merged it without thinking too much..\nBut now thanks to these comments, I have a clearer view of the whole context.\nAs a general rule, _populate method, as its naming suggests and you correctly point out, is an internal one, so it should theoretically never be called from outside: there are other correct and documented ways of reinitializing the library, such as update.\nApart from specific country code just like #717, we could even possibly think about centralizing some protective behaviour to avoid data duplication (and also possibly manage observed holidays better), but that would result in a quite large refactoring. Not something we should prioritize, IMHO.\nAll this said, in the end, I'm definitely oriented towards case 2, so if you agree, I would surely like to invest our time in this direction.\nPls let me know your point of view on this @amas01 @mborsetti .. thank you both!",
            "Hi @dr-prodigy apologize for missing this.\nI completely agree with case #2 as it is faster due to the lack of additional checks. Unless I am mistaken, the code would stay as it is and _populate is not to be called.  Happy to submit a PR with additional remarks in the code.",
            "Yep, you are right Mike @mborsetti , no big changes to do right now.. if you wish, some remarks and / or doc integration could help anyway. Thx! üëç",
            "Yep, you are right Mike @mborsetti , no big changes to do right now.. if you wish, some remarks and / or doc integration could help anyway. Thx! üëç\n\nWill contribute (in due time) some remarks and/or documentation."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/700",
        "title": "Today is not holiday in region CT, Spain.",
        "count": 5,
        "turns": [
            "Hi, the library is returning holiday today 12th of September for Catalonia (CT), Spain. That's wrong. Today is working day.\nI think the issue is the holiday from yesterday (Sep. 11th)  is traslated to today because yesterday was Sunday as I have seen in the code. But here we do not move the holyday to the next day if it's sunday... Usually they assign another local holiday and that's it... Can you exclude the +1 day rule when it's sunday?",
            "Hi @mrbluebrett,\nI googled a bit and it seems that there are only 2 holidays that can be moved to Monday (and that is decided by each Autonomous Community) - Christmas Day and Labor Day. Everything else is usually celebrated on the day of the holiday.\nIs this logic correct? Thanks!",
            "Not exactly. All national holidays that happen in sunday can be moved to another day, but each autonomous community decides the new day. Some of the choose the next Monday, but others a completely different day. And also this can change every year so a community that choses to move one holiday to monday one year, the next year can choose to move to a completely different day.\nI have also seen in the code that you have put JUN 6 as a holiday in CT, but that was only true this year. When this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.\nFeel free to ask if you need more clarification.",
            "If there's no definitive logic in how sunday holidays are moved it might be hard to program it.\n\nWhen this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.\n\nAnd about this one... So, as I understand it at this moment: if any of those 4 holidays fall on Sunday, you kind of have one \"unused\" holiday and in this case you have this Pentecost Monday (Jun 6 this year) somewhere in May-June. But if none of those 4 were on Sunday - you don't get a day off, is that correct?",
            "When this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.\n\nAnd about this one... So, as I understand it at this moment: if any of those 4 holidays fall on Sunday, you kind of have one \"unused\" holiday and in this case you have this Pentecost Monday (Jun 6 this year) somewhere in May-June. But if none of those 4 were on Sunday - you don't get a day off, is that correct?\n\nYes, that‚Äôs correct for Catalonia. It‚Äôs the first substitute holiday for the other four (in fact 3, because easter monday can never be in sunday).",
            "Apparently it's no longer an issue after multiple Spain holidays fixes and refactorings.\n>>> \"2022-09-12\" in holidays.ES(years=2022, subdiv=\"CT\")\nFalse\nClosing this."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/697",
        "title": "Canadian Holidays are not working in 2022",
        "count": 4,
        "turns": [
            "The folllowling should return \"Christmas Day\" but does not\nimport holidays\nholidays.CA().get('2022-12-25')\n# No return\n\nHowever, it does work for the US\nholidays.US().get('2022-12-25')\n'Christmas Day'",
            "I'll look into this.",
            "Hi @Dpananos\nI made a check, and I confirm Canada code is working as expected: the difference between it and the other countries is it applies observance by default:\n>>> import holidays\n>>> h = holidays.CA()\n>>> h\nholidays.country_holidays('CA', subdiv='ON')\n>>> h.get('2022-12-25')\n>>> h\n{datetime.date(2022, 1, 1): \"New Year's Day\", datetime.date(2022, 2, 21): 'Family Day', datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 4, 18): 'Easter Monday', datetime.date(2022, 5, 23): 'Victoria Day', datetime.date(2022, 7, 1): 'Canada Day', datetime.date(2022, 8, 1): 'Civic Holiday', datetime.date(2022, 9, 5): 'Labour Day', datetime.date(2022, 10, 10): 'Thanksgiving', datetime.date(2022, 12, 27): 'Christmas Day (Observed)', datetime.date(2022, 12, 26): 'Boxing Day'}\n>>> h.get('2022-12-27')\n'Christmas Day (Observed)'\n\nBasically, Christmas Day is there, but for 2022, is shifted to 2022-12-27.\nIn the end, this behaviour could be debated (could you please check whether it's correct or not?), but there seems not to be any technical issue behind it (ie: it's like so by design).\nPlease let me know if this makes sense to you, thank you!",
            "Here's a fix: https://github.com/dr-prodigy/python-holidays/pull/715",
            "This is to be closed.. thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/694",
        "title": "Market holidays clarification?",
        "count": 6,
        "turns": [
            "Hi, I'm wondering if someone can clarify how the financial package is intended to be used with a code sample. Code looks simple enough but using NYSE as a country, as the docs suggest, results in an error. I downgraded to the previous release and encountered the same issue.",
            "Hi Tim,\nit's always a good idea to attach the error message to a bug report and make it as detailed as possible.\nAs there are no clear steps to reproduce the issue I've just tried these:\n‚ùØ virtualenv venv\n\ncreated virtual environment CPython3.9.13.final.0-64 in 266ms\ncreator CPython3Posix(dest=/Users/ark/Dev/python-holidays/venv, clear=False, no_vcs_ignore=False, global=False)\nseeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/ark/Library/Application Support/virtualenv)\nadded seed packages: pip==22.2.2, setuptools==63.4.3, wheel==0.37.1\nactivators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n\n‚ùØ pip install holidays\n\nCollecting holidays\nDownloading holidays-0.15-py3-none-any.whl (181 kB)\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 181.3/181.3 kB 802.2 kB/s eta 0:00:00\nCollecting convertdate>=2.3.0\nUsing cached convertdate-2.4.0-py3-none-any.whl (47 kB)\nCollecting korean-lunar-calendar\nUsing cached korean_lunar_calendar-0.2.1-py3-none-any.whl (8.0 kB)\nCollecting hijri-converter\nUsing cached hijri_converter-2.2.4-py3-none-any.whl (14 kB)\nCollecting python-dateutil\nUsing cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\nCollecting pymeeus<=1,>=0.3.13\nUsing cached PyMeeus-0.5.11.tar.gz (5.4 MB)\nPreparing metadata (setup.py) ... done\nCollecting six>=1.5\nUsing cached six-1.16.0-py2.py3-none-any.whl (11 kB)\nBuilding wheels for collected packages: pymeeus\nBuilding wheel for pymeeus (setup.py) ... done\nCreated wheel for pymeeus: filename=PyMeeus-0.5.11-py3-none-any.whl size=730971 sha256=e07715b75457573b8fcbbf2acb68014c7aa3a8a3d7005135e3d5effe54a43acb\nStored in directory: /Users/ark/Library/Caches/pip/wheels/33/3d/82/4579e9cca41ff991140b2e050bc6df3a38292f26e4fa06b15d\nSuccessfully built pymeeus\nInstalling collected packages: pymeeus, korean-lunar-calendar, six, hijri-converter, convertdate, python-dateutil, holidays\nSuccessfully installed convertdate-2.4.0 hijri-converter-2.2.4 holidays-0.15 korean-lunar-calendar-0.2.1 pymeeus-0.5.11 python-dateutil-2.8.2 six-1.16.0\n\n‚ùØ python\n\nimport holidays\nprint(holidays.financial.ny_stock_exchange.NYSE(years=2022))\n{datetime.date(2022, 1, 3): \"New Year's Day (Observed)\", datetime.date(2022, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2022, 2, 21): \"Washington's Birthday\", datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 5, 30): 'Memorial Day', datetime.date(2022, 6, 20): 'Juneteenth National Independence Day (Observed)', datetime.date(2022, 7, 4): 'Independence Day', datetime.date(2022, 9, 5): 'Labor Day', datetime.date(2022, 11, 24): 'Thanksgiving Day', datetime.date(2022, 12, 26): 'Christmas Day (Observed)'}\n\nIn general you should use NewYorkStockExchange class (or its alias NYSE) of holidays.financial.ny_stock_exchange module. Example:\nfrom holidays.financial import ny_stock_exchange\nnyse_holidays_2022 = ny_stock_exchange.NYSE(years=2022)\n\nI hope this'll help you get started. I may be able to assist more if you provide the error you mentioned.",
            "hi everyone!\n@arkid15r thank you so much for the complete explanation.\nIndeed, providing a complete issue report (with an enclosed code sample, whenever possible) is vital to obtain valuable support.\nThis said, everything explained here above should be more than enough to get things done in the right way.\nWilling to get deeper in all the possible ways to use python holidays, there are 2 other main sources to take into account:\n\nholidays documentation\nunit test code\n\nWhile official documentation provides all the required details, unit test code include a near-100% coverage of the whole library, and therefore provides valid examples for all its use cases.\n@aJetHorn please let us know if this clarifies your doubts, thx",
            "The language used in the docs:\n\"The standard way to refer to a financial market is to use its ISO 10383 MIC (Market Identifier Code) as a ‚Äúcountry‚Äù code when available.\"\nWas interpreted as this usage being possible:\nus_market_holidays = holidays.country_holidays('NYSE')\nI guess I understand why usage is different, I just couldn't find it documented and couldn't find any code samples on Github. Thank you for clarifying.",
            "Hi @aJetHorn , this definitely clarifies your issue report, thank you very much.\nAlthough, as you could notice after, country_holidays('..') method is meant for countries only, a similar method should in fact be available for financial holidays too (which is not yet the case: this went unnoticed since we split financial holidays from country ones). I'm then reopening this, and we will take care of it in the next release.\nThanks again üëç",
            "Hi @aJetHorn\nI've just pushed in beta an update that should address your issue. This involved a larger refactoring regarding all the financial holidays code, including adding a new BaseHoliday property (market), used for financial holidays instead of the usual country.\nCould you please make a check on it and confirm it works as expected?\nThanks!",
            "Closing this out as the required functionality was added."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/693",
        "title": "2022-01-03 was not a holiday for NYSE (XNYS)",
        "count": 3,
        "turns": [
            "More info: https://www.nyse.com/markets/hours-calendars",
            "I will look into this issue.",
            "Thanks!",
            "Just merged on beta. Thanks both üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/685",
        "title": "Custom holidays not iterable",
        "count": 4,
        "turns": [
            "Hello,\ni added some holidays to the \"IT\" ones this way:\nclass my_holidays:\n    def _populate(self, year):\n\n        holidays.IT._populate(self, year)\n\n        # Add custom holidays\n        self[date(year, 6, 24)] = \"San Giovanni Battista\"\n        self[date(year, 12, 31)] = \"San Silvestro\"\n\nBut when i try to call it:\nNote: holidays is a personal custom list, current_day is a variable and i also tested it directly in the interpreter but issue is the same. No issue with the standard it_holidays = holidays.IT()\n# Check if current day is an holiday\nif x > 0 and current_day in my_holidays:\n    holidays.append(\n        (\n           days_list[x],\n           datetime.strptime(current_day, \"%m/%d/%y\").strftime(\"%d/%m/%Y\"),\n        )\n    )\n\ni receive the following error:\nif x > 0 and current_day in my_holidays:\nTypeError: argument of type 'type' is not iterable\n\nAny idea what am i doing wrong?\nThanks!",
            "Hi,\nI kindly ask you to follow the provided doc and, when possible, avoid opening project issues about specific implementation issues.\nThis said, in order to make it work, you should at least inherit your class from Italy class, like so (I'm from mobile so there could be some small error / typo):\n...\nclass my_holidays (holidays.Italy):\n...\n\nThen, if your added holidays are valid for the whole Italy or a province,  I would suggest to prepare a PR to include them in the lib code.\nThx, best",
            "Before implementing this in my personal code i tried the exact code from the documentation in the section \"Creating custom holidays (or augmenting existing ones with private ones)\" and got same issue discussed here https://github.com/dr-prodigy/python-holidays/issues/500\nThat's why i used:\nclass my_holidays:\ninstead of:\nclass my_holidays (holidays.Itay):\nIf i use the code from the docs:\n>>> import holidays\n>>> from datetime import date\n>>> class CorporateHolidays(holidays.US):\n...     def _populate(self, year):\n...             holidays.US._populate(self, year)\n...             self[date(year, 7, 13)] = \"Ninja Turtle Day\"\n\n>>> date(2014, 10, 14) in CorporateHolidays(country=\"US\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Users\\xxx\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\holidays\\countries\\united_states.py\", line 107, in __init__\n    HolidayBase.__init__(self, **kwargs)\nTypeError: HolidayBase.__init__() got an unexpected keyword argument 'country'\n\nThat is exactly the error from the link i provided.\nIf i try to follow the solution provided in the link:\n>>> class CorporateHolidays():\n...     def _populate(self, year):\n...             holidays.US._populate(self, year)\n...             self[date(year, 7, 13)] = \"Ninja Turtle Day\"\n\nI get exactly the same issue i have in my custom code:\n>>> date(2014, 10, 14) in CorporateHolidays()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: argument of type 'CorporateHolidays' is not iterable\n\nSo there is probably something i'm not doing right :/",
            "At a further check, I confirm that specific example referred to is providing a wrong code: being already a country-inherited object, the subsequent call to country=\"US\" is not valid, thus the first reported error.\nGoing to the second code, on the other hand, the inheritance is still obviously required: no examples in the doc is omitting it.\nThe correct code is then\nimport holidays\nfrom datetime import date\n\nclass CorporateHolidays(holidays.US):\n  def _populate(self, year):\n    holidays.US._populate(self, year)\n      self[date(year, 7, 13)] = \"Ninja Turtle Day\"\n\nprint (date(2014, 7, 13) in CorporateHolidays())\n\nThe doc will be fixed accordingly, thx for your clarifications!",
            "The fix has been just pushed on beta.\nIt will be then published to https://python-holidays.readthedocs.io when merged on master, ie: when the next app official version (0.15) is released.\nClosing this: pls reach out in case of further needs, thx."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/684",
        "title": "May 1 is a holiday in Hong Kong ( .HK() )",
        "count": 1,
        "turns": [
            "Reference point from government source: https://www.labour.gov.hk/eng/news/latest_holidays2022.htm",
            "As a matter of fact, 1st of May in 2022 falled on Sunday, so it is correct that Labour Day is then observed on the 2nd.\nThis is confirmed here too:\nhttps://www.gov.hk/en/about/abouthk/holiday/2022.htm\nand on a number of other sources.\nCould you pls double-check and let me know? thx"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/683",
        "title": "ADD Holidays for Bosnia and Hertzegovina",
        "count": 3,
        "turns": [
            "Please can you add holidays for BiH Bosnia and Hertzegovina ?",
            "Hi,\nthis is a completely voluntary-backed project, so we won't accept any request for specific features.\nOn the other hand, all contributions are always more than welcome so, if you're interested in python-holidays and / or available to give your support, my suggestion is to implement them yourself, or wait for someone to commit to this task.\nPls start from here for details:\nhttps://github.com/dr-prodigy/python-holidays#contributions\nMarking this as \"help wanted\".. Thx!",
            "Hi @joksa97 ,\nCould you please verify test outputs for Bosnia and Herzegovina holidays?\n2022, Federation of Bosnia and Herzegovina:\n2022-01-01 Nova Godina\n2022-01-02 Drugi dan Nove Godine\n2022-05-01 Dan rada\n2022-05-02 Ramazanski Bajram, Drugi dan Dana rada\n2022-05-03 Drugi Dan Ramazanski Bajram, Treƒái dan Dana rada\n2022-03-01 Dan nezavisnosti\n2022-04-15 Veliki Petak (Katoliƒçki)\n2022-04-17 Uskrs (Katoliƒçki)\n2022-04-18 Uskrsni ponedjeljak (Katoliƒçki)\n2022-06-16 Tijelovo (Tijelo i Krv Kristova)\n2022-07-09 Kurban Bajram\n2022-07-10 Kurban Bajram\n2022-07-11 Kurban Bajram\n2022-07-12 Kurban Bajram\n2022-07-30 Muslimanska Nova Godina\n2022-11-01 Svi Sveti\n2022-11-02 Du≈°ni dan\n2022-11-25 Dan dr≈æavnosti\n2022-12-25 Bo≈æiƒá (Katoliƒçki)\n2022-12-26 Stipandan (Stjepandan)\n\n2021, Federation of Bosnia and Herzegovina:\n2021-01-01 Nova Godina\n2021-01-02 Drugi dan Nove Godine\n2021-05-01 Dan rada\n2021-05-02 Drugi dan Dana rada\n2021-03-01 Dan nezavisnosti\n2021-04-02 Veliki Petak (Katoliƒçki)\n2021-04-04 Uskrs (Katoliƒçki)\n2021-04-05 Uskrsni ponedjeljak (Katoliƒçki)\n2021-06-03 Tijelovo (Tijelo i Krv Kristova)\n2021-05-13 Ramazanski Bajram\n2021-05-14 Drugi Dan Ramazanski Bajram\n2021-07-20 Kurban Bajram\n2021-07-21 Kurban Bajram\n2021-07-22 Kurban Bajram\n2021-07-23 Kurban Bajram\n2021-08-09 Muslimanska Nova Godina\n2021-11-01 Svi Sveti\n2021-11-02 Du≈°ni dan\n2021-11-25 Dan dr≈æavnosti\n2021-12-25 Bo≈æiƒá (Katoliƒçki)\n2021-12-26 Stipandan (Stjepandan)\n\n2022, Republika Srpska:\n2022-01-01 Nova Godina\n2022-01-02 Drugi dan Nove Godine\n2022-05-01 Dan rada\n2022-05-02 Drugi dan Dana rada\n2022-05-03 Treƒái dan Dana rada\n2022-01-06 Pravoslavno Badnje veƒçe\n2022-01-07 Bo≈æiƒá (–ë–æ–∂–∏—õ)\n2022-01-09 Dan Republike\n2022-01-14 Pravoslavna Nova Godina\n2022-04-22 Veliki Petak (Pravoslavni)\n2022-04-24 Vaskrs (Pravoslavni)\n2022-04-25 Uskrsni ponedjeljak (Pravoslavni)\n2022-05-09 Dan pobjede\n2022-06-28 Vidovdan\n2022-11-21 Dan uspostave Op≈°teg okvirnog sporazuma za mir u Bosni i Hercegovini\n\n2021, Republika Srpska:\n2021-01-01 Nova Godina\n2021-01-02 Drugi dan Nove Godine\n2021-05-01 Dan rada\n2021-05-02 Vaskrs (Pravoslavni), Drugi dan Dana rada\n2021-01-06 Pravoslavno Badnje veƒçe\n2021-01-07 Bo≈æiƒá (–ë–æ–∂–∏—õ)\n2021-01-09 Dan Republike\n2021-01-14 Pravoslavna Nova Godina\n2021-04-30 Veliki Petak (Pravoslavni)\n2021-05-03 Uskrsni ponedjeljak (Pravoslavni)\n2021-05-09 Dan pobjede\n2021-06-28 Vidovdan\n2021-11-21 Dan uspostave Op≈°teg okvirnog sporazuma za mir u Bosni i Hercegovini\n\nThanks!",
            "Implemented by @kasya (thank you very much!) and just released in beta.. marking closed."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/680",
        "title": "Norway's country code not supported?",
        "count": 0,
        "turns": [
            "Hello,\nWhen I change the country code to NO the lettering turns blue and I get an invalid country (even if Norway is listed) while if I try with the default DE it turns orange (using Studio Code Server)\nTo add, I am very new to HA, so I might be doing something wrong here, but just inputting \"NO\" do not seem to work.."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/679",
        "title": "ADD Holidays from Bolivia?",
        "count": 13,
        "turns": [
            "If is not much to ask?\nhttps://publicholidays.com.bo/\nThanks!",
            "Hi @djcrawleravp is there any special rule about the holidays in Bolivia?\nlike, if it lays on a sunday, do you guys get monday off as well ?\nTIA (WIP)",
            "All religious holidays are on the exact date, non religious ones are moved to monday if they are on a sunday :3",
            "Hi,\nthis is a completely voluntary-backed project, so we won't accept any request for specific features.\nOn the other hand, all contributions are always more than welcome so, if you're interested in python-holidays and / or available to give your support, my suggestion is to implement them yourself, or wait for someone to commit to this task.\nPls start from here for details:\nhttps://github.com/dr-prodigy/python-holidays#contributions\nMarking this as \"help wanted\".. Thx!",
            "I'll love to, but I'm not a developer :/, thanks anyway",
            "I'd like to work on this one.\n@djcrawleravp one more question. Are regional holidays days off too in those specific regions? For instance, is Chuquisaca Day (May 25) is a day off in the Bolivian department of Chuquisaca?",
            "I'd like to work on this one.\n@djcrawleravp one more question. Are regional holidays days off too in those specific regions? For instance, is Chuquisaca Day (May 25) is a day off in the Bolivian department of Chuquisaca?\n\nThank you Kasya, Yes, regional holidays days off are on the specific regions",
            "Hi @djcrawleravp,\nCould you please verify test outputs for Bolivian holidays?\nHere is a printout for 2021, with observed holidays:\n2021-01-01 A√±o Nuevo\n2021-01-22 Nacimiento del Estado Plurinacional de Bolivia\n2021-02-15 Feriado por Carnaval\n2021-02-16 Feriado por Carnaval (Observed)\n2021-04-02 Viernes Santo\n2021-05-01 Dia del trabajo\n2021-06-03 Corpus Christi\n2021-06-21 A√±o Nuevo Andino\n2021-08-02 D√≠a de la Revoluci√≥n Agraria\n2021-08-06 Dia de la Patria\n2021-11-02 Todos Santos\n2021-12-25 Navidad\n\nHere's one for 2022, with observed holidays:\n2022-01-01 A√±o Nuevo\n2022-01-22 Nacimiento del Estado Plurinacional de Bolivia\n2022-02-28 Feriado por Carnaval\n2022-03-01 Feriado por Carnaval (Observed)\n2022-04-15 Viernes Santo\n2022-05-01 Dia del trabajo\n2022-05-02 Dia del trabajo (Observed)\n2022-06-16 Corpus Christi\n2022-06-21 A√±o Nuevo Andino\n2022-08-02 D√≠a de la Revoluci√≥n Agraria\n2022-08-06 Dia de la Patria\n2022-11-02 Todos Santos\n2022-12-25 Navidad\n2022-12-26 Navidad (Observed)\n\nHere'e one for 2023, with observed holidays:\n2023-01-01 A√±o Nuevo\n2023-01-02 A√±o Nuevo (Observed)\n2023-01-22 Nacimiento del Estado Plurinacional de Bolivia\n2023-02-20 Feriado por Carnaval\n2023-02-21 Feriado por Carnaval (Observed)\n2023-04-07 Viernes Santo\n2023-05-01 Dia del trabajo\n2023-06-08 Corpus Christi\n2023-06-21 A√±o Nuevo Andino\n2023-08-02 D√≠a de la Revoluci√≥n Agraria\n2023-08-06 Dia de la Patria\n2023-08-07 Dia de la Patria (Observed)\n2023-11-02 Todos Santos\n2023-12-25 Navidad\n\nAnd here's one for 2022, Santa Cruz department with observed holidays:\n2022-01-01 A√±o Nuevo\n2022-01-22 Nacimiento del Estado Plurinacional de Bolivia\n2022-02-28 Feriado por Carnaval\n2022-03-01 Feriado por Carnaval (Observed)\n2022-04-15 Viernes Santo\n2022-05-01 Dia del trabajo\n2022-05-02 Dia del trabajo (Observed)\n2022-06-16 Corpus Christi\n2022-06-21 A√±o Nuevo Andino\n2022-08-02 D√≠a de la Revoluci√≥n Agraria\n2022-08-06 Dia de la Patria\n2022-09-24 D√≠a del departamento de Santa Cruz\n2022-11-02 Todos Santos\n2022-12-25 Navidad\n2022-12-26 Navidad (Observed)\n\nThanks!",
            "Hey @kasya! Thank you so much for this!.\nIndeed those Holidays are correct, I don't quite understand what (Observed) mean but certainly those days are incorrect",
            "Hey @djcrawleravp ,\n\nI don't quite understand what (Observed) mean but certainly those days are incorrect\n\nObserved holiday in this case is when a holiday falls on Sunday and you get next Monday as a day off (for non-religious holidays). As I understood after your reply on Jul 6 - that's the way in Bolivia. I also googled a bit and it seems that Bolivia does have observed holidays that fall on Sunday.\nIs that not correct?",
            "Hi @kasya,\nI did my research in here and find out that Sunday holidays are moved to the next day.\nIn case of \"Feriado de Carnaval\" is a little bit complex. These are 2 Days (Monday and Tuesday) before \"Viernes Santo)\nIn other words, Your output is correct, I was mistaken :P",
            "@djcrawleravp  great, thanks for checking!\nIt is my understanding that these changes should be added to beta with next update.",
            "Thank you very much @kasya !!!",
            "@kasya + everyone, that's what I've just done: #698 merged today in beta  üëç\nRelease in master + new PyPi release will follow, as per our standard release workflow.\nThanks a lot everyone, cheers!\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/674",
        "title": "No \"New Year\" Holiday for Colombia in some years (2022,2023)",
        "count": 3,
        "turns": [
            "Hi everyone, I'm testing the Python holiday library for Colombia.\ncol_holidays = holidays.country_holidays('CO')\nBut some years like 2022 and 2023 doesn't have the first holiday of the year \"New Year\".\nAnother years like 2020 or 2021 doesn't have this issue.\nThanks.",
            "Apparently this is expected. The test code expects fixed holidays (for which there are 4, including New Year) to not be holidays if they fall on the weekend: https://github.com/dr-prodigy/python-holidays/blob/master/test/countries/test_colombia.py#L44\nHowever, the test case references this website which states in that 2022 New Year is a holiday: https://www.officeholidays.com/countries/colombia/\nSo there is a contradiction. I think it would make more sense for it to be a holiday but for there to be no observed holiday.\nSome articles I found suggesting that they are considered holidays but not observed on the next Monday:\nhttps://www.municipio.com.co/dias-festivos-2022.html\nhttps://cnnespanol.cnn.com/2022/04/13/dias-festivos-colombia-puentes-fiesta-2022-calendario-orix/",
            "I've confirmed that they should fall on those days, but noticed some other errors in the colombia file. The law for bridging holidays to the next monday was enacted in 1983 among other things. I'll create a PR shortly.",
            "Fixed with #676 .. Thx both! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/670",
        "title": "ModuleNotFoundError: No module named 'holidays.financial'",
        "count": 3,
        "turns": [
            "Hi guys, today after upgrade holidays got that error, I cant re stablish it on the fly.",
            "+1 seeing this as well.",
            "+1 darts uses holidays.financial and throws the same error. I had to set the version to 0.13",
            "It should now be fixed and released as v.0.14.2: thanks everyone!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/669",
        "title": "Iran holiday",
        "count": 1,
        "turns": [
            "How can I add the Iran holiday to this project?",
            "Hi,\nyou'll find all the required info here:\nhttps://github.com/dr-prodigy/python-holidays/blob/master/CONTRIBUTING.rst\nThx üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/666",
        "title": "Change day of \"Pueblos Indigenas\" for Chile",
        "count": 4,
        "turns": [
            "The real day for  \"D√≠a Nacional de los Pueblos Ind√≠genas\" in Chile (CL) is the June/21\nLink about \"senado\" of Chile.\nhttps://www.senado.cl/noticias/pueblos-originarios/confirman-feriado-para-el-21-de-junio-como-dia-de-los-pueblos-indigenas",
            "Hi @kev-dfs thx.\nAlthough I confirm from 2021 on it seems like you mention, I unfortunately couldn't find a clear rule for the previous years:\nhttps://www.timeanddate.com/holidays/chile/2022\nWould you please clarify this (or even better, create a PR yourself)?\nThx again, cheers üëç",
            "Hello @dr-prodigy couldn't find a rule either but besides that don't really get why the holiday is set to June 19. The law indicates that the holiday will be the day of the winter solstice in the southern hemisphere every year and that day will always be either June 20 or 21.\nHere is an official source of the law, and btw thank u very much for this library it has been prove very helpful to me\nhttps://www.bcn.cl/leychile/navegar?idNorma=1161743",
            "I've submitted the following PR -> #828\nThe holiday takes place on the same date as the solstice; by calculating the solstice date using the formulas from the book Astronomical Algorithms, we just need to adjust it to the Chile timezone UTC-3.\nThe full list is available here -> https://github.com/pavolgaj/AstroAlgorithms4Python\nThis approach doesn't require any extra dependencies, although if you consider adding https://pypi.org/project/astronomy-engine/ we can get the date using the astronomy-engine.",
            "Just released on beta branch.. closing this, thanks everyone! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/658",
        "title": "Add Holidays for Oman (country)",
        "count": 1,
        "turns": [
            "i would like to contrubute and add Oman in the list\nbasically it is similar to UAE country with differ in few holidays and yes we are same in the Islamic holidays as well as we depend on moon for holidays decisions.\nplease let me know what is require from my end.",
            "hi @ammaralfarsi thank you! you can then proceed in implementing it.\nYou will find all the required info here:\nhttps://github.com/dr-prodigy/python-holidays/blob/master/CONTRIBUTING.rst\nThx, best üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/657",
        "title": "Docs contain 'OD' as a supported subdivision of 'IN' but but accessing it returns error \" Country IN does not have subdivision 'OD' \"",
        "count": 1,
        "turns": [
            "ah just checked looks like its using OR in the library but the docs mention OD.\nit may be because the subdiv's name was changed from 'OR' to 'OD' around 2012",
            "Fixed on beta.. thx, cheers üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/654",
        "title": "England country option",
        "count": 2,
        "turns": [
            "England is no longer accepted as a country.\nA lovely 6am wake up on a Saturday result.\nWhy change it?",
            "That's why:\nclass England(UnitedKingdom):\n    def __init__(self, **kwargs):\n        warnings.warn(\n            \"England is deprecated, use UK(subdiv='England') instead.\",\n            DeprecationWarning,\n        )\n        kwargs[\"subdiv\"] = \"England\"\n        UnitedKingdom.__init__(self, **kwargs)",
            "PS: btw, England country is in fact deprecated, but not yet disabled (although soon it will be)."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/650",
        "title": "Add Holidays for Liechtenstien (country)",
        "count": 4,
        "turns": [
            "It would be great if you could add Liechtenstien.\n  # Holidays Every Year same date 2022\n  - '2022-01-01' #Neujahrstag\n  - '2022-01-02' #Berchtoldstag\n  - '2022-01-06' #Heilige Drei Konige\n  - '2022-02-02' #Lichtmess\n  - '2022-03-19' #Joseftag\n  - '2022-05-01' #Tag der Arbeit\n  - '2022-08-15' #Furstenfest (Staatsfeiertag)\n  - '2022-09-08' #Maria Geburt\n  - '2022-11-01' #Allerheiligen\n  - '2022-12-08' #Maria Empfagnis\n  - '2022-12-24' #Heiligabned\n  - '2022-12-25' #1. Weihnachtstag\n  - '2022-12-26' #2. Weihnachtstag\n  - '2022-12-31' #Silvester\n  # Holidays 2022\n  - '2022-03-01' #Fasnachtsdienstag - https://en.wikipedia.org/wiki/Shrove_Tuesday\n  - '2022-04-15' #Karfreitag\n  - '2022-04-17' #Ostersonntag\n  - '2022-04-18' #Ostermontag\n  - '2022-05-26' #Christi Himmelfahrt\n  - '2022-06-05' #Pfingstsonntag\n  - '2022-06-06' #Pfingstmontag\n  - '2022-06-16' #Fronleichnam",
            "@gerdschadler and @dr-prodigy, I would like to contribute here.\nThe clarification needed is, the holidays listed are not matching to the list provided in the below link.\nhttps://tourismus.li/en/our-country/about-liechtenstein/bank-holidays-in-liechtenstein/\nMay I know the trusted website to refer for the holidays and then to add in our holidays library.",
            "@PriyabrataSamantaray\nYou're right. Here's an explanation.\nIn addition to the statutory public holidays, there are two other public holidays that can be considered paid public holidays on the basis of collective labor agreements between individual professional groups.\nCandlemas February 2nd\nJosefi March 19\nIn addition, the following public holidays are considered bank holidays* across the country\nBerchtold's Day January 2nd\nShrove Tuesday 47 days before Easter\nGood Friday Friday before Easter\nChristmas Eve December 24th\nNew Year's Eve December 31st\n\nhttps://www.llb.li/en/contact/bank-holidays",
            "Thanks @gerdschadler for the clarification, I'll work on this issue and update here once it is ready for beta version.",
            "Completed by @kasya , merged in beta. Closing, thx everyone"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/644",
        "title": "ZA returns an empty dictionary",
        "count": 3,
        "turns": [
            "Requests for South Africa's list of holidays returned an empty dictionary:\nimport holidays\nprint(holidays.SouthAfrica())\n{'observed': True, 'expand': True, 'subdiv': None, 'years': set()}",
            "This is true for every country (at least the limited list of countries I tried). Add in the years kwarg to get the holidays of certain years. E.g.:\n> pprint.pprint(holidays.SA(years=[2022]))\n{datetime.date(2022, 5, 1): 'Eid al-Fitr Holiday',\n datetime.date(2022, 5, 2): 'Eid al-Fitr Holiday',\n datetime.date(2022, 5, 3): 'Eid al-Fitr Holiday',\n datetime.date(2022, 5, 4): 'Eid al-Fitr Holiday',\n datetime.date(2022, 7, 8): 'Eid al-Adha Holiday',\n datetime.date(2022, 7, 9): 'Eid al-Adha Holiday',\n datetime.date(2022, 7, 10): 'Eid al-Adha Holiday',\n datetime.date(2022, 7, 11): 'Eid al-Adha Holiday',\n datetime.date(2022, 7, 12): 'Eid al-Adha Holiday (observed)',\n datetime.date(2022, 7, 13): 'Eid al-Adha Holiday (observed)',\n datetime.date(2022, 9, 22): 'National Day Holiday (observed)',\n datetime.date(2022, 9, 23): 'National Day Holiday'}\n\nEdit: I used SA, which is probably Saudi Arabia. ZA is South Africa.",
            "Thank you for helping!",
            "Thanks @jaharkema\nThat's the pre-initialized way. You could also simply look for a specific date in an holidays object to have it initialized for the requested date's year.. like so:\n>>> import holidays\n>>> import datetime\n>>> za = holidays.ZA()\n>>> datetime.date(2022,1,1) in za\nTrue\n>>> za\n{datetime.date(2022, 1, 1): \"New Year's Day\", datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 4, 18): 'Family Day', datetime.date(2022, 12, 16): 'Day of Reconciliation', datetime.date(2022, 12, 25): 'Christmas Day', datetime.date(2022, 12, 26): 'Day of Goodwill', datetime.date(2022, 3, 21): 'Human Rights Day', datetime.date(2022, 4, 27): 'Freedom Day', datetime.date(2022, 5, 1): \"Workers' Day\", datetime.date(2022, 6, 16): 'Youth Day', datetime.date(2022, 8, 9): \"National Women's Day\", datetime.date(2022, 9, 24): 'Heritage Day', datetime.date(2022, 12, 27): 'Christmas Day (Observed)', datetime.date(2022, 5, 2): \"Workers' Day (Observed)\"}\n\nüëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/643",
        "title": "TypeError: Cannot convert type '<class 'pandas.core.series.Series'>' to date.",
        "count": 1,
        "turns": [
            "Hi, i have problem.\nIdea: create a boolean dataframe with hollidays... example: data['feriado'], true or false, but i need get a date from data['data'].\ni try:\ndata['feriado'] = data['data'] in pt_holidays\nbut have error:\nTypeError: Cannot convert type '<class 'pandas.core.series.Series'>' to date.\nNote: data['data'] is 2022-03-16....\nand i can¬¥t convert. i try 1 million different ways but always have error to convert\ni think you should consider convert series automatically to date\nfor example:\ndata['feriado'] = data['data'] in pt_holidays\ni only want a boolean result like data['feriado'] = true/false",
            "Unfortunately, holidays' HolidayBase object is by design a Dict[date, str], so it won't support inclusion evaluations based on different / specific data types such as pandas Series.\nTherefore, in order to obtain the correct result, you will have to convert data['data'] into a datetime.date object."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/636",
        "title": "Ireland considering UK as base class and hence not being a country itself",
        "count": 9,
        "turns": [
            "Issue also opened here:\nhome-assistant/core#67542\nLooks like Ireland is being considered as being part of the UK which is wrong as not all the holidays in the UK exist, or necessarily exist in Ireland.\nTake a reference on this comment: home-assistant/core#67542 (comment)",
            "It seems that problem can be:\nhttps://github.com/dr-prodigy/python-holidays/blob/f4a03e69907b0bf0249e18c263968b5fbfc6c0ba/holidays/utils.py#L229\nand:\nhttps://github.com/dr-prodigy/python-holidays/blob/f4a03e69907b0bf0249e18c263968b5fbfc6c0ba/holidays/countries/ireland.py#L25",
            "My comment goes in the original issue matter in HA forum, that Ireland seems not to be one of the list_supported_countries, but if you want to discuss other topic here just ignore my comment.",
            "I don't fully understand the last part, but yeah, basically the intended discussion here (at least for me) is to be able to use again Ireland as a country in Home Assistant, not interested in politics :)\nLet me know if I should change something on the details so it's clearer.",
            "IMHO the issue subject must reflect what the problem is.\nThe most info you can include (besides point to another place) will make easier to maintainers to understand the problem and can be easy to them to fix.\nIMHO the actual redaction seems to argue about a different matter.",
            "Sure, sorry about that, I'll try to do my best, but as I mentioned in the other issue, I'm not fully aware of this library hence the ask for a recommendation of what to explain here...\nFeel free to suggest any other changes or whatever is needed to get this properly explained",
            "I'd humbly suggest that you don't inherit the class for one country from another - perhaps you need to audit the codebase to ensure this problem isn't going to manifest for some other country class as well.\nregardless of the political aspect of this - there are a lot of assumptions that things are going to match and that changes are only going to be additive etc etc\n(I do have some experience of this as developer and maintainer of the pear/php equivalent -  https://pear.php.net/package/Date_Holidays )",
            "Indeed, and the following is a good example of the dfferences:\n17th March 2022 - St. Patricks's day Bank Holiday in Ireland and Northern Ireland only.\n18th March 2022 - Day of Remembrance and Recognition Bank Holiday in Ireland only.",
            "Thanks to @TeoTN this is now fixed and released on beta.\nClosing this, thx everyone üëç",
            "hi, just wondering when will this fix be in a \"proper\" (non-beta) release?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/635",
        "title": "Australia QLD Duplicate Entries in 2020 for \"The Royal Queensland Show\"",
        "count": 1,
        "turns": [
            "The duplicate appears in the output for holidays version==0.13.\nA recent previous version actually had this holiday correctly moved.\nReference:\nhttps://www.qld.gov.au/recreation/travel/holidays/queensland-public-holiday-dates-for-2020\nNote that 2021 appears to produce the correct date output.\nAlthough technically the holiday was repealed and replaced with \"2021 People's long weekend\".\nhttps://www.qld.gov.au/recreation/travel/holidays/public\nCode to replicate:\nimport holidays\n\n# Select: Autralia, QLD, and the years to generate.\nstartYear = 2020\nendYear = 2020\nhols = holidays.Australia(\n    years=range(startYear, endYear + 1), subdiv=\"QLD\", expand=False\n)\n\nhols.get_named(\"The Royal Queensland Show\")\nOutput:\n[datetime.date(2020, 8, 14), datetime.date(2020, 8, 12)]",
            "Closing this as #923 has been merged into beta.\n@gavingc thanks for reporting this!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/632",
        "title": "Confederate Memorial Day, AR",
        "count": 2,
        "turns": [
            "Arkansas does not recognize Confederate Memorial day as a state holiday.\nCurrent Arkansas holidays:\nJanuary 1 . . . . . . . . . . . . . . . . . . . . . . . . . New Year‚Äôs Day (Observed on Friday December 31,2021)\nJanuary 17 . . . . . . . . . . . . . Dr. Martin Luther King Jr.‚Äôs Birthday\nFebruary 21 . . . . . . . . . . . . . . . George Washington‚Äôs Birthday and Daisy Gatson Bates Day\nMay 30 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Memorial Day\nJuly 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . Independence Day\nSeptember 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Labor Day\nNovember 11 . . . . . . . . . . . . . . . . . . . . . . . . . . . . Veterans Day\nNovember 24 . . . . . . . . . . . . . . . . . . . . . . Thanksgiving Day\nDecember 24 . . . . . . . . . . . . . . . . . . . . . . . . . . Christmas Eve (Observed on Friday, December 23)\nDecember 25 . . . . . . . . . . . . . . . . . . . . . . . . . . . Christmas Day (Observed on Monday, December 26)\nHolidays_2022.pdf",
            "hi, this is in fact already working, as you can see:\n>>> import holidays\n>>> import datetime\n>>> x = holidays.US(subdiv='AK')\n>>> x\nholidays.country_holidays('US', subdiv='AK')\n>>> datetime.date(2022,1,1) in x\nTrue\n>>> x\n{datetime.date(2022, 1, 1): \"New Year's Day\", datetime.date(2022, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2022, 2, 21): \"Washington's Birthday\", datetime.date(2022, 3, 28): \"Seward's Day\", datetime.date(2022, 5, 30): 'Memorial Day', datetime.date(2022, 6, 19): 'Juneteenth National Independence Day', datetime.date(2022, 6, 20): 'Juneteenth National Independence Day (Observed)', datetime.date(2022, 7, 4): 'Independence Day', datetime.date(2022, 9, 5): 'Labor Day', datetime.date(2022, 10, 18): 'Alaska Day', datetime.date(2022, 11, 11): 'Veterans Day', datetime.date(2022, 11, 24): 'Thanksgiving', datetime.date(2022, 12, 25): 'Christmas Day', datetime.date(2022, 12, 26): 'Christmas Day (Observed)'}\n\nI suggest you to double check your init code to be sure you're setting up holidays for AK.\nClosing, cheers! üëç",
            "Well, Arkansas is AR and Alaska is AK.\nI do see the correct holidays in my calendar for AR now."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/626",
        "title": "BUG: failed documentation build on readthedocs.io",
        "count": 3,
        "turns": [
            "I can't see the build logs of readthedocs.io, but something bad is happening as the documentation at https://python-holidays.readthedocs.io/en/latest/ is nowhere close to what it should look like!",
            "Hey there Mike @mborsetti I was in fact about to open an issue on this!\nIt seems the build is misbehaving due to some missing config file / unexpected directory structure.. I could possibly provide a fix, but I'd rather let you do it as you mean to..\nCould you give it a look?\nThx!",
            "Absolutely!  Just found the log files at https://readthedocs.org/projects/python-holidays/builds/16091376/",
            "It seems now everything is working (btw, beautiful docs!! :-D), so I've merged this in master too.\nAlso, I've updated readthedocs config to default to \"master\" branch (it was to beta), so we should now see docs build triggered when we release a new master version (which is then the one to document, too) only.\n.. Thank you, brilliant! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/625",
        "title": "Can't pop New Years (observed) by name if it falls in previous year",
        "count": 2,
        "turns": [
            "Version: holidays 0.12\nPlatform: Python 3.10.0 for Windows\nExample:\nimport holidays\n\n\nclass TestClass(holidays.UnitedStates):\n    def _populate(self, year):\n        holidays.UnitedStates._populate(self, year)\n\n        self.pop_named('New Year')\n\n\ntest_holidays = TestClass(years=2022, state='CA')\n\nfor date, name in sorted(test_holidays.items()):\n    print(date, name)\nExpected result: A list of dates and holidays\nActual result:\nTraceback (most recent call last):\n  File \"test.py\", line 11, in <module>\n    test_holidays = TestClass(years=2022, state='CA')\n  File \".virtualenv\\lib\\site-packages\\holidays\\countries\\united_states.py\", line 104, in __init__\n    HolidayBase.__init__(self, **kwargs)\n  File \".virtualenv\\lib\\site-packages\\holidays\\holiday_base.py\", line 182, in __init__\n    self._populate(year)\n  File \"test.py\", line 8, in _populate\n    self.pop_named('New Year')\n  File \".virtualenv\\lib\\site-packages\\holidays\\holiday_base.py\", line 363, in pop_named\n    self.pop(key)\n  File \".virtualenv\\lib\\site-packages\\holidays\\holiday_base.py\", line 351, in pop    \n    return dict.pop(self, self.__keytransform__(key))\nKeyError: datetime.date(2021, 12, 31)",
            "@EdwardBetts Edward, thanks for your report!\n@dr-prodigy Maurizio, thankfully this code does not generate any errors when run against the beta branch. I think my PRs on ensuring that only holidays for the year requested are returned by the library fix it.\nMaybe it's time for a new release (after you accept #620, obviously! üòâ)",
            "@TeejMonster thx for your report!\n@mborsetti it sounds like a good plan! :) I confirm this is already fixed in beta: I'm applying the last fixes/updates, then time for a new release! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=6&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/623",
        "title": "about hong kong",
        "count": 2,
        "turns": [
            "Hong Kong is not an independent country, so it feels like you still need to revise it, which can easily lead to ambiguity @EdwardBet",
            "Hello doctor, your work is great, it is very helpful to me, give you a thumbs up",
            "Hong Kong is not an independent country, so it feels like you still need to revise it, which can easily lead to ambiguity @EdwardBet\n\nThis package follows the International Organization for Standardization (ISO) classification.\nMay I suggest that you work with them on any reclassification? See https://www.iso.org/iso-3166-country-codes.html"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/619",
        "title": "Orphaned code on united_states.py, commit c4a2a0f",
        "count": 1,
        "turns": [
            "If I'm not mistaken, lines 378 through 381 are orphans.",
            "Hey @Sudo-Rob that's correct! I applied your suggested fix and released in beta.\nThx, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/616",
        "title": "Wrong US Holiday Shown for 2022-06-20",
        "count": 3,
        "turns": [
            "According to the US government (OPM), Juneteenth is observed on the 20th of June this year.  However, it shows up with the name of a non-federal holiday that is only observed by a few states in April.\nIn [1]: import holidays\n\nIn [2]: holidays.__version__\nOut[2]: '0.12'\n\nIn [3]: holidays.UnitedStates().get(\"2022-06-19\")\nOut[3]: 'Juneteenth National Independence Day'\n\nIn [4]: holidays.UnitedStates().get(\"2022-06-20\")\nOut[4]: 'Confederate Memorial Day (Observed)'",
            "Drive-by: the error here is that name is assigned here but then accidentally used down here without first being reassigned.",
            "Fixed by https://github.com/dr-prodigy/python-holidays/pull/595 into beta?",
            "You're right.. closing this, thank you! :-)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/615",
        "title": "(US Holidays) Observed and not observed inverted (and also the order), therefore incorrect",
        "count": 0,
        "turns": [
            "In this case (2021):\n\n2021-01-31: was Friday (not Observed) but function returns Observed. Furthermore, it has the second position, but it was the last holidays of the year\n2021-06-18 / 2021-06-19: 18th results Observed, but it was not observed (it was Friday), instead 19th results not observed but it was Saturday. Furthermore, the order is inverted (19th comes before 18th)\n2021-07-04 / 2021-07-05: ....\n2021-12-24 / 2021-12-25: ....\n\nIt seems to be a ripetitive error, because it always presents the same path:\n\nObserved and not Observed inverted\nInverted Order (the first date comes after the last)\n\nThanks for attention :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/614",
        "title": "Province holiday in Italy",
        "count": 5,
        "turns": [
            "I see in code that there are \"santo patrono\" holidays for provinces (what's called in code \"Provinces holidays\"). But why? The \"Santo patrono\" is different from city to city, every municipality has its own special holiday. There isn't province holiday here.\nI think there is no mean to keep provinces in Italy... Furthermore they're even partial as my province (VA) is not event present.\nTo manage the single municipality is a madness (or maybe finding some webservice that has that data freely available through a rest call... :) )",
            "Hi @energywave,\nthx for your message, but I'm sorry I don't really catch its main goal (usually features are requested for add, rather than removal :) ).. to clarify :\n\nAFAIK, a lot of small municipalities and companies align their holidays to their province's ones, so the feature is beneficial for those too\nif that's not your case, you can always avoid setting the subdivision parameter, and you won't receive any local holiday\nby design, python holidays doesn't rely on webservices to work\n\nFinally, if Varese's absence is your main concern, I'm sorry it went unnoticed until now.. But then you could then submit your first PR.. :)\nThx, cheers",
            "Thank you for your reply, @dr-prodigy . I'll reply by quoting:\n\nusually features are requested for add, rather than removal :)\n\nahah, yes, you're right, I understand that sounds a bit strange. I was only thinking that a user could specify province thinking to have a more accurate result but, in fact, he will add a holiday that most probably is wrong for him.\n\n\nAFAIK, a lot of small municipalities and companies align their holidays to their province's ones, so the feature is beneficial for those too\n\n\nI don't know of such a situation of municipalities near where I live (Busto Arsizio, VA). I've seen you're italian too and near not far from me. For what I know every municipality has his own special holiday while the province holiday (Varese) is not an holiday, actually, for us that don't live in the province city.\nWhile it's true that some organizations use \"Sant'Ambrogio\" as special holiday for the province of Milan (I think you was referring to that) I don't know of such cases outside the Milan province.\nIn fact event Wikiepdia states that:\nIl giorno festivo varia da comune a comune, in base al santo celebrato.\n\n\nif that's not your case, you can always avoid setting the subdivision parameter, and you won't receive any local holiday\n\n\nYes, you're right. But that could be misleading to specify a province and receive a wrong holiday. Maybe it's better to just not provide it.\n\n\nby design, python holidays doesn't rely on webservices to work\n\n\nOk, I see.\n\nFinally, if Varese's absence is your main concern, I'm sorry it went unnoticed until now.. But then you could then submit your first PR.. :) Thx, cheers\n\nYeah, I've discovered your library coming from Home Assistant by configuring workdays. while configuring I noted the province and I was wondering why to provide it, so I've read the code here to understand. I wanted to point that out to you, thinking that maybe you were not italian and was thinking that province special holiday was important.\nThe library is your and you decide. As you just closed the issue I think you already made the decision to keep provinces.\nIf you confirm that, yes, I'll make a PR by putting all the missing provinces in the list.\nThank you for your attention.",
            "I think the problem can be fixed through documentation, as the subdivision for which the \"Festa del santo patrono\" holiday is calculated is the \"capoluogo di provincia\", not the entire provincia.\nThat should be an easy fix.\n\nI'll make a PR by putting all the missing provinces in the list.\n\nThat would be nice. We currently have ~40 provincial subdivisions out of the \"80 provinces, 2 autonomous provinces, 4 decentralized regional entities, 6 free municipal consortia and 14 metropolitan cities\" that ISO 3166-2 specifies, so we're missing quite a lot.",
            "I think the problem can be fixed through documentation, as the subdivision for which the \"Festa del santo patrono\" holiday is calculated is the \"capoluogo di provincia\", not the entire provincia.\n\nAt this point I agree. We should only specify it in the README.rst. I already added all the provinces there so maybe I can add a statement about that, then @dr-prodigy will review that if it's ok when merging my PR.\n\nThat would be nice. We currently have ~40 provincial subdivisions out of the \"80 provinces, 2 autonomous provinces, 4 decentralized regional entities, 6 free municipal consortia and 14 metropolitan cities\" that ISO 3166-2 specifies, so we're missing quite a lot.\n\nI already implemented all such provinces, even those like the \"Santo patrono\" of Sud Sardegna that is the Thursday after second Sunday in May... :D\nNow I'm adding tests for those new provinces and when done I'll make the PR in the beta branch.",
            "I've released in beta #617 so this seems done as well.\nThanks for your support @energywave @mborsetti , cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/613",
        "title": "Holiday name traduction in other language - Suggestion",
        "count": 3,
        "turns": [
            "Would it be possible to be able to translate the holidays into another language? example in French?",
            "This PR adds required functionality. After it's merged the holiday names will be translatable into other languages (the most of translations still need to be done).",
            "@dr-prodigy This issue can probably be closed now that v0.20 is released.",
            "The v0.20 has been released and includes basic l10n support. Any localization PRs would be highly appreciated!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/612",
        "title": "Holidays in Malta",
        "count": 1,
        "turns": [
            "Would it be possible to add support for Malta, Europe as holidays ? Official list is available here: https://www.gov.mt/en/About%20Malta/Pages/Public%20Holidays.aspx",
            "Hi,\nrelevant update just pushed on beta.\nThx, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/610",
        "title": "AU VIC Next Holiday shown incorrectly",
        "count": 3,
        "turns": [
            "The next holiday for VIC, Australia is showing up as Good Friday (15/4/22). However, the next holiday should be Labour Day (14/3/22). The labour day holiday is shown in the holiday list but not in the right order. It shown in between Queen's Birthday (Jun) and Grand Final Day (Sep).",
            "@kaizersoje This library, in order to be as efficient as possible, does not sort the output by date.\n@dr-prodigy Maurizio, funny to see this issue being opened because as I was working on my contribution this weekend I bumped into this as well, and wondered why the holidays aren't returned sorted. It somehow was my expectation too that they would be, but then remembered the required and welcomed focus on speed. I can do a PR to add warnings and examples in the docs about this.\nWe could also add a sorted parameter, default it to False, and do the sorting in the library if set to True. Can add this to my PR.\nWhat do you think?",
            "@mborsetti Due to dates not being sorted, the state to the next holiday is also incorrect.",
            "No longer an issue."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/598",
        "title": "US - Confederate Memorial Day is NOT a national holiday",
        "count": 2,
        "turns": [
            "I noticed when looking at US holidays for 2021 and later that you have Confederate Memorial Day as a holiday.  This is NOT an official national holiday, and many people would consider including it in the list of US holidays as very inflamatory!  It is only observed in some states, and even then, only as a day off in fewer states (see for example https://www.timeanddate.com/holidays/us/confederate-memorial-day or https://www.forbes.com/sites/nicholasreimann/2021/04/26/state-offices-close-for-confederate-memorial-day-in-alabama-and-mississippi-heres-why-its-still-an-official-holiday-there/).",
            "I believe this is related to #594 which I have opened a PR for: https://github.com/dr-prodigy/python-holidays/pull/595",
            "Thank you both @DManowitz-VA @apicht , I will follow up on this on #595\nCheers everyone! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/597",
        "title": "If state doesn't exist, it should raise an error",
        "count": 6,
        "turns": [
            "This is confusing:\n>>> import date\n>>> import holidays\n>>> date(2021,3,8) in holidays.CountryHoliday(\"DE\", state=\"BE\")    # should raise an error, because state=\"BE\" does not exist\nFalse\n>>> date(2021,3,8) in holidays.CountryHoliday(\"DE\", prov=\"BE\")\nTrue\n\nThe first line after the imports should better raise an error, because for Germany one has to use prov and not state. At the moment this leads to subtle bugs in computing wether a day is a holiday or not.",
            "@dr-prodigy I have a proposed solution.\nAccording to the README, we don't have a single country where we use both state and prov.  Since this is the case, I propose we simplify everything by conforming to ISO 3166-2 and call these subdivisions (argument name subdivision or subd) and make everything simple.\nWe can maintain backwards compatibility by assigning the value of either state or prov, if specified, to subdivision.\nIf you agree I can do global changes this weekend and submit a PR.",
            "Hey @asmaier\nthank you for pointing this out. This inconsistency in fact has already been raised (#479 ) and would in fact require a review.\n@mborsetti\nthank you, I like your solution a lot! If you wish to implement it, I'll absolutely bless it :-)\nThen - I believe - we could/should possibly review the current subdivision names to adhere to the reported ISO codes, but that can come at a later time.\nThanks both! üëç",
            "@dr-prodigy\n\nI like your solution a lot! If you wish to implement it, I'll absolutely bless it :-)\n\nCool.\nWill do the subdivisions, but first I need to make sure that #586 and #602 are merged/commented into beta branch because of the interdependencies with the documentation and I don't want to have to deal with the hell of trying to merge (or rebase?) commits back into my branch. I almost lost it today with #600, #601, and #602 (I think I need to take a class on git!)\nWhat name do you prefer for the parameter: subdivision=,  subdiv= or subd=?\n\nThen - I believe - we could/should possibly review the current subdivision names to adhere to the reported ISO codes, but that can come at a later time.\n\nYup, later time.",
            "Hey there @mborsetti !\nRegarding your question, I didn't have a chosen answer, to be honest :-)\nGiven that we already have another shortened property (prov instead of province) I would then go for subdiv.\nRegarding the other 2 PRs, I've just merged #602 , while I kindly ask you to review #586 : I've added some notes on it.\nNo worries about git, it's more about you always do complex / extensive tasks, and this expose you to more difficulties.. but you're doing very fine! :-)\nThank you very much, best",
            "Hi Maurizio/@dr-prodigy!\nI agree with subdiv, which is why I gave you three choices! :)\n#586 is fixed; I will be handling this next in my spare time.",
            "This is now available in beta.. thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/594",
        "title": "US - Juneteenth National Independence Day (Observed): name bug",
        "count": 1,
        "turns": [
            "This line is declaring the name variable:\nhttps://github.com/dr-prodigy/python-holidays/blob/57dd2ed2b8659c76f776f10207456e5231c82099/holidays/countries/united_states.py#L326\nThis then gets picked up here, the cruel irony of which is not lost on me:\nhttps://github.com/dr-prodigy/python-holidays/blob/57dd2ed2b8659c76f776f10207456e5231c82099/holidays/countries/united_states.py#L369-L380\nIn practice:\n>>> us_holidays.get('June 20, 2022')\n'Confederate Memorial Day (Observed)'\n\nI will open a PR shortly to fix this.",
            "This is now fixed in beta.\nThx, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/592",
        "title": "country BR, state SC - incorrect holiday",
        "count": 4,
        "turns": [
            "https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/brazil.py#L202\nthere is a law (from 2017) that moves 11th aug to the next sunday whenever it falls in a work day.\nhttps://www.sc.gov.br/noticias/temas/institucional/data-magna-de-santa-catarina-sera-comemorada-no-proximo-domingo\n\"O adiamento do feriado est√° previsto na Lei n¬∫ 17.335, de 30 de novembro de 2017, que prev√™ a transfer√™ncia, sempre que o dia 11 de agosto e o dia 25 de novembro coincidirem com dias √∫teis da semana, dos feriados e os eventos alusivos √†s datas, para o domingo subsequente.\"\nhttp://leis.alesc.sc.gov.br/html/2017/17335_2017_lei.html\n\"Dia do Estado de Santa Catarina\nSempre que o dia 11 de agosto coincidir com dia √∫til da semana, o feriado e os eventos alusivos √† data ser√£o transferidos para o domingo subsequente.\nA semana em que recair o dia 11 de agosto constituir√° per√≠odo de celebra√ß√µes c√≠vicas em todo Territ√≥rio catarinense, sob denomina√ß√£o de Semana de Santa Catarina.\"",
            "My opinion on this is that since 2018, this is not an holiday anymore.\nI may suggest 2 solutions:\n1 - Remove the holiday from 2017 onwards\n2 - Include the logic to move the date to Sunday whenever it falls in a workday.\nI can take this one @dr-prodigy ... what's your thoughts about this?",
            "Hi @Nalguedo thank you for your notes.\nI agree with you on both solutions.. holidays explicitly set in the weekend are not very impacting, being them days off by themselves, but in this case it's definitely correct to track it like so.. Pls go on thx a lot! üëç",
            "@dr-prodigy ... you can close this issue [ https://github.com//pull/761 ]",
            "Thank you very much @Nalguedo @rpvelloso ! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/591",
        "title": "TypeError: 'in <string>' requires string as left operand, not NoneType",
        "count": 3,
        "turns": [
            "The latest release has this line  which fills in self.state value if state does not exist in kwargs but it does not help if kwargs['state'] exists but is None. Example repro:\nBroken Version 0.12\n# pip show holidays\nName: holidays\nVersion: 0.12\n...\n# python\nPython 3.7.12 (default, Jan  4 2022, 02:07:00)\n[GCC 7.5.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import holidays\n>>> h = holidays.UK(prov=None, state=None, years=[2020], expand=False)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py\", line 36, in __init__\n    HolidayBase.__init__(self, **kwargs)\n  File \"/apps/python3/lib/python3.7/site-packages/holidays/holiday_base.py\", line 182, in __init__\n    self._populate(year)\n  File \"/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py\", line 109, in _populate\n    self._country_specific(year)\n  File \"/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py\", line 160, in _country_specific\n    if self.state not in (\"Scotland\") and year >= 1971:\nTypeError: 'in <string>' requires string as left operand, not NoneType\n\nLast working Version: 0.11.3.1\n# pip show holidays\nName: holidays\nVersion: 0.11.3.1\n...\n# python\nPython 3.7.12 (default, Jan  4 2022, 02:07:00)\n[GCC 7.5.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import holidays\n>>> h = holidays.UK(prov=None, state=None, years=[2020], expand=False)\n>>>",
            "Expericing same issue here.\nimport holidays\nholidays.CountryHoliday('UnitedKingdom', years=[2022])",
            "I got further before reaching the same error:\nimport holidays    \nimport datetime\n\ndatetime.date(2022, 1, 1) in holidays.CountryHoliday('US') # True (works) \n\ndatetime.date(2022, 1, 1) in holidays.CountryHoliday('UK') # doesn't work; error as described in title \n\n'1/1/2015' in holidays.CountryHoliday('UK') # also doesn't work; error as described in title",
            "Fixed in beta.. thx everyone! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/584",
        "title": "Missing holiday \"Friedensfest\" for Augsburg, Germany",
        "count": 2,
        "turns": [
            "Hey, i'd like to mention that there is a holiday missing.\nOn xxxx-08-08 the \"Friedensfest\" is celebrated in the city of Augsburg, Bavaria, Germany. It is celebrated exclusively there, otherwise, the holidays are equivalent to the Bavarian ones. However, it is a valid public holiday.\nCould you add it, or in case it's to much of a hassle, add it as a note for Germany to the documentation?\nEDIT: I'm aware of the note in the source code, it's just not very visible there.",
            "Hi,\nthank you for your interest and support!\nAs you could notice in the code, that case was in fact evaluated and left willingly unmanaged, being that holiday not valid for whole Bavaria.\nAlso, unfortunately, there is currently no suitable space in the project doc (which is very concise and doesn't provide country specific details).\nNote: @mborsetti promised to be soon working on some Sphynx documentation for the library. Depending on the depth we wish to reach, it could possibly be the right place to put this information. Mike please let us know your comments on the topic, if you wish, thx!\nThanks again, best",
            "evaluated and left willingly unmanaged\n\nClosing then.\nWould still welcome everyones input!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/583",
        "title": "Observed Holidays for Canada is incorrect",
        "count": 3,
        "turns": [
            "Hi,\nJust noticed that the observed holidays logic for Canada is incorrect, for example the Christmas, boxing days, and new year days which falls on the weekend should have the following Monday (and Tuesday respectively) as the observed holidays not the previous day.\nEx:\nChristmas = 25th - Saturday >Monday\nBoxing day = 26th - Sunday>Tuesday\nNew year day = 31 = Saturday> Monday",
            "There's a pull request open to correct this for Christmas Day. It should probably be expanded to include New Year's Day\n#579",
            "Yes, I just noticed this also and it's showing Saturday January 1 2022 as the holiday but there should be Observed on Monday Jan 3 2022...",
            "Fixed with #678 .. closing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/581",
        "title": "Canada Holiday Error - Observed Christmas Day",
        "count": 1,
        "turns": [
            "This year, the Observed Christmas holiday in Canada was on Monday 27th Dec and following Observed Boxing Day was Tue 28th Dec\nhttps://github.com/dr-prodigy/python-holidays/blob/94d767706111b9b725bf33c122ef4f7f64566f7a/holidays/countries/canada.py#L251\nLogic here states that if Christmas falls on a Saturday, the observed Holiday is on Friday.\nNow I haven't gone back in time to validate the pattern, but either it needs to be double-checked or an exception added for times when Saturday holidays are observed on Monday.\nCurrent List generated for 2021:\n2021-01-01 New Year's Day\n2021-02-15 Family Day\n2021-04-02 Good Friday\n2021-04-05 Easter Monday\n2021-05-24 Victoria Day\n2021-07-01 Canada Day\n2021-08-02 Civic Holiday\n2021-09-06 Labour Day\n2021-10-11 Thanksgiving\n2021-12-24 Christmas Day (Observed)\n2021-12-25 Christmas Day\n2021-12-27 Boxing Day (Observed)\n2021-12-31 New Year's Day (Observed)",
            "Hi,\nthis is already being analyzed / reviewed on #579\nMarking as duplicate.. Let's follow up there, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/569",
        "title": "US Holidays Error: dictionary changed during iteration when passing years to holidays.US constructor",
        "count": 12,
        "turns": [
            "Attempting to use code to get US holidays for specific years.  This code works for some countries but not US (nor Canada)\nimport holidays\nimport numpy as np\nprint(holidays.__version__)\nyears = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\nx = holidays.US(years=years)\n\nThis code works when I try different countries: FR, GB, RU, DE, ES, CZ, AU, JP, CN, IN\nThis syntax fails to return results for the countries: US, CA\nThis syntax for passing numpy arrays I found in a ticket with a CZ example.  (https://github.com/dr-prodigy/python-holidays/pull/528).\nI am running on Databricks runtime 10.0.  The holidays version is 0.11.3.1 as you see below.\nThe output I got was for US (or CA) is:\n0.11.3.1\nOut[41]: \nRuntimeError: dictionary changed size during iteration\n\nExample output when I use another country, such as AU is:\n0.11.3.1\nOut[42]: {datetime.date(2016, 1, 1): \"New Year's Day\",\n datetime.date(2016, 1, 26): 'Australia Day',\n datetime.date(2016, 3, 25): 'Good Friday',\n datetime.date(2016, 3, 28): 'Easter Monday',\n datetime.date(2016, 4, 25): 'Anzac Day',\n datetime.date(2016, 12, 25): 'Christmas Day',\n datetime.date(2016, 12, 27): 'Christmas Day (Observed)',\n datetime.date(2016, 12, 26): 'Boxing Day',\n datetime.date(2017, 1, 1): \"New Year's Day\",\n datetime.date(2017, 1, 2): \"New Year's Day (Observed)\",\n...",
            "Hi @extrospective\nthank you for your interest in python-holidays.\nI've made a test on your code, but I can't seem to replicate your issue, neither with US, nor with CA.\nHere's my result:\n>>> import holidays\n>>> import numpy as np\n>>> print(holidays.__version__)\n0.11.3.1\n>>> years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\n>>> x = holidays.US(years=years)\n>>> x\n{datetime.date(2016, 1, 1): \"New Year's Day\", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): \"Washington's Birthday\", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): \"New Year's Day\", datetime.date(2017, 1, 2): \"New Year's Day (Observed)\", datetime.date(2017, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2017, 2, 20): \"Washington's Birthday\", datetime.date(2017, 5, 29): 'Memorial Day', datetime.date(2017, 7, 4): 'Independence Day', datetime.date(2017, 9, 4): 'Labor Day', datetime.date(2017, 10, 9): 'Columbus Day', datetime.date(2017, 11, 11): 'Veterans Day', datetime.date(2017, 11, 10): 'Veterans Day (Observed)', datetime.date(2017, 11, 23): 'Thanksgiving', datetime.date(2017, 12, 25): 'Christmas Day', datetime.date(2018, 1, 1): \"New Year's Day\", datetime.date(2018, 1, 15): 'Martin Luther King Jr. Day', datetime.date(2018, 2, 19): \"Washington's Birthday\", datetime.date(2018, 5, 28): 'Memorial Day', datetime.date(2018, 7, 4): 'Independence Day', datetime.date(2018, 9, 3): 'Labor Day', datetime.date(2018, 10, 8): 'Columbus Day', datetime.date(2018, 11, 11): 'Veterans Day', datetime.date(2018, 11, 12): 'Veterans Day (Observed)', datetime.date(2018, 11, 22): 'Thanksgiving', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2019, 1, 1): \"New Year's Day\", datetime.date(2019, 1, 21): 'Martin Luther King Jr. Day', datetime.date(2019, 2, 18): \"Washington's Birthday\", datetime.date(2019, 5, 27): 'Memorial Day', datetime.date(2019, 7, 4): 'Independence Day', datetime.date(2019, 9, 2): 'Labor Day', datetime.date(2019, 10, 14): 'Columbus Day', datetime.date(2019, 11, 11): 'Veterans Day', datetime.date(2019, 11, 28): 'Thanksgiving', datetime.date(2019, 12, 25): 'Christmas Day', datetime.date(2020, 1, 1): \"New Year's Day\", datetime.date(2020, 1, 20): 'Martin Luther King Jr. Day', datetime.date(2020, 2, 17): \"Washington's Birthday\", datetime.date(2020, 5, 25): 'Memorial Day', datetime.date(2020, 7, 4): 'Independence Day', datetime.date(2020, 7, 3): 'Independence Day (Observed)', datetime.date(2020, 9, 7): 'Labor Day', datetime.date(2020, 10, 12): 'Columbus Day', datetime.date(2020, 11, 11): 'Veterans Day', datetime.date(2020, 11, 26): 'Thanksgiving', datetime.date(2020, 12, 25): 'Christmas Day', datetime.date(2021, 1, 1): \"New Year's Day\", datetime.date(2021, 12, 31): \"New Year's Day (Observed)\", datetime.date(2021, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2021, 2, 15): \"Washington's Birthday\", datetime.date(2021, 5, 31): 'Memorial Day', datetime.date(2021, 6, 19): 'Juneteenth National Independence Day', datetime.date(2021, 7, 4): 'Independence Day', datetime.date(2021, 7, 5): 'Independence Day (Observed)', datetime.date(2021, 9, 6): 'Labor Day', datetime.date(2021, 10, 11): 'Columbus Day', datetime.date(2021, 11, 11): 'Veterans Day', datetime.date(2021, 11, 25): 'Thanksgiving', datetime.date(2021, 12, 25): 'Christmas Day', datetime.date(2021, 12, 24): 'Christmas Day (Observed)', datetime.date(2011, 1, 1): \"New Year's Day\", datetime.date(2010, 12, 31): \"New Year's Day (Observed)\", datetime.date(2011, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2011, 2, 21): \"Washington's Birthday\", datetime.date(2011, 5, 30): 'Memorial Day', datetime.date(2011, 7, 4): 'Independence Day', datetime.date(2011, 9, 5): 'Labor Day', datetime.date(2011, 10, 10): 'Columbus Day', datetime.date(2011, 11, 11): 'Veterans Day', datetime.date(2011, 11, 24): 'Thanksgiving', datetime.date(2011, 12, 25): 'Christmas Day', datetime.date(2011, 12, 26): 'Christmas Day (Observed)', datetime.date(2012, 1, 1): \"New Year's Day\", datetime.date(2012, 1, 2): \"New Year's Day (Observed)\", datetime.date(2012, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2012, 2, 20): \"Washington's Birthday\", datetime.date(2012, 5, 28): 'Memorial Day', datetime.date(2012, 7, 4): 'Independence Day', datetime.date(2012, 9, 3): 'Labor Day', datetime.date(2012, 10, 8): 'Columbus Day', datetime.date(2012, 11, 11): 'Veterans Day', datetime.date(2012, 11, 12): 'Veterans Day (Observed)', datetime.date(2012, 11, 22): 'Thanksgiving', datetime.date(2012, 12, 25): 'Christmas Day', datetime.date(2013, 1, 1): \"New Year's Day\", datetime.date(2013, 1, 21): 'Martin Luther King Jr. Day', datetime.date(2013, 2, 18): \"Washington's Birthday\", datetime.date(2013, 5, 27): 'Memorial Day', datetime.date(2013, 7, 4): 'Independence Day', datetime.date(2013, 9, 2): 'Labor Day', datetime.date(2013, 10, 14): 'Columbus Day', datetime.date(2013, 11, 11): 'Veterans Day', datetime.date(2013, 11, 28): 'Thanksgiving', datetime.date(2013, 12, 25): 'Christmas Day', datetime.date(2014, 1, 1): \"New Year's Day\", datetime.date(2014, 1, 20): 'Martin Luther King Jr. Day', datetime.date(2014, 2, 17): \"Washington's Birthday\", datetime.date(2014, 5, 26): 'Memorial Day', datetime.date(2014, 7, 4): 'Independence Day', datetime.date(2014, 9, 1): 'Labor Day', datetime.date(2014, 10, 13): 'Columbus Day', datetime.date(2014, 11, 11): 'Veterans Day', datetime.date(2014, 11, 27): 'Thanksgiving', datetime.date(2014, 12, 25): 'Christmas Day', datetime.date(2015, 1, 1): \"New Year's Day\", datetime.date(2015, 1, 19): 'Martin Luther King Jr. Day', datetime.date(2015, 2, 16): \"Washington's Birthday\", datetime.date(2015, 5, 25): 'Memorial Day', datetime.date(2015, 7, 4): 'Independence Day', datetime.date(2015, 7, 3): 'Independence Day (Observed)', datetime.date(2015, 9, 7): 'Labor Day', datetime.date(2015, 10, 12): 'Columbus Day', datetime.date(2015, 11, 11): 'Veterans Day', datetime.date(2015, 11, 26): 'Thanksgiving', datetime.date(2015, 12, 25): 'Christmas Day'}\n\nSame goes with the latest beta version:\n>>> import holidays\n>>> import numpy as np\n>>> print(holidays.__version__)\n0.11.4\n>>> years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\n>>> x = holidays.US(years=years)\n>>> x\n{datetime.date(2016, 1, 1): \"New Year's Day\", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): \"Washington's Birthday\", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): \"New Year's Day\", datetime.date(2017, 1, 2): \"New Year's Day (Observed)\", [...]\n\nI then assume that behaviour has to do with Databricks runtime, which I really don't know.\nIf you could investigate further / figure out what's wrong, I would really appreciate it.. Thx a lot! üëç",
            "I got the same error (when using FBProphet).\nfrom holidays.countries import US\nyear_list=[2022]\nholidays = US(prov=None, state=None, years=year_list)\n[(date, holidays.get_list(date)) for date in holidays]",
            "@dr-prodigy I was able to replicate the issue:\n>>> from holidays.countries import US\n>>> holidays = US(prov=None, state=None, years=[2022])\n>>> len(holidays)\n14\n>>> [(date, holidays.get_list(date)) for date in holidays]\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Python\\Python39\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3457, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-5-75567ae737d3>\", line 1, in <module>\n    [(date, holidays.get_list(date)) for date in holidays]\n  File \"<ipython-input-5-75567ae737d3>\", line 1, in <listcomp>\n    [(date, holidays.get_list(date)) for date in holidays]\nRuntimeError: dictionary changed size during iteration\n>>> len(holidays)\n28\n\nI will try to find out why the dictionary expands to include 2021 when invoked in the list comprehension; my hunch is that it's somehow triggered by one of the holidays.get_list(date) calls.\n@dr-prodigy  Do you remember why there's a get_list() method when the holiday's name is already the value of the dictionary entry? And why is the value a string...what happens when multiple holidays fall on the same day? Confused.",
            "Hi @mborsetti\nthank you for your contribution.. I think I need some more explanation here!\nAlthough there could probably be sth to be checked in the year boundaries logic (ie: 2021 holidays in the list), if I caught it right, your code is \"acting funny\" (probably on purpose), in that it forces exactly a holiday list recalculation for each date in the previously initialized list itself.. which is why the dictionary changes!\nEven it is not occurring on any country, IMHO it is therefore more than expectable to see that error.\nI also don't find a match with @extrospective code, which is instead cleanly initializing the US holidays object providing an array of years.\nIf I'm mistaking / losing something on the way, please explain better.. thank you very much! :)",
            "@dr-prodigy The code is simply a restatement of the \"acting funny\" code of @lior-lemonade.\nTurns out that we were doing this in UnitedStates(HolidayBase) (and a few others):\n            elif self.observed and date(year, JAN, 1).weekday() == SAT:\n                # Add Dec 31st from the previous year without triggering\n                # the entire year to be added\n                expand = self.expand\n                self.expand = False\n                self[date(year, JAN, 1) + rd(days=-1)] = name + \" (Observed)\"\n                self.expand = expand\n\nSo when you build the class with a year where the 1st of January is a Saturday (2021, for example), you'd also be getting a holiday in 2020(!). The code from @lior-lemonade (and my restatement) would iterate on this 2020 date with the call holidays.get_list(date), which in turn would trigger the expansion of 2020, changing the size of the dictionary.\nIt turns out that the code above was completely unneeded because we also have the (correct) code below to add the observed New Year's day into the correct, current, year:\n            # The next year's observed New Year's Day can be in this year\n            # when it falls on a Friday (Jan 1st is a Saturday)\n            if self.observed and date(year, DEC, 31).weekday() == FRI:\n                self[date(year, DEC, 31)] = name + \" (Observed)\"\n\nI have authored a PR that fixes this (and many other countries, many not as easy to fix!) and ensures through a new test that only holidays for the year requested are returned.\nI do not have an error with running @extrospective code so I can't debug it, but I wouldn't be surprised at all if it is related to this problem and therefore my PR will fix his issue too.",
            "I just tried in my conda environment (Windows; not databricks) and got the same error:\nCode:\nimport holidays\nimport numpy as np\nprint(holidays.__version__)\nyears = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\nx = holidays.US(years=years)\nx\n\nCode says I am using version 0.11.3.1\nI get an error stack:\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nd:\\Anaconda3\\envs\\py39\\lib\\site-packages\\IPython\\core\\formatters.py in __call__(self, obj)\n    700                 type_pprinters=self.type_printers,\n    701                 deferred_pprinters=self.deferred_printers)\n--> 702             printer.pretty(obj)\n    703             printer.flush()\n    704             return stream.getvalue()\n\nd:\\Anaconda3\\envs\\py39\\lib\\site-packages\\IPython\\lib\\pretty.py in pretty(self, obj)\n    375                 if cls in self.type_pprinters:\n    376                     # printer registered in self.type_pprinters\n--> 377                     return self.type_pprinters[cls](obj, self, cycle)\n    378                 else:\n    379                     # deferred printer\n\nd:\\Anaconda3\\envs\\py39\\lib\\site-packages\\IPython\\lib\\pretty.py in inner(obj, p, cycle)\n    599         p.begin_group(step, start)\n    600         keys = obj.keys()\n--> 601         for idx, key in p._enumerate(keys):\n    602             if idx:\n    603                 p.text(',')\n\nd:\\Anaconda3\\envs\\py39\\lib\\site-packages\\IPython\\lib\\pretty.py in _enumerate(self, seq)\n    278     def _enumerate(self, seq):\n    279         \"\"\"like enumerate, but with an upper limit on the number of items\"\"\"\n--> 280         for idx, x in enumerate(seq):\n    281             if self.max_seq_length and idx >= self.max_seq_length:\n    282                 self.text(',')\n\nRuntimeError: dictionary changed size during iteration\n\nSo the problem is not specific to Databricks or some unusual environment.\nI have included the list of libraries here in case we need to go back and look at it at some point.  I am using python 3.9.4\nconda_list_python_holidays.txt",
            "An important note is that this error occurs on the line where I merely cause x to be printed (pretty printed I guess since I'm in jupyter notebook).  It is not the assignment to x which causes the error.\nI can see that my original posting implies it is the assignment line which starts the call stack.  I do not believe that now.\nA ha.  Running in jupyter and databricks has in common perhaps that they are calling this pretty printing function.\nInsight\nAnd now I have done an additional test and here seems to be the key: using the same conda environment, but a python in my windows command prompt, I do not get this error.  So it is specifically related to the pretty printing function invoked by notebooks (as you see in the callstack above).\nIn jupyter, when I call:\nprint(x)\n\nI get a workable answer, which starts like:\n{datetime.date(2016, 1, 1): \"New Year's Day\", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): \"Washington's Birthday\", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): \"New Year's Day\", datetime.date(2017, 1, 2): \"New Year's Day (Observed)\", datetime.date(2017, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2017, 2, 20): \"Washington's Birthday\", datetime.date(2017, 5, 29): 'Memorial Day', datetime.date(2017, 7, 4): 'Independence Day', datetime.date(2017, 9, 4): 'Labor Day', datetime.date(2017, 10, 9): 'Columbus Day', datetime.date(2017, 11, 11): 'Veterans Day', datetime.date(2017, 11, 10): 'Veterans Day (Observed)', datetime.date(2017, 11, 23): 'Thanksgiving', datetime.date(2017, 12, 25): 'Christmas Day', datetime.date(2018, 1, 1): \"New Year's Day\", datetime.date(2018, 1, 15): 'Martin Luther King Jr. Day', datetime.date(2018, 2, 19): \"Washington's Birthday\", datetime.date(2018, 5, 28): 'Memorial Day', datetime.date(2018, 7, 4): 'Independence Day', datetime.date(2018, 9, 3): 'Labor Day', datetime.date(2018, 10, 8): 'Columbus Day', datetime.date(2018, 11, 11): 'Veterans Day', datetime.date(2018, 11, 12): 'Veterans Day (Observed)', datetime.date(2018, 11, 22): 'Thanksgiving', datetime.date(2018, 12, 25): 'Christmas Day', date...\n\nBut in jupyter notebook when I simply call as the last line in my cell:\nx\n\nthen I get the call stack with pretty.py in it and \"dictionary changed size during iteration\".",
            "jupyter gave me a nicer call stack perhaps than databricks; could have saved some time here.  but glad it seems like another bug was surfaced too.",
            "@extrospective Still cannot reproduce, at least with the currently published version (0.12):\n\nRunning\nPython 3.9.9 (tags/v3.9.9:ccb0e6a, Nov 15 2021, 18:08:50) [MSC v.1929 64 bit (AMD64)]\nIPython 7.30.1",
            "Just ran in Jupyter with 0.12.\nIt works correctly.  Issue appears to be in 0.11.3.1 but not in 0.12.\nEvidence of success pasted here:",
            "Perhaps this fix should be added to release notes for 0.12.",
            "Sorry @extrospective your last suggestion went unnoticed while working on v.0.12.\nI reviewed CHANGES file accordingly and released it on beta branch (master will be updated upon next official release).\nThx for your support, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/567",
        "title": "Wrong ISO code for Venezuela",
        "count": 2,
        "turns": [
            "Hello, nice work!\nA friend's website uses this and I noticed that Venezuela is using YV code wich is used only for airplanes and telecomunications, the ISO should be VE.\nYou can see it here: https://laendercode.net/en/country/ve",
            "Hi @Skatox ,\nthank you!\nVery easy fix, so I did it already.. it's released on beta branch.\nCheers! üëç",
            "Thank you!!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/566",
        "title": "England has different holidays to Scotland, NI and Wales yet can only select UK as a whole",
        "count": 3,
        "turns": [
            "one of my routines which i set up to use holidays didn't work today as it is a national holiday in scotland (but not in england where i am).\nthere doesn't appear to be a way of specifically stating these countries.   Yet there are a way to specifically state US states etc for them to use their specific holiday dates.\nAny chance UK can be split out in the same way?",
            "looked at the code and saw England as a usable variable.  Seems to be ok.\nnothing to see here (but might be a better idea to make it obvious in the table of countries in the readme)",
            "Great @thefunkygibbon, thanks!\nWe should in fact consider a possible refactoring, being UK a pretty unique case in python-holidays (being each of its regions a de-facto standalone country derived from the UK main class, instead of a state inside UK class as for the other countries, including US).\nBeing that a breaking change, anyway, it will take some extra-cares to add it (eg: deprecation in a release -> removal in a further release).. but we will do it, when possible.\nThanks, meanwhile! üëç",
            "I don't know that it does need to change really.. using \"England\" instead of \"UK\" works properly and as presumably designed.\nIf you could maybe just add it to the documentation so it's a little easier to work out that using the full country name works for those specific countries .\nThe UK is an awkward beast."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/565",
        "title": "Request: Option to get all holidays despite them being on a weekend day",
        "count": 2,
        "turns": [
            "No description provided.",
            "@dr-prodigy this is probably related to Colombia, which is now fixed in 0.15",
            "Hey @jahirfiquitiva, I'm going to close this now.\nIf it's still an issue for you please create a new ticket with detailed explanation of actual and expected behavior.\nThank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/563",
        "title": "Request: Method to get available countries and states",
        "count": 2,
        "turns": [
            "Hi\nWould you mind adding a method to get the available countries, their ISO code and states for that country?\nI'm planning to use this dynamically instead of limiting it to a single country, so that would help a lot!\nThanks in advance",
            "It seems that you are not the only one: https://stackoverflow.com/q/70237552/2988730\nYou can get what you want with something like this:\nfor cname in holidays.list_supported_countries():\n    country = getattr(holidays, cname)()\n    if cname != country.country:\n        continue\n    # Do stuff with country object\n    if hasattr(country, 'PROVINCES'):\n        # Do stuff with provinces\n    if hasattr(country, 'STATES'):\n        # Do stuff with states",
            "Yes, this is being discussed in #575 .. please follow up there!\nThx cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/562",
        "title": "Add 'National Day for Truth and Reconciliation' holiday for Canada",
        "count": 8,
        "turns": [
            "In 2021 a new holiday called 'National Day for Truth and Reconciliation' was added in Canada on Sept 30th of each year.\nhttps://www.canada.ca/en/canadian-heritage/campaigns/national-day-truth-reconciliation.html\nI don't see this accounted for, unless I missed it.\nEdit: I would gladly add this and submit a PR as it's probably an easy change but I am painfully short on time these days. Just putting it out there in case someone that is already setup for development on this project has time to add it in. Love this project, thanks to all who maintain and contribute!",
            "Hi @bverkron\nthank you!\nThis new holiday has been recently added (for MB and NS provinces only) by @cturra with #533 PR.\nThat PR has then been merged in beta and it will be released to master as soon as we release a new official python-holidays version (ETA still TBD).\nI assume this covers your topic: I kindly ask you to please follow up here in case something else is still to be considered.. thx a lot!",
            "Thanks for the response and pointing out the PR, I did not think to search for PRs on this topic.\nSome added info / context for others who might come across this...\nMy original understanding was that this was a nation wide statutory holiday but it does indeed appear to be province specific. In BC my children did not have school that day and my employer treated it as a stat holiday due to the industry I'm in but it appears to not be the case for everyone. Definitely not clear-cut in all cases, at least in BC.\n\nThe national holiday will be observed this Sept. 30 by federal employees and workers in federally regulated workplaces. We have advised provincial public-sector employers to honour this day and in recognition of the obligations in the vast majority of collective agreements. Many public services will remain open but may be operating at reduced levels. However, most schools, post-secondary institutions, some health sector workplaces, and Crown corporations will be closed.\n\nhttps://news.gov.bc.ca/releases/2021FIN0048-001531\nThis makes it a little more clear unless you're in one of the above mentioned sectors / institutions, etc that treats it as a statutory holiday. lol\n\nEaster Sunday, Easter Monday, National Day for Truth and Reconciliation and Boxing Day are not statutory holidays in B.C.\n\nhttps://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/statutory-holidays",
            "@bverkron\nOh gawrsh.. I must admit that this (interesting!) explanation doesn't clarify the topic so much to me \":-D\nSo in the end, given that BC seems not to be included in the list of provinces in which this holiday is observed, are MB and NS the only ones to be considered (at least, as of now)?\n.. Thank you!",
            "I only spot checked BC, AB, SK and none of them have it as an official statutory holiday. However, this article claims that PEI (Prince Edward Island) ...\n\n... is recognizing Truth and Reconciliation as a holiday and closing schools and government office\n\nand points to this official statement which says...\n\nThis Fall, Premier King will be introducing an amendment to the Employment Standards Act to officially recognize September 30 as a provincial statutory holiday for all Islanders\n\nbut earlier in the statement also says...\n\nProvincial government offices, schools in the Public Schools Branch and la Commission scolaire de langue fran√ßaise will be closed for the day. Some Island businesses and organizations may decide to also observe the National Day of Truth and Reconciliation.\n\nFor comparison the official statement for NS states:\n\nProvincial government offices, public schools and regulated child care will be closed. Businesses will have the choice, as they do on other occasions, to remain open.\n\nwhich is not unlike PEI and even BC to an extend.\nThis really makes me question what the criteria for a \"holiday\" is from a python-holidays perspective or even my own province / country's perspective üòÖ. Then there are further nuances between a holiday and statutory holiday? Yikes.\nIn all seriousness it seems like NS's and PEI's criteria for a statutory holiday are that government offices and schools are closed, but even though BC is following those same (or similar) actions it's not considered a statutory holiday. Also at a federal level it's listed as a statutory holiday but each individual province is able to treat it how they want. Clear as mud!\nMaybe the best thing to do is fall back on python-holiday's official definition of a holiday? Not sure if that will help clear it up or make things more confusing. ü§î",
            "Yet another confusing example is Newfoundland and Labrador...\n\nSeptember 30 has been designated a government holiday but not a statutory holiday in Newfoundland and Labrador, meaning schools and government offices will close, but private sector workplaces can remain open.\n\nwhich again sounds much like BC.\nMaybe we only treat it as a holiday if the province deems it a statutory holiday regardless if each provinces definition of a statutory holiday is the same or not?",
            "Maybe we only treat it as a holiday if the province deems it a statutory holiday regardless if each provinces definition of a statutory holiday is the same or not?\n\nthat was the approach i took when i implemented this holiday. figured i could circle back and add province‚Äôs or territories once they officially recognized the day as statutory.\ni‚Äôm open to changing that approach if the community feels it‚Äôs more appropriate. ü§∑üèº",
            "It is really not easy to say.. different countries, different rules!\nIn general, yes, only \"statutory\" holidays (as a rule of thumb, I'd put in this category all off (and usually paid) days for public & private workers, + schools) should be included as holidays in the lib.\nNot being an expert of Canadian regulations / habits, I let you be judge for this case.. as soon as we have a clear answer, it'll be easy to implement it! :-)\nThank you and cheers everyone!",
            "After reviewing the official statements for the few provinces noted above and discussing / thinking about it I believe @cturra's approach is correct and probably the best criteria at this time.\nThere is so much nuance and variation in how the provinces are handling this holiday (and some others) that it's probably the only sane way to do it without getting into the weeds and causing a bunch of decision overhead and potential confusion.\nOne of the root issues that makes this a challenge for my use case is that I'm attempting to use python-holidays to determine which days my children have off school for some home automations (via Home Assistant). Sometimes, like in the case of National Day for Truth and Reconciliation, they (and I because I'm in the public sector) get the day off even though it isn't a statutory holiday. It would almost be nice to have a feature of python-holidays that would track holidays that apply to specific sectors / institutions like public, private, education, etc. Maybe an extra parameter even more granular than is specific to each province / state that would accept which sector / institution you want the holidays for. ü§î That's very much another conversation though!\nI will close this off. Thanks for the pleasant conversation around the topic!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/561",
        "title": "Identify Spanish Province",
        "count": 3,
        "turns": [
            "Hi, trying this, im in doubt about REGION DE MURCIA code.",
            "Hi @ldsmovil ,\nthank you for your interest in python-holidays.\nIn case you noticed any issue / improvable features, you are encouraged to provide a fix: we will appreciate your contribution! For further info, pls refer to:\nhttps://github.com/dr-prodigy/python-holidays#contributions\nThx in advance, best!\ndr-p",
            "Country codes used are from the ISO 3166 standard:\n\nhttps://www.iso.org/obp/ui/#iso:code:3166:ES\n\nSpain holidays, are defined by 'comunidad aut√≥noma', so the codes for 'regi√≥n de Murcia', must be:\n\n\nholidays.Spain(prov='MC')\n\n\nhttps://www.boe.es/boe/dias/2021/10/21/pdfs/BOE-A-2021-17113.pdf",
            "Country codes used are from the ISO 3166 standard:\n\nhttps://www.iso.org/obp/ui/#iso:code:3166:ES\n\nSpain holidays, are defined by 'comunidad aut√≥noma', so the codes for 'regi√≥n de Murcia', must be:\n\nholidays.Spain(prov='MC')\nhttps://www.boe.es/boe/dias/2021/10/21/pdfs/BOE-A-2021-17113.pdf\n\n\nThanks!! Perfect answer."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=7&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/560",
        "title": "Add type annotations?",
        "count": 4,
        "turns": [
            "I imported the library into my project and the CI warned me:\n+ dmypy run ksiemgowy -- --strict\nksiemgowy/bookkeeping.py:14: error: Skipping analyzing \"holidays\": found module but no type hints or library stubs\nksiemgowy/bookkeeping.py:14: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\n\nDepending on the amount of effort, maybe it's worth to add type annotations? In some interesting cases, this might unlock new superpowers, such as being able to better JIT the code.",
            "Hey there @d33tah\nthank you for your suggestion!\nThis is an interesting code improvement, although I expect a significant effort to put it in place.\nIf you are interested in working on this feature implementing a PR, we will do our best to support you.. Pls let me know, thx!\nCheers\ndr-p",
            "Actually it does look like quite a few hours of work. I'm afraid might not have time to do that in the near future, sorry. It might be a good idea to leave the issue hanging though.",
            "I think this should be fixed once #608 is merged.",
            "Just merged in beta.. thx! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/559",
        "title": "US Viriginia Lee Jackson Day Removed After 2020",
        "count": 2,
        "turns": [
            "Jan 15th was removed as a state holiday by Virginia after 2020.\nSee Virginia Legislative Information System here\nAll Lee Jackson Jan 15th holidays for 2021 and on should be removed.",
            "Seems like I don't have permissions to push...\nholidays/countries/united_states.py lines 135, 138, 140 add in\n2020 >= year...\nfor all of the year checks.  This will fix this issue.",
            "Hi @evohnave\nthank you!\nIn fact, direct pushes are not allowed: you need to create a PR to collaborate.\nBeing a very limited and clear change, I provided the fix myself: now pushed in beta.\nThx, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/546",
        "title": "Add TN / Trento province for ITALY",
        "count": 1,
        "turns": [
            "Hi, I'd like to point out that the Trento (TN) province for Italy is missing from known provinces. Its patron saint holiday is on the 26th of june.",
            "Hi, thank you!\nI've just released this update on the beta branch.\nCheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/545",
        "title": "Increase the usage of augmented assignment statements",
        "count": 5,
        "turns": [
            "üëÄ Some source code analysis tools can help to find opportunities for improving software components.\nüí≠ I propose to increase the usage of augmented assignment statements accordingly.\nWould you like to integrate anything from a transformation result which can be generated by a command like the following?\n(:point_right: Please check also for questionable change suggestions because of an evolving search pattern.)\n[Markus_Elfring@fedora lokal]$ perl -p -i.orig -0777 -e 's/^(?<indentation>\\s+)(?<target>\\S+)\\s*=\\s*\\k<target>[ \\t]*(?<operator>[+\\-%&|^@]|\\*\\*?|\\/\\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find ~/Projekte/python-holidays/lokal -name '*.py')\n\nHow do you think about to improve 24 source code places? ü§î",
            "Sorry, not really a regexp wizard.. even after fixing your command like this\npython-holidays$ perl -p -i.orig -0777 -e 's/^(?<indentation>\\s+)(?<target>\\S+)\\s*=\\s*\\k<target>[ \\t]*(?<operator>[+\\-%&|^@]|\\*\\*?|\\/\\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find . -name '*.py')\nit still seems to fail for this reason:\n-bash: /usr/local/bin/perl: Argument list too long\nAny ideas?",
            "How do you think about the generation of update candidates like the following? ü§î\nMarkus_Elfring@Sonne:/home/altes_Heim3/Markus_Elfring/Projekte/python-holidays/lokal> perl -p -i.orig -0777 -e 's/^(?<indentation>\\s+)(?<target>\\S+)\\s*=\\s*\\k<target>[ \\t]*(?<operator>[+\\-%&|^@]|\\*\\*?|\\/\\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find . -name '*.py') && git diff > ../change_possibilities-20220723.diff\n\ndiff --git a/holidays/countries/angola.py b/holidays/countries/angola.py\nindex 9cdf2da..60e09be 100644\n--- a/holidays/countries/angola.py\n+++ b/holidays/countries/angola.py\n@@ -54,7 +54,7 @@ class Angola(HolidayBase):\n             # which is 40 days before easter excluding sundays\n             carnival = e - rd(days=46)\n             while carnival.weekday() != TUE:\n-                carnival = carnival - rd(days=1)\n+                carnival -= rd(days=1)\n             self[carnival] = \"Carnaval\"\n \n             self[date(year, FEB, 4)] = \"Dia do In√≠cio da Luta Armada\"\ndiff --git a/holidays/countries/aruba.py b/holidays/countries/aruba.py\nindex 00cac4a..3443bf5 100644\n--- a/holidays/countries/aruba.py\n+++ b/holidays/countries/aruba.py\n@@ -59,7 +59,7 @@ class Aruba(HolidayBase):\n         if year >= 2014:\n             kings_day = date(year, APR, 27)\n             if kings_day.weekday() == 6:\n-                kings_day = kings_day - rd(days=1)\n+                kings_day -= rd(days=1)\n \n             self[kings_day] = \"A√±a di Rey [King's Day]\"\n \n@@ -71,9 +71,9 @@ class Aruba(HolidayBase):\n \n             if queens_day.weekday() == 6:\n                 if year < 1980:\n-                    queens_day = queens_day + rd(days=1)\n+                    queens_day += rd(days=1)\n                 else:\n-                    queens_day = queens_day - rd(days=1)\n+                    queens_day -= rd(days=1)\n \n             self[queens_day] = \"A√±a di La Reina [Queen's Day]\"\n \ndiff --git a/holidays/countries/botswana.py b/holidays/countries/botswana.py\nindex 42eadd6..5e56689 100644\n--- a/holidays/countries/botswana.py\n+++ b/holidays/countries/botswana.py\n@@ -56,7 +56,7 @@ class Botswana(HolidayBase):\n             # for the given year\n             d = date(year, 7, 15)\n             while d.isoweekday() != 1 and (15 <= d.day <= 21):\n-                d = d + rd(days=1)\n+                d += rd(days=1)\n \n             self[d] = \"President's Day\"\n             self[d + rd(days=1)] = \"President's Day Holiday\"\ndiff --git a/holidays/countries/canada.py b/holidays/countries/canada.py\nindex 156f858..21c01d3 100644\n--- a/holidays/countries/canada.py\n+++ b/holidays/countries/canada.py\n@@ -246,7 +246,7 @@ class Canada(HolidayBase):\n         elif self.subdiv in (\"NS\", \"NL\", \"NT\", \"PE\", \"SK\") and year >= 1931:\n             self[date(year, NOV, 11)] = name\n             if self.observed and date(year, NOV, 11).weekday() == SUN:\n-                name = name + \" (Observed)\"\n+                name += \" (Observed)\"\n                 self[date(year, NOV, 11) + rd(weekday=MO)] = name\n \n         # Christmas Day\ndiff --git a/holidays/countries/curacao.py b/holidays/countries/curacao.py\nindex f031123..24171c8 100644\n--- a/holidays/countries/curacao.py\n+++ b/holidays/countries/curacao.py\n@@ -49,7 +49,7 @@ class Curacao(HolidayBase):\n         if year >= 2014:\n             kings_day = date(year, APR, 27)\n             if kings_day.weekday() == 6:\n-                kings_day = kings_day - rd(days=1)\n+                kings_day -= rd(days=1)\n \n             self[kings_day] = \"Koningsdag [King's Day]\"\n \n@@ -61,16 +61,16 @@ class Curacao(HolidayBase):\n \n             if queens_day.weekday() == 6:\n                 if year < 1980:\n-                    queens_day = queens_day + rd(days=1)\n+                    queens_day += rd(days=1)\n                 else:\n-                    queens_day = queens_day - rd(days=1)\n+                    queens_day -= rd(days=1)\n \n             self[queens_day] = \"Anja di La Reina [Queen's Day]\"\n \n         # Labour Day\n         labour_day = date(year, MAY, 1)\n         if labour_day.weekday() == 6:\n-            labour_day = labour_day + rd(days=1)\n+            labour_day += rd(days=1)\n         self[labour_day] = \"Dia di Obrero [Labour Day]\"\n \n         # Ascension Day\ndiff --git a/holidays/countries/hongkong.py b/holidays/countries/hongkong.py\nindex dd68029..bc9debb 100644\n--- a/holidays/countries/hongkong.py\n+++ b/holidays/countries/hongkong.py\n@@ -43,7 +43,7 @@ class HongKong(HolidayBase):\n                 self[\n                     first_date + rd(days=+1)\n                 ] = day_following + self.first_lower(name)\n-                first_date = first_date + rd(days=+1)\n+                first_date += rd(days=+1)\n             else:\n                 self[first_date] = name\n         else:\n@@ -96,7 +96,7 @@ class HongKong(HolidayBase):\n         if self.observed:\n             if ching_ming_date.weekday() == SUN:\n                 self[ching_ming_date + rd(days=+1)] = day_following + name\n-                ching_ming_date = ching_ming_date + rd(days=+1)\n+                ching_ming_date += rd(days=+1)\n             else:\n                 self[ching_ming_date] = name\n         else:\n@@ -189,7 +189,7 @@ class HongKong(HolidayBase):\n                 self[mid_autumn_date + rd(days=+1)] = (\n                     day_following + \"the \" + name\n                 )\n-            mid_autumn_date = mid_autumn_date + rd(days=+1)\n+            mid_autumn_date += rd(days=+1)\n         else:\n             self[mid_autumn_date] = name\n \ndiff --git a/holidays/countries/korea.py b/holidays/countries/korea.py\nindex a9c2fe7..b3b030a 100644\n--- a/holidays/countries/korea.py\n+++ b/holidays/countries/korea.py\n@@ -273,7 +273,7 @@ class Korea(HolidayBase):\n             ) or (  # if it's weekend(may include sat or not)\n                 cur in self and name != self[cur]\n             ):  # if it's already another holiday\n-                cur = cur + rd(days=1)\n+                cur += rd(days=1)\n                 is_alt = True\n                 continue\n             return is_alt, cur\ndiff --git a/holidays/countries/mozambique.py b/holidays/countries/mozambique.py\nindex ca2d598..200586d 100644\n--- a/holidays/countries/mozambique.py\n+++ b/holidays/countries/mozambique.py\n@@ -38,7 +38,7 @@ class Mozambique(HolidayBase):\n             # which is 40 days before easter excluding sundays\n             carnival = e - rd(days=46)\n             while carnival.weekday() != TUE:\n-                carnival = carnival - rd(days=1)\n+                carnival -= rd(days=1)\n             self[carnival] = \"Carnaval\"\n \n             self[date(year, FEB, 3)] = \"Dia dos Her√≥is Mo√ßambicanos\"\ndiff --git a/holidays/countries/netherlands.py b/holidays/countries/netherlands.py\nindex ddbbba9..5aeae44 100644\n--- a/holidays/countries/netherlands.py\n+++ b/holidays/countries/netherlands.py\n@@ -64,7 +64,7 @@ class Netherlands(HolidayBase):\n         if year >= 2014:\n             kings_day = date(year, APR, 27)\n             if kings_day.weekday() == SUN:\n-                kings_day = kings_day - rd(days=1)\n+                kings_day -= rd(days=1)\n \n             self[kings_day] = \"Koningsdag\"\n \n@@ -76,9 +76,9 @@ class Netherlands(HolidayBase):\n \n             if queens_day.weekday() == SUN:\n                 if year < 1980:\n-                    queens_day = queens_day + rd(days=1)\n+                    queens_day += rd(days=1)\n                 else:\n-                    queens_day = queens_day - rd(days=1)\n+                    queens_day -= rd(days=1)\n \n             self[queens_day] = \"Koninginnedag\"\n \ndiff --git a/holidays/countries/united_states.py b/holidays/countries/united_states.py\nindex 6064016..e59e9c8 100644\n--- a/holidays/countries/united_states.py\n+++ b/holidays/countries/united_states.py\n@@ -576,7 +576,7 @@ class UnitedStates(HolidayBase):\n         ):\n             name = \"Christmas Eve\"\n             self[date(year, DEC, 24)] = name\n-            name = name + \" (Observed)\"\n+            name += \" (Observed)\"\n             # If on Friday, observed on Thursday\n             if self.observed and date(year, DEC, 24).weekday() == FRI:\n                 self[date(year, DEC, 24) + rd(days=-1)] = name\n@@ -597,7 +597,7 @@ class UnitedStates(HolidayBase):\n         if self.subdiv == \"NC\" and year >= 2013:\n             name = \"Day After Christmas\"\n             self[date(year, DEC, 26)] = name\n-            name = name + \" (Observed)\"\n+            name += \" (Observed)\"\n             # If on Saturday or Sunday, observed on Monday\n             if self.observed and date(year, DEC, 26).weekday() in WEEKEND:\n                 self[date(year, DEC, 26) + rd(weekday=MO)] = name\ndiff --git a/holidays/countries/zambia.py b/holidays/countries/zambia.py\nindex c15604a..b529508 100644\n--- a/holidays/countries/zambia.py\n+++ b/holidays/countries/zambia.py\n@@ -51,7 +51,7 @@ class Zambia(HolidayBase):\n             # for the given year and month\n             d1 = date(year, JUL, 7)\n             offset = -d1.weekday()  # weekday = 0 means monday\n-            d1 = d1 + rd(days=offset)\n+            d1 += rd(days=offset)\n \n             self[d1] = \"Heroes' Day\"\n             self[d1 + rd(days=1)] = \"Unity Day\"\n@@ -59,7 +59,7 @@ class Zambia(HolidayBase):\n             # 1st Monday of Aug = \"Farmers' Day\"\n             d2 = date(year, AUG, 7)\n             offset = -d2.weekday()\n-            d2 = d2 + rd(days=offset)\n+            d2 += rd(days=offset)\n \n             self[d2] = \"Farmers' Day\"\n \ndiff --git a/holidays/countries/zimbabwe.py b/holidays/countries/zimbabwe.py\nindex 8ffff1d..c1807a0 100644\n--- a/holidays/countries/zimbabwe.py\n+++ b/holidays/countries/zimbabwe.py\n@@ -57,7 +57,7 @@ class Zimbabwe(HolidayBase):\n             while zimbabwe_heroes_day.isoweekday() != MON and (\n                 8 <= zimbabwe_heroes_day.day <= 14\n             ):\n-                zimbabwe_heroes_day = zimbabwe_heroes_day + rd(days=1)\n+                zimbabwe_heroes_day += rd(days=1)\n \n             self[zimbabwe_heroes_day] = \"Zimbabwe Heroes' Day\"\n \n@@ -68,7 +68,7 @@ class Zimbabwe(HolidayBase):\n             while defence_forces_day.isoweekday() != TUE and (\n                 8 <= defence_forces_day.day <= 14\n             ):\n-                defence_forces_day = defence_forces_day + rd(days=1)\n+                defence_forces_day += rd(days=1)\n \n             self[defence_forces_day] = \"Defense Forces Day\"",
            "Hi @elfring thank you for your clear explanation.. sorry but due to a different perl version, I cannot really get to your results, due to the previously reported issue.\nThis given, although I don't feel your optimizations as really high priority, I'm definitely interested in including them in our code: if you are available to develop a PR, I will surely merge it.\nThank you very much for your support, cheers! üëç",
            "Which Perl versions would hinder adjustments (which can generally be generated by the mentioned source code search and replacement approach)?\nüí≠ Would any other contributor be quicker with the integration of the shown change possibilities?",
            "@elfring, @dr-prodigy thank you both! The issue is resolved and can be closed now."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/544",
        "title": "October 25 is no longer holiday in Spain Prov=PV",
        "count": 1,
        "turns": [
            "I'm using the WORKDAY integration of Home Assistant to obtain a binary sensor for workdays.\nAFAIK python-holidays is being used \"under the hood\" in this integration\nYesterday October 25th was wrongly marked as holiday.\nIt's not holiday since 2014.\nMore info (sorry, in spanish): [https://es.wikipedia.org/wiki/D%C3%ADa_del_Pa%C3%ADs_Vasco#Creaci%C3%B3n_y_desaparici%C3%B3n_de_la_festividad]",
            "Released in beta.. thx! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/542",
        "title": "Easter is missing from .UnitedStates",
        "count": 4,
        "turns": [
            "I copied the code from the readme:\nfrom datetime import date\nimport holidays\nus_holidays = holidays.UnitedStates()\n\nfor date, name in sorted(holidays.US(years=2021).items()):\n  print(date, name)\n\nAnd it produced the following output:\n2021-01-01 New Year's Day\n2021-01-18 Martin Luther King Jr. Day\n2021-02-15 Washington's Birthday\n2021-05-31 Memorial Day\n2021-06-19 Juneteenth National Independence Day\n2021-07-04 Independence Day\n2021-07-05 Independence Day (Observed)\n2021-09-06 Labor Day\n2021-10-11 Columbus Day\n2021-11-11 Veterans Day\n2021-11-25 Thanksgiving\n2021-12-24 Christmas Day (Observed)\n2021-12-25 Christmas Day\n2021-12-31 New Year's Day (Observed)\n\nWhere is Easter?\nIs there a Seperate Christian calendar with Ash Wednesday,  St. Valentines day, Good Friday, Easter, etc...\nFor the project  I am working on today, I only need Easter.",
            "I don't think Easter is a national holiday in the US.",
            "I don't think Easter is a national holiday in the US.\n\nTurns out you're right per https://en.wikipedia.org/wiki/Federal_holidays_in_the_United_States\n@DonBower if you go through the code of this library, you will find out that for those countries where Easter is a National holiday the date comes from the python-dateutil package, so if Easter is all you need you should us that package directly.",
            "Might it be possible to add Christian, Jewish and Muslin as countries with their respective Holy days?",
            "Hi @DonBower ,\nthx for your interest in python-holidays.\nThe library aims to provide support on official national holidays, therefore religious holidays are (at least, as of now) out of scope.\nThx for your understanding, best regards\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/541",
        "title": "Please enter holidays for Macedonia",
        "count": 3,
        "turns": [
            "Please enter holidays for Macedonia (North Macedonia)\nhttps://en.m.wikipedia.org/wiki/Public_holidays_in_North_Macedonia",
            "Hi @mojso,\nthank for your interest in python-holidays.. any contribution is welcome!\nPls refer to here:\nhttps://github.com/dr-prodigy/python-holidays#contributions\nfor more info.\nCheers",
            "Thank you for entering the Macedonian holidays",
            "Big kudos to @tserekh for providing this: it is now available on beta branch.\nCheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/539",
        "title": "Provincial holidays are not being Reported in case of India",
        "count": 6,
        "turns": [
            "I use this to know the status of stock exchanges in India. The stock exchange that I follow is the province with code MH where 15th of October is a holiday declared by state government. But it seems this is not recognized by this program. You can get the official list of holidays from this\nhttps://mmrda.maharashtra.gov.in/public-holidays",
            "@dr-prodigy I would like to submit a patch to fix this.",
            "Did you submit the patch?",
            "NO, not yet. I was waiting for the approval.",
            "Will it help with all state holidays or  with maharastra or stock exchange holidays?",
            "well, ideally there should be all state holidays.",
            "Hi, just fixed and released in beta: thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/538",
        "title": "Please add holidays from Prophet",
        "count": 5,
        "turns": [
            "Thank you for this great library. We at NeuralProphet would like to be able to rely 100% on your great package.\nHowever, you are lacking a few important countries, which we have to manually sync from Prophet.\nIf you could add those, it would make NeuralProphet's and Prophet's codebase simpler to maintain.\nProphet supports the following countries missing in your library:\n\nIndonesia\nThailand\nPhilippines\nPakistan\nBelarus\nIndia (currently defined: 8 holidays,  while Prophet has 22)\n\nYou can find the relevant code here:\nhttps://github.com/facebook/prophet/blob/master/python/prophet/hdays.py\n\"All that is needed\" is to write tests for these countries, the holidays are all already defined.\nIf someone would be down to take on this task, we would be very thankful!",
            "Hi @ourownstory thank you for your interest in python_holidays.\nIt would be great if you could contribute to it, if you can, thx!\nIn the meanwhile, I mark this as \"help wanted\".\nCheers!",
            "Hi @dr-prodigy I am happy to contribute everything but the tests...",
            "I can work on it",
            "Thank you @tserekh ! Please let me know when your work is merged!",
            "The requested countries have been added in v0.20.\nPlease review ourownstory/neural_prophet#1176\nThank you for using python-holidays!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/531",
        "title": "Wrong Observed Holiday for Korean National Foundation Day",
        "count": 2,
        "turns": [
            "Hello, it seems there is no adaptation for Observed Holiday for the Korean National Fundation. For example on the year 2021 it falls on a Sunday and should be observed on the following Monday, but it is not showed.\nMay you please check?",
            "I have the same issue. so I issued this PR #535",
            "PR is now merged in beta. Thx to both of you, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/529",
        "title": "Using slice to get holidays between two dates only returns holidays from the start year and the end year",
        "count": 5,
        "turns": [
            "STEPS TO REPRODUCE\n\nAim: retrieve list of all holidays between 2014-12-31 and 2016-01-01\n\nus_holidays = holidays.US()\nus_holidays['2014-12-31': '2016-01-01']\n\nEXPECTED BEHAVIOUR\n\nRetuns a list of all holidays in 2015 plus 1st January 2016\n\nOBSERVED BEHAVIOUR\n\nReturns [datetime.date(2016, 1, 1)]",
            "Hi,\nI hope I'm not mistaking but, to be honest, in the provided example the 2 dates - written as strings - don't seem suitable for a python \"slicing\", and therefore are considered as 2 elements.\nThen, the library works as expected / documented, ie: collecting holidays for the years of all the provided dates (2014, 2016), so\nimport holidays\nus_holidays = holidays.US()\nus_holidays['2014-12-31': '2016-01-01']\nus_holidays\n\ncorrectly shows holidays for both 2014 and 2016.\nPlease let me know if I didn't catch it right, I'm available for further clarifications.. thx!",
            "@dr-prodigy\nI took a look at the original code and it does seem to be set up for accepting slicing of two dates, as per the code below in __getitem__ (the call to __keytransform__ allows the keys to be in any of the supported formats, including an ISO 8601 string):\nhttps://github.com/dr-prodigy/python-holidays/blob/5cde25b7e2e15578c7c1ab6e3f1a7ebda444fd80/holidays/holiday_base.py#L241-L274\nHowever, I don't think that the recursive call to dict.__getitem__(self, day) in line 270 gets to expand (load) the dates, but calling self.__getitem__(day) instead does.\nSo it's basically a one-line fix that I will submit as a PR.",
            "@justinwaf\nThanks for taking the time to report this.\n\nEXPECTED BEHAVIOUR\n\nReturns a list of all holidays in 2015 plus 1st January 2016\n\n\nI just want to clarify that the expected behavior is incorrect: in Python, slicing is done with half-open intervals and upper bounds are exclusive . See https://stackoverflow.com/questions/11364533/why-are-slice-and-range-upper-bound-exclusive\nOnce the fix is in, the behavior is to return 2014-12-31 if it were a holiday (it isn't so it won't) and all holidays for 2015, but not return 2016-01-01.",
            "Hi, I hope I'm not mistaking but, to be honest, in the provided example the 2 dates - written as strings - don't seem suitable for a python \"slicing\", and therefore are considered as 2 elements.\nThen, the library works as expected / documented, ie: collecting holidays for the years of all the provided dates (2014, 2016), so\nimport holidays\nus_holidays = holidays.US()\nus_holidays['2014-12-31': '2016-01-01']\nus_holidays\n\ncorrectly shows holidays for both 2014 and 2016.\nPlease let me know if I didn't catch it right, I'm available for further clarifications.. thx!\n\nThe example I used was a slightly expanded one I got from the README.rst\nus_holidays['2014-01-01': '2014-01-03']  # [date(2014, 1, 1)]\nFrom this example I understood that you could send in 2 dates as strings and get back a list of all the holidays in between (and not including the end date).  What I observed is I only got holidays for the year of the first date, and the year of the last date, and the years in between were skipped.",
            "Hi @justinwaf and @mborsetti\nthank you both for your support!\nAfter a further analisys on your points (sorry for not understanding them in first place), I confirm you are both right.\nThe issue was probably buried in the code since before I started working on the lib, so good shot!\nI noticed the PR made by Mike has been closed, so I re-applied it (one row fix, quickwin! :-) ) in a new commit.\nThank you both again, KUTGW! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/527",
        "title": "Value Error when setting years",
        "count": 2,
        "turns": [
            "Since the ugrade to version '0.11.3' I have encountered the following error:\nIn [1]: import holidays\n   ...: print(holidays.__version__)\n   ...: years = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\n   ...: holidays.CZ(years=years)\nOut[1]: \n'0.11.3'\n*** ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n\nUsing the previous version I do not encounter this error.\nThank you so much for your awesome library!",
            "Hmmm, I cannot reproduce the error:\nimport holidays\nprint(holidays.__version__)\nyears = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\nholidays.CZ(years=years)\n0.11.3\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Python\\Python39\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3444, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-2-e5c753ba3e41>\", line 3, in <module>\n    years = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])\nNameError: name 'array' is not defined\n\nHowever, this works as advertised:\nimport holidays\nprint(holidays.__version__)\nyears = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021]\nholidays.CZ(years=years)\n0.11.3\nOut[4]: \n{datetime.date(2016, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2016, 3, 25): 'Velk√Ω p√°tek',\n datetime.date(2016, 3, 28): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2016, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2016, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2016, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2016, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2016, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2016, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2016, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2016, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2016, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2016, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2017, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2017, 4, 14): 'Velk√Ω p√°tek',\n datetime.date(2017, 4, 17): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2017, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2017, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2017, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2017, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2017, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2017, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2017, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2017, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2017, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2017, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2018, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2018, 3, 30): 'Velk√Ω p√°tek',\n datetime.date(2018, 4, 2): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2018, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2018, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2018, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2018, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2018, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2018, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2018, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2018, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2018, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2018, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2019, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2019, 4, 19): 'Velk√Ω p√°tek',\n datetime.date(2019, 4, 22): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2019, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2019, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2019, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2019, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2019, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2019, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2019, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2019, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2019, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2019, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2020, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2020, 4, 10): 'Velk√Ω p√°tek',\n datetime.date(2020, 4, 13): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2020, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2020, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2020, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2020, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2020, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2020, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2020, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2020, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2020, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2020, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2021, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2021, 4, 2): 'Velk√Ω p√°tek',\n datetime.date(2021, 4, 5): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2021, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2021, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2021, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2021, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2021, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2021, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2021, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2021, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2021, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2021, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2011, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2011, 4, 25): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2011, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2011, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2011, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2011, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2011, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2011, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2011, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2011, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2011, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2011, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2012, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2012, 4, 9): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2012, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2012, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2012, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2012, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2012, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2012, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2012, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2012, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2012, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2012, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2013, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2013, 4, 1): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2013, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2013, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2013, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2013, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2013, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2013, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2013, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2013, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2013, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2013, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2014, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2014, 4, 21): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2014, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2014, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2014, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2014, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2014, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2014, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2014, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2014, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2014, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2014, 12, 26): '2. sv√°tek v√°noƒçn√≠',\n datetime.date(2015, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',\n datetime.date(2015, 4, 6): 'Velikonoƒçn√≠ pondƒõl√≠',\n datetime.date(2015, 5, 1): 'Sv√°tek pr√°ce',\n datetime.date(2015, 5, 8): 'Den v√≠tƒõzstv√≠',\n datetime.date(2015, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',\n datetime.date(2015, 7, 6): 'Den up√°len√≠ mistra Jana Husa',\n datetime.date(2015, 9, 28): 'Den ƒçesk√© st√°tnosti',\n datetime.date(2015, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',\n datetime.date(2015, 11, 17): 'Den boje za svobodu a demokracii',\n datetime.date(2015, 12, 24): '≈†tƒõdr√Ω den',\n datetime.date(2015, 12, 25): '1. sv√°tek v√°noƒçn√≠',\n datetime.date(2015, 12, 26): '2. sv√°tek v√°noƒçn√≠'}",
            "The issue should be fixed by #528 , which is about to be published as a hotfix release (v0.11.3.1).\n@schwarzan I kindly ask you to confirm that the last release fixes your issue.\nThank you both üëçüëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/526",
        "title": "Documentation in Sphynx",
        "count": 5,
        "turns": [
            "@dr-prodigy Would you accept a reorganization of the documentation into Sphynx format, suggesting that it be hosted (for free) at https://readthedocs.org/ -- you'd have to set up an account for it?\nYou know, for sometime between now and 2030... ;)",
            "@dr-prodigy any comments on the above?",
            "Hey there Mike @mborsetti!\nAs you could (maybe) see, in these days I'm (slowly) trying to finally catch up with the open PRs/issues (quite a lot piled up in fact..).\nBeing yours often the most challenging (and clever!) ones, I usually leave them for last, to give them the required degree of attention.. btw, sorry if sometimes it seems I don't care too much about them, it's in fact the opposite! :)\nI will come back to this one (and the other one regarding date slices too) soon!\nCheers\nM.",
            "At last, @mborsetti ! Sorry for getting to this so late, didn't have time to really get into it until the last days.\nAfter some reading / learning  the topic, I agree: it's a very nice improvement.\nAs suggested, I've then opened an account on readthedocs.org , and created a linked project for python-holidays.\nThen added sphinx dev dependency, and create the default stub project.\nAs a final \"touch\", I've added the relevant badge at the beginning of README.rst page.\nAll currently available on beta branch: you should be able to start your work from there (of course, no hurry.. take your time! :-) ).\nGrazie üëç",
            "Wonderful!\nIt may have to wait until the new year, but will submit a PR when I have it built.",
            "@dr-prodigy Submitted in #601"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/520",
        "title": "Documentation/API typo",
        "count": 3,
        "turns": [
            "Currently the ISO abbreviation for Bangladesh is written as 'BDG' but it is actually 'BGD'. Really minor thing, but easy enough to tweak in the documentation.",
            "Documentation for France needs to indicate if there are either provinces or states. It currently does not indicate if to access these local holidays you need one or the other.",
            "Portugal Extension, PRTE does not work as abbreviation.",
            "Hi, thank you for your support! All fixes are released on beta branch. Thx again"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/519",
        "title": "\"Fronleichnam\" is missing",
        "count": 3,
        "turns": [
            "In Germany some states have a holiday called \"Fronleichnam\". Its missing.",
            "Hi @Doev\nthx for your interest.\nIf possible, I kindly ask you to:\n\nprovide more complete info\neven better, contribute code with the fix\n\nMore info here:\nhttps://github.com/dr-prodigy/python-holidays#contributions\nThx in advance, cheers!\ndr-p",
            "Hello dr-p,\nsorry for my late answer. It was my mistake. When I get the german holidays, I have to use the parameter 'prov' and not 'state'. It works as it should work.\nThank you!\nfor date, name in sorted(holidays.DE(prov='RP', years=2021).items()):\n    print(date, name)\n    \n2021-01-01 Neujahr\n2021-04-02 Karfreitag\n2021-04-05 Ostermontag\n2021-05-01 Erster Mai\n2021-05-13 Christi Himmelfahrt\n2021-05-24 Pfingstmontag\n2021-06-03 Fronleichnam                                         <---------------------- there it is\n2021-10-03 Tag der Deutschen Einheit\n2021-11-01 Allerheiligen\n2021-12-25 Erster Weihnachtstag\n2021-12-26 Zweiter Weihnachtstag",
            "Very good then.. thank you! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/518",
        "title": "\"AttributeError: module 'holidays' has no attribute SA\"",
        "count": 2,
        "turns": [
            "Dear Developer,\nHow are you today?\nI'm writing to report and issue when pulling holidays in SA (SAU)\nAccording to \"Available Countries\" table SaudiArabia is country that we have available.\nHowever, when run the code, it returned error:\nAttributeError: module 'holidays' has no attribute SA\n\nI was wondering what could be the cause?\nThank you and have a wonderful afternoon!\nAll the best,\nKathy",
            "Kathy, are you running the latest version of holidays?\n>>> import holidays\n>>> holidays.__version__\n0.11.2",
            "Thank you @mborsetti ! It worked after updating it to the latest version!\nAll the best,\nKathy"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/511",
        "title": "2021-08-16 Is not a holiday in Spain",
        "count": 2,
        "turns": [
            "08/16/2021 is not holiday in spain! It's holidays in some provinces:\nCastilla y Le√≥n, Arag√≥n, Asturias, Andaluc√≠a y Canarias.\nIt's not a holiday at:\nGalicia, Cantabria, La Rioja, Madrid, Extremadura, Pa√≠s Vasco, Navarra, Catalu√±a, Comunidad Valenciana, Baleares, Castilla-La Mancha, Murcia, Ceuta and Melilla.",
            "Hi,\nthere is no direct reference to 16th Aug in Spanish holidays, therefore you probably have set observed flag.\nI kindly ask you to double check.\nThx!",
            "Hi, there is no direct reference to 16th Aug in Spanish holidays, therefore you probably have set observed flag. I kindly ask you to double check. Thx!\n\nHi, when I test the following code\n`>>> from datetime import date\n\n\n\nimport holidays\nsp = holidays.Spain()\nspGalicia = holidays.Spain(state='GA')\n'2021-08-16' in sp\nTrue\n'2021-08-16' in spGalicia\nTrue`\n\n\n\nThe result is that 2021-08-16 is a holiday in Spain and Galicia (state of Spain)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/510",
        "title": "16 Ago 2021 Spain Catalonia ",
        "count": 1,
        "turns": [
            "Today is not a holiday, it is a working day.",
            "Hi, Aug 16 is not referenced as a holiday, unless observed flag is enabled, which is probably your case (in 2021 Aug 15 fell on Sunday). I kindly ask you to please double check.\nClosing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/507",
        "title": "Bulgarian holidays not alll",
        "count": 1,
        "turns": [
            "I suggest changing the source of information for holidays in Bulgaria to https://kik-info.com/spravochnik/calendar/2021/. This is the most legitimate source from where the business community is finding out the dates that they need. The sources which the module is using right now are not comprehensive (for example: 2021-05-03 for 2021 is missing). Hope you fix it...",
            "Fixed in #509 . Thank you very much!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/505",
        "title": "Duplicate Angola holiday",
        "count": 3,
        "turns": [
            "It seems that there is a duplicate holiday being added in the Angola public holidays.\n@jusce17 I see you have made these changes and that you are from Angola.\nWhat is the difference between Dia do Her√≥i Nacional and Dia dos Heroes Nacional and why do both of them fall on the same day from 1979.\nShould this have been a name change? Or was it accidentally added?",
            "Hi  @pietervdw115\nthanks for the heads up, I should be fixing this soon",
            "Thank you @jusce17 ! :)",
            "Thank you both! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/504",
        "title": "ValueError: month must be in 1..12",
        "count": 1,
        "turns": [
            "Hey guy's,\nI am currently trying to add holidays via an input but when running my script I get the following error:\nTraceback (most recent call last):\n  File \"test.py\", line 22, in <module>\n    for date, name in sorted(addHolidays(years=year).items()):\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/holidays/countries/germany.py\", line 81, in __init__\n    HolidayBase.__init__(self, **kwargs)\n  File \"/home/user/anaconda3/lib/python3.8/site-packages/holidays/holiday_base.py\", line 37, in __init__\n    self._populate(year)\n  File \"test.py\", line 18, in _populate\n    self[date(year, day_input, int(month_input))] = add_input\nValueError: month must be in 1..12\n\nThis is the code I try to run:\nfrom datetime import date\nimport datetime\nimport holidays\n\nadd_input = input(\"give me the name of the holiday: \")\nday_input = int(input(\"give me the day of the holiday: \")\nmonth_input = int(input(\"give me the month: of the holiday: \")\n\nprint(add_input)\n\nclass addHolidays(holidays.DE):\n    def _populate(self, year):\n        holidays.DE._populate(self, year)\n        self[date(year, day_input, month_input)] = add_input\n\nprint(\"added a new holiday successfully!\")\n\n\nI've also tried to input different variants of parameters. For example:\n01, 02, 03, 04, 05...12 or 1,2,3,4,5...12\nIs there something wrong with my code? If so I would be really glad if someone could tell me what I've made wrong and help  me solve this error:)\nThank's for every help and suggestion in advance:)",
            "Hi, whenever creating a new date through date(...), you should set the values as here:\ndatetime.date(yyyy, mm, dd)\nCheers :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/503",
        "title": "Juneteenth Holiday Observed date",
        "count": 3,
        "turns": [
            "I noticed that there is no logic for the Juneteenth (Observed) date (i.e. June 20, 2022) and believe this needs to be updated",
            "It looks like Juneteenth logic\nhttps://github.com/dr-prodigy/python-holidays/blob/1a407bd970ded0966f8f9457e4e49563681dd2c7/holidays/countries/united_states.py#L382-L386\nneeds to be updated with observed logic, like West Virginia Day\nhttps://github.com/dr-prodigy/python-holidays/blob/1a407bd970ded0966f8f9457e4e49563681dd2c7/holidays/countries/united_states.py#L390-L398",
            "yes, according to this: https://www.federalreserve.gov/aboutthefed/k8.htm - 2021/06/18 and 2022/06/20 were the respective official holidays in '21 and '22, so the default python-holidays values seem incorrect.",
            "@empgc02 this has been fixed by @khawley and then merged in beta.. thank you both! üëç\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/500",
        "title": "TypeError: __init__() got an unexpected keyword argument 'country'",
        "count": 3,
        "turns": [
            "Hey guy's,\nI am trying to add a new holiday to the general german holiday list on my machine.\nBut when running my code I am getting the following error:\nTypeError: __init__() got an unexpected keyword argument 'country'\nThis is the full error message:\nTraceback (most recent call last):\n  File \"test.py\", line 8, in <module>\n    date(2021 ,8, 28) in CorporateHolidays(country=\"Germany\")\n  File \"C:\\Users\\supre\\anaconda3\\lib\\site-packages\\holidays\\countries\\germany.py\", line 81, in __init__\n    HolidayBase.__init__(self, **kwargs)\nTypeError: __init__() got an unexpected keyword argument 'country'\n\nThis is my code:\nfrom datetime import date\nimport holidays\n\nclass CorporateHolidays(holidays.Germany):\n    def _populate(self, year):\n        holidays.Germany._populate(self, year)\n        self[date(year, 8, 28)] = \"My birthday\"\ndate(2021 ,8, 28) in CorporateHolidays(country=\"Germany\")#also tried with DE or DEU\n\nAm I doing something wrong?\nIf so I would be really glad if someone could help me out with this problem and tell me what I've made wrong.\nThank's for every help and suggestion in advance:)",
            "The keyword country is defined in holidays by the CountryHoliday function and it's used to instantiate the class from the correct country; however you are subclassing holidays.Germany directly, and if you look at its __init__ it does not take a country keyword as it would be pleonastic.\nJust instantiate with CorporateHolidays() and that error will go away.\nOh, I see that the documentation needs to be updated.  Any volunteers? Should ideally be moved over to readthedocs as well.",
            "Hey @mborsetti,\nthank's for your fast response:)\nThis worked out great for me:)",
            "Thank you both.. closing!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/495",
        "title": "Holidays for Zambia",
        "count": 1,
        "turns": [
            "Howdy @dr-prodigy, this is an excellent library!\nI have noticed that holidays for Zambia are missing and I'd like to add them. Can I send a PR for this?\nThanks.",
            "Thank you very much for your great work.. Zambia support merged in beta! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=8&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/484",
        "title": "Alphabetically order the \"prov/state\" list in README for all countries.",
        "count": 2,
        "turns": [
            "Currently the following four countries' prov lists in the README file are not ordered alphabetically. It will be helpful to have them alphabetically ordered for the users of this library.\n\nIndia\nBrazil\nGermany\nNewZealand\n\n=================== ========= =============================================================\nCountry             ISO code  Provinces/States Available\n=================== ========= =============================================================\nBrazil              BR/BRA    state = AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG,\n                              PA, PB, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO\nGermany             DE/DEU    prov = BW, BY, BYP, BE, BB, HB, HH, HE, MV, NI, NW, RP, SL,\n                              SN, ST, SH, TH\nIndia               IN/IND    prov = AS, SK, CG, KA, GJ, BR, RJ, OD, TN, AP, WB, KL, HR,\n                              MH, MP, UP, UK, TN\nNewZealand          NZ/NZL    prov = NTL, AUK, TKI, HKB, WGN, MBH, NSN, CAN, STC, WTL,\n                              OTA, STL, CIT",
            "I have already implemented this and will send a PR. So, please assign this to me (@sugatoray). Thank you.",
            "Closed through #485 .. thank you! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/483",
        "title": "How can I print out the next holiday?",
        "count": 2,
        "turns": [
            "Hey guys and contributors,\nis there any way to print out the next holiday?\nFor example, if there is no holiday today, the program prints the nearest holiday out.\nThank's for every help and suggestion in advance:)",
            "HI @NoCodeAvaible ,\nI believe you can just iterate to your holidays, this messy code my give you a hint\nfrom datetime import date, timedelta\nimport holidays\n\nbrazlian_holidays = holidays.Brazil()\nholiday = date.today() in brazlian_holidays\nday = date.today()\nwhile not holiday:\n    day = day + timedelta(days=1)\n    if day in brazlian_holidays:\n        print(brazlian_holidays.get(day))\n        break\n\nOUTPUT\n Independ√™ncia do Brasil",
            "Hey @jusce17 ,\nsorry for my late response thank you very very much for your help:)\nWorked great for me:)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/482",
        "title": "Juneteenth Holiday Needed",
        "count": 3,
        "turns": [
            "I ran the latest version of holidays and see that there is no entry for Juneteenth, a new holiday starting in June 2021 in the United States.  Hopefully, you can add it soon.  Thanks",
            "Hello @bhackett  I have submitted the PR #488 it should be fixed soon",
            "Merged in beta.. thx!",
            "Thank you.  It works great!\n\nBrian\n‚Ä¶\nOn Sun, Jul 18, 2021 at 4:00 AM Maurizio Montel ***@***.***> wrote:\n Closed #482 <https://github.com/dr-prodigy/python-holidays/issues/482>.\n\n ‚Äî\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/482#event-5034780638>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAEAOQPLB6CWIADFUPQRMSDTYKCZZANCNFSM477QG6PQ>\n ."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/479",
        "title": "Typo in prov causes holidays to be silently incorrect instead of raising",
        "count": 2,
        "turns": [
            "I believe this may apply to states and other countries as well, but for an example in Canada, the accepted values (from the docs) for prov are: prov = AB, BC, MB, NB, NL, NS, NT, NU, ON (default), PE, QC, SK, YU.\nIf there's a typo, such as NF instead of NL, or Quebec instead of QC, the default prov is used, which is likely unexpected behaviour for most users. I think raising an error with the allowed values for prov in the message may potentially be more desirable.\nIn [1]: import holidays\n   ...: holiday_options = {'country': 'Canada', 'prov': 'NF'}\n   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']\nOut[1]: \n[datetime.date(2021, 1, 1),\n datetime.date(2021, 4, 2),\n datetime.date(2021, 5, 24),\n datetime.date(2021, 7, 1),\n datetime.date(2021, 9, 6),\n datetime.date(2021, 10, 11),\n datetime.date(2021, 11, 11),\n datetime.date(2021, 12, 24),\n datetime.date(2021, 12, 25),\n datetime.date(2021, 12, 27)]\n\nIn [2]: import holidays\n   ...: holiday_options = {'country': 'Canada', 'prov': 'NL'}\n   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']\nOut[2]: \n[datetime.date(2021, 1, 1),\n datetime.date(2021, 3, 15),\n datetime.date(2021, 4, 2),\n datetime.date(2021, 4, 26),\n datetime.date(2021, 6, 21),\n datetime.date(2021, 7, 1),\n datetime.date(2021, 9, 6),\n datetime.date(2021, 11, 11),\n datetime.date(2021, 12, 24),\n datetime.date(2021, 12, 25),\n datetime.date(2021, 12, 27)]\n\nThanks! This is an excellent/very pythonic and helpful library!",
            "Oh I just noticed, the default province is not used. It seems to maybe be an intersection of all the provinces' statutory holidays (Canada-wide). If this is intentional it does seem like useful behaviour if prov=None, but I think when there's a typo, it would still be more helpful to raise an error.\nIn [3]: import holidays\n   ...: holiday_options = {'country': 'Canada', 'prov': 'ON'}\n   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']\nOut[3]: \n[datetime.date(2021, 1, 1),\n datetime.date(2021, 2, 15),\n datetime.date(2021, 4, 2),\n datetime.date(2021, 5, 24),\n datetime.date(2021, 7, 1),\n datetime.date(2021, 8, 2),\n datetime.date(2021, 9, 6),\n datetime.date(2021, 10, 11),\n datetime.date(2021, 12, 24),\n datetime.date(2021, 12, 25),\n datetime.date(2021, 12, 27)]",
            "This is now available in beta.\nClosing, thx! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/475",
        "title": "Add Juneteenth",
        "count": 1,
        "turns": [
            "https://www.nytimes.com/2021/06/17/us/politics/juneteenth-holiday-biden.html",
            "Merged in beta.. thx a lot üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/473",
        "title": "New Holiday In Chile",
        "count": 1,
        "turns": [
            "from June 19th 2021, in Chile we have a new holiday, D√≠a Nacional de los Prueblos Ind√≠genas (National Day of Native Peoples), the new holiday occurs every winter solstice in Chile from year 2022, for the year 2021, the holiday occurs June 21th.\nReferences:\nLey 21.357 - https://www.bcn.cl/leychile/navegar?idNorma=1161743&idParte=&idVersion=2021-06-19",
            "Thank you! Released on beta.\nCheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/472",
        "title": "Norway national holidays include all Sundays",
        "count": 6,
        "turns": [
            "When asking for the national holidays of Norway and Sweden, the returned dictionary also returns every Sunday at the beginning (S√∏ndag here).\nHere an example for Norway for 2020:\ndict_items([(datetime.date(2020, 1, 5), 'S√∏ndag'), (datetime.date(2020, 1, 12), 'S√∏ndag'), (datetime.date(2020, 1, 19), 'S√∏ndag'), (datetime.date(2020, 1, 26), 'S√∏ndag'), (datetime.date(2020, 2, 2), 'S√∏ndag'), (datetime.date(2020, 2, 9), 'S√∏ndag'), (datetime.date(2020, 2, 16), 'S√∏ndag'), (datetime.date(2020, 2, 23), 'S√∏ndag'), (datetime.date(2020, 3, 1), 'S√∏ndag'), (datetime.date(2020, 3, 8), 'S√∏ndag'), (datetime.date(2020, 3, 15), 'S√∏ndag'), (datetime.date(2020, 3, 22), 'S√∏ndag'), (datetime.date(2020, 3, 29), 'S√∏ndag'), (datetime.date(2020, 4, 5), 'S√∏ndag'), (datetime.date(2020, 4, 12), 'F√∏rste p√•skedag, S√∏ndag'), (datetime.date(2020, 4, 19), 'S√∏ndag'), (datetime.date(2020, 4, 26), 'S√∏ndag'), (datetime.date(2020, 5, 3), 'S√∏ndag'), (datetime.date(2020, 5, 10), 'S√∏ndag'), (datetime.date(2020, 5, 17), 'Grunnlovsdag, S√∏ndag'), (datetime.date(2020, 5, 24), 'S√∏ndag'), (datetime.date(2020, 5, 31), 'F√∏rste pinsedag, S√∏ndag'), (datetime.date(2020, 6, 7), 'S√∏ndag'), (datetime.date(2020, 6, 14), 'S√∏ndag'), (datetime.date(2020, 6, 21), 'S√∏ndag'), (datetime.date(2020, 6, 28), 'S√∏ndag'), (datetime.date(2020, 7, 5), 'S√∏ndag'), (datetime.date(2020, 7, 12), 'S√∏ndag'), (datetime.date(2020, 7, 19), 'S√∏ndag'), (datetime.date(2020, 7, 26), 'S√∏ndag'), (datetime.date(2020, 8, 2), 'S√∏ndag'), (datetime.date(2020, 8, 9), 'S√∏ndag'), (datetime.date(2020, 8, 16), 'S√∏ndag'), (datetime.date(2020, 8, 23), 'S√∏ndag'), (datetime.date(2020, 8, 30), 'S√∏ndag'), (datetime.date(2020, 9, 6), 'S√∏ndag'), (datetime.date(2020, 9, 13), 'S√∏ndag'), (datetime.date(2020, 9, 20), 'S√∏ndag'), (datetime.date(2020, 9, 27), 'S√∏ndag'), (datetime.date(2020, 10, 4), 'S√∏ndag'), (datetime.date(2020, 10, 11), 'S√∏ndag'), (datetime.date(2020, 10, 18), 'S√∏ndag'), (datetime.date(2020, 10, 25), 'S√∏ndag'), (datetime.date(2020, 11, 1), 'S√∏ndag'), (datetime.date(2020, 11, 8), 'S√∏ndag'), (datetime.date(2020, 11, 15), 'S√∏ndag'), (datetime.date(2020, 11, 22), 'S√∏ndag'), (datetime.date(2020, 11, 29), 'S√∏ndag'), (datetime.date(2020, 12, 6), 'S√∏ndag'), (datetime.date(2020, 12, 13), 'S√∏ndag'), (datetime.date(2020, 12, 20), 'S√∏ndag'), (datetime.date(2020, 12, 27), 'S√∏ndag'), (datetime.date(2020, 1, 1), 'F√∏rste nytt√•rsdag'), (datetime.date(2020, 5, 1), 'Arbeidernes dag'), (datetime.date(2020, 12, 25), 'F√∏rste juledag'), (datetime.date(2020, 12, 26), 'Andre juledag'), (datetime.date(2020, 4, 9), 'Skj√¶rtorsdag'), (datetime.date(2020, 4, 10), 'Langfredag'), (datetime.date(2020, 4, 13), 'Andre p√•skedag'), (datetime.date(2020, 5, 21), 'Kristi himmelfartsdag'), (datetime.date(2020, 6, 1), 'Andre pinsedag')])",
            "Hi @JoLo90\nAre you from Norway ? in the code I found that someone said that Sundays are considered holidays in Norway\n\nMaybe this is the reason you are getting this ?",
            "Hi @jusce17\nI am not from Norway but I was working on a project in Norway where I needed the national holidays.\nYou are right this is probably due to this, even though we rather aim for the public holidays with this library, isn't it?\nI would have rather expected the following dates  https://en.wikipedia.org/wiki/Public_holidays_in_Norway.",
            "Hi @JoLo90\nFrom what I can tell is that this library aim for national and regional holidays (For those countries with some holidays only in some states )\nBut I think the calendar for Norway is def off, I am gonna check it with some Norwegian friends and see if I can fix it",
            "He actually added some links on his code that might help us understand this\nclass Norway(HolidayBase):\n    \"\"\"\n    Norwegian holidays.\n    Note that holidays falling on a sunday is \"lost\",\n    it will not be moved to another day to make up for the collision.\n\n    In Norway, ALL sundays are considered a holiday (https://snl.no/helligdag).\n    Initialize this class with include_sundays=False\n    to not include sundays as a holiday.\n\n    Primary sources:\n    https://lovdata.no/dokument/NL/lov/1947-04-26-1\n    https://no.wikipedia.org/wiki/Helligdager_i_Norge\n    https://www.timeanddate.no/merkedag/norge/\n    \"\"\"\n\nApparently every sunday is indeed a holiday, but it is a bit confused I will double check with someone else",
            "I would have rather expected the following dates https://en.wikipedia.org/wiki/Public_holidays_in_Norway.\n\nI believe you're correct: no other country in this library includes weekly \"holidays\", even though in pretty much all countries a day per week (typically Sunday or Friday) is considered a form of \"holiday\".\nP.S. https://no.wikipedia.org/wiki/Helligdager_i_Norge agrees with you",
            "Hi and thank you both!\nAfter a check, I updated Norway to match all other countries (ie: Sundays are not considered holidays) while retaining the possibility to enable this with the flag include_sundays (now defaulting to False).\nReleased on beta.\nCheers üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/471",
        "title": "Spring bank holiday 2022 in the United Kingdom",
        "count": 3,
        "turns": [
            "Spring bank holiday in 2022 is the 2nd June 2022 similar to 2012:\nCurrent version gives 30th May 2022 instead of 2nd June 2022\nhttps://www.gov.uk/bank-holidays\nhttps://www.timeanddate.com/calendar/?year=2022&country=9\nhttps://github.com/AhmosSansom/python-holidays/tree/patch-2",
            "This issue still persists as of today. Please fix.",
            "Issue is still present as of 20/09. Please fix this!",
            "Hi, fixed in #487 . Thx, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/468",
        "title": "2 april 2021 in spain",
        "count": 1,
        "turns": [
            "hi,\ndt.date(2021, 4, 2) in holidays.ES() don't work",
            "This was fixed on #469 . Closing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/466",
        "title": "Malaysia Holidays",
        "count": 9,
        "turns": [
            "Kindly request that Malaysia's holidays are added",
            "Hi,\nas this is a community-fueled open source project, we don't develop new features on request.. but if you would like to do it, we will surely support you in it..\nAny contribution is welcome!\nThx,\ndr-p",
            "Malaysia's holiday is similar to Singapore's. I am new to github, any advice how to I start malaysia.py from singapore.py? Would like to do my part. Any guidance is appreciated.",
            "@dr-prodigy  I can work on this one üòä\n@mrkgoh, if you could be so kind in listing me Malaysian holidays would be amazing, I have done some research (just a quick one) and it looks like you guys have a lot of holidays",
            "@jusce17 , thanks looking forward to learning from you.\nI hacked a quick code that you can use to scrape the holidays for Malaysia from http://www.officeholidays.com/countries/malaysia/\nIt takes year range from 2018 to 2024 and output a 'MYholiday.csv'\n  import requests\n  import pandas as pd\n  \n  hol = pd.DataFrame()\n  \n  for year in range(2018, 2024):\n  \n      url = f'http://www.officeholidays.com/countries/malaysia/{str(year)}'\n      \n      header = 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36'\n      \n      with requests.get(url, headers={'User-Agent': header}, verify=False) as req:\n          if req.status_code==200:\n              sauce = req.content\n              print('{:<47s} : {}'.format('Grab html','Done'))\n          else:\n              print('{:<47s} : {}'.format('Grab html',req.status_code))\n      \n      df = pd.read_html(sauce, header=0)[0]\n      df.loc[:,'Date'] = [i + f' {str(year)}' for i in df.loc[:,'Date']]\n      \n      hol = pd.concat([hol, df], ignore_index = True)\n      \n  hol.to_csv('MYholiday.csv')",
            "@jusce17  Thanks for leading the effort! I authored the code for Singapore, which is probably the closest one to clone (Singapore used to be a State part of Malaysia until 1965); feel free to reach out for help.\n@mrkgoh Thanks for the info, but what is needed are the rules for the holidays, preferably official ones, so these can be coded and holidays generated annually.  For Singapore I was able to find the Holidays Act, which spells out such rules and also says that the day of some Muslim holidays are to be confirmed annually by the Ministry of Manpower, who publishes them here. So I was able to code an algorithmic baseline with guesstimates for future Muslim holidays based on the lunar calendar, and the exact dates of Muslim holidays are manually updated when the Ministry confirms them on an annual basis.   Can you provide similar references for Malaysia (Google Translate works for laws in Malay)?",
            "@mborsetti , thanks. Looking forward to learning from you.\n\nFor Malaysia, we comply to Holiday Act 1951 [Act 369]. English link. PDF version. So no need to translate here.\nYes the government do publishes the holidays annually in Malay only at the following link. by the Prime minister's office.\nYes you are right. The muslim holiday is confirm annually.",
            "Sorry @mrkgoh @mborsetti,  I have been very busy with work and didn't have much time to look into it, turns out Malaysia holidays are a bit harder than I expected, unlike Singapore it does have different states with their own regionals holidays,\nI create the pull request #481 were you guys can take look. @mrkgoh it would be nice if you could double check the holidays, I founded a bit hard to understand them all.\n@mborsetti since it was basically a copy of the Singapore one, perhaps you could take a look too. I wasn't able to add those holidays that follow the Islamic calendar, perhaps you can help with it ?\nIt was actually quite interesting to make this small contribution, I spent most of the time studying the regions and history of Malaysian than actually coding üòÖüòÖ",
            "Hi @jusce17, nice work, and yeah quite a lot of regional holidays!\nI will look into the Islamic holidays over this coming weekend and should be able to contribute a similar algorithmic baseline to the one I used for Singapore.",
            "Hi everyone, the first implementation of Malaysian holidays, although not referenced in CHANGES file, has been added on v0.11.2.\nTherefore, I fixed CHANGES accordingly and I close this issue (issues cleanup).\nI ask you to please start a new PR in case you work on its improved version (islamic holidays).\nThank you both, best üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/465",
        "title": "Movable holidays in ARG",
        "count": 10,
        "turns": [
            "There are 4 holidays in Argentina that are movable or transferable, meaning they aren't always on the exact same date. They're now set as fixed dates and that's not accurate.\nThis ones are:\nD√≠a Pase a la Inmortalidad del General Mart√≠n Miguel de G√ºemes [Day Pass to the Immortality of General Mart√≠n Miguel de G√ºemes] --- it's set to XXXX-06-17\nD√≠a Pase a la Inmortalidad del General D. Jos√© de San Martin [Day Pass to the Immortality of General D. Jos√© de San Martin] --- it's set to XXXX-08-17\nD√≠a del Respeto a la Diversidad Cultural [Respect for Cultural Diversity Day] --- it's set to XXXX-10-12\nD√≠a Nacional de la Soberan√≠a [National Sovereignty Day] --- it's set to XXXX-11-23\nThe dates of this holidays in the last few years are:\n‚ñ∫D√≠a Pase a la Inmortalidad del General Mart√≠n Miguel de G√ºemes [Day Pass to the Immortality of General Mart√≠n Miguel de G√ºemes]\n(this holiday didn't exist before 2018)\n2018-06-17\n2019-06-17\n2020-06-15\n2021-06-21\n‚ñ∫D√≠a Pase a la Inmortalidad del General D. Jos√© de San Martin [Day Pass to the Immortality of General D. Jos√© de San Martin]\n2015-08-17\n2016-05-15\n2017-08-21\n2018-08-20\n2019-08-17\n2020-08-17\n2021-08-16\n‚ñ∫D√≠a del Respeto a la Diversidad Cultural [Respect for Cultural Diversity Day]\n2015-10-12\n2016-10-10\n2017-10-16\n2018-10-15\n2019-10-12\n2020-10-12\n2021-10-11\n2022-10-12\n‚ñ∫D√≠a Nacional de la Soberan√≠a [National Sovereignty Day]\n2015-11-23\n2016-11-28\n2017-11-20\n2018-11-19\n2019-11-18\n2020-11-23\n2021-11-20\n2022-11-23",
            "Is there any rhyme or reason for those dates (can they be computed), or are they based on the whims of lawmakers?",
            "in AR there are bridge holidays, some move and sone don't depending on the government, there is no way to compute them as they change every year. the information source can be found on (in spanish): https://www.argentina.gob.ar/interior/feriados-nacionales-2022\nadditionally, google's public holidays' calendar has them right",
            "in AR there are bridge holidays, some move and sone don't depending on the government, there is no way to compute them as they change every year. the information source can be found on (in spanish): https://www.argentina.gob.ar/interior/feriados-nacionales-2022\nadditionally, google's public holidays' calendar has them right\nthese dates are usually informed at the beginning of the year. In some exceptions, they are changed through the year through laws",
            "Here's the info on moveable holidays in Argentina (listed as \"citation needed\" on Wikipedia, but should be usable for now):\n\nThe \"movable holidays\" whose dates coincide with Tuesdays and Wednesdays will be moved to the previous Monday. Those that coincide with Thursday, Friday, Saturday and Sunday will be moved to the following Monday. Every employee is entitled to 15 paid public holidays and every year the government adds a few more holidays known as \"bridge holidays\" which means that a holiday last two days.\n\nAs per Thailand's case, \"Bridge Holidays\" can be declared in the special_holidays = { ... } section separately.\n@celispahn @leandrorojas Is there an Argentinian calendar online anywhere with data from previous years that we can cross-check with on the bridge holidays pre-2020? Otherwise we can probably begin with data for 2020, 2021, 2022, 2023",
            "The rule wikipedia described is ok  and it is also the Law ü§£  (Ley 27399, also mentioned at the bottom of https://www.argentina.gob.ar/interior/feriados-nacionales-2023)\nI did find previous' years data, some in text form other as screen captures, let me know if you need translation or assistance:\n2019: both from official sites\n--> https://www.argentina.gob.ar/noticias/feriados-2019-conoce-el-calendario-completo\n--> https://www.cultura.gob.ar/feriados-2019-en-argentina_7326/\n2019: from a local news paper\n--> https://servicios.lanacion.com.ar/app-mobile/feriados/2019\n2018: from a local news paper\n--> https://servicios.lanacion.com.ar/app-mobile/feriados/2018\n2017: from local news paper, you get the idea\n--> https://servicios.lanacion.com.ar/app-mobile/feriados/2017\nhope this helps\nPS: the link on 2021 you posted points to 2020",
            "Thanks for the help, I'll try to get them implemented soon enough :)",
            "I tried to change AR holidays according to Law 27399 in #968. @leandrorojas, please look, if you can. Currently it's in beta branch.",
            "As a side note, it seems like the current Ley 27399 only moved to the next Monday for the ones that fall on Thur/Fri, not Sat/Sun as per the current logic stated on Wikipedia above. This results in myriads of errors when checking with the official calendar data, so I will open up the pull request soon once I've finished the current code revamps. @leandrorojas @KJhellico",
            "@dr-prodigy This is now fixed with #988, should be safe to close down now.",
            "Resolved in #988."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/461",
        "title": "country variable undefined",
        "count": 2,
        "turns": [
            "holidays/holiday_base.py\n       country = getattr(self, \"country\", None) or getattr( other, \"country\", None )\nThe \"country\" variable should probably be changed to \"self.country\".",
            "Hi @Z223I\nI don't think this is the case: country is in fact a local variable set to be returned at the end of the function, ie:\n        return HolidaySum(\n            years=(self.years | other.years),\n            expand=(self.expand or other.expand),\n            observed=(self.observed or other.observed),\n            country=country,\n            prov=prov,\n        )\n\nCould you experience any issue? In that case, please provide some proof code.\nThx a lot, cheers!",
            "Closing, thx"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/460",
        "title": "How to install repo for develop",
        "count": 1,
        "turns": [
            "I want to do:\npython3 setup.py develop\nWhat to do for this repo?",
            "In the root of this repo.\nUse pip install . to install it as a \"normal\" package. Alternatively use pip install --editable . this will update the package as you make changes to the repo or pull new changes without you having to do a pip upgrade.\nHope this helps"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/458",
        "title": "NYSE Holidays",
        "count": 9,
        "turns": [
            "I wish to add holidays for the NYSE.  Should I refer to it as a Country, Providence, or State.  I wish to also do NASDAQ.\nThe NYSE and NASDAQ both have early close days like the day after US Thanksgiving.  How would you suggest I do that?\nThanks in advance!\nZ223I",
            "I wish to add holidays for the NYSE. Should I refer to it as a Country, Providence, or State. I wish to also do NASDAQ.\n\n@Z223I thanks for the contribution!! dr-prodigy will give the definitive answer here, but below are my suggestions.\n@dr-prodigy to keep with ISO standardization, I suggest we use ISO 10383 (the standard which \"specifies a universal method of identifying exchanges, trading platforms and regulated or non-regulated markets as sources of prices and related information in order to facilitate automated processing\"). These codes are at https://www.iso20022.org/market-identifier-codes.\nMaybe we create a pseudo-country called \"MIC\" (for Market Identifier Code) and use the ISO 10383 operating MIC as the identifier, so that it would look like this:\nnyse_holidays = holidays.MIC('XNYS')\nnasdaq_holidays = holidays.MIC('XNAS')\nAlternatively we can keep the market within the country it belongs to (as listed in ISO 10383), hoping that there is no collision with a ISO 3166-2 subdivision code (see #374), so that it would look like this:\nnyse_holidays = holidays.US('XNYS')\nnasdaq_holidays = holidays.US('XNAS')\nPersonally, I prefer option 1, not only because there's no risk of collisions, but also because it's one less implementation step for anyone using this package (i.e. all they need is the MIC, they don't have to keep track, or look up, where that exchange is located; plus markets, which are mostly electronic anyway, may relocate to a different country, e.g. post-Brexit or whatever, creating maintenance and implementation headaches).\n\nThe NYSE and NASDAQ both have early close days like the day after US Thanksgiving. How would you suggest I do that?\n\nUgh. @dr-prodigy any ideas?  That's actually really useful information!",
            "@mborsetti That info looks really good.  I will wait for @dr-prodigy to also respond.\nThanks!!\nZ223I",
            "Maybe the short market days can be handled like \"Holiday Observed\".  I need to dive into your code.",
            "@dr-prodigy I went with option 1.  Inherited from Holidays so it may be easily used for any country.\nFor \"Short Trading Days\", I put it in the name just like \"Observed.\"\nNow I will write some tests.\nThanks again,\nZ223I",
            "Hey there sorry, I've been off for quite a long time.. more and more difficult to find time for python-holidays!\nFirst of all, thank you both.. I really like this initiative, and I agree with you: option 1 seems definitely the best to me too.\nI opened a new beta course today.. I'll be waiting for your work @Z223I !\nThx again, cheers everyone!\ndr-p",
            "Any updates on this I think this would be a fantastic addition to an already incredibly useful package!",
            "@JustinKurland\n\nAny updates on this I think this would be a fantastic addition to an already incredibly useful package!\n\nIt follows, then, that a contribution would therefore be extremely fantastic!\nDo you have some spare time to contribute?",
            "@mborsetti I would love to help contribute, and will do, but at this precise moment I am particularly swamped. Will check in with a friend who has implemented something similar in an R package he developed to see where/how he is pulling this from and circle back to try and assist on this very thing. üôåüèª",
            "Just released in beta thru #651 . Closing this, thanks! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/457",
        "title": "Easter in Canada not included ?",
        "count": 2,
        "turns": [
            "I can't seem to find Easter holiday in Canada",
            "Why is Easter Monday only listed for QC?\n        # Easter Monday\n        if self.prov == \"QC\" and year >= 1867:\n            self[easter(year) + rd(weekday=MO)] = \"Easter Monday\"",
            "Fixed in beta. Thx both! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/449",
        "title": "Observeed dates being duplicated",
        "count": 1,
        "turns": [
            "When trying to create a list of holidays for more than 1 year and the holiday falls on a sunday the Observed holiday duplicates itself to the monday and the tuesday but only for the first year\nIf I do for a single year there is no issue.\nExample\nholiday_za = holidays.CountryHoliday(\"ZA\", years=[2021]) returns the correct list of holidays\n{\n    \"date\": \"2021-03-21\",\n    \"holiday\": \"Human Rights Day\"\n  },\n  {\n    \"date\": \"2021-03-22\",\n    \"holiday\": \"Human Rights Day (Observed)\"\n  }\n\nholiday_za = holidays.CountryHoliday(\"ZA\", years=[2021,2022]) will duplicate any public holiday falling on a sunday for year 2021\n  {\n    \"date\": \"2021-03-21\",\n    \"holiday\": \"Human Rights Day\"\n  },\n  {\n    \"date\": \"2021-03-22\",\n    \"holiday\": \"Human Rights Day (Observed)\"\n  },\n  {\n    \"date\": \"2021-03-23\",\n    \"holiday\": \"Human Rights Day (Observed)\"",
            "Fixed by mborsetti.. closing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/447",
        "title": "UK Prov needs adding",
        "count": 3,
        "turns": [
            "In the UK the holidays of England are not the same as Scotland for example so holidays are reading incorrectly for say England aas it is adding the holidays of everyone together.",
            "Hi! If you look at the country table, it includes separate entries for 'England', 'Scotland', 'Wales' and 'Northern Ireland'. Use one of those as your \"country\" variable instead.",
            "Just spotted this myself, turned on the media system thinking it was not a week day - public holiday in Scotland, not England, was using GB previously :)",
            "Hi! If you look at the country table, it includes separate entries for 'England', 'Scotland', 'Wales' and 'Northern Ireland'. Use one of those as your \"country\" variable instead.\n\nThank you for the heads up, I must have missed the \"England\" listing expecting to see it as a region of the UK.\nCheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/444",
        "title": "\"vervangingsdag\" in Belgian holidays",
        "count": 2,
        "turns": [
            "In Belgium there is a concept of a \"vervangingsdag\" (literally translated: \"replacement day\"); from the Federal Public Service Employment, Labour and Social Dialogue (translated using Google Translate):\n\nAnd if a public holiday coincides with a Sunday or a normal day of inactivity?\nTo guarantee the employee ten public holidays, the law states that if a public holiday coincides with a Sunday or an ordinary day of inactivity in the company, he must be replaced. This \"replacement day\" must be determined on an ordinary day of activity in the company. This replacement day becomes a public holiday for the employees employed in the company. The number of hours that would have been worked on the replacement day is of no importance.\n\nFrom looking at the Belgium source code, I don't think this concept is currently supported in holidays.\nIs this something that holidays wants to support? If so, I'd be happy to implement it and make a PR. If I'm welcome to do so, how would you want this to be designed? e.g., should it be always-on, behind an optional argument to the class that's on by default, the same but off by default, etc.?",
            "@leonoverweel Take a look at observed feature, I think it might be what you're looking for",
            "@leonoverweel I confirm, as stated by @giladmaya, that observed feature (ie: move holiday to next workday if it falls on Sunday) is what is currently being supported in holidays.\nIf this doesn't apply, any PR is, surely, always welcome!\nThx in advance, best"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/437",
        "title": "Natal Day, Nova Scotia, Canada",
        "count": 1,
        "turns": [
            "I believe this one is missing.   Nova Scotia, Canada is observing the Civic Holiday on the 1st Monday in August, called Natal Day. I am not able to find what year it started to fall on the first Monday in August.  Natal Day is the official birthday of the province.",
            "Hi,\nI get back to this very old issue to clarify that national official holidays are currently the only scope for python-holidays, therefore Natal Day seems not suitable to be added.\nThx for your understanding, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/436",
        "title": "Runing tests for Python gives attribute error",
        "count": 0,
        "turns": [
            "My apologies: I mistakenly raised the issue. Closing it"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/434",
        "title": "Holidays for Georgia",
        "count": 1,
        "turns": [
            "Georgian (not the USA state) holidays are missing and if possible I'd like to add Georgian holidays. I'll send PR when it will be ready :)",
            "Thank you üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/428",
        "title": "New Zealand announces a new public holiday",
        "count": 9,
        "turns": [
            "Something you may not be aware of is that a new public holiday has been announced recently in New Zealand.\nhttps://www.rnz.co.nz/news/national/435789/prime-minister-jacinda-ardern-reveals-date-of-first-matariki-public-holiday\nThe first date it will occur is Friday 24 June 2022. My understanding at this time is that it will be a wandering holiday as it is based on the position of a specific constellation in the sky. A committee has been formed to determine future dates based on consensus over when the position of said constellation is in the correct place in a given year. I am not clear as of writing on the definition of \"correct place\".",
            "There will be legislation introduced to parliament in due course, but we may need to automate a cultural committee :)",
            "Date is set for 2022 Friday, June 24th (source). Looks like there will be a 30-year table of the dates coming soon.",
            "I'm working on it, pull request coming soon.",
            "The 30 years of dates have been published, but I am not sure where. This News article has the dates, but I would not classify it as canonical https://www.rnz.co.nz/news/national/445990/matariki-public-holiday-dates-for-next-30-years-announced",
            "#499 pull request created.\nI used the file published by the government here: https://www.mbie.govt.nz/assets/matariki-dates-2022-to-2052-matariki-advisory-group.pdf\nI tried to calculate the dates using a formula but isn't having much success at the moment so just listing them for now",
            "import datetime\nfrom lunarcalendar import Converter, Lunar\n\nfor year in range(2022,2053):\n\n\n  lunar = Lunar(year, 5, 23)\n  solar = Converter.Lunar2Solar(lunar)\n\n  startdate = solar.to_date()\n  \n  convert = [4,3,2,1,0,-1,-2] \n  matariki = startdate + datetime.timedelta(days=convert[startdate.weekday()])\n  print(matariki)\n\nThis gives correct dates except for 2028, 2033, 2036, 2039, 2041, 2047 so need further study.",
            "Yeah I suspect that there is not a python module for the Maori star calendar :)",
            "I could't even find a Gregorian-Maori calendar online so that might be a bit hard.",
            "PR by @36wish is in beta! Closing this, thanks everyone! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/427",
        "title": "Could not find a version that satisfies the requirement hijri_converter (from holidays)",
        "count": 2,
        "turns": [
            "We are facing this issues. after taking the latest holiday pypi library 0.10.5.2\n\"runError\": \"Run result unavailable: job failed with error message\\n Library installation failed for library due to user error for Some(pypi {\\n package: \"holidays\"\\n}\\n). Error messages:\\njava.lang.RuntimeException: ManagedLibraryInstallFailed: org.apache.spark.SparkException: Process List(/databricks/python/bin/pip, install, holidays, --disable-pip-version-check) exited with code 1. ERROR: Could not find a version that satisfies the requirement hijri_converter (from holidays) (from versions: none)\\nERROR: No matching distribution found for hijri_converter (from holidays)\\n for library:PythonPyPiPkgId(holidays,None,None,List()),isSharedLibrary=false\", \"effectiveIntegrationRuntime\": \"DefaultIntegrationRuntime (East US)\"",
            "Hi,\nI've just uploaded to PyPi a build for Python3.9 ( holidays-0.10.5.2-py3.9.egg ), which in fact was not there yet.\nPls let me know if it sorts this out, thx",
            "Closing this, thx"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/425",
        "title": "hijri_converter import issue still appearing",
        "count": 6,
        "turns": [
            "I see there was https://github.com/dr-prodigy/python-holidays/pull/380, but it seems the import still happens in\nhttps://github.com/dr-prodigy/python-holidays/blob/v0.10.5/holidays/utils.py.\n$ pip install holidays==0.10.5\nProcessing /Users/kamidzi/Library/Caches/pip/wheels/7b/2f/68/d2c8e568166cd211e21111534228227d956680005ab35d6adc/holidays-0.10.5-cp36-none-any.whl\nRequirement already satisfied: six in /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages (from holidays==0.10.5) (1.15.0)\nRequirement already satisfied: python-dateutil in /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages (from holidays==0.10.5) (2.8.1)\nCollecting convertdate\n  Using cached convertdate-2.3.0-py3-none-any.whl (45 kB)\nCollecting korean-lunar-calendar\n  Using cached korean_lunar_calendar-0.2.1-py3-none-any.whl (8.0 kB)\nCollecting pytz>=2014.10\n  Using cached pytz-2021.1-py2.py3-none-any.whl (510 kB)\nProcessing /Users/kamidzi/Library/Caches/pip/wheels/8d/1a/e7/684cd77a99aac294f976db834fe613b5424f7c4d75ffb0b84d/PyMeeus-0.3.7-cp36-none-any.whl\nInstalling collected packages: pytz, pymeeus, convertdate, korean-lunar-calendar, holidays\nSuccessfully installed convertdate-2.3.0 holidays-0.10.5 korean-lunar-calendar-0.2.1 pymeeus-0.3.7 pytz-2021.1\nWARNING: You are using pip version 20.0.2; however, version 21.0.1 is available.\nYou should consider upgrading via the '/Users/kamidzi/.pyenv/versions/3.6.9/bin/python3.6 -m pip install --upgrade pip' command.\n$ python -m holidays\nTraceback (most recent call last):\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 183, in _run_module_as_main\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 142, in _get_module_details\n    return _get_module_details(pkg_main_name, error)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 109, in _get_module_details\n    __import__(pkg_name)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/__init__.py\", line 13, in <module>\n    from holidays.countries import *\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/__init__.py\", line 22, in <module>\n    from .burundi import Burundi, BI, BDI\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/burundi.py\", line 21, in <module>\n    from holidays.utils import get_gre_date\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/utils.py\", line 17, in <module>\n    from hijri_converter import convert\nModuleNotFoundError: No module named 'hijri_converter'",
            "Hi,\nit should be fixed now and released as 0.10.5.1 on pypi.\nPls let me know, thank you very much!",
            "Thanks, though I think there are still some remaining issues:\n$ pip show holidays\nName: holidays\nVersion: 0.10.5.1\nSummary: Generate and work with holidays in Python\nHome-page: https://github.com/dr-prodigy/python-holidays\nAuthor: ryanss\nAuthor-email: ryanssdev@icloud.com\nLicense: MIT\nLocation: /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages\nRequires: python-dateutil, six, convertdate, korean-lunar-calendar, hijri-converter\nRequired-by:\n$ python -m holidays\nTraceback (most recent call last):\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 183, in _run_module_as_main\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 142, in _get_module_details\n    return _get_module_details(pkg_main_name, error)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 109, in _get_module_details\n    __import__(pkg_name)\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/__init__.py\", line 13, in <module>\n    from holidays.countries import *\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/__init__.py\", line 45, in <module>\n    from .israel import Israel, IL, ISR\n  File \"/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/israel.py\", line 16, in <module>\n    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \\\nImportError: cannot import name 'lag_baomer'",
            "This seems related to an old convertdate package (the name is present only from 2.3.0 on).\nNot clear why the updated requirement is not enforced upon holidays update: in my last version I reviewed setup.py to require it:\n    install_requires=['python-dateutil', 'six', 'convertdate>=0.2.3', 'korean_lunar_calendar', 'hijri_converter'],\nCould you please double-check?\nThanks",
            "Right, updating convertdate works. I think there is a typo in the install_requires. I've sent you a PR.",
            "Gawrsh!! I will fix and release again. So unlucky release tonight! :(\nThx a lot",
            "Hi,\nit is now fixed now and released as 0.10.5.2 on pypi.\nThank you very much, closing this!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/424",
        "title": "Require convertdate>=2.3.0",
        "count": 4,
        "turns": [
            "With convertdate before 2.3.0 the tests fail, because they try to import lag_laomer which is only available in convertdate>=2.3.0, see https://github.com/fitnr/convertdate/blob/dfb84724c45a6ae1feff887cf28a3765193508d3/HISTORY.rst#230\nERROR: holidays (unittest.loader._FailedTest)\n----------------------------------------------------------------------\nImportError: Failed to import test module: holidays\nTraceback (most recent call last):\n  File \"/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py\", line 470, in _find_test_path\n    package = self._get_module_from_name(name)\n  File \"/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py\", line 377, in _get_module_from_name\n    __import__(name)\n  File \"/build/holidays-0.10.5/holidays/__init__.py\", line 13, in <module>\n    from holidays.countries import *\n  File \"/build/holidays-0.10.5/holidays/countries/__init__.py\", line 45, in <module>\n    from .israel import Israel, IL, ISR\n  File \"/build/holidays-0.10.5/holidays/countries/israel.py\", line 16, in <module>\n    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \\\nImportError: cannot import name 'lag_baomer' from 'convertdate.holidays' (/nix/store/ljdqivnkfbawyrxc2gqiq51lpymlqrs1-python3.8-convertdate-2.2.1/lib/python3.8/site-packages/convertdate/holidays.py)\n\n\n======================================================================\nERROR: tests (unittest.loader._FailedTest)\n----------------------------------------------------------------------\nImportError: Failed to import test module: tests\nTraceback (most recent call last):\n  File \"/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py\", line 436, in _find_test_path\n    module = self._get_module_from_name(name)\n  File \"/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py\", line 377, in _get_module_from_name\n    __import__(name)\n  File \"/build/holidays-0.10.5/tests.py\", line 25, in <module>\n    import holidays\n  File \"/build/holidays-0.10.5/holidays/__init__.py\", line 13, in <module>\n    from holidays.countries import *\n  File \"/build/holidays-0.10.5/holidays/countries/__init__.py\", line 45, in <module>\n    from .israel import Israel, IL, ISR\n  File \"/build/holidays-0.10.5/holidays/countries/israel.py\", line 16, in <module>\n    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \\\nImportError: cannot import name 'lag_baomer' from 'convertdate.holidays' (/nix/store/ljdqivnkfbawyrxc2gqiq51lpymlqrs1-python3.8-convertdate-2.2.1/lib/python3.8/site-packages/convertdate/holidays.py)",
            "Hi,\nit should be fixed now and released as 0.10.5.2 on pypi.\nPls let me know, thank you very much!",
            "LGTM.",
            "I want to use holidays on a win32 2008 Server and now can not because of convertdate>=2.3.0 - I only get convertdate==2.2.2\nany chance?",
            "Holidays doesn't use convertdate since v.0.24."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=9&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/423",
        "title": "Tests don't pass because of flake8 E501 line too long",
        "count": 6,
        "turns": [
            "Tests run on 0.10.4 and 0.10.5.\nFAIL: test_flake8 (tests.TestFlake8)\nTest that we conform to PEP-8.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/build/holidays-0.10.5/tests.py\", line 35, in test_flake8\n    self.assertEqual(self.report.get_statistics('E'), [])\nAssertionError: Lists differ: ['1 E501 line too long (82 > 79 characters)'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'1 E501 line too long (82 > 79 characters)'\n\n- ['1 E501 line too long (82 > 79 characters)']\n+ []\n\n----------------------------------------------------------------------\nRan 579 tests in 23.641s",
            "Hi,\nI'm trying to reproduce this issue, but no luck, either calling\nflake8\ndirectly and either via\ncoverage run --omit=*site-packages* tests.py TestFlake8\nPlease let me know if you have any further details, thank you very much!",
            "It seems to happen here:\n/build/holidays-0.10.5.2/holidays/__init__.py:15:80: E501 line too long (82 > 79 characters)\n\nhttps://github.com/dr-prodigy/python-holidays/blob/cb875fb87e91f8c555966659bca1636519c47d6f/holidays/__init__.py#L15",
            "And it seems you are not seeing this, because you have excluded this file, but somehow that exclusion doesn't work for us when running the tests.\nhttps://github.com/dr-prodigy/python-holidays/blob/master/.flake8#L3",
            "Oh I see.. that's pretty weird: flake8 is in fact instructed by .flake8 file to skip some warnings / files (most notably init.py), which works both in local and on Travis CI since a large number of past releases.\nFixing that long row is easy and I will do it (thank you for your details btw) but still, if .flake8 file is ignored for any reason, some other issues should than arise, such as:\n./holidays/__init__.py:13:1: F403 'from holidays.countries import *' used; unable to detect undefined names\n\nAny ideas?",
            "No idea. Though the flake8 test has its own style guide, too. Not sure how that influences the .flake8 file.",
            "Ok, np.. in the meantime, I released the fix on beta. Thx cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/422",
        "title": "Newest package version 0.10.5 not working",
        "count": 4,
        "turns": [
            "The newest version (0.10.5) of the holidays package is not working. Trying to import the package results in a ModuleNotFoundError\n>>> import holidays\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/alex/.venv/lib/python3.8/site-packages/holidays/__init__.py\", line 13, in <module>\n    from holidays.countries import *\n  File \"/home/alex/.venv/lib/python3.8/site-packages/holidays/countries/__init__.py\", line 22, in <module>\n    from .burundi import Burundi, BI, BDI\n  File \"/home/alex/.venv/lib/python3.8/site-packages/holidays/countries/burundi.py\", line 21, in <module>\n    from holidays.utils import get_gre_date\n  File \"/home/alex/.venv/lib/python3.8/site-packages/holidays/utils.py\", line 17, in <module>\n    from hijri_converter import convert\nModuleNotFoundError: No module named 'hijri_converter'",
            "That's because setup.py needs to require https://pypi.org/project/hijri-converter/.",
            "The packaging is prone to this error, because it lists the dependencies separately in .travis.yml\nhttps://github.com/dr-prodigy/python-holidays/blob/79dfc55777111d5a42b1ff3a0ed241fbea79b1ae/.travis.yml#L9-L17\nThe python setup.py install should take care of at least the normal runtime requirements.",
            "Hi,\nit should be fixed now and released as 0.10.5.1 on pypi.\nPls let me know, thank you very much!",
            "Thank you. It's working in 0.10.5.1. I will close this."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/418",
        "title": "Collecting holidays for Singapore takes to long!",
        "count": 3,
        "turns": [
            "Hi folks!\nI noticed that, in newest version of you package (10.4), simple code which I'm already using takes a lot of time and at the end it raise error. I noticed that it happens only for 'Singapore'. In version 10.3 and earlier (10.2 for sure) it works normally. Please take a look into that. The following code is used daily in the popular fbprophet python package.\nCode below\nBest regards,\nMateusz Serocki\nChecked on Windows and Linux\nPython version 3.7\nholiday version 10.4\nhijri-converter version 2.1.1 # after uninstalled that package the problem still occurs with additional warning messages to install that one\n\nimport holidays #(version 10.4)\nimport numpy as np\n\ncountry='Singapore'\nyears = np.arange(1995,2045)\nholiday_names = getattr(holidays, country)(years=years).values() # <- it raise error\n\nI attached error logs\nholidays error.txt",
            "I fixed the slowness issue with the above PR #419 (it was due to an architecture choice I had not taken into consideration), but I cannot replicate the separate OverflowError(\"date out of range\") error from hijri_converter. Please make sure you have the latest version of that library, i.e. 2.1.1 (https://pypi.org/project/hijri-converter/)\n>>> import holidays # (version 0.10.4 with speed patch)\n... import numpy as np\n... country = 'Singapore'\n... years = np.arange(1995, 2045)\n... holiday_names = getattr(holidays, country)(years=years).values() # <- no error\n... print(f'{len(holiday_names)=}')\nlen(holiday_names)=628",
            "@mborsetti  thank you for help! Waiting till PR will on master.\nBest regards,\nMateusz Serocki",
            "Hi @mateuszserocki-kinesso , this has seen release last April. Closing, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/415",
        "title": "Always generates 2020 calendar for Korea",
        "count": 2,
        "turns": [
            "t = holidays.CountryHoliday(\"KR\", years = [2021])\nreturns 2021 calendar and also 2020 calendar",
            "Yes, 2020 holidays is always added like below.",
            "Released in beta, thx üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/414",
        "title": "The alternative holiday in Korea is wrong.",
        "count": 2,
        "turns": [
            "I watched wrong korea holiday.\nI watched under url,  182th line.\nhttps://github.com/dr-prodigy/python-holidays/blame/master/holidays/countries/korea.py\nname = \"Alternative public holiday\"\nalt_date = date(2020, OCT, 17)\nself[alt_date] = name\nKorean Alternative public holiday was August.\nCould you change holiday?",
            "Yes, I agree. Please check it.",
            "Hi, released in beta. Thank you both, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/412",
        "title": "Help with adding holidays for Sri Lanka",
        "count": 1,
        "turns": [
            "Hi, I'd like to add holidays for Sri Lanka. I'm a noob but I figure I could use another country's holiday code as a guide/template.\nApart from fixed date holidays (like Christmas) there are some that don't have the same date. For example Poya is a very frequent holiday where the dates usually match the full moon. I'm not sure how this could be implemented.\nAny ideas on how this can be done?",
            "@batmanscode try using pylunar package"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/409",
        "title": "RuntimeError when using get_named for year 2022",
        "count": 2,
        "turns": [
            "When trying to get a named holiday such as \"Thanksgiving\" for 2022 a RunTime error occurs.\nRuntimeError: dictionary changed size during iteration\n\n(same error as closed issue #355)\nreproduction: https://repl.it/@katscott/holidays2022#main.py\nsample code:\nholidays = holidays.US(years=[2022])\nthanksgiving = holidays.get_named(\"Thanksgiving\")",
            "Additional information regarding this bug:\nWhen you use 2022 with US holidays, New Year's Day is observed and \"goes back\" 1 day into 2021.\nDuring the search for any holiday using get_named function, at some point the observed date is reached and triggers the code to expand data for 2021 which results in the runtime change of holiday lists",
            "Fix released in beta. Thank you both üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/406",
        "title": "upgrade \"convertdate\" to >= 2.3.0",
        "count": 14,
        "turns": [
            "Hi, Is it possible to check if upgrading to convertdate version >=2.3.0 does not have a big impact ?\nThanks",
            "Hi! Great package, thanks for that. I would very much support an update on convertdate. The current version limits pytz to be < 2020 which makes the library run into dependency problems with other libraries",
            "Awesome library for holiday searching. but current pytz < 2020 conflict with many current popular libraries.",
            "convertdate<=2.2.0 is an issue for the Fedora package.\nReference: https://bugzilla.redhat.com/show_bug.cgi?id=1905176",
            "According to convertdate changes (https://github.com/fitnr/convertdate/releases/tag/v2.3.0) there are no changes, which should affect holidays.\nWhy there is version requirement for convertdate<=2.2?",
            "Limitation introduced in b57cb2d by @mmontel-wgs and released in 0.10.4 - 0.10.3 is not affected.\nMaybe he can give an explanation.",
            "The limitation has in fact been introduced due to convertdate 2.2.0 breaking changes (most notable ones: support for Python 2 dropped, some method signature changes, etc.), which prevented us to accept it immediately.\nI decided (mmontel-wgs is my 2nd account) to release a last Python 2 compatible version (0.10.4), to remove this limit in the upcoming, now in beta, version. This of course required a \"keep-back\" for convertdate.\nPls refer to https://github.com/dr-prodigy/python-holidays#development-version for how to change your holidays lib to beta version until it gets finalized and released in master, thx.",
            "@dr-prodigy Thanks for the explanation. Do you have any ETA on the next release?",
            "hi @lociii in fact, no, I don't have set a date yet: usually I sum up a reasonable number of updates before releasing: in the meantime, for who needs bleeding edge updates, the beta branch is the way to go (no untested / unstable features on it, never).\nhttps://github.com/dr-prodigy/python-holidays#development-version\nDoes this suit your needs?\nPls let me know, thx",
            "That might work for an end user but not for a package depending on python-holidays.\nI'd deeply recommend releasing a new version even if you haven't accumulated too many changes as the pytz < 2020 might be blocking some important updates on other packages.",
            "We are having the same problem in NixOS packaging sadly. Please release a version supporting recent convertdate versions.",
            "Hi,\nI confirm I've just released v0.10.5 on master and pypi to solve the issues: please keep me posted on your status.\nThank you all for your interest and support.",
            "Thanks! One issue came up: hijri_converter is missing in the list of dependencies.",
            "Hi,\nit should be fixed now and released as 0.10.5.2 [EDIT: was 0.10.5.1] on pypi.\nPls let me know, thank you very much!",
            "Confirmed as fixed on other similar issue. Closing, thx üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/405",
        "title": "self.country values seem inconsistent.",
        "count": 1,
        "turns": [
            "Hi, is there a particular reason that all the country classes use the two letter abbreviation for their self.country value except these four:\n\nIreland --> using Ireland\nIndia --> using IND\nHonduras --> using HND\n\nFeels inconsistent and makes my life much harder. Wondering if this is a typo or is it by design?",
            "Hi,\nthank you for your support: requested fixes have been released in beta.\nBest regards"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/394",
        "title": "Slice doesn't sweep years in the middle",
        "count": 2,
        "turns": [
            "Problematic code\nimport holidays\nprint(holidays.US()[\"2019-1-1\": \"2021-12-31\"])\nExpected result\nHolidays in 2019, 2020 and 2021 should be listed.\n[datetime.date(2019, 1, 1),\n ...\n datetime.date(2019, 12, 25),\n datetime.date(2020, 1, 1),\n ...\n datetime.date(2020, 12, 25),\n datetime.date(2021, 1, 1),\n ...\n datetime.date(2021, 12, 25)]\n\nActual result\nHolidays in 2020 are not listed at all.\n[datetime.date(2019, 1, 1),\n datetime.date(2019, 1, 21),\n datetime.date(2019, 2, 18),\n datetime.date(2019, 5, 27),\n datetime.date(2019, 7, 4),\n datetime.date(2019, 9, 2),\n datetime.date(2019, 10, 14),\n datetime.date(2019, 11, 11),\n datetime.date(2019, 11, 28),\n datetime.date(2019, 12, 25),\n datetime.date(2021, 1, 1),\n datetime.date(2021, 1, 18),\n datetime.date(2021, 2, 15),\n datetime.date(2021, 5, 31),\n datetime.date(2021, 7, 4),\n datetime.date(2021, 7, 5),\n datetime.date(2021, 9, 6),\n datetime.date(2021, 10, 11),\n datetime.date(2021, 11, 11),\n datetime.date(2021, 11, 25),\n datetime.date(2021, 12, 24),\n datetime.date(2021, 12, 25)]\n\nEnvironment\n\nholidays: 0.10.3\nPython 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]",
            "Hi,\nthis behaviour is by design. Please refer to project documentation, thx",
            "Thank you. I could find it.\n\nIntermediate years are only shown if they are listed in the years parameter."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/391",
        "title": "hebrew.to_jd_gregorianyear(...) cannot unpack non-iterable float object in python 3",
        "count": 3,
        "turns": [
            "Hi,\nI am using fbprophet 0.7.1 and holidays 0.10.3 but since Nov 8th I am getting an error when trying to add holidays from Israel.\nIn holidays it is used hebrew module from convertdate.\n`When\n30 # Passover\n31 name = \"Passover I\"\n---> 32 year, month, day = hebrew.to_jd_gregorianyear(year, hebrew.NISAN, 14)\n33 passover_start_dt = date(year, month, day)\n34 self[passover_start_dt] = name + ' - Eve'\nTypeError: cannot unpack non-iterable float object`\n¬øIs this related to last convertdate 2.3 release of Nov 7th?",
            "Hi,\nyes, in fact it is so.\nFor this issue, we decided to temporarily keep convertdate back to 2.2.0: we'll then investigate the issue.\nWorkaround released (and reviewed again just now) on beta branch.\nThx",
            "@dr-prodigy did you start working on this? if not, I'll be happy to",
            "Just released in beta. Thank you very much for your good work! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/390",
        "title": "Holiday on Observed Holiday",
        "count": 0,
        "turns": [
            "In South Africa, when a holiday falls on an observed holiday the observed holiday should be moved on to the next available day"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/385",
        "title": "one of Korea Holidays is wrong",
        "count": 1,
        "turns": [
            "Hi, Thanks for holidays package.\nBefore I decide to use it, I had tested it with below code\nfor date, name in sorted(holidays.Korea(years=2020).items()):\nprint(date, name)\nand I got this result below,\n2020-01-01 New Year's Day\n2020-01-24 The day preceding of Lunar New Year's Day\n2020-01-25 Lunar New Year's Day\n2020-01-26 The second day of Lunar New Year's Day\n2020-01-27 Alternative holiday of Lunar New Year's Day\n2020-03-01 Independence Movement Day\n2020-03-02 Alternative holiday of Independence Movement Day\n2020-04-30 Birthday of the Buddha\n2020-05-01 Labour Day\n2020-05-05 Children's Day\n2020-06-06 Memorial Day\n2020-08-15 Liberation Day\n2020-09-30 The day preceding of Chuseok\n2020-10-01 Chuseok\n2020-10-02 The second day of Chuseok\n2020-10-03 National Foundation Day\n2020-10-09 Hangeul Day\n2020-12-25 Christmas Day\nThe problem is '2020-03-02 Alternative holiday of Independence Movement Day' is wrong data.\nAlternative holiday is only for \"Lunar New Year's Day, Children's Day and Chuseok' in Korea.\nThere is no Alternative holiday for Independence Movement Day.",
            "Hi,\nin fact that's correct: a former alternative calculation was wrongly attributed to Independence Day.\nFixed and released in beta, thx for your support"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/384",
        "title": "Cameroonian holidays missing from holidays list PLUS other issues",
        "count": 0,
        "turns": [
            "I'm a stubborn newcomer!\nI attempted creating cameroon's list by comparing with your Burundi's and Nigeria's. Ok, no problem. But since it was my first copy-and-pasting AND since I cannot use pip on my python 3.9 for a reason or another I'm calling for help! I do hope to go round pip if possible because it seem like it would complicate everything.\nWhat is the NORMAL procedure for getting AND making the import work on coding? I got your HOLIDAYS file in the LIB section of my python 3.9, and I added my cameroon file next to in the COUNTRIES folder. then I'm working on this GWD.py which stands for getworkingdate - if you care to look or have time, i'll share it with you here - and it cannot import the holidays folder for some reason. I tried everything.\n##gwd.txt"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/383",
        "title": "Thailand bank holidays missing from the country list",
        "count": 1,
        "turns": [
            "It would be really helpful if the Thailand bank holidays could be added into this package please.",
            "Hi,\nthanks for your interest in this project.\nWe understand your point, but unfortunately there's not been space for its development until now.\nAs usual, any contribution is welcome, thx!\nPS: Marking this request as \"help wanted\""
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/382",
        "title": "Problem when checking a date with unknown year in a pandas series",
        "count": 3,
        "turns": [
            "Intuitively I'd think the following test should work.\nBut the only the first assertEqual is fine.\nThe second fails, because _populate was never called with the year 2026.\nus = holidays.UnitedStates(years=[2025])\ndf = pd.DataFrame.from_dict({\"date\": [date(2025, 1, 1), date(2025, 1, 2)]})\nself.assertEqual(df[\"date\"].isin(us).tolist(), [True, False])\ndf = pd.DataFrame.from_dict({\"date\": [date(2026, 1, 1), date(2026, 1, 2)]})\nself.assertEqual(df[\"date\"].isin(us).tolist(), [True, False])\n\nI changed the contains method of the HolidayBase class.\n    def __contains__(self, key):\n        if str(type(key)) == \"<class 'pandas.core.series.Series'>\":\n            res = []\n            for k in key:\n                res.append(dict.__contains__(self, self.__keytransform__(k)))\n            return res\n        return dict.__contains__(self, self.__keytransform__(key))\n\nUsing this it kind of works...\nBut I don't think it's a nice solution.",
            "Hi,\nunfortunately, although probably working, I don't think we can accept this code, sorry.\nIf you could design a cleaner code to accomplish that (I'm no pandas expert) I will surely consider your improvement.\nThank you very much, cheers",
            "Hi,\nI agree, it's bad code...\nThis is the first time I'm writing something for an opensource project and I can't find a good solution.\nMaybe it's better to just add a few lines to the README.\nSomething like:\ndf = pd.DataFrame.from_dict({\"date\": [datetime(2026, 1, 1), datetime(2026, 1, 2)]})\nus = holidays.UnitedStates(years=df.date.dt.year.unique())",
            "@sebastianfastert which pandas version are you using? I've tried your initial solution with pandas 0.24.0 and HolidayBase.__contains__ isn't triggered at all when using .isin therefore 2026 isn't expanded and the second test fails"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/374",
        "title": "Support ISO 3166-2 codes for subdivisions of countries",
        "count": 2,
        "turns": [
            "python-holidays only supports prov and state subdivisions, however states are subdivided into one or more from these categories:\n\ncantons\ncommune\ncouncils\ncounties\ndepartments\ndependencies\ndistricts\ndivisions\nemirates\nentities\ngovernorates\ngovernorates\nislands, groups of islands\nL√§nder\nadministrations\nmunicipalities\nparishes\nprefectures\nprovinces\nrayons\nregions\nsectors\nstates\nterritories\ntowns\nunitary authorities\nvoivodships\nwards\n\nInstead of expanding the types of subdivisions naming supported by this library, I propose adopting ISO 3166-2 (https://en.wikipedia.org/wiki/ISO_3166-2) which already standardizes all types of subdivisions into a non-overlapping namespace.\nI envision being able to initialize holidays for the state of California in the USA (ISO 3166-2 code US-CA) as follows:\nus_ca_holidays = holidays.US('CA'),\nfor the Emirate of Dubai as follows:\ndubai_holidays = holidays.AE('DU'),\nfor the Aƒüsu rayon in Azerbajan as follows:\naz-agu_holidays = holidays.AZ('AGU')\nand so on.\n@dr-prodigy  I can work on a pull request [with backward compatibility] if I know it's going to be utilized, but won't work on it otherwise.",
            "Hey there @mborsetti\nsorry this proposal went unnoticed until now, my bad!\nThis is definitely a great idea, which would provide a definitely higher flexibility in the config/init phase.. especially if coupled to .CountryHoliday('[CODE]').\nAs long as we provide compatibility with previous versions, I totally agree with your analysis and would really appreciate your improvement. In the meanwhile, I can help you out with the task, if you wish.\nthx loads üëç",
            "Released with #608 merge. Thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/369",
        "title": "Wrong workday info for country HR",
        "count": 1,
        "turns": [
            "Today (Oct. 8, 2020) my alarmclock automation did not go off, because my workday sensor gave the wrong info (no workday). This day used to be a holiday in Croatia, but is not anymore.\nbinary_sensor:\n\nplatform: workday\ncountry: HR",
            "Hi,\nfix merged in beta.. thank you very much @haseat and @mborsetti !\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/365",
        "title": "Support for Non-Country Holidays",
        "count": 2,
        "turns": [
            "Other entities have holidays, like your company and a commonly followed holiday schedule is the stock market holidays - many companies follow NASDAQ holidays.  And, guess who all don't want their python programs running on NASDAQ holidays - many companies!    Maybe this gets into the realm of a custom holiday that people can add themselves, though thousands care about the NASDAQ holiday calendar.  Nice work. Cheers",
            "ECB holidays are already supported.\nCan you provide authoritative list of NASDAQ holidays?",
            "Marking closed, thx both, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/364",
        "title": "Good Friday 2019-04-19 is not a holiday",
        "count": 1,
        "turns": [
            "The US holiday of good friday 2019-04-19 is not recognized as a holiday.\n>>> import holidays\n>>> us_holidays = holidays.UnitedStates()\n>>> \"2019-04-19\" in us_holidays\nFalse",
            "Nevermind apparently it's not a federal holiday but is recognized by some states."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/362",
        "title": "Reduce mandatory packages bloat",
        "count": 14,
        "turns": [
            "I installed the package in a new machine and it installed the following seldom-used packages:\npymeeus, convertdate, korean-lunar-calendar\nAny work to reduce (and/or standardize) the number of packaged installed would be helpful to combat package bloat.  For example, I have no need for Korean holidays yet I find myself having to install a package that, by its name, is required only for those type of holidays.",
            "Hi Mike @mborsetti ,\nanswers:\npymeeus -> no reference on this package in holidays.. please double-check!\nkorean-lunar-calendar -> currently used for Korea and Vietnam (complex calculations, not an easy task to code it into holidays)\nconvertdate -> you just added a fallback for hijri-converter based on it.. I consider it out of this scope now :-)\nAny ideas for the lunar calendar?",
            "A bit off-topic but on v0.10.4 convertdate was pinned to version convertdate<=2.2.0 witch means that pytz was pinned to  pytz<2020",
            "Hi, sorted out and released to beta with #406\nClosing, thx!",
            "I would also welcome to have less package bloat. One option often considered by other packages ist to add optionals like holidays[lunar] or holidays[full] for convertdate and other advanced converters.\nI also guess that many people won't need the full set of possible conversions",
            "Moving some deps into optional dependencies that you can choose to install only if you need them would indeed be nice!",
            "@dr-prodigy This should probably be reopened to inspire someone to produce a PR",
            "Hi @mborsetti + everyone!\nI definitely welcome this idea but, as already shared, holidays itself relies on a pretty limited number of dependencies.\nUnfortunately, some of those (very often related to specific countries / cultures) require quite a large number of other dependencies, thus introducing some apparently unnecessary bloat.\nPoint is: in order to retain support for all the countries we currently do + provide test coverage for all of them, holidays package definition needs to require those dependencies.\nA possible solution I have to defeat this constraint could be spinning off some countries and creating a new library like holidays-extras, holidays-lunar or so, depending in turn on holidays + all those usually unnecessary deps.. but I don't feel this as a good choice, because it would have huge impacts on every project currently using holidays.\n@MRigal @stianjensen @mborsetti any other idea to sort this out?\nThx everyone üëç",
            "https://creatronix.de/pip-optional-dependencies/\nI think this can be solved with extras_require so that people who need all the calendars can install holidays[extras].",
            "Hello @dr-prodigy!\nI agree with @stianjensen:  https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies is a great tool for this use case.\nSpecifically:\n\nWe can target the dependencies that cause the most bloat and segregate them as optional dependencies to be installed as e.g. holidays[lunar] or holidays[islamic] or holidays[lunar,islamic] or whatever they turn out to be;\nA small amount of code would need to be added to handle import failures with an explanatory error (e.g. \"Could not import korean-lunar-calendar; please install using pip install -U holidays[korea]\" or whatever the case may be).\nNo changes would be required for testing other than for this purpose we would install dependencies from a new requirements_test.txt file containing all dependencies, including optional ones;\nThe documentation would need to be updated, and the name of optional dependencies added to the relevant countries.\n\nI wish I had time to volunteer to work on this at the moment, but sadly I don't.",
            "This sounds very promising @stianjensen @mborsetti thank you both!\nIn fact in the past we managed similar import failures to back-support Python 2.. the same handling could apply to those cases.\nIt doesn't seem to be a very complex work per se, but it requires some structured effort on every side and level of the project (package definition / structure, country-level code, tests, doc).. I will think about it! If anyone is eager to contribute, it would be greatly appreciated! üëç",
            "I guess this can be closed as we've reduced the runtime dependency list to a single package.",
            "Truly an amazing job!\nüëèüëèüëèüëè\n(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)",
            "üëç üëç üëç üëç\n\n(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)\n\nI believe korean-lunar-calendar was eliminated by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1148",
            "üëç üëç üëç üëç\n\n(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)\n\nI believe korean-lunar-calendar was eliminated by @KJhellico in #1148\n\nAh, yes! The change is still in beta, so missed it."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/361",
        "title": "Chinese holidays?",
        "count": 7,
        "turns": [
            "Is there a script for Chinese holidays in this library? If not, is there a reason why? as it's one of the biggest economies and thus this data is quite relevant in many fields.",
            "It's open source.  You're welcome to contribute it, and thanks in advance!",
            "Hi,\nthanks for your interest in this project.\nIn fact, Chinese holidays, due to their peculiar language/alphabet and regulations, are clearly a pretty complex task.\nTherefore (and due to lack of contributors) there's not been space for its development until now.\nAs already stated any contribution is welcome, thx!\ndr-p\nEDIT: marking this request as \"help wanted\"",
            "I'm a Chinese,I want to help complete this work„ÄÇCan you give me some information and tell me where to start„ÄÇ",
            "@HomeIntelligentCube if you can help discribe logic that is needed in order to determine if a given day is a holiday in China then it could be perfect. Alternatively take a look at the country files in https://github.com/dr-prodigy/python-holidays/tree/master/holidays/countries for how logic is coded up for different countries.",
            "I found the following holiday package for javascript, which has Chinesse holidays: https://github.com/commenthol/date-holidays/blob/master/data/countries/CN.yaml which could be an inspiration.",
            "I have a pull requiest on this issue #515",
            "@tserekh hi, your PR is now merged in beta.. thank you very much for your support! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/360",
        "title": "Appearance of the object is that it's an empty dict, with a custom repr that would be solved",
        "count": 8,
        "turns": [
            "If you want I could make a PR that would look like the following:\n>>> import holidays\n>>> us_holidays = holidays.UnitedStates()\n>>> us_holidays\nholidays.UnitedStates(country=\"US\", prov=None, state=None)\nWouldn't this be nice? Let me know if I should make the PR",
            "Hi @kootenpv\nthank you for your interest in python-holidays.\nBeing sincere, even if I consider this nice as somehow / sometimes useful, on the other hand it would impact on the current library behaviour, so due to the wide usage of it, I don't think we can release it as you suggest.\nIf you think of a different interface to access the current initialization state (possibly regarding the loaded years too), it would surely be very appreciated / merged.\nThanks again, cheers !",
            "Hi @dr-prodigy! Thanks for this awesome library! I recently found it while looking for a solution to an ugly banking-related problem and I appreciate having an elegant solution to it.\nI'd like you to reopen the issue, because I agree with @kootenpv's point. Here's why:\nI found this library looking for a list of holidays in Poland. I didn't expect it to work, but got intrigued by hundreds of Github stars so I tried it out. So I flick through the README, pip install it, import it and try it out in my own way:\n>>> import holidays\n>>> holidays.Poland()\n{}\n\nSo... an empty dictionary? \"That's not a way to tell me that Poland isn't supported!\" - I thought. So I looked at the README again, saw that Poland was marked as \"None\" and almost moved along, assuming it's just yet another popular Python library that doesn't seem to work for my use case. Curious why it's the case though, I looked at the code and found that it seems to make sense. So I tried another approach:\n>>> d = {}\n>>> import holidays\n>>> holidays.Poland._populate(d, 2021)\n>>> d\n{datetime.date(2021, 1, 1): 'Nowy Rok', datetime.date(2021, 1, 6): '≈öwiƒôto Trzech Kr√≥li', datetime.date(2021, 4, 4): 'Niedziela Wielkanocna', datetime.date(2021, 4, 5): 'Poniedzia≈Çek Wielkanocny', datetime.date(2021, 5, 1): '≈öwiƒôto Pa≈Ñstwowe', datetime.date(2021, 5, 3): '≈öwiƒôto Narodowe Trzeciego Maja', datetime.date(2021, 5, 23): 'Zielone ≈öwiƒÖtki', datetime.date(2021, 6, 3): 'Dzie≈Ñ Bo≈ºego Cia≈Ça', datetime.date(2021, 8, 15): 'Wniebowziƒôcie Naj≈õwiƒôtszej Marii Panny', datetime.date(2021, 11, 1): 'Uroczysto≈õƒá Wszystkich ≈õwiƒôtych', datetime.date(2021, 11, 11): 'Narodowe ≈öwiƒôto Niepodleg≈Ço≈õci', datetime.date(2021, 12, 25): 'Bo≈ºe Narodzenie (pierwszy dzie≈Ñ)', datetime.date(2021, 12, 26): 'Bo≈ºe Narodzenie (drugi dzie≈Ñ)'}\n\nYay! Maybe I can use it after all then! You're probably shaking your head in disagreement... rightfully so, because I'm supposed to do something like datetime.date(2021, 1,1) in holidays.Poland(). To which I'd normally reply \"but what's the point checking if I already got an empty dict...?\"\nSo that's basically the problem. The __repr__ is misleading and should be changed. Because right now if you come with a lesser known country such as Poland, you're kind of used to libraries not working and you might just move along, humbly kind of agreeing with that assumed neglect.\nHere are the solutions I propose:\n\nlike @kootenpv suggested, make __repr__ actually return a string that doesn't suggest it's a plain dict,\nif you assume people rely on this behavior of __repr__ (which they probably shouldn't) and you want to be nice to them, throw a DeprecationWarning that this __repr__ is deprecated and you'd rather say it's an instance of holidays.countries.poland.Poland or something,\nexplicitly show in README that this {} is misleading and __contains__ is overloaded. Showing it in an interactive example is better than writing it as a part of text as some folks scan through dozens of libraries and might just omit something that doesn't seem to work,\nexpose a regular is_holiday() method, because mixing a misleading __repr__ with overloaded __contains__ might be just a bit too much magic.",
            "Hi @d33tah\nfirst of all thank you for your interest and time spent in explaining your point.\nAlthough:\n\nthe doc provides Available Countries paragraph.. why in the world we should list unimplemented countries there? :-)\nExamples paragraph starts with 4 rows of code explaining how to use the sw.. why not giving them a quick glance before blaming the sw for not working, and/or tinkering with the internals of the lib? :-)\n\nI must admit anyway that the library, even being smart and convenient in its usage, isn't self-explanatory.\nOn a second thought, I came to the decision of reviewing both __repr__ and __str__ methods to return clearer / more useful information.\nIn order to preserve debug-friendliness, the reviewed values will be return only on uninitialized state, while for initialized objects the usual list of holiday dates will be returned.\nI will soon release a fix for this, thank you again üëç",
            "Done and pushed on beta.. cheers üëç",
            "Ps: I was forgetting.. @d33tah please let me know your thoughts, thanks!",
            "@dr-prodigy yup! That seems to solve the problem :) And once again, thanks for implementing this library!",
            "Yay! :-)\nAnd if you wish, I would really appreciate you collaborating to improve Poland holidays, or anything else in the lib.. we always need passionate and experienced coders to improve python-holidays!\nThanks a lot again, cheers! üëç\ndr-p",
            "@dr-prodigy I took a quick look at the Polish code, it seems to look fine. If there was any potential problem, I'd be looking for it in those two lines:\n        self[e + rd(days=49)] = \"Zielone ≈öwiƒÖtki\"\n        self[e + rd(days=60)] = \"Dzie≈Ñ Bo≈ºego Cia≈Ça\"\n\nAccording to Polish Wiki, Zielone ≈öwiƒÖtki should always be on Sunday and Dzie≈Ñ Bo≈ºego Cia≈Ça on Thursday. Might be worth checking if that's actually the case during the coming and previous years.\nThere are also some historical dates not implemented, but I'm not sure how important it is to be able to reliably date back to before 1989."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/359",
        "title": "How to get holidays ",
        "count": 0,
        "turns": [
            "No description provided."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=10&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/356",
        "title": "MX holidays incorrect for \"Benito Juarez's Birthday (observed)\"",
        "count": 2,
        "turns": [
            "For MX, seems like Benito Juarez's Birthday is incorrect.\nIn 2021 it's March 21. But there are TWO instances of \"Benito Juarez's Birthday (observed)\", one on March 15 and one on April 30.\nFor MX in 2022, Benito Juarez's Birthday does not appear at all, and instead we again have TWO instances of \"Benito Juarez's Birthday (observed)\", one on March 21 and one on May 2.\nIn 2023, we again have \"Benito Juarez's Birthday\" on Tuesday March 21 and \"Benito Juarez's Birthday (observed)\" on Monday March 20.",
            "Thanks for the report.\nAm not sure why the package reports both the observed and the \"base\" (March 21) holiday, and am not changing this behavior until I hear from @dr-prodigy .\nHowever, I have made a PR to fix the bug that led to the extra \"Benito Juarez's Birthday (observed)\" in 2021 as #377",
            "Hi, thank you. This issue has been solved with @mborsetti 's work on #377\nClosing, thank you both!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/355",
        "title": "US Holidays crashes for 2022",
        "count": 1,
        "turns": [
            "Running the package for holidays.UnitedStates(years=2022) will result in the following errors, works for every other year\nOut[27]: Traceback (most recent call last):\nFile \"/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/core/formatters.py\", line 224, in catch_format_error\nr = method(self, *args, **kwargs)\nFile \"/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/core/formatters.py\", line 702, in call\nprinter.pretty(obj)\nFile \"/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py\", line 377, in pretty\nreturn self.type_pprinters[cls](obj, self, cycle)\nFile \"/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py\", line 601, in inner\nfor idx, key in p._enumerate(keys):\nFile \"/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py\", line 280, in _enumerate\nfor idx, x in enumerate(seq):\nRuntimeError: dictionary changed size during iteration",
            "Hi,\nthank you for reaching out.\nIn your stack trace there is no reference to holidays code (which seems to exclude issues depending on the library).. would you please provide some additional information?\nThx\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/351",
        "title": "MLK still causes confusion at the state level",
        "count": 1,
        "turns": [
            "If multiple holidays occur on the same day, they are separated with a ,. This issue was fixed for Martin Luther King, Jr. Day by removing the comma (#295), however for Idaho the issue still exists:\nhttps://github.com/dr-prodigy/python-holidays/blob/02d5d510202a02471cd0a939a11525cf02ca115c/holidays/countries/united_states.py#L107\nI suggest removing the comma here as well. Or, in case this issue arises in other countries, maybe change the delimiter to a semicolon?\nOriginally posted by @raffg in #295 (comment)",
            "Fixed and released in beta, thanks\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/350",
        "title": "Northern Ireland should be NorthernIreland",
        "count": 1,
        "turns": [
            "Hey,\nin the documentation the country Northern Ireland is mentioned. However, using this string results in the error\n\nKeyError: 'Country Northern Ireland not available'\n\nUsing NorthernIreland however works. I believe, it would be preferable to adjust the documentation to reflect this behaviour, i.e. remove the space.\nMany thanks!\nRichard",
            "Hi,\njust fixed and released in beta.. thank you!\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/349",
        "title": "pop_named() sometimes generates an exception",
        "count": 1,
        "turns": [
            "This simple code block generates an exception when I try to pop \"Columbus Day\" (last line):\nfrom datetime import date\n  \nimport holidays\n\nus_holidays = holidays.CountryHoliday('US', prov=None, state='CA', years=2022)\n\nprint(us_holidays.get('2022-10-10').format(\"%s\"))\n\nus_holidays.pop_named(\"Columbus Day\")\n\nThe exception is dictionary changed size during iteration, and it seems to be related to popping elements out of a dictionary while you're iterating through it: https://stackoverflow.com/questions/11941817/how-to-avoid-runtimeerror-dictionary-changed-size-during-iteration-error.  The element to be popped isn't actually removed.\nI'm far from a competent Python programmer, but iterating over list(self) seems to solve the problem for me - no exception, and the item is removed properly:\n    def get_named(self, name):\n        # find all dates matching provided name (accepting partial\n        # strings too, case insensitive), returning them in a list\n        return [key for key in list(self) if name.lower() in self[key].lower()]",
            "Thank you @rccoleman + @mborsetti ! üëç Merged on beta."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/348",
        "title": "Revisit #211 to include FR for France",
        "count": 1,
        "turns": [
            "This is an appeal to reconsider the request in #211\nStarted using this library and I really like it, but this one exception to the iso3166 standard is most unexpected. I'll skip a lengthy opinion on the value of standards and go directly to my question: if there was a pull request to adhere to iso3166, would it be considered? Or would that be wasted work because of reasons (backwards compatibility or anything else)?\nThanks,\nrfm.",
            "Two-letter standards would be heavily appreciated. Non-compatibility with certain countries is surprising, to say the least ;) Thank you very much!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/345",
        "title": "Would it be possible to download all a country's holidays, including those of the states/provinces?",
        "count": 2,
        "turns": [
            "Hi, thank you for creating this. It has been really useful.\nWhat I was wondering: would it be possible to download all a country's holidays, including those of the states/provinces. E.g. through enabling a states='all' or prov=[AB, BC, MB]?\nThanks again and regards, Eduard",
            "Not that I can think of. Just create a loop to pull one state/province at a time.",
            "Unfortunately, due to the project structure, this is not currently possible.\nOn the other hand, I confirm the solution from @mborsetti is perfectly adequate, yet easy to implement.\nThank you both, best regards\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/342",
        "title": "UK bank holiday first monday in august is only scotland",
        "count": 1,
        "turns": [
            "Hi,\nthe UK gov.uk website (https://www.gov.uk/bank-holidays) shows ONLY Scotland has the first monday in august as a bank holiday\nengland and northern ireland dont have them as a bank holiday, only scotland does!\ni wondered why my home-assistant was showing today as it wasnt a workday?\nturns out because it was a work day, its just the holidays module calculates it wrong!",
            "IGNORE:\nset the country to 'England' instead of 'UK'\nworks a treat üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/341",
        "title": "[Question] Tooling changes",
        "count": 3,
        "turns": [
            "As promissed in https://github.com/dr-prodigy/python-holidays/issues/338#issuecomment-662592391 I'm working on a PR to change the CI from travis to github actions and also add CD.\nSince you liked the idea of using bump2version, for releas process.\nI was wondering if would also be interested in some other changes:\n\nAutoformat code with black, so formatting code to look nice is a no brainer\nAdd  pre-commit to run back and flake8 on commit, like that  there won't be commits like fix flake8 which I saw a lot on other projects\nStyle check the tests with flake8, IMHO tests should also comply with styling rules\nUse pytest as testrunner, pytest is more prowerful (and gives prettier output) than good old unittest and would also allow to restructure the tests to mimic the projects structure, which again would make it easier to find corresponding tests\nUse tox so contributors can tests multiple python version locally",
            "Also, since the coveralls action doesn't support xml reports, I would use codecov instead.\nNevermind the python client for coveralls finally supports github actions.",
            "This would be so nice!",
            "We are on the way to release this soon.. Closing this question, thx! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/340",
        "title": "List with \"Available countries\" is wrong for 2020",
        "count": 3,
        "turns": [
            "I took a list of countries and checked \"Available countries\" with the command\nmake_holidays_df([2020],  country)\n\n\n\nwhere: country = 'Latvia' or  'LV' or 'LVA'...\n\nResults:\n\nCountries that are on this list, but their holidays are not available\n\n\n['Burundi', 'Latvia', 'Morocco']\n\n\nCountries that are not on this list, but their holidays are available\n\n\n['China', 'Indonesia', 'Philippines', 'Thailand']\n\n\nA list of country codes, the holidays of which are available, but it is difficult to find them there because of incorrect names (not according to ISO, see pycountry):\n\n\n['DO', 'GB', 'KR', 'NZ', 'RU', 'US', 'ZA']\n\n\nThere is a problem with short country codes (according to ISO):\n\n\nthere are 'France', 'FRA', 'Honduras', 'HND', 'Turkey' but there are not 'FR', 'HD', 'TR', TUR'.\n\nPlease correct it.",
            "I add my vote to be 100% ISO 3166-1 (alpha-2) code compliant.  I don't think there's much use of the alpha-3 codes so I'd just drop them all; otherwise they also need to be present for all countries.",
            "I fixed all these problems and added 5 new countries (Europe). But the holidays' format doesn't fit me for solving the coronavirus problem (I found a bug in Prophet and suggested that to\nProphet team makes changes to their code, but they refused and offered to change the parameters of the library \"holidays\" - see issue). I decided not to beg anyone and made my dataset in Kaggle. It doesn't contain all these errors, it is adapted to the coronavirus task, and I plan to develop it further (for more countries). You can take and carry on to \"holidays\" all the information that you think is necessary. Good luck!",
            "Thank you! Good luck to you too! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/338",
        "title": "Unable to install version 0.10.3",
        "count": 5,
        "turns": [
            "For version 0.10.3 the uploaded files on PyPi only have a sdist for macos, this prevents installation on other operation systems.\nCould you upload a general tarball as it was done before.\nThanks a lot",
            "I have the same issue, on Windows 10 I managed to install it only with:\npip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/master\nUsing the normal installation I get the 0.10.2 version.",
            "@dr-prodigy If you are interested I could make a PR that sets up github actions as CI+CD, so it will build and deploy automatically when you push a tag.",
            "Hi,\nunfortunately, in fact, PyPi has changed its behaviour, and now doesn't accept multiple source packages anymore.\nNow it should be fixed (I've quit macos version in favour of the standard one), please confirm thank you! üëç\nOn the other hand, it would be really interesting to add CI+CD to the project: I would highly appreciate any help on this, thank you @s-weigand ! I'm at disposal for clarifications / suggestions.\nCheers,\ndr-p",
            "@dr-prodigy I can confirm that it works on Linuxs, Windows and MacOS, thanks a lot üòÑ\nI will make a PR with github actions CI+CD workflow this week.\nFor managing versioning I use bump2version, with this (+CD) a new release is as easy as two command:\n$ bump2version major|minor|patch\n$ git push --follow-tags\nWould you want to use that too?",
            "Hi @s-weigand\ngreat to know everything is in shape now thx!\nBump2version is very interesting too üëç\nSo yes please, let's work on it too, thank you very much! Please let me know if I can help you in any way.\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/337",
        "title": "Add Romania holidays",
        "count": 6,
        "turns": [
            "Month\nDay\nName\nComment\n\n\n\n\n1\n1\nAnul Nou\n¬†\n\n\n1\n2\nAnul Nou\n¬†\n\n\n1\n24\nZiua Unirii   Principatelor Romane\n¬†\n\n\n4\n17\nVinerea Mare\nUse orthodox Easter calculator here for the Friday before Easter\n\n\n4\n19\nPaste Ortodox\nUse orthodox Easter calculator here for first day of Easter\n\n\n4\n20\nPaste Ortodox\nUse orthodox Easter calculator here for second day of Easter\n\n\n5\n1\nZiua Muncii\n¬†\n\n\n6\n1\nZiua Copilului\n¬†\n\n\n6\n7\nRusalii\nUse orthodox Easter calculator here for first day of Orthodox Pentecost\n\n\n6\n8\nRusalii\nUse orthodox Easter calculator here for second day of Orthodox Pentecost\n\n\n8\n15\nAdormirea   Maicii Domnului\n¬†\n\n\n11\n30\nSfantul Andrei\n¬†\n\n\n12\n1\nZiua Nationala   a Romaniei\n¬†\n\n\n12\n25\nCraciunul\n¬†\n\n\n12\n26\nCraciunul",
            "I prepared romania.py file as well (easy adaptation from Greece to overcome calculated dates).\nromania.zip",
            "Please also update the Splunk App accordingly. Thanks.",
            "Hi,\nthank you for your interest and support in python_holidays.\nI have to point out that, although very appreciated, your work is not needed anymore, since I've just merged the support for Romania a few days ago, as proposed in a PR by dorianm (pls check beta branch).\nIf you still would like to help, I would then suggest you to double-check its correctness (although I'm pretty sure it's a very good job), and in case, apply fixes / improvements. Would you?\nPS: I don't know nor have any control on \"Splunk App\", sorry!\nThanks, best regards\ndr-p",
            "Thanks, I will review as proposed, did not notice the beta branch update :)",
            "I can confirm, the beta implementation is better than my own work. Thanks",
            "Okay! Closing this, thank you very much :-)\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/336",
        "title": "Missing Swiss holidays",
        "count": 2,
        "turns": [
            "Hi,\nThe following Swiss holidays are missing:\n\n2nd of January\n1st of May\n26th of December\n\nSee here:\n\nhttps://vschweiz.ch/feiertage-schweiz/\nhttps://de.wikipedia.org/wiki/Feiertage_in_der_Schweiz",
            "Thanks for your input!\nAccording to the code:\n\n2nd of January is a holiday in cantons 'AG', 'BE', 'FR', 'GL', 'GR', 'JU', 'LU', 'NE', 'OW', 'SH', 'SO', 'TG', 'VD', 'ZG', 'ZH'\n1st of may is a holiday in cantons 'BL', 'BS', 'JU', 'NE', 'SH', 'SO', 'TG', 'TI', 'ZH'\n26th of December is a holiday in cantons 'AG', 'AR', 'AI', 'BL', 'BS', 'BE', 'FR', 'GL', 'GR', 'LU', 'NE', 'NW', 'OW', 'SG', 'SH', 'SZ', 'SO', 'TG', 'TI', 'UR', 'ZG', 'ZH'\n\nThis matches what's in Wikipedia.\nDid you request the holidays for a specific Canton?  The code currently defaults to none (i.e. to reporting only holidays that are National in scope)",
            "Hi, thanks for your comment. You are right, these are already properly defined in the code for the respective cantons. I was under the false impression that these three dates were national holidays where in fact it depends on the canton. I'll close the issue accordingly."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/335",
        "title": "Iberian Peninsula dataset that can be easily adjusted to other countries",
        "count": 1,
        "turns": [
            "If you find it relevant, I have used two different approaches to build my own Holidays dataset for the Iberian Peninsula.\nThey can be easily adjusted to consider other countries/regions.\nThe scripts are available on this repo, on GitHub.\n‚Ä¢ In this one, I have added the holidays dates manually.\n‚Ä¢ In this one, I am taking advantage of Facebook Prophet.",
            "Hi,\nfbprophet in fact depends on python-holidays:\nhttps://github.com/facebook/prophet/blob/master/python/requirements.txt\nCheers,\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/332",
        "title": "Vietnam / South Korea initialization Bug",
        "count": 1,
        "turns": [
            "Running holidays.CountryHoliday(country, years=years) for countries like Vietnam and South Korea do not work, because the initialization function for those countries call the parent class init before creating a koreal_cal attribute, e.g.:\n        self.country = \"VN\"\n        HolidayBase.__init__(self, **kwargs)\n        self.korean_cal = KoreanLunarCalendar()\nThe parent class calls the _populate method which depends on the korean_cal attribute raising an AttributeError.\nReally minor issue, easy fix would be:\n        self.country = \"VN\"\n        self.korean_cal = KoreanLunarCalendar()\n        HolidayBase.__init__(self, **kwargs)",
            "WFM:\n>>> import holidays\n>>> a = holidays.CountryHoliday(\"VN\", years=2020)\n>>> b = holidays.VN(years=2020)\n>>> a\n{datetime.date(2020, 1, 1): \"International New Year's Day\", datetime.date(2020, 1, 24): \"Vietnamese New Year's Eve\", datetime.date(2020, 1, 25): 'Vietnamese New Year', datetime.date(2020, 1, 26): 'The second day of Tet Holiday', datetime.date(2020, 1, 27): 'The third day of Tet Holiday', datetime.date(2020, 1, 28): 'The forth day of Tet Holiday', datetime.date(2020, 1, 29): 'The fifth day of Tet Holiday', datetime.date(2020, 4, 2): 'Hung Kings Commemoration Day', datetime.date(2020, 4, 30): 'Liberation Day/Reunification Day', datetime.date(2020, 5, 1): 'International Labor Day', datetime.date(2020, 9, 2): 'Independence Day'}\n>>> b\n{datetime.date(2020, 1, 1): \"International New Year's Day\", datetime.date(2020, 1, 24): \"Vietnamese New Year's Eve\", datetime.date(2020, 1, 25): 'Vietnamese New Year', datetime.date(2020, 1, 26): 'The second day of Tet Holiday', datetime.date(2020, 1, 27): 'The third day of Tet Holiday', datetime.date(2020, 1, 28): 'The forth day of Tet Holiday', datetime.date(2020, 1, 29): 'The fifth day of Tet Holiday', datetime.date(2020, 4, 2): 'Hung Kings Commemoration Day', datetime.date(2020, 4, 30): 'Liberation Day/Reunification Day', datetime.date(2020, 5, 1): 'International Labor Day', datetime.date(2020, 9, 2): 'Independence Day'}\n\nCan you better explain, please?\nThanks a lot\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/330",
        "title": "Missing Holidays in Spain",
        "count": 1,
        "turns": [
            "If we run the following script to analyze the holidays in Spain for the year 2015\nfrom datetime import date\nimport holidays\nfor date, name in sorted(holidays.ES(years=2015).items()):\n    print(date, name)\n\nWe get the following output:\n\n2015-01-01 A√±o nuevo\n2015-01-06 Epifan√≠a del Se√±or\n2015-08-15 Asunci√≥n de la Virgen\n2015-10-12 D√≠a de la Hispanidad\n2015-11-01 Todos los Santos\n2015-12-06 D√≠a de la constituci√≥n Espa√±ola\n2015-12-08 La Inmaculada Concepci√≥n\n2015-12-25 Navidad\n\nHowever, some dates are missing, such as:\n\"D√≠a del Trabajador\" month=5, day=1\n\"Viernes Santo\", which is equivalent to Easter-2 days.",
            "Hi,\nthank you for your interest in python_holidays.\nAbout \"D√≠a del Trabajador\", WFM:\n\n2015-01-01 A√±o nuevo\n2015-01-06 Epifan√≠a del Se√±or\n2015-05-01 D√≠a del Trabajador\n2015-08-15 Asunci√≥n de la Virgen\n2015-10-12 D√≠a de la Hispanidad\n2015-11-01 Todos los Santos\n2015-12-06 D√≠a de la constituci√≥n Espa√±ola\n2015-12-08 La Inmaculada Concepci√≥n\n2015-12-25 Navidad\n\nAbout \"Viernes Santo\", it is not a general holiday in Spain. If you initialize prov properly, you'll get it right (along with \"Jueves Santo\"):\nfrom datetime import date\nimport holidays\nfor date, name in sorted(holidays.ES(prov='MD', years=2015).items()):\n    print(date, name)\n\n\n2015-01-01 A√±o nuevo\n2015-01-06 Epifan√≠a del Se√±or\n2015-03-19 San Jos√©\n2015-04-02 Jueves Santo\n2015-04-03 Viernes Santo\n2015-05-01 D√≠a del Trabajador\n2015-05-02 D√≠a de Comunidad De Madrid\n2015-08-15 Asunci√≥n de la Virgen\n2015-10-12 D√≠a de la Hispanidad\n2015-11-01 Todos los Santos\n2015-12-06 D√≠a de la constituci√≥n Espa√±ola\n2015-12-08 La Inmaculada Concepci√≥n\n2015-12-25 Navidad\n\nPlease let me know, thank you\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/328",
        "title": "Holidays in Chile",
        "count": 2,
        "turns": [
            "Hi.\nThere are some mistakes in Chile's holidays:\n\nNov 08 is \"Asunci√≥n de la Virgen\"\nJune 29 and October 12' are floating holidays (if it happens on Tuesday, Wednesay or Thursday, the holiday is the preceding Monday. If it happens on Friday, the following Monday is holiday)\nHolySaturday is holiday ('Semana Santa (S√°bado Santo)  [Holy day (Holy Saturday)]')\nThere are 2 localizated holidays, The main administrative division is te region. The ragion codes are:  'AI', 'AN', 'AP', 'AR', 'AT', 'BI', 'CO', 'LI', 'LL', 'LR', 'MA', 'ML', 'NB', 'RM', 'TA', 'VS'.\nThe localizated holidays are:\n'AP'; {June 7, \"Asalto y Toma del Morro de Arica [Assault and Capture of Cape Arica]\",}\n'NB': {August 20, \"Nacimiento de Bernardo O'Higgins [Nativity of Bernardo O'Higgins]\"}\n\nSources:\nhttps://en.wikipedia.org/wiki/ISO_3166-2:CL\nhttps://feriados.cl/\nhttps://feriados.cl/leyes.htm\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Chile",
            "Thanks for the contribution!  I created pull #373.\n\nThe correct date for Asunci√≥n de la Virgen is 15 AUG (see law 2.977) and was already in the code\nConfirmed and implemented (law 19.668, http://www.leychile.cl/Navegar?idNorma=160270)\nConfirmed and implemented (Law 2.977)\nArica y Parinacota holiday confirmed with https://feriados.cl/index.php and Law 20.663 (implemented using the correct naming); similarly for √ëuble holiday Law 20.678",
            "Thank you both! üëç Merged on beta."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/326",
        "title": "Get date by holiday string",
        "count": 5,
        "turns": [
            "Hello! I feel like this is a dumb question but am just not seeing anything about it in the readme.\nIs there a method that supports something like us_holidays.get('Thanksgiving')?\nFor example if I wanted to add the day after Thanksgiving to my custom calendar, I will need to first get that holiday, which feels like an odd thing to do manually with a library that handles holidays -\nclass MyCal(holidays.UnitedStates):\n    def _populate(self, year):\n        holidays.UnitedStates._populate(self, year)\n        # Add Friday after Thanksgiving\n        thanksgiving = date(year, 11, 1) + rd(weekday=TH(+4))\n        thanksgiving_friday = thanksgiving + rd(days=1)\n        self[thanksgiving_friday] = 'Thanksgiving Friday'\n\n(this is just an example, I know I can get the day other ways)",
            "I just added this to my new module, holidays_plus:\nhttps://github.com/samtregar/python-holidays-plus",
            "Hi,\nthank you for your interest in holidays library.\nI've added get_named(key) method, receiving a complete or partial string, which will be checked against all currently available holidays (ie: depending on initialization), applying a case insensitive match.\nResults are returned in a list containing all matched dates.\nPushed on beta branch, thank you again, cheers!\ndr-p",
            "Excellent - this will make implementing pop_named() in my module much simpler - unless you'd like to take that suggestion now too?  There's a closed PR you could use!  :)",
            "Oh and I see you did that.  Awesome all around - thanks!",
            "@samtregar Glad to be helping! Sorry for getting there a little late, but better late than never.. :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/325",
        "title": "Failing to get non-mutual german state holidays ",
        "count": 1,
        "turns": [
            "so I run this-> holidays.DE(state= 'BY', years=2020). This is bavaria and I still get only the mutual holidays in Germany. How can I get the holidays per state?, is there something I am doing wrong?",
            "Hi,\nwhen you wish to refer to german federal states, you should initialize holidays with \"prov\" parameter:\n\nimport holidays\na = holidays.DE(prov='BY', years=2020)\n\nThank you very much, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/324",
        "title": "Every Sunday in Norway is a holiday",
        "count": 1,
        "turns": [
            "While it's true that most people don't work on Sundays in Norway, they are certainly not public holidays in the normal sense. But the holidays package returns every single Sunday as a holiday for Norway. Second vote for having a flag to distinguish different sorts of holidays.",
            "Hi,\nthank you for your interest in python-holidays.\nPlease refer to here:\nhttps://translate.google.it/translate?hl=&sl=auto&tl=en&u=https%3A%2F%2Fsnl.no%2Fhelligdag\n\"[...] The following days are holidays in Norway:\n\nregular Sundays [...] \"\nThis is explained here:\nhttps://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/norway.py#L30\n\nWe will consider a specific flag adoption for this, but at the moment this is not a priority.\nThank you again, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/323",
        "title": "Holidays returning always \"False\" when using no parameters?",
        "count": 2,
        "turns": [
            "I have a column \"date\" in ISO 8601 with days for 2018, 2019 and 2020.\nWhen using the holiday package without parameters\nde_holidays = holidays.DE()\ntraffic[\"holiday\"] = traffic[\"date\"].isin(de_holidays)\n\nIt returns \"False\" for every row.\nWhen using \"years\" as a parameter it works\nde_holidays = holidays.DE(years=[2018, 2019, 2020])\ntraffic[\"holiday\"] = traffic[\"date\"].isin(de_holidays)\n\nRegarding to the documentation of the package it should work automatically when using \"expand=False\" but default is \"expand=True\".\nSo \"years\" should not be required in my case?",
            "Yes it was working fine without parameters yesterday and for some reason it now requires the years parameter (no restart nor reinstall since yesterday).\nPlease either update the Example Usage or default to have no year parameters required.",
            "Hi,\nsorry but it's not clear what kind of object traffic[\"date\"] is.\nMore in general, if no years parameter is provided, the library initializes itself as empty. Then, if expand is set to true (default behaviour) whenever a date object is queried for existence in the holidays object (usually done with in operator), all its relevant year's holidays are loaded in the library object, so from there on, it will contain all that year's holidays.\nThis applies to any further date existance check, which will append all the involved years to the holidays object list.\nWould you please better explain your issue?\nThanks in advance, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/316",
        "title": "France holidays",
        "count": 1,
        "turns": [
            "Hello,\nFirst, thanks for your work ;-).\nCurrently, the french holidays are considered as \"Metropole\" vs others :\n\nM√©tropole (default), Alsace-Moselle, Guadeloupe, Guyane, Martinique, Mayotte, Nouvelle-Cal√©donie, La R√©union, Polyn√©sie Fran√ßaise, Saint-Barth√©l√©my, Saint-Martin, Wallis-et-Futuna\n\n.\nBut this is not accurate as M√©tropole is  in fact splitted into 3 zones named \"A\", \"B\" and \"C\". You can see this here : https://publicholidays.fr/school-holidays/.\nCould you please take this into account ? I am not a developer but I found this which might help : https://pypi.org/project/vacances-scolaires-france/.\nTell me if you need more informations.",
            "My bad, I thought this project was taking into account school holidays, but it is just about public holidays.\nThat would be wonderful though."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/312",
        "title": "Only empty sets returned",
        "count": 2,
        "turns": [
            "Hello there,\nI've just installed the most recent version of holidays on pip: holidays-0.10.2.\nThis only seems to return empty sets however:\n>>> import holidays\n>>> holidays.UnitedStates()\n{}\n\nAny idea what the problem may be?\nThanks,\nTom",
            "Ah, it appears I need to pass a years argument too!",
            "This is actually helpful as their official get started guide doesn't include that argument, and I was so confused..."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/311",
        "title": "CountryHoliday does not work as per readme",
        "count": 1,
        "turns": [
            "From the readme:\nus_holidays = holidays.UnitedStates()\n# or:\n# us_holidays = holidays.US()\n# or:\n# us_holidays = holidays.CountryHoliday('US')\n# or, for specific prov / states:\n# us_holidays = holidays.CountryHoliday('US', prov=None, state='CA')\n\nHowever, here's my result when trying this code:\n>>> holidays.CountryHoliday('US')\n{}\n>>> holidays.CountryHoliday('US', prov=None, state='CA')\n{}\n\nPS: Python is at 3.7.5 and holidays at 0.10.2",
            "Ok something is weird with my python console. In the actual code it started working after fixing an issue, in the python console it still gives me no results ."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/308",
        "title": "Spain Holidays that fall on Sunday are passed to Monday always",
        "count": 3,
        "turns": [
            "This year there are two days that fall on Sunday:\n\n2020-11-01 Todos los Santos\n2020-12-06 D√≠a de la constituci√≥n Espa√±ola\n\nThese days are not holidays. Right dates are:\n\n2020-11-02 Todos los Santos\n2020-12-07 D√≠a de la constituci√≥n Espa√±ola\n\nMore info in https://www.qppstudio.net/publicholidays2020/spain.htm",
            "Please check my comments on #310 ..\nThank you!\ndr-p",
            "No updates on this: closing, thx\ndr-p",
            "Sorry @dr-prodigy I have recently had a baby, so no time to opensource.\nIn a close future, when i have time, i will open a new issue regarding this again.\nI hope you understand it."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=11&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/307",
        "title": "Error Labor Day in Spain",
        "count": 2,
        "turns": [
            "Hello!\nToday is labor day in the whole country, but i see in the file that is only counted for some provinces!\nhttps://github.com/dr-prodigy/python-holidays/blob/345b458b194198b51dfa4dd3207f6e0159151793/holidays/countries/spain.py#L57",
            "Hi! Same here.\nMay 1 is holiday for all the country: https://en.wikipedia.org/wiki/Public_holidays_in_Spain\nThanks!",
            "Fixed and released on beta branch, thx\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/305",
        "title": "AttributeError: 'Korea' object has no attribute 'korean_cal'",
        "count": 1,
        "turns": [
            "To solve this issue #1437 in prophet by @chongdae\nand this PR #1438 in prophet\ncc @chongdae @1kko\ncode1:\nimport holidays\nimport numpy as np\n\nholidays.__version__\n\noutput:\n'0.10.2'\n\ncode2:\nholidays.Korea(years=np.arange(1995, 2045))\n\noutput:\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-16-a964978a10b6> in <module>\n----> 1 holidays.Korea(years=np.arange(1995, 2045))\n\n~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in __init__(self, **kwargs)\n     33     def __init__(self, **kwargs):\n     34         self.country = \"KR\"\n---> 35         HolidayBase.__init__(self, **kwargs)\n     36         self.korean_cal = KoreanLunarCalendar()\n     37 \n\n~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/holiday_base.py in __init__(self, years, expand, observed, prov, state)\n     32         self.state = state\n     33         for year in list(self.years):\n---> 34             self._populate(year)\n     35 \n     36     def __setattr__(self, key, value):\n\n~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in _populate(self, year)\n     59         second_day_lunar = \"The second day of \" + name\n     60 \n---> 61         dt = self.get_solar_date(year, 1, 1)\n     62         new_year_date = date(dt.year, dt.month, dt.day)\n     63         if self.observed and year >= 2015:\n\n~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in get_solar_date(self, year, month, day)\n    187     # convert lunar calendar date to solar\n    188     def get_solar_date(self, year, month, day):\n--> 189         self.korean_cal.setLunarDate(year, month, day, False)\n    190         return date(self.korean_cal.solarYear, self.korean_cal.solarMonth,\n    191                     self.korean_cal.solarDay)\n\nAttributeError: 'Korea' object has no attribute 'korean_cal'",
            "Merged, thank you very much! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/303",
        "title": "Latvia holiday calendar",
        "count": 3,
        "turns": [
            "Thanks for the package! Just wanted to make it known that someone here is interested in Latvia holiday calendar. I might also do it myself if I find the time (and the information), we'll see.",
            "Made that :) : https://github.com/dr-prodigy/python-holidays/pull/314",
            "Merged! üëç\nThx\ndr-p",
            "@rolandinsh Wow, thanks a lot!!!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/298",
        "title": "Any plan to add Mainland China holidays?",
        "count": 0,
        "turns": [
            "The official holidays of Mainland China are similar to those of Hong Kong SAR.\nBut Chinese government usually rearranges the working days to make the non-working days together with the holidays.\nFor example, 1/1/2019 Tue is an official holiday (New Year) in China. But 12/31/2018 Mon was also a non-working day. 12/30/2018 Sun is a normal weekend day, non-working. And 12/29/2018 Sat was a working day to make up for 12/31."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/297",
        "title": "Thailand Holiday",
        "count": 0,
        "turns": [
            "Please add support for Thailand Holiday\nhttps://en.wikipedia.org/wiki/Public_holidays_in_Thailand"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/296",
        "title": "Fix March 19 on Spain",
        "count": 1,
        "turns": [
            "Hello,\nI think this date should be removed from the Holidays because each year it randomly changes between the states.. for example this year only the following states celebrates it:\nGalicia, Pa√≠s Vasco, Navarra, Castilla-La Mancha, Regi√≥n de Murcia y Comunidad Valenciana.\nIt would be impossible to follow it each year as it is a \"exchangable holiday\" so each year only 6 states in the country gets to celebrate it. for example in the current file MADRID its on it. but MADRID does not celebrate it..\nI just realized all this because it did not wake me up for work haha",
            "Hi,\nthank you for your interest and support. We have updated Spanish holidays according to this:\nhttps://www.timeanddate.com/holidays/spain/san-jose\nThank you very much, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/295",
        "title": "MLK day causes confusion",
        "count": 2,
        "turns": [
            "If multiple holidays occur on the same day, they are separated with \", \".  However, Martin Luther King day also contains a \", \", so my program doesn't know if that's a sequence of holidays or what.  I recommend removing the \",\" from the name of MLK day - in fact I subclassed Holidays and did just that!",
            "Good point.. fixed and pushed on beta branch.\nCheers!\ndr-p",
            "This issue still exists with the Idaho holiday:\nhttps://github.com/dr-prodigy/python-holidays/blob/02d5d510202a02471cd0a939a11525cf02ca115c/holidays/countries/united_states.py#L107\nI suggest removing the comma here as well. Or, in case this issue arises in other countries, maybe change the delimiter to a semicolon?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/293",
        "title": "Australian non-public holiday",
        "count": 3,
        "turns": [
            "Hello! Love this package :) Just wanted to check - one of the holidays for NSW Australia returned is a bank holiday on 3rd Aug 2020, but this is actually a holiday just for banks and not a public holiday. is there a way to differentiate between these somehow? Or is this a problem in source data?\nc.f. https://www.nsw.gov.au/about-new-south-wales/public-holidays/",
            "Hey there, thank you :-)\nUnfortunately, we don't have a differentiation for this yet.. but we will possible consider it for a future release: keeping this open as a reminder.\nThanks again for your help, cheers!\ndr-p",
            "Remembrance Day, November 11, isn't a public holiday across Canada either. In Ontario, it is for government employees but not across the board.",
            "Hi\nWell done on maintaining library!\nFurther to the original request, which I see has been closed, this 3rd August Subdiv=NSW Australia Holiday remains.\nIt is a ‚ÄòBank employee‚Äô only holiday and not a public holiday for the vast majority of population.  Seems to be misreported still currently in 0.41\nCould be removed, in my mind altogether, OR have add a new category for bank for AU added- and include this current entry as a bank only holiday?\nThanks for reviewing."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/292",
        "title": "Ash Wednesday holiday in Brazil should not last the whole day",
        "count": 1,
        "turns": [
            "The Ash Wednesday in Brazil ends at 12pm, and the rest of the day is considered a business day.\nNot sure if this is achievable in the lib, but just opening the issue to make sure it can be treated if possible and if other people have the same issue, they can find the possible reason.",
            "Hey there!\nThank you for your report.\nUnfortunately, at the moment there is no way to express half days in the results returned by the library, so as for now, we won't be implementing this; anyway, we will possibly evaluate this in a future, so thanks for pointing this out!\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/291",
        "title": "Differentiate between European Central Bank holidays and Target2 closing days",
        "count": 0,
        "turns": [
            "The EuropeanCentralBank class is inherited by the ECB and TAR classes.\nThe holidays correspond to the Target2 closing days as of 2002:\n\nhttp://www.ecb.europa.eu/press/pr/date/2000/html/pr001214_4.en.html\n\nAs for European Central Bank holidays, the institution has its own calendar:\n\nhttps://www.ecb.europa.eu/home/contacts/working-hours/html/index.en.html\n\nHow are institutional holidays supposed to be handled? For my use case, I would keep ECB holidays and Target2 closing days in separate classes, although not necessarily in different files."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/288",
        "title": "Incorrect England holiday",
        "count": 3,
        "turns": [
            "Following code shows incorrect holiday dates for England.\nfrom datetime import date\nimport holidays\nholiday = holidays.England()\ndate(2020, 5, 4) in holiday # outputs True\ndate(2020, 5, 8) in holiday # outputs False\n\nin fact 4 May is not a holiday and 8 May is.",
            "Running latest version (0.10.1)",
            "FYI for a reference: https://www.gov.uk/bank-holidays.  The holiday has been moved for 2020 only (to celebrate VE day).",
            "Hi @sammaule ,\nlibrary behaviour is in fact correct: thank you very much @lukedyer-peak for your contribution.\nClosing issue, best regards to both of you."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/287",
        "title": "French country code",
        "count": 1,
        "turns": [
            "Hello,\nWould it be possible to add the alpha-2 country code for France? It is the only one that only has an alpha-3 code, which creates inconsistencies in our code by forcing us to validate if the country is France before inserting the code (our software uses alpha-2).\nThank you!",
            "Hi,\nthank you very much for pointing this out.\nUnfortunately, \"FR\" is used internally to represent Friday, so we had to leave it out to avoid a name clash. At the moment it is not in the plans, but we will possibly re-consider this request in a future.\nThank you again, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/286",
        "title": " Some Croatian holidays have different dates in 2020",
        "count": 1,
        "turns": [
            "Hi,\nI found this package on another github page (https://github.com/christopherthompson81/pgsql_holidays) and saw that your data for Croatia has also some mistakes so I want to help :)\nLast year, the government decided to change some state holidays - https://publicholidays.com.hr/2020-dates/\nFor fixing this issue, the holiday on the 25th of June should be deleted and a new one should be added on the 18th of November. This one should be named 'Dan sjeƒáanja'.\nKeep up the good work!",
            "Just released on beta.. Thank you very much! üëç\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/285",
        "title": "US and BR are not working",
        "count": 1,
        "turns": [
            "I tried with these 2 parameters and didn't work. Always returning an empty dictionary.\nus_holidays = holidays.CountryHoliday('US', prov=None, state='CA') holidays.CountryHoliday('BR', prov=None, state='PE')",
            "Please refer to doc/examples for proper usage, thanks"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/284",
        "title": "Use recognised subdivisions for Austria",
        "count": 2,
        "turns": [
            "As per #283, is is possible to use standard ISO 3166-2 codes for Austria?\nPer wikipedia:\nAT-1  Burgenland Burgenland\nAT-2  K√§rnten Carinthia\nAT-3  Nieder√∂sterreich Lower Austria\nAT-4  Ober√∂sterreich Upper Austria\nAT-5  Salzburg Salzburg\nAT-6  Steiermark Styria\nAT-7  Tirol Tyrol\nAT-8  Vorarlberg Vorarlberg\nAT-9  Wien Vienna\nPer python-holidays - the codes for AT subdivisions are: 'B', 'K', 'N', 'O', 'S', 'ST', 'T', 'V', 'W' (W is the default) which appears to be the first letter of the subdivision name (see wikipedia list).",
            "Hi, released in beta, thank you!",
            "Hi,\nin order to maintain consistency with other countries behaviour, these codes have been chosen instead:\n1, 2, 3, 4, 5, 6, 7, 8, 9 (default)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/283",
        "title": "Use recognised subdivisions for Spain",
        "count": 1,
        "turns": [
            "\"Would it be possible to apply the use of ISO codes to Spain? The use of recognised ISO codes would make integration into other projects easier as a common standard is followed.\nWikipedia lists the ISO 3166-2 codes for Spain at https://en.wikipedia.org/wiki/ISO_3166-2:ES.\nThe mappings look like they should be as follows\nISO (ES-AN) = AND\nISO (ES-AR) = ARG\nISO (ES-AS) = AST\nISO (ES-CN) = ICA\nISO (ES-CB) = CAN\nISO (ES-CL) = CAL\nISO (ES-CM) = CAM\nISO (ES-CT) = CAT\nISO (ES-CE) = not supported by python-holidays\nISO (ES-EX) = EXT\nISO (ES-GA) = GAL\nISO (ES-IB) = IBA\nISO (ES-RI) = RIO\nISO (ES-MD) = MAD\nISO (ES-ML) = not supported by python-holidays\nISO (ES-MC) = MUR\nISO (ES-NC) = NAV\nISO (ES-PV) = PVA\nISO (ES-VC) = CVA\n\"",
            "Hi, it makes sense: updated in beta for Spain too. Thank you cheers üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/282",
        "title": "State Holiday incorrect (Subdivision: US-GA / Year: 2020)",
        "count": 1,
        "turns": [
            "Per https://georgia.gov/popular-topic/state-holidays Friday, April 10 is a State Holiday in 2020, however we are currently getting 2020-04-27\nhttps://github.com/dr-prodigy/python-holidays/blob/b523509367869228e97f33824e241137920483f3/holidays/countries/united_states.py#L243",
            "Released in beta.. thank you üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/279",
        "title": "US Easter Holiday Issues",
        "count": 3,
        "turns": [
            "Version 0.10.1 Easter is unable to import. Previous version works fine.\nImportError: cannot import name 'easter' from 'holidays' (/usr/local/lib/python3.7/site-packages/holidays/__init__.py)",
            "https://github.com/dr-prodigy/python-holidays/issues/277",
            "Thank you for the response. The ticket you linked was the exact same issue I was having. I've updated the fbprophet files and have verified your recommendation does work correctly. Thank you for the feedback and I apologize for not reviewing previously submitted tickets before creating my own ticket (I'm new to github).",
            "No problem, glad to help you!\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/277",
        "title": "I found issue when import fbprophet when using holidays Library",
        "count": 13,
        "turns": [
            "When I importing fbprophet version = 0.5\nand holidays version =0.10.1\nI faced this issue. Can anyone help me?\n\nImportError                               Traceback (most recent call last)\n in \n----> 1 import fbprophet\n/opt/anaconda3/lib/python3.7/site-packages/fbprophet/init.py in \n6 # of patent rights can be found in the PATENTS file in the same directory.\n7\n----> 8 from fbprophet.forecaster import Prophet\n9\n10 version = '0.5'\n/opt/anaconda3/lib/python3.7/site-packages/fbprophet/forecaster.py in \n18\n19 from fbprophet.diagnostics import prophet_copy\n---> 20 from fbprophet.make_holidays import get_holiday_names, make_holidays_df\n21 from fbprophet.models import prophet_stan_model\n22 from fbprophet.plot import (plot, plot_components, plot_forecast_component,\n/opt/anaconda3/lib/python3.7/site-packages/fbprophet/make_holidays.py in \n14 import pandas as pd\n15\n---> 16 import fbprophet.hdays as hdays_part2\n17 import holidays as hdays_part1\n18\n/opt/anaconda3/lib/python3.7/site-packages/fbprophet/hdays.py in \n14\n15 from convertdate.islamic import from_gregorian, to_gregorian\n---> 16 from holidays import WEEKEND, HolidayBase, easter, rd\n17 from lunardate import LunarDate\n18\nImportError: cannot import name 'easter' from 'holidays' (/opt/anaconda3/lib/python3.7/site-packages/holidays/init.py)",
            "Hi,\n\"easter\" is not a holidays function, but instead a dateutil library function.\nUntil the previous version of holidays (0.9.12) it was \"accidentally\" accessible, due to it being imported in holidays.py (main library module, now removed in favour of single country modules), but its direct reference made in prophet is basically wrong (same goes for WEEKEND, HolidayBase etc., not meant for being accessed from outside holidays library).\nIn order to fix fbprophet, replacing the erroring import with\n\nfrom dateutil.easter import easter\n\nshould be sufficient.\nI will consider re-adding in a future the availability of \"easter\" to support cases like this even if, as said, this doesn't fall in the documented / official usages of holidays library.",
            "Thank man, I will try.",
            "hey @dr-prodigy , after i did replace the easter from holidays to :\nfrom dateutil.easter import easter\nnow i got this error:\nImportError: cannot import name 'rd' from 'holidays' (C:\\Users\\ASUS\\Anaconda3\\lib\\site-packages\\holidays_init_.py)\nand i have no idea the library that i can import rd from",
            "I don't know why these references have been implemented in fbprophet, but they're pretty clearly not well designed..\nThis specifically seems to refer to this import line in holidays' code:\nfrom dateutil.relativedelta import relativedelta as rd\n(formerly reachable from outside, now not accessible anymore).\n\"rd\" in the end is just an internal alias for dateutil.relativedelta (whose name has been shortened to reduce code length), and therefore makes no sense outside holidays' code.\nGiven this (+ the previous issue about easter), I strongly suggest to open an issue / pull request for complete refactoring on fbprophet in order to fix these poor coding cases.",
            "PS: in order to avoid new issues opened on these cases, please keep this issue open. Thanks",
            "Replace line 16 in fbprophet/hdays.py:\nfrom holidays import WEEKEND, HolidayBase, easter, rd\n\nto\nfrom holidays import WEEKEND, HolidayBase\nfrom dateutil.easter import easter\nfrom dateutil.relativedelta import relativedelta as rd",
            "Hi, this issue has been confirmed, fixed and released on github by fbprophet maintainers.\nA new version of fbprophet will be soon released on PyPI. In the meanwhile, fixed package can be cloned by github.\nComplete info here:\nfacebook/prophet#1293\nKeeping this open until fbprophet is released to PyPI: thank you for not adding new comments referring to this same error.",
            "Prophet's maintainers report the fix has been now pushed to PyPi / Anaconda, so there should be no more issues.\nPlease refer to here for details:\nfacebook/prophet#1293 (comment)",
            "I have installed fbprophet using conda install -c conda-forge fbprophet -y in my python 3.7 on windows 10.but import fbprophet  is throwing error ImportError: cannot import name 'easter' Can you suggest how to fix that issue?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/276",
        "title": "0.10.0 install issue",
        "count": 2,
        "turns": [
            "I suspect you're aware, but I'm seeing an install issue with the just released 0.10.0.\n(My CI is running against holidays>=0.9.5)\n         cwd: /tmp/pip-install-smsefye4/holidays/\n    Complete output (7 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-smsefye4/holidays/setup.py\", line 20, in <module>\n        with codecs.open('holidays/__init__.py', 'r', 'utf-8') as fd:\n      File \"[redacted path]/lib/python3.6/codecs.py\", line 897, in open\n        file = builtins.open(filename, mode, buffering)\n    FileNotFoundError: [Errno 2] No such file or directory: 'holidays/__init__.py'",
            "Yes, I noticed this, in fact I've already removed 0.10.0 version from PyPi.\nI will fix it and release a new version on PyPi ASAP.\nThank you for pointing this out: I'll keep you posted.\nCheers",
            "Fixed and released on v0.10.1.. thank you again!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/275",
        "title": "holidays in 'India' is an empty dictionary",
        "count": 1,
        "turns": [
            "holidays in 'India' is an empty dictionary",
            "Please refer to documentation for proper usage. Thanks"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/273",
        "title": "Martin Luther King Day is not a federal holiday",
        "count": 3,
        "turns": [
            "I believe in line 1444, we need to specify which states should have Martin Lurther King day as a holiday. I know that MA is definitely not one of them.",
            "Hi,\nthank you very much for your support.\nThe code is already managing differences among states about MLK day, and MA is in fact working as you expect.\nWould you please provide more complete information on this issue?\nThanks in advance",
            "No news.. closing.",
            "Sorry... I just saw this today...\n\nAnyways, when I use the holiday function, it is telling me MLK is a holiday\nin MA. Isn't that wrong?\n\nOr do you actually tested it and it says that it is not a holiday?\n\nMaybe I am using the older version?\n‚Ä¶\nOn Sat, Jan 25, 2020 at 9:58 AM Maurizio Montel ***@***.***> wrote:\n Closed #273 <https://github.com/dr-prodigy/python-holidays/issues/273>.\n\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/273?email_source=notifications&email_token=AC25RL65KEW5AA62ZODTXILQ7RHQRA5CNFSM4KJMFLS2YY3PNVWWK3TUL52HS4DFWZEXG43VMVCXMZLOORHG65DJMZUWGYLUNFXW5KTDN5WW2ZLOORPWSZGOWGKUTIY#event-2979350947>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AC25RL3SU3CDOGAHF6W6VWDQ7RHQRANCNFSM4KJMFLSQ>\n ."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/271",
        "title": "Observed Holiday Problem ",
        "count": 2,
        "turns": [
            "Hello all,\nI am new to this python holidays library, so I apologize in advance for any trivial questions that I might be asking.\nMy main problem is that I am not sure how to modify the 'observed' values in holidays. I need a holiday to be observed on a Monday only if it falls on a Sunday.  I do not need Friday holidays to be observed on Saturday.\nThe documentation only seems to have a solution if I want to remove 'observed' holidays completely and not partially. My workaround for this was to create a NewCountrysHolidays class and populate it with the holidays and the observed statuses I wanted. I attached my code for the new class below.\nMy new problem is the I get the error code: 'datetime.date' object is not callable when I do '1-1-2015 in us_electric_holidays, but it does work with the timestamps with my data. When I use my data I get a new error name 'SUN' is not defined. It seems to not recognize Weekdays ex. SUN, and Months ex. DEC. I am not sure why.\nI apologize if this was wordy, but I appreciate and thank you for any assistance with this problem.\nBackground for the problem: (If interested)\nI am a Electrical Engineering Ph.D. student who specializes in the Power Grid. One of my tasks is to analyze data from power companies. Power companies define a holiday as:\n\nHolidays are New Year‚Äôs Day, President‚Äôs Day, Memorial Day, Independence Day, Labor Day, Veterans Day, Thanksgiving Day, and Christmas. When any holiday falls on a Sunday, the following Monday will be recognized as a holiday. However, no change will be made for holidays falling on a Saturday.\n\nFor all the data to be labelled correctly, I need to remove Martin Luther King Day and Columbus Day. Then remove the Observed Saturday from a Friday Holiday.\nI implemented all this in the code below, but it will not run.\nUS_Electric_Holiday.py.zip",
            "In order to use the predefined weekdays and months, you need to import them from holidays package (or redefine them yourself in the code)\nIn addition, you don't have to copy-paste the entire holiday definition. You can inherit from UsHolidays class and override the _populate method so that it would call the original USHolidays implementation and clean the irrelevant holidays afterward",
            "In order to use the predefined weekdays and months, you need to import them from holidays package (or redefine them yourself in the code)\nIn addition, you don't have to copy-paste the entire holiday definition. You can inherit from UsHolidays class and override the _populate method so that it would call the original USHolidays implementation and clean the irrelevant holidays afterward\n\nHello, thank you for the input. Would I need to define a new class or would the library override the original class, or would I need to define a new class that inherits from UsHolidays. Also, should I replace my SUN with 6 and the months with numerical values? Thank you again for the help.\nfrom dateutil.relativedelta import relativedelta\nclass UsHolidays(holidays.UnitedStates):\n    def _populate(self, year):\n        # New Year's Day\n        if year > 1870:\n            name = \"New Year's Day\"\n            self[date(year, JAN, 1)] = name\n            if self.observed and date(year, JAN, 1).weekday() == SUN:\n                self[date(year, JAN, 1) + rd(days=+1)] = name + \\\n                    \" (Observed)\"\n\n        # Independence Day\n        if year > 1870:\n            name = \"Independence Day\"\n            self[date(year, JUL, 4)] = name\n            if self.observed and date(year, JUL, 4).weekday() == SUN:\n                self[date(year, JUL, 4) + rd(days=+1)] = name + \" (Observed)\"\n\n        # Veterans Day\n        if year > 1953:\n            name = \"Veterans Day\"\n        else:\n            name = \"Armistice Day\"\n        if 1978 > year > 1970:\n            self[date(year, OCT, 1) + rd(weekday=MO(+4))] = name\n        elif year >= 1938:\n            self[date(year, NOV, 11)] = name\n            if self.observed \\\n                    and date(year, NOV, 11).weekday() == SUN:\n                self[date(year, NOV, 11) + rd(days=+1)] = name + \\\n                    \" (Observed)\"\n\n        # Christmas Day\n        if year > 1870:\n            name = \"Christmas Day\"\n            self[date(year, DEC, 25)] = \"Christmas Day\"\n            if self.observed \\\n                    and date(year, DEC, 25).weekday() == SUN:\n                self[date(year, DEC, 25) + rd(days=+1)] = name + \\\n                    \" (Observed)\"\n        \n us_holidays = UsHolidays()\n\n# Or would it be us_holidays = holidays.CountryHoliday('US')"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/270",
        "title": "Code change for subdivision (CA-YU)",
        "count": 1,
        "turns": [
            "The project records the following PROVINCE for Canada:\nYU\nhttps://github.com/dr-prodigy/python-holidays/blob/61274d44f04f2a1cf8b1cb98a9b57c81ee585d2f/holidays.py#L731\nIt appears from https://en.wikipedia.org/wiki/ISO_3166-2:CA that the subdivision Yukon should be referred to as CA-YT (not CA-YU).\nCan you please confirm this and then we could submit a PR?",
            "Fix released on beta. Closing, thx"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/269",
        "title": "Invalid subdivisions in Italy IT",
        "count": 1,
        "turns": [
            "The bulk of provinces listed for Italy use ISO codes apart from the following:\nCesena\nForli\nPesaro\nUrbino\nAccording to the ISO subdivisions list these provinces should be merged. Additionally IT-GO and IT-TS appear to have been abolished.\nWhat's the best way to update these subdivisions on the basis that you agree they need updating?",
            "The 4 aforementioned cities as provinces are indeed administratively \"merged\" like this:\nForl√¨ + Cesena = FC\nPesaro + Urbino = PU\nUnfortunately, the 4 cities have all different patron days, so from the holidays PoV they need to be kept apart.\nNot being an ISO code for them in existence, they have been referred to with their complete name, as it already was done for French departments.\n\n\nMeanwhile, instead:\nGO = Gorizia\nTS = Trieste\nare both valid provinces."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=12&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/266",
        "title": "New subdivision request (BR-PR: Brazil, Paran√°)",
        "count": 1,
        "turns": [
            "See https://github.com/dr-prodigy/python-holidays/blob/61274d44f04f2a1cf8b1cb98a9b57c81ee585d2f/holidays.py#L510\nThe Brazilian State of Paran√° (https://en.wikipedia.org/wiki/Paran%C3%A1_(state)) appears to be the only ISO subdivision of Brazil that is not currently supported by python-holidays.\nIs it possible to add support for it?",
            "Done and released on beta branch, thx"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/265",
        "title": "UAE Holidays",
        "count": 3,
        "turns": [
            "Any chance of adding the UAE holidays?\nEven just the fixed date ones would be ok.",
            "@newillusions I suggest you to have a look at the code and try to fix and make a PR. Otherwhise it will be great if you could make list of wrong holidays.",
            "Hi @rpanai thank you.\nJust a short clarification : in this case we are not talking about fixes on wrong holidays, but instead support for a new country (United Arab Emirates), not currently available in the library.\nThis task is not easy due to specific regulations / language - cultural differences, that's why a help for it is desirable.\nThanks, best\ndr-p",
            "@newillusions do you have an authoritative source (law, ministry, or similar) for the holidays?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/261",
        "title": "Indonesian holiday",
        "count": 2,
        "turns": [
            "Is there away to make Indonesian holiday into this project? Thanks\nhttps://www.timeanddate.com/calendar/?year=2020&country=65",
            "Hi,\nthis is mainly a voluntary crowd sourcing project.\nIf you want soon any specific features, you will have to code them on your own.\nOtherwise, you can provide any useful information and wait for someone to do them.\nBest regards\ndr-p",
            "I there away for me to contribute maybe adding my country holiday? if yes.. how?"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/260",
        "title": "Split up code file",
        "count": 3,
        "turns": [
            "Hi @dr-prodigy,\nthe holidays.py file has grown quite big over time. I suggest to split it up and have a separate file for each country to make maintaining the codebase more manageable in the future. However, all names should still be exported from the main module. Do you want me to do this kind of refactoring and submit a pull request?",
            "Hi,\nthank you very much for your help..\nThis sounds pretty good! And that's something we would like to work on soon.\nIf you want to start the work, yes, please, do it (note: please start from and target \"unstable\" branch), and let me review it after the first changes applied (naming convention, structure, etc).\nAfter that we will be completing it.\nOkay for you?\nThank you very much again!\nCheers\ndr-p",
            "I was just thinking the same thing! I agree with this.",
            "Hey there @MaxHaertwig\nI finally completed the whole refactoring (added header comments, PEP8 / flake8 fixes, TravisCI review etc. etc.) and released to beta branch.\nThank you very much for your contribution!\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/256",
        "title": "ZA holiday list error ",
        "count": 1,
        "turns": [
            "hi,\nThe code snippet from https://pypi.org/project/holidays/:\nfor date, name in sorted(holidays.ZA(state=' ', years= XXXX).items()):\nprint(date, name)\ngives all holidays since 1999 instead of just those from year XXXX, for any XXXX. Same happens for holidays.SouthAfrica.\nCheers\nB",
            "Hi,\nthis does not seem to happen.\nPlease remember that, if expand=True, whenever you test a new date against the holidays object, it will add all dates in its containing year.\nIf you want to have a list of years, you should instead write, for instance:\nfor date, name in sorted(holidays.ZA(state=' ', years=range(2010,2013)).items()):\n     print(date, name)\nCheers,\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/255",
        "title": "Mexico holidays are not correct anymore.",
        "count": 4,
        "turns": [
            "Hi! Mexico holidays are not correct anymore. Can you add them please?\nThey seem to be these ones: https://publicholidays.mx/es/2019-dates/\nThanks!\nOriginally posted by @juanesfonsecan in #217 (comment)",
            "@juanesfonsecan\nThank you for your interest in the project.\nWould you please be more specific (ie: provide specific date issues)?\nThat page reports all 2019 holidays, but doesn't provide any required additional logic (eg: \"holiday xxx is on the 3rd monday of september\").\nThanks in advance",
            "Hi,\nI try to solve it.\nI will also try to have a mexican friend to have a look at it - but I can't promise that he is good at python üòÑ .",
            "Fixed with #281 PR. Well done, thank you very much!",
            "That the Federal Labor Law and the Federal Law of Workers in the Service of the State, through the Official Calendar published in the Official Gazette of the Federation on October 6, 1993 and modified on January 27, 2006, coincide in determining The following days will be observed as compulsory rest days:\n\nJanuary 1;\nthe first Monday of February in commemoration of February 5;\nthe third Monday of March in commemoration of March 21;\nMay 1;\n16 of September;\nthe third Monday of November in commemoration of November 20;\nDecember 1 of every six years, on the occasion of the transmission of the Federal Executive Power,\nDecember 25th.\n\nsource: http://dof.gob.mx/nota_detalle.php?codigo=5639091&fecha=22/12/2021"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/249",
        "title": "Support for School-Holidays in Germany?",
        "count": 3,
        "turns": [
            "Hi,\nis it planned to provide regular school holidays for Germany (for each prov)? Maybe by integrating an API?",
            "Hi,\nthank you for your interest in the project.\nUnfortunately, this is currently not in the development plans (to make sense, this logic should be applied to all countries).\nMoreover, library is self-containing and doesn't rely on any external service to work, so this would cause a requirements / compatibility break we don't want.\nClosing this, thanks all the same!",
            "@T-Born there is an API for germany:",
            "That's a valid strategic choice. For people who want school holidays (because they do matter), check out the workalender project. A colleague of mine just added the Dutch school holidays there."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/246",
        "title": "Singapore Holiday Not Available",
        "count": 2,
        "turns": [
            "Hi there!\nSeems like Singapore's holiday is not included. Any plans to increase country coverage?\nThanks!",
            "https://github.com/dr-prodigy/python-holidays/pull/254",
            "Now available (still on beta branch, soon to be published).. thanks to @mborsetti !"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/240",
        "title": "Support timezones?",
        "count": 1,
        "turns": [
            "Would it be possible to support timezones? One could query holidays based on timezones like \"Europe/Helsinki\". Doesn't make sense for all timezones like UTC, though. In Pandas, timeseries indices may have timezones attached to them, so would be great if one could determine holidays based on that. Does it sound reasonable? Here's some discussion on how to get the country code based on a timezone, but that might not be sufficient if state or province information is needed too. But even just using the country code for a timezone would be great.\nEDIT: Forgot to put the link: https://stackoverflow.com/questions/13020690/get-country-code-for-timezone-using-pytz",
            "Unfortunately, nobody has shown interest in implementing this feature, nor having it available.\nBeing pretty expensive, I'm going to put it in standby ( = closing issue), to prioritize other tasks. Sorry for this, please reach out if you're interested in its development: I'll be glad to include your work. Thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/239",
        "title": "Missing one Easter holiday in the icelandic holiday calendar",
        "count": 1,
        "turns": [
            "You have\n'Sk√≠rdagur' and 'P√°skadagur' but you are missing 'F√∂studagurinn langi' which is the Friday between Sk√≠rdagur and P√°skadagur (its a national holiday).\nIn 2019 the dates would be\nSk√≠rdagur 18th of April\nF√∂studagurinn langi 19th of April\nP√°skadagur 21st of April",
            "Thank you, cheers!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/238",
        "title": "2020 UK Early May Bank Holiday Wrong",
        "count": 3,
        "turns": [
            "The early May bank holiday for 2020 has been changed to 8th May from 4th May to mark Victory in Europe (VE) Day. This applies to England, Wales and Northern Ireland.\nSource: https://www.gov.uk/bank-holidays#england-and-wales\nPlease update.",
            "and also Scotland*",
            "Hi,\nthis is already done:\nif year == 2020 and self.country != 'Ireland': # Moved to Friday to mark 75th anniversary of VE Day. self[date(year, MAY, 8)] = name\nTest:\nfrom datetime import date import holidays date(2020, 5, 8) in holidays.UK()\nClosing, cheers.",
            "Hi,\nThis is still not working. Please see attached where 8th May is showing False and 4th is showing True -> should be other way around."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/237",
        "title": "Italian Holiday to add",
        "count": 2,
        "turns": [
            "Hi,\nI'm not a developer but I can suggest some holiday for italy:\n        elif self.prov == 'ME':\n            self[date(year, JUN, 3)] = \"Madonna della Lettera\"\n        elif self.prov == 'TO':\n            self[date(year, JUN, 24)] = \"San Giovanni Battista\"\n\nthis is enough?",
            "Good point!\nJust added these 2.. thank you üëç",
            "You're more than welcome :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/234",
        "title": "Tests fail after 2020-01-01",
        "count": 2,
        "turns": [
            "Background:\nAs part of my work on reproducible builds for openSUSE, I check that software still gives identical build results in the future.\nThe usual offset is +15 years, because that is how long I expect some software will be used in some places.\nThis showed up failing tests in our package build.\nSee https://reproducible-builds.org/ for why this matters.\nThe 3 observed failures were\nFile \"holidays-0.9.11/tests.py\", line 5205, in test_commerce_day\nFile \"holidays-0.9.11/tests.py\", line 5199, in test_first_day_of_summer\nFile \"holidays-0.9.11/tests.py\", line 5194, in test_maundy_thursday\n\nSteps To Reproduce on openSUSE or Debian:\nosc co openSUSE:Factory/python-holidays && cd $_\nosc build --build-opt=--vm-custom-opt=\"-rtc base=2020-01-01T00:00:00\" --vm-type=kvm --noservice --clean",
            "Likely broke from #203 by @justinasfour04",
            "Thank you very much!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/229",
        "title": "Support for Nigeria",
        "count": 2,
        "turns": [
            "Hello,\nI am willing to contribute this support if you approve :)\nFixed holidays include\nNew year's day: 1 January\nWorkers day: 1 May\nChildren's day: 27 May\nDemocracy day: 12 June\nIndependence day: 1 October\nChristmas daya: 25 December\nBoxing day: 26 December\nI'd be happy to contribute this support.",
            "Pull request to resolve this issue.",
            "Of course I do.. just merged it.\nThank you very much again mate! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/228",
        "title": "Italian Holiday, prov FE is wrong",
        "count": 1,
        "turns": [
            "hello,\njust to point out that holiday.py at line no.3165  should be 23rd April rathern than 22nd\nthanks for the effort in creating this library, saved my day\nsbk",
            "Done.. thank you mate üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/227",
        "title": "CountryHoliday doesn't support all HolidayBase options",
        "count": 1,
        "turns": [
            "Related to #128\nCountryHoliday provides a useful mechanism to returns dates for countries and states that are only know at run time. However it doesn't support all the options that HolidayBase supports such as expand & observed which are documented in the README.\nCan these either be added or reconsider the original proposal in #128 of using **kwargs ?",
            "Hi,\nI finally preferred to add those 2 missing parameters as optional ones. Done!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/226",
        "title": "bug: an incomplete list of holidays is returned when the periods include more than one whole year",
        "count": 3,
        "turns": [
            "Hi,\nI noticed a bug when I tried to get a list of Irish holidays. When there is a complete year between the year of the start date and the year of the end date (e.g. start in 2018 and end in 2020), only the holidays of the start year and end year are returned.\nExample:\nimport pandas as pd\nimport holidays\nstart=pd.Timestamp('2010-12-20')\nend=pd.Timestamp('2012-01-03')\ncal_ie = holidays.CountryHoliday('IE', prov=None, state=None)\nhld_ind = cal_ie[start:end]\nprint(hld_ind)\n# returns: [datetime.date(2018, 12, 25), datetime.date(2018, 12, 26), datetime.date(2020, 1, 1)]\nAs you can see the holidays of 2019 are missing.\nThanks and keep up the great work!",
            "Hi,\nthank you for your interest in the library, and sorry for the delay.\nIn fact, a new year is initialized whenever an enclosed date is searched. This in your case initialized, correctly, 2010 and 2012 only.\nIf you want to initialize a list of contiguous years, instead, you should proceed like this:\nimport holidays\nholidays_ie = holidays.Ireland(years=range(2010,2013))\nprint sorted(holidays_ie)\nIt's instead not currently possible to initialize all holidays from date1 to date2, as you tried to.\nCheers\ndr-p",
            "I use this workaround:\ntype(holidays.CountryHoliday(country_code))(years=range(start_date.year, end_date.year))[ start_date:end_date ]",
            "I use this workaround:\ntype(holidays.CountryHoliday(country_code))(years=range(start_date.year, end_date.year))[ start_date:end_date ]\n\nNice one! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/225",
        "title": "Flag to detect observed vs non-observed holidays",
        "count": 3,
        "turns": [
            "At the moment to determine if a date is an actual holiday you need to iterate through a list of all holidays to check if there is one that contains the string \"(Observed)\" in the name. This seems clunky.\nIs there interest in defining another get method that returns an object containing flags such as \"observed\"?",
            "Hi,\nuntil now, this is the first request on this topic. At the moment there is no place for such information, and in a lot of countries observed holidays apply, so surely it will be a quite expensive development.\nAlso, we won't be breaking compatibility with previous versions, so implementation must be well designed.\nIf you are interested in doing it, I will surely consider it for production.. thank you very much!",
            "No news.. closing this ;-)",
            "Simple script for those who need it:\nJust note you need the full name I think for this to work, not part of name\ndef getObserved(name):\n        day = us_holidays.get_named(name+\" (Observed)\")\n        if(len(day)==0):\n            day = us_holidays.get_named(name)\n        return day"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/224",
        "title": "Provided countries in documentation is not supported",
        "count": 1,
        "turns": [
            "There are 40+ countries are supported in this package. But for a few provided countries error throw up\nNot supported countries but provided in documentation are :\n\nKE - kenya\nPE -peru\nIS -Iceland\nISLEOFMAN\nEE - ESTONIA",
            "Hi,\nI can't replicate your issue: all values are available in code and work as expected.\nPlease note, correct values are:\nKE - Kenya\nPE -Peru\nIS -Iceland\nIsleOfMan\nEE - Estonia\nPlease double-check your setup and let us know, thanks"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/220",
        "title": "support for new country: Romania",
        "count": 2,
        "turns": [
            "Hi,\nCould you add support for Romania too, please ?\nThank you !",
            "You can use this page as a start:\nhttps://publicholidays.ro/2019-dates/",
            "No specific country requests accepted as issues, sorry :) .. closing."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/217",
        "title": "Holidays in Japan are not correct anymore, from May 2019",
        "count": 7,
        "turns": [
            "In May 2019, Japan changed their king, it led the changes in the holiday system. Please update it.",
            "Hi,\nwould you please provide us with the correct information?\nThank you very much, cheers\ndr-p",
            "Hi dr-prodigy,\nThank you for your reply.\nFiltering the official holiday in Japan holiday will give the exact result.\nThank you for your concern.",
            "Hi dr-prodigy,\nThank you for your reply.\nFiltering the official holiday in Japan holiday will give the exact result.\nThank you for your concern.\n\nHi,\naccording to your link, and comparing it with the current code, it results that the new holidays to be managed are:\n14 Jan\tMonday\tComing of Age Day\tNational holiday\n14 Feb\tThursday\tValentine's Day\tObservance\n3 Mar\tSunday\tDolls' Festival/Girls' Festival\tObservance\n21 Mar\tThursday\tSpring Equinox\tNational holiday\n30 Apr\tTuesday\tCoronation Day holiday\tNational holiday\n2 May\tThursday\tCoronation Day holiday\tNational holiday\n6 May\tMonday\tChildren's Day observed\tNational holiday\n7 Jul\tSunday\tStar Festival\tObservance\n15 Jul\tMonday\tSea Day\tNational holiday\n6 Aug\tTuesday\tHiroshima Memorial Day\tObservance\n9 Aug\tFriday\tNagasaki Memorial Day\tObservance\n12 Aug\tMonday\tMountain Day observed\tNational holiday\n16 Sep\tMonday\tRespect for the Aged Day\tNational holiday\n4 Nov\tMonday\tCulture Day observed\tNational holiday\n15 Nov\tFriday\t7-5-3 Day\tObservance\n25 Dec\tWednesday\tChristmas\tObservance\nUnfortunately, I don't speak a word of Japanese.. even worse to write in it :-)\nWould you please help us with the japanese translation of them?\nThank you very much!",
            "Hi dr-prodigy,\nThank you for your reply.\nFiltering the official holiday in Japan holiday will give the exact result.\nThank you for your concern.\n\nHi,\naccording to your link, and comparing it with the current code, it results that the new holidays to be managed are:\n14 Jan Monday Coming of Age Day National holiday\n14 Feb Thursday Valentine's Day Observance\n3 Mar Sunday Dolls' Festival/Girls' Festival Observance\n21 Mar Thursday Spring Equinox National holiday\n30 Apr Tuesday Coronation Day holiday National holiday\n2 May Thursday Coronation Day holiday National holiday\n6 May Monday Children's Day observed National holiday\n7 Jul Sunday Star Festival Observance\n15 Jul Monday Sea Day National holiday\n6 Aug Tuesday Hiroshima Memorial Day Observance\n9 Aug Friday Nagasaki Memorial Day Observance\n12 Aug Monday Mountain Day observed National holiday\n16 Sep Monday Respect for the Aged Day National holiday\n4 Nov Monday Culture Day observed National holiday\n15 Nov Friday 7-5-3 Day Observance\n25 Dec Wednesday Christmas Observance\nUnfortunately, I don't speak a word of Japanese.. even worse to write in it :-)\nWould you please help us with the japanese translation of them?\nThank you very much!\n\nHi,\nThank you for your reply.\nHere you are:\nonly for 2019:\n2019/01/01      | 2019Âπ¥1Êúà1Êó•ÔºàÁÅ´Ôºâ | ÂÖÉÊó• | New Year's Day\n2019/01/14      | 2019Âπ¥1Êúà14Êó•ÔºàÊúàÔºâ | Êàê‰∫∫„ÅÆÊó• | Coming-of-age Day\n2019/02/11      | 2019Âπ¥2Êúà11Êó•ÔºàÊúàÔºâ | Âª∫ÂõΩË®òÂøµ„ÅÆÊó• | National Foundation Day\n2019/03/21      | 2019Âπ¥3Êúà21Êó•ÔºàÊú®Ôºâ | Êò•ÂàÜ„ÅÆÊó• | Vernal Equinox Day\n2019/04/29      | 2019Âπ¥4Êúà29Êó•ÔºàÊúàÔºâ | Êò≠Âíå„ÅÆÊó• | Sh≈çwa Day\n2019/04/30      | 2019Âπ¥4Êúà30Êó•ÔºàÁÅ´Ôºâ | ‰ºëÊó• | Holiday\n2019/05/01      | 2019Âπ¥5Êúà1Êó•ÔºàÊ∞¥Ôºâ | Âç≥‰Ωç„ÅÆÊó• | Throne day\n2019/05/02      | 2019Âπ¥5Êúà2Êó•ÔºàÊú®Ôºâ | ‰ºëÊó• | Holiday\n2019/05/03      | 2019Âπ¥5Êúà3Êó•ÔºàÈáëÔºâ | ÊÜ≤Ê≥ïË®òÂøµÊó• | Constitution Memorial Day\n2019/05/04      | 2019Âπ¥5Êúà4Êó•ÔºàÂúüÔºâ | „Åø„Å©„Çä„ÅÆÊó• | Greenery Day\n2019/05/05      | 2019Âπ¥5Êúà5Êó•ÔºàÊó•Ôºâ | Â≠ê‰æõ„ÅÆÊó• | Children's Day\n2019/05/06      | 2019Âπ¥5Êúà6Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday\n2019/07/15      | 2019Âπ¥7Êúà15Êó•ÔºàÊúàÔºâ | Êµ∑„ÅÆÊó• | Marine Day\n2019/08/11      | 2019Âπ¥8Êúà11Êó•ÔºàÊó•Ôºâ | Â±±„ÅÆÊó• | Mountain Day\n2019/08/12      | 2019Âπ¥8Êúà12Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday\n2019/09/16      | 2019Âπ¥9Êúà16Êó•ÔºàÊúàÔºâ | Êï¨ËÄÅ„ÅÆÊó• | Respect for the Aged Day\n2019/09/23      | 2019Âπ¥9Êúà23Êó•ÔºàÊúàÔºâ | ÁßãÂàÜ„ÅÆÊó• | Autumnal Equinox Day\n2019/10/14      | 2019Âπ¥10Êúà14Êó•ÔºàÊúàÔºâ | ‰ΩìËÇ≤„ÅÆÊó• | Health-Sports Day\n2019/10/22      | 2019Âπ¥10Êúà22Êó•ÔºàÁÅ´Ôºâ | Âç≥‰ΩçÁ§ºÊ≠£ÊÆø„ÅÆÂÑÄ„ÅÆË°å„Çè„Çå„ÇãÊó• | Day of The Coronation Court\n2019/11/03      | 2019Âπ¥11Êúà3Êó•ÔºàÊó•Ôºâ | ÊñáÂåñ„ÅÆÊó• | Culture Day\n2019/11/04      | 2019Âπ¥11Êúà4Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday\n2019/11/23      | 2019Âπ¥11Êúà23Êó•ÔºàÂúüÔºâ | Âã§Âä¥ÊÑüË¨ù„ÅÆÊó• | Labour Thanksgiving Day\nfrom 2020 ---> ..... (until they change their King again)\n2020/01/01      | 2020Âπ¥1Êúà1Êó•ÔºàÊ∞¥Ôºâ | ÂÖÉÊó• | New Year's Day\n2020/01/13      | 2020Âπ¥1Êúà13Êó•ÔºàÊúàÔºâ | Êàê‰∫∫„ÅÆÊó• | Coming-of-age Day ---> (Second Monday of January)\n2020/02/11      | 2020Âπ¥2Êúà11Êó•ÔºàÁÅ´Ôºâ | Âª∫ÂõΩË®òÂøµ„ÅÆÊó• | National Foundation Day\n2020/02/23      | 2020Âπ¥2Êúà23Êó•ÔºàÊó•Ôºâ | Â§©ÁöáË™ïÁîüÊó• | Emperor's Birthday\n2020/02/24      | 2020Âπ¥2Êúà24Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday\n2020/03/20      | 2020Âπ¥3Êúà20Êó•ÔºàÈáëÔºâ | Êò•ÂàÜ„ÅÆÊó• | Vernal Equinox Day\n2020/04/29      | 2020Âπ¥4Êúà29Êó•ÔºàÊ∞¥Ôºâ | Êò≠Âíå„ÅÆÊó• | Sh≈çwa Day\n2020/05/03      | 2020Âπ¥5Êúà3Êó•ÔºàÊó•Ôºâ | ÊÜ≤Ê≥ïË®òÂøµÊó• | Constitution Memorial Day\n2020/05/04      | 2020Âπ¥5Êúà4Êó•ÔºàÊúàÔºâ | „Åø„Å©„Çä„ÅÆÊó• | Greenery Day\n2020/05/05      | 2020Âπ¥5Êúà5Êó•ÔºàÁÅ´Ôºâ | Â≠ê‰æõ„ÅÆÊó• | Children's Day\n2020/05/06      | 2020Âπ¥5Êúà6Êó•ÔºàÊ∞¥Ôºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday\n2020/07/23      | 2020Âπ¥7Êúà23Êó•ÔºàÊú®Ôºâ | Êµ∑„ÅÆÊó• | Marine Day ---> (Third Monday of July)\n2020/07/24      | 2020Âπ¥7Êúà24Êó•ÔºàÈáëÔºâ | „Çπ„Éù„Éº„ÉÑ„ÅÆÊó• | Sports Day  ---> (Second Monday of October). In 2020, this holiday is will be moved exceptionally to July 24 in order to create a prolonged holiday around the opening ceremony of the 2020 Tokyo Olympics.\n2020/08/10      | 2020Âπ¥8Êúà10Êó•ÔºàÊúàÔºâ | Â±±„ÅÆÊó• | Mountain Day\n2020/09/21      | 2020Âπ¥9Êúà21Êó•ÔºàÊúàÔºâ | Êï¨ËÄÅ„ÅÆÊó• | Respect for the Aged Day ---> (Third Monday of September)\n2020/09/22      | 2020Âπ¥9Êúà22Êó•ÔºàÁÅ´Ôºâ | ÁßãÂàÜ„ÅÆÊó• | Autumnal Equinox Day\n2020/11/03      | 2020Âπ¥11Êúà3Êó•ÔºàÁÅ´Ôºâ | ÊñáÂåñ„ÅÆÊó• | Culture Day\n2020/11/23      | 2020Âπ¥11Êúà23Êó•ÔºàÊúàÔºâ | Âã§Âä¥ÊÑüË¨ù„ÅÆÊó• | Labour Thanksgiving Day\nThank you so much!",
            "Hi @dr-prodigy , is there any update for this issue? I tested your library and found that for the following Japanese holidays in 2020, the results are incorrect. Would you be kind enough to update them?\nMarine Day | Thu, Jul 23, 2020 (2020-07-23)\nHealth and Sports Day | Fri, Jul 24, 2020 (2020-07-24)\nMountain Day | Mon, Aug 10, 2020 (2020-08-10)\n\nHowever, when these holidays occur in 2021, they are correctly identified, which are :\n\"2021-07-19\": \"Marine Day\"\n\"2021-08-11\": \"Mountain day\"\n\"2021-10-11\": \"Health and Sports day\"\n\nLooks like issue is only with 2020. Maybe you assumed that Mountain day occurs on 11th of August every year, which is not the case as it seems. That's because it's observed on 10th instead of 11th this year, according to Google, may be to accommodate for a 3-day weekend. Hence this result is also false:\n>>> date(2020,8,11) in holidays.Japan()\nTrue\n\nInstead of 2020-8-11, the actual holiday is on 2020-8-10.\nRegarding Sports day, as explained in the previous comment, it's due to Tokyo Olympics.\nAnd for Sea/Marine day, though it should be on 3rd Monday of July that is 20th July 2020, but it's being observed on 23rd July 2020 instead because of Tokyo Olympics again.\nReferences taken from : https://holidays-jp.github.io/api/v1/date.json",
            "Fixed and released on beta branch. Thank you!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/216",
        "title": "Region support for the United Kindgom",
        "count": 3,
        "turns": [
            "The UK locale is not granular enough for holidays within the United Kingdom, and treats any holiday specific to a country within the UK as effective against the whole.\nFor specifically, today is the Battle of the Boyne, a national holiday only witnessed within Northern Ireland ‚Äì the other countries are unaffected by this holiday.\nAn option to be more specific at the witnessed country (i.e. England, Wales, Scotland‚Ä¶) would be welcome.",
            "Hmmm.. this sounds to be already there:\n\n    # Battle of the Boyne\n    if self.country in ('UK', 'Northern Ireland'):\n        name = \"Battle of the Boyne\"\n        .....\n\n\nFor specific holidays only, you got\n\"England\", \"Wales\", \"Scotland\", \"IsleOfMan\", \"NorthernIreland\", \"Ireland\"\nwhile\n\"UK\" (or \"GB\") sums up all country holidays (excluding Irish ones).\nPlease let me know, cheers\ndr-p",
            "In [1]: from datetime import date                                                                             \n\nIn [2]: import holidays                                                                                       \n\nIn [3]: holidays_in_england = holidays.England()                                                              \n\nIn [4]: date(2019, 8, 26) in holidays_in_england                                                              \nOut[4]: True\n\nIn [5]: holidays_in_england                                                                                   \nOut[5]: \n{datetime.date(2019, 1, 1): \"New Year's Day\",\n datetime.date(2019, 4, 19): 'Good Friday',\n datetime.date(2019, 4, 22): 'Easter Monday',\n datetime.date(2019, 5, 6): 'May Day',\n datetime.date(2019, 5, 27): 'Spring Bank Holiday',\n datetime.date(2019, 8, 26): 'Late Summer Bank Holiday',\n datetime.date(2019, 12, 25): 'Christmas Day',\n datetime.date(2019, 12, 26): 'Boxing Day'}",
            "Apologies, meant to get back to you on this one. Can confirm all looks good, not sure if this is something I just missed on the documentation."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/212",
        "title": "Detecting only holidays recognized in the banking/financial industry",
        "count": 1,
        "turns": [
            "Hello. I have a requirement for detecting only holidays that are recognized in the banking/financial industry. A colleague and I would like to add support for this type of detection. Is this something that you would consider adding the your open-source package if we were to provide you with a solution?",
            "Hi, thank you for your contribution.\nThis is truely interesting!\nWhat is difficult, IMHO, is applying it to all country holidays we've collected until now (or at least a good part of them).\nDo you think it would be feasible?\nThank you again, cheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/211",
        "title": "FR instead of FRA for France",
        "count": 2,
        "turns": [
            "Hi there,\nI am using CountryField within your project. Everything works great, but France. I know you wrote in the code: \"FR already exists (Friday), we don't want to mess it up\".\nI changed it locally and all works (as it should). Don't you want to consider change your mind on this and change the class to 'FR' instead of 'FRA'?",
            "Hi,\nI don't think it would be a great idea: code would get less robust, and we would go to break compatibility with previous versions.\nWhy would you expect to have FR instead of FRA? France support has been like that since the initial implementation, and there are a number of other managed states named with 3 letters instead of 2..\nPlease let me know, thank you\ndr-p",
            "Okay, time to close this.. cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/210",
        "title": "Issue with Czech",
        "count": 5,
        "turns": [
            ">>> hols = holidays.CountryHoliday('CZ')\n>>> hols = holidays.CountryHoliday('Czech')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.7/site-packages/holidays.py\", line 233, in CountryHoliday\n    country_holiday = globals()[country](prov=prov, state=state)\nTypeError: __init__() got an unexpected keyword argument 'prov'",
            "Hey, I am using:\ncz_holidays = holidays.CZ()\nIt works.",
            "CZ works, 'Czech' doesnt... Thats what I'm showing above...'Czech' is mentioned in the docs as it should be able to be used.",
            "Sorry you are right.. That's because:\n\n\nkeyword \"Czech\" has been deprecated. The currently correct one is \"Czechia\"\nclass Czech(Czechia): def __init__(self): warnings.warn(\"Czech is deprecated, use Czechia instead.\", DeprecationWarning) super(Czech, self).__init__()\nso I need to update the doc accordingly. I'll do it, thx\n\n\nthere's an issue when deprecation happens during holidays.CountryHoliday('XXX') call. Should dive into it and fix it. Will do soon.\n\n\nThank you very much, pls let me know how it goes",
            "Just pushed a fix for those issues..  thanks again üëç\nEDIT: please confirm so I'll close the ticket, cheers",
            "No complaints => all OK.. closing ;-)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=13&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/207",
        "title": "Croatian holiday date",
        "count": 1,
        "turns": [
            "Hi, can you please change:\nin holidays.py line 4188 - Croatian Statehood day is june 25, not june 22.\nEverything else looks good for Croatia.\nThank you, this repo helped a bunch",
            "Fixed üëç\nThank you, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/206",
        "title": "The observed date for Canada and US New Years Day not correct",
        "count": 3,
        "turns": [
            "Thanks, this is a great package.\nIn North America, if Dec 31 is Friday, the New Year's holiday is observed on the following Monday. It seems like there is special code here to force the observance to Friday Dec 31, but that's incorrect.\n#The next year's observed New Year's Day can be in this year\n# when it falls on a Friday (Jan 1st is a Saturday)\nif self.observed and date(year, DEC, 31).weekday() == FRI:\nself[date(year, DEC, 31)] = name + \" (Observed)\"\nThe issue comes up in Dec 2022, because Dec 31 2021 is on Friday.\nI'm not sure if you need anything official to verify that? The following site agrees with my claim:\nhttps://www.timeanddate.com/calendar/?year=2022&country=27\nOR\nhttps://www.marketbeat.com/stock-market-holidays/canada/\nThanks!",
            "Also, per the Bond Market calendar, New Year's Eve in 2023 is observed on Dec 29th.  Your code for NYE doesn't handle that.  (The market closes early that day.)",
            "The code correctly follows U.S. law, which stipulates that if holiday falls on a Saturday, the Friday immediately before is a legal public holiday: https://www.law.cornell.edu/uscode/text/5/6103.\nFor January 3, 2022 to be a public holiday in the U.S. it would require a new law or a Presidential Proclamation, which I haven't found.  Private companies (such as stock exchanges and bond markets), of course, are free to make their own holidays, but this library appears to track official holidays only.",
            "Hi,\nthank you @mborsetti for sorting this out! I confirm this as closed.\nThanks to everybody, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/205",
        "title": "Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......",
        "count": 1,
        "turns": [
            "Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......\nso  do you think you can use it?\nThank you ~~\nOriginally posted by @DaisyLL in https://github.com/dr-prodigy/python-holidays/issues/201#issuecomment-501516847",
            "file"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/201",
        "title": "Add support for hongkong",
        "count": 7,
        "turns": [
            "Please add support for Hong Kong and China Mainland, please.",
            "I'm sorry, no development requests are accepted, and this especially applies to very specific ones (HK and China support are \"expensive\" features, due to their language structure).\nWould you be able to contribute in some way?\nThanks.",
            "I can provide the date of the holidays for HongKong if you wish",
            "In order to be able to start working, we should at least receive the complete list of all HK holidays containing, for each item:\n\nname in native language\nname translation in English\ndate (for holidays on fixed dates), or date logic\n\nIf you can arrange these materials, we'll do our best to integrate it: thanks.\ndr-p",
            "Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......\nso do you think you can use it?\nThank you ~~\nholidayname_Chinese\tholidayname_English\tdate\nÂÖÉÊó¶\tNew Yesr's Day\t2012/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2012/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2012/1/3\nÊò•ËäÇ\tThe Spring Festival\t2012/1/22\nÊò•ËäÇ\tThe Spring Festival\t2012/1/23\nÊò•ËäÇ\tThe Spring Festival\t2012/1/24\nÊò•ËäÇ\tThe Spring Festival\t2012/1/25\nÊò•ËäÇ\tThe Spring Festival\t2012/1/26\nÊò•ËäÇ\tThe Spring Festival\t2012/1/27\nÊò•ËäÇ\tThe Spring Festival\t2012/1/28\nÊ∏ÖÊòé\tQingming Festival\t2012/4/2\nÊ∏ÖÊòé\tQingming Festival\t2012/4/3\nÊ∏ÖÊòé\tQingming Festival\t2012/4/4\nÂä≥Âä®\tLabour Day\t2012/4/29\nÂä≥Âä®\tLabour Day\t2012/4/30\nÂä≥Âä®\tLabour Day\t2012/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2012/6/22\nÁ´ØÂçà\tThe Dragon Boat Festival\t2012/6/23\nÁ´ØÂçà\tThe Dragon Boat Festival\t2012/6/24\nÂõΩÂ∫Ü\tNational Day\t2012/9/30\nÂõΩÂ∫Ü\tNational Day\t2012/10/1\nÂõΩÂ∫Ü\tNational Day\t2012/10/2\nÂõΩÂ∫Ü\tNational Day\t2012/10/3\nÂõΩÂ∫Ü\tNational Day\t2012/10/4\nÂõΩÂ∫Ü\tNational Day\t2012/10/5\nÂõΩÂ∫Ü\tNational Day\t2012/10/6\nÂõΩÂ∫Ü\tNational Day\t2012/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2013/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2013/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2013/1/3\nÊò•ËäÇ\tThe Spring Festival\t2013/2/9\nÊò•ËäÇ\tThe Spring Festival\t2013/2/10\nÊò•ËäÇ\tThe Spring Festival\t2013/2/11\nÊò•ËäÇ\tThe Spring Festival\t2013/2/12\nÊò•ËäÇ\tThe Spring Festival\t2013/2/13\nÊò•ËäÇ\tThe Spring Festival\t2013/2/14\nÊò•ËäÇ\tThe Spring Festival\t2013/2/15\nÊ∏ÖÊòé\tQingming Festival\t2013/4/4\nÊ∏ÖÊòé\tQingming Festival\t2013/4/5\nÊ∏ÖÊòé\tQingming Festival\t2013/4/6\nÂä≥Âä®\tLabour Day\t2013/4/29\nÂä≥Âä®\tLabour Day\t2013/4/30\nÂä≥Âä®\tLabour Day\t2013/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2013/6/10\nÁ´ØÂçà\tThe Dragon Boat Festival\t2013/6/11\nÁ´ØÂçà\tThe Dragon Boat Festival\t2013/6/12\n‰∏≠Áßã\tMid_Autumn Festival\t2013/9/19\n‰∏≠Áßã\tMid_Autumn Festival\t2013/9/20\n‰∏≠Áßã\tMid_Autumn Festival\t2013/9/21\nÂõΩÂ∫Ü\tNational Day\t2013/10/1\nÂõΩÂ∫Ü\tNational Day\t2013/10/2\nÂõΩÂ∫Ü\tNational Day\t2013/10/3\nÂõΩÂ∫Ü\tNational Day\t2013/10/4\nÂõΩÂ∫Ü\tNational Day\t2013/10/5\nÂõΩÂ∫Ü\tNational Day\t2013/10/6\nÂõΩÂ∫Ü\tNational Day\t2013/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2014/1/1\nÊò•ËäÇ\tThe Spring Festival\t2014/1/31\nÊò•ËäÇ\tThe Spring Festival\t2014/2/1\nÊò•ËäÇ\tThe Spring Festival\t2014/2/2\nÊò•ËäÇ\tThe Spring Festival\t2014/2/3\nÊò•ËäÇ\tThe Spring Festival\t2014/2/4\nÊò•ËäÇ\tThe Spring Festival\t2014/2/5\nÊò•ËäÇ\tThe Spring Festival\t2014/2/6\nÊ∏ÖÊòé\tQingming Festival\t2014/4/5\nÊ∏ÖÊòé\tQingming Festival\t2014/4/6\nÊ∏ÖÊòé\tQingming Festival\t2014/4/7\nÂä≥Âä®\tLabour Day\t2014/5/1\nÂä≥Âä®\tLabour Day\t2014/5/2\nÂä≥Âä®\tLabour Day\t2014/5/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2014/5/31\nÁ´ØÂçà\tThe Dragon Boat Festival\t2014/6/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2014/6/2\n‰∏≠Áßã\tMid_Autumn Festival\t2014/9/6\n‰∏≠Áßã\tMid_Autumn Festival\t2014/9/7\n‰∏≠Áßã\tMid_Autumn Festival\t2014/9/8\nÂõΩÂ∫Ü\tNational Day\t2014/10/1\nÂõΩÂ∫Ü\tNational Day\t2014/10/2\nÂõΩÂ∫Ü\tNational Day\t2014/10/3\nÂõΩÂ∫Ü\tNational Day\t2014/10/4\nÂõΩÂ∫Ü\tNational Day\t2014/10/5\nÂõΩÂ∫Ü\tNational Day\t2014/10/6\nÂõΩÂ∫Ü\tNational Day\t2014/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2015/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2015/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2015/1/3\nÊò•ËäÇ\tThe Spring Festival\t2015/2/18\nÊò•ËäÇ\tThe Spring Festival\t2015/2/19\nÊò•ËäÇ\tThe Spring Festival\t2015/2/20\nÊò•ËäÇ\tThe Spring Festival\t2015/2/21\nÊò•ËäÇ\tThe Spring Festival\t2015/2/22\nÊò•ËäÇ\tThe Spring Festival\t2015/2/23\nÊò•ËäÇ\tThe Spring Festival\t2015/2/24\nÊ∏ÖÊòé\tQingming Festival\t2015/4/4\nÊ∏ÖÊòé\tQingming Festival\t2015/4/5\nÊ∏ÖÊòé\tQingming Festival\t2015/4/6\nÂä≥Âä®\tLabour Day\t2015/5/1\nÂä≥Âä®\tLabour Day\t2015/5/2\nÂä≥Âä®\tLabour Day\t2015/5/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2015/6/20\nÁ´ØÂçà\tThe Dragon Boat Festival\t2015/6/21\nÁ´ØÂçà\tThe Dragon Boat Festival\t2015/6/22\n‰∏≠Áßã\tMid_Autumn Festival\t2015/9/26\n‰∏≠Áßã\tMid_Autumn Festival\t2015/9/27\nÂõΩÂ∫Ü\tNational Day\t2015/10/1\nÂõΩÂ∫Ü\tNational Day\t2015/10/2\nÂõΩÂ∫Ü\tNational Day\t2015/10/3\nÂõΩÂ∫Ü\tNational Day\t2015/10/4\nÂõΩÂ∫Ü\tNational Day\t2015/10/5\nÂõΩÂ∫Ü\tNational Day\t2015/10/6\nÂõΩÂ∫Ü\tNational Day\t2015/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2016/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2016/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2016/1/3\nÊò•ËäÇ\tThe Spring Festival\t2016/2/7\nÊò•ËäÇ\tThe Spring Festival\t2016/2/8\nÊò•ËäÇ\tThe Spring Festival\t2016/2/9\nÊò•ËäÇ\tThe Spring Festival\t2016/2/10\nÊò•ËäÇ\tThe Spring Festival\t2016/2/11\nÊò•ËäÇ\tThe Spring Festival\t2016/2/12\nÊò•ËäÇ\tThe Spring Festival\t2016/2/13\nÊ∏ÖÊòé\tQingming Festival\t2016/4/2\nÊ∏ÖÊòé\tQingming Festival\t2016/4/3\nÊ∏ÖÊòé\tQingming Festival\t2016/4/4\nÂä≥Âä®\tLabour Day\t2016/4/30\nÂä≥Âä®\tLabour Day\t2016/5/1\nÂä≥Âä®\tLabour Day\t2016/5/2\nÁ´ØÂçà\tThe Dragon Boat Festival\t2016/6/9\nÁ´ØÂçà\tThe Dragon Boat Festival\t2016/6/10\nÁ´ØÂçà\tThe Dragon Boat Festival\t2016/6/11\n‰∏≠Áßã\tMid_Autumn Festival\t2016/9/15\n‰∏≠Áßã\tMid_Autumn Festival\t2016/9/16\n‰∏≠Áßã\tMid_Autumn Festival\t2016/9/17\nÂõΩÂ∫Ü\tNational Day\t2016/10/1\nÂõΩÂ∫Ü\tNational Day\t2016/10/2\nÂõΩÂ∫Ü\tNational Day\t2016/10/3\nÂõΩÂ∫Ü\tNational Day\t2016/10/4\nÂõΩÂ∫Ü\tNational Day\t2016/10/5\nÂõΩÂ∫Ü\tNational Day\t2016/10/6\nÂõΩÂ∫Ü\tNational Day\t2016/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2016/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2017/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2017/1/2\nÊò•ËäÇ\tThe Spring Festival\t2017/1/27\nÊò•ËäÇ\tThe Spring Festival\t2017/1/28\nÊò•ËäÇ\tThe Spring Festival\t2017/1/29\nÊò•ËäÇ\tThe Spring Festival\t2017/1/30\nÊò•ËäÇ\tThe Spring Festival\t2017/1/31\nÊò•ËäÇ\tThe Spring Festival\t2017/2/1\nÊò•ËäÇ\tThe Spring Festival\t2017/2/2\nÊ∏ÖÊòé\tQingming Festival\t2017/4/2\nÊ∏ÖÊòé\tQingming Festival\t2017/4/3\nÊ∏ÖÊòé\tQingming Festival\t2017/4/4\nÂä≥Âä®\tLabour Day\t2017/4/29\nÂä≥Âä®\tLabour Day\t2017/4/30\nÂä≥Âä®\tLabour Day\t2017/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2017/5/28\nÁ´ØÂçà\tThe Dragon Boat Festival\t2017/5/29\nÁ´ØÂçà\tThe Dragon Boat Festival\t2017/5/30\nÂõΩÂ∫Ü\tNational Day\t2017/10/1\nÂõΩÂ∫Ü\tNational Day\t2017/10/2\nÂõΩÂ∫Ü\tNational Day\t2017/10/3\nÂõΩÂ∫Ü\tNational Day\t2017/10/4\nÂõΩÂ∫Ü\tNational Day\t2017/10/5\nÂõΩÂ∫Ü\tNational Day\t2017/10/6\nÂõΩÂ∫Ü\tNational Day\t2017/10/7\nÂõΩÂ∫Ü\tNational Day\t2017/10/8\nÂÖÉÊó¶\tNew Yesr's Day\t2017/12/30\nÂÖÉÊó¶\tNew Yesr's Day\t2017/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2018/1/1\nÊò•ËäÇ\tThe Spring Festival\t2018/2/15\nÊò•ËäÇ\tThe Spring Festival\t2018/2/16\nÊò•ËäÇ\tThe Spring Festival\t2018/2/17\nÊò•ËäÇ\tThe Spring Festival\t2018/2/18\nÊò•ËäÇ\tThe Spring Festival\t2018/2/19\nÊò•ËäÇ\tThe Spring Festival\t2018/2/20\nÊò•ËäÇ\tThe Spring Festival\t2018/2/21\nÊ∏ÖÊòé\tQingming Festival\t2018/4/5\nÊ∏ÖÊòé\tQingming Festival\t2018/4/6\nÊ∏ÖÊòé\tQingming Festival\t2018/4/7\nÂä≥Âä®\tLabour Day\t2018/4/29\nÂä≥Âä®\tLabour Day\t2018/4/30\nÂä≥Âä®\tLabour Day\t2018/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2018/6/16\nÁ´ØÂçà\tThe Dragon Boat Festival\t2018/6/17\nÁ´ØÂçà\tThe Dragon Boat Festival\t2018/6/18\n‰∏≠Áßã\tMid_Autumn Festival\t2018/9/22\n‰∏≠Áßã\tMid_Autumn Festival\t2018/9/23\n‰∏≠Áßã\tMid_Autumn Festival\t2018/9/24\nÂõΩÂ∫Ü\tNational Day\t2018/10/1\nÂõΩÂ∫Ü\tNational Day\t2018/10/2\nÂõΩÂ∫Ü\tNational Day\t2018/10/3\nÂõΩÂ∫Ü\tNational Day\t2018/10/4\nÂõΩÂ∫Ü\tNational Day\t2018/10/5\nÂõΩÂ∫Ü\tNational Day\t2018/10/6\nÂõΩÂ∫Ü\tNational Day\t2018/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2018/12/30\nÂÖÉÊó¶\tNew Yesr's Day\t2018/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2019/1/1\nÊò•ËäÇ\tThe Spring Festival\t2019/2/4\nÊò•ËäÇ\tThe Spring Festival\t2019/2/5\nÊò•ËäÇ\tThe Spring Festival\t2019/2/6\nÊò•ËäÇ\tThe Spring Festival\t2019/2/7\nÊò•ËäÇ\tThe Spring Festival\t2019/2/8\nÊò•ËäÇ\tThe Spring Festival\t2019/2/9\nÊò•ËäÇ\tThe Spring Festival\t2019/2/10\nÊ∏ÖÊòé\tQingming Festival\t2019/4/5\nÊ∏ÖÊòé\tQingming Festival\t2019/4/6\nÊ∏ÖÊòé\tQingming Festival\t2019/4/7\nÂä≥Âä®\tLabour Day\t2019/5/1\nÂä≥Âä®\tLabour Day\t2019/5/2\nÂä≥Âä®\tLabour Day\t2019/5/3\nÂä≥Âä®\tLabour Day\t2019/5/4\nÁ´ØÂçà\tThe Dragon Boat Festival\t2019/6/7\nÁ´ØÂçà\tThe Dragon Boat Festival\t2019/6/8\nÁ´ØÂçà\tThe Dragon Boat Festival\t2019/6/9\n‰∏≠Áßã\tMid_Autumn Festival\t2019/9/13\n‰∏≠Áßã\tMid_Autumn Festival\t2019/9/14\n‰∏≠Áßã\tMid_Autumn Festival\t2019/9/15\nÂõΩÂ∫Ü\tNational Day\t2019/10/1\nÂõΩÂ∫Ü\tNational Day\t2019/10/2\nÂõΩÂ∫Ü\tNational Day\t2019/10/3\nÂõΩÂ∫Ü\tNational Day\t2019/10/4\nÂõΩÂ∫Ü\tNational Day\t2019/10/5\nÂõΩÂ∫Ü\tNational Day\t2019/10/6\nÂõΩÂ∫Ü\tNational Day\t2019/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2020/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2020/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2020/1/3\nÊò•ËäÇ\tThe Spring Festival\t2020/1/24\nÊò•ËäÇ\tThe Spring Festival\t2020/1/25\nÊò•ËäÇ\tThe Spring Festival\t2020/1/26\nÊò•ËäÇ\tThe Spring Festival\t2020/1/27\nÊò•ËäÇ\tThe Spring Festival\t2020/1/28\nÊò•ËäÇ\tThe Spring Festival\t2020/1/29\nÊò•ËäÇ\tThe Spring Festival\t2020/1/30\nÊ∏ÖÊòé\tQingming Festival\t2020/4/4\nÊ∏ÖÊòé\tQingming Festival\t2020/4/5\nÊ∏ÖÊòé\tQingming Festival\t2020/4/6\nÂä≥Âä®\tLabour Day\t2020/5/1\nÂä≥Âä®\tLabour Day\t2020/5/2\nÂä≥Âä®\tLabour Day\t2020/5/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2020/6/25\nÁ´ØÂçà\tThe Dragon Boat Festival\t2020/6/26\nÁ´ØÂçà\tThe Dragon Boat Festival\t2020/6/27\nÂõΩÂ∫Ü\tNational Day\t2020/10/1\nÂõΩÂ∫Ü\tNational Day\t2020/10/2\nÂõΩÂ∫Ü\tNational Day\t2020/10/3\nÂõΩÂ∫Ü\tNational Day\t2020/10/4\nÂõΩÂ∫Ü\tNational Day\t2020/10/5\nÂõΩÂ∫Ü\tNational Day\t2020/10/6\nÂõΩÂ∫Ü\tNational Day\t2020/10/7\nÂõΩÂ∫Ü\tNational Day\t2020/10/8\nÂÖÉÊó¶\tNew Yesr's Day\t2021/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2021/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2021/1/3\nÊò•ËäÇ\tThe Spring Festival\t2021/2/11\nÊò•ËäÇ\tThe Spring Festival\t2021/2/12\nÊò•ËäÇ\tThe Spring Festival\t2021/2/13\nÊò•ËäÇ\tThe Spring Festival\t2021/2/14\nÊò•ËäÇ\tThe Spring Festival\t2021/2/15\nÊò•ËäÇ\tThe Spring Festival\t2021/2/16\nÊò•ËäÇ\tThe Spring Festival\t2021/2/17\nÊ∏ÖÊòé\tQingming Festival\t2021/4/2\nÊ∏ÖÊòé\tQingming Festival\t2021/4/3\nÊ∏ÖÊòé\tQingming Festival\t2021/4/4\nÂä≥Âä®\tLabour Day\t2021/4/30\nÂä≥Âä®\tLabour Day\t2021/5/1\nÂä≥Âä®\tLabour Day\t2021/5/2\nÁ´ØÂçà\tThe Dragon Boat Festival\t2021/6/12\nÁ´ØÂçà\tThe Dragon Boat Festival\t2021/6/13\nÁ´ØÂçà\tThe Dragon Boat Festival\t2021/6/14\n‰∏≠Áßã\tMid_Autumn Festival\t2021/9/19\n‰∏≠Áßã\tMid_Autumn Festival\t2021/9/20\n‰∏≠Áßã\tMid_Autumn Festival\t2021/9/21\nÂõΩÂ∫Ü\tNational Day\t2021/10/1\nÂõΩÂ∫Ü\tNational Day\t2021/10/2\nÂõΩÂ∫Ü\tNational Day\t2021/10/3\nÂõΩÂ∫Ü\tNational Day\t2021/10/4\nÂõΩÂ∫Ü\tNational Day\t2021/10/5\nÂõΩÂ∫Ü\tNational Day\t2021/10/6\nÂõΩÂ∫Ü\tNational Day\t2021/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2021/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2022/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2022/1/2\nÊò•ËäÇ\tThe Spring Festival\t2022/1/31\nÊò•ËäÇ\tThe Spring Festival\t2022/2/1\nÊò•ËäÇ\tThe Spring Festival\t2022/2/2\nÊò•ËäÇ\tThe Spring Festival\t2022/2/3\nÊò•ËäÇ\tThe Spring Festival\t2022/2/4\nÊò•ËäÇ\tThe Spring Festival\t2022/2/5\nÊò•ËäÇ\tThe Spring Festival\t2022/2/6\nÊ∏ÖÊòé\tQingming Festival\t2022/4/3\nÊ∏ÖÊòé\tQingming Festival\t2022/4/4\nÊ∏ÖÊòé\tQingming Festival\t2022/4/5\nÂä≥Âä®\tLabour Day\t2022/4/29\nÂä≥Âä®\tLabour Day\t2022/4/30\nÂä≥Âä®\tLabour Day\t2022/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2022/6/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2022/6/4\nÁ´ØÂçà\tThe Dragon Boat Festival\t2022/6/5\n‰∏≠Áßã\tMid_Autumn Festival\t2022/9/9\n‰∏≠Áßã\tMid_Autumn Festival\t2022/9/10\n‰∏≠Áßã\tMid_Autumn Festival\t2022/9/11\nÂõΩÂ∫Ü\tNational Day\t2022/10/1\nÂõΩÂ∫Ü\tNational Day\t2022/10/2\nÂõΩÂ∫Ü\tNational Day\t2022/10/3\nÂõΩÂ∫Ü\tNational Day\t2022/10/4\nÂõΩÂ∫Ü\tNational Day\t2022/10/5\nÂõΩÂ∫Ü\tNational Day\t2022/10/6\nÂõΩÂ∫Ü\tNational Day\t2022/10/7\nÂÖÉÊó¶\tNew Yesr's Day\t2022/12/30\nÂÖÉÊó¶\tNew Yesr's Day\t2022/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2023/1/1\nÊò•ËäÇ\tThe Spring Festival\t2023/1/21\nÊò•ËäÇ\tThe Spring Festival\t2023/1/22\nÊò•ËäÇ\tThe Spring Festival\t2023/1/23\nÊò•ËäÇ\tThe Spring Festival\t2023/1/24\nÊò•ËäÇ\tThe Spring Festival\t2023/1/25\nÊò•ËäÇ\tThe Spring Festival\t2023/1/26\nÊò•ËäÇ\tThe Spring Festival\t2023/1/27\nÊ∏ÖÊòé\tQingming Festival\t2023/4/5\nÊ∏ÖÊòé\tQingming Festival\t2023/4/6\nÊ∏ÖÊòé\tQingming Festival\t2023/4/7\nÂä≥Âä®\tLabour Day\t2023/4/29\nÂä≥Âä®\tLabour Day\t2023/4/30\nÂä≥Âä®\tLabour Day\t2023/5/1\nÁ´ØÂçà\tThe Dragon Boat Festival\t2023/6/22\nÁ´ØÂçà\tThe Dragon Boat Festival\t2023/6/23\nÁ´ØÂçà\tThe Dragon Boat Festival\t2023/6/24\n‰∏≠Áßã\tMid_Autumn Festival\t2023/9/29\n‰∏≠Áßã\tMid_Autumn Festival\t2023/9/30\nÂõΩÂ∫Ü\tNational Day\t2023/10/1\nÂõΩÂ∫Ü\tNational Day\t2023/10/2\nÂõΩÂ∫Ü\tNational Day\t2023/10/3\nÂõΩÂ∫Ü\tNational Day\t2023/10/4\nÂõΩÂ∫Ü\tNational Day\t2023/10/5\nÂõΩÂ∫Ü\tNational Day\t2023/10/6\nÂÖÉÊó¶\tNew Yesr's Day\t2023/12/30\nÂÖÉÊó¶\tNew Yesr's Day\t2023/12/31\nÂÖÉÊó¶\tNew Yesr's Day\t2024/1/1\nÊò•ËäÇ\tThe Spring Festival\t2024/2/9\nÊò•ËäÇ\tThe Spring Festival\t2024/2/10\nÊò•ËäÇ\tThe Spring Festival\t2024/2/11\nÊò•ËäÇ\tThe Spring Festival\t2024/2/12\nÊò•ËäÇ\tThe Spring Festival\t2024/2/13\nÊò•ËäÇ\tThe Spring Festival\t2024/2/14\nÊò•ËäÇ\tThe Spring Festival\t2024/2/15\nÊ∏ÖÊòé\tQingming Festival\t2024/4/4\nÊ∏ÖÊòé\tQingming Festival\t2024/4/5\nÊ∏ÖÊòé\tQingming Festival\t2024/4/6\nÂä≥Âä®\tLabour Day\t2024/5/1\nÂä≥Âä®\tLabour Day\t2024/5/2\nÂä≥Âä®\tLabour Day\t2024/5/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2024/6/8\nÁ´ØÂçà\tThe Dragon Boat Festival\t2024/6/9\nÁ´ØÂçà\tThe Dragon Boat Festival\t2024/6/10\n‰∏≠Áßã\tMid_Autumn Festival\t2024/9/15\n‰∏≠Áßã\tMid_Autumn Festival\t2024/9/16\n‰∏≠Áßã\tMid_Autumn Festival\t2024/9/17\nÂõΩÂ∫Ü\tNational Day\t2024/9/28\nÂõΩÂ∫Ü\tNational Day\t2024/9/29\nÂõΩÂ∫Ü\tNational Day\t2024/9/30\nÂõΩÂ∫Ü\tNational Day\t2024/10/1\nÂõΩÂ∫Ü\tNational Day\t2024/10/2\nÂõΩÂ∫Ü\tNational Day\t2024/10/3\nÂõΩÂ∫Ü\tNational Day\t2024/10/4\nÂÖÉÊó¶\tNew Yesr's Day\t2025/1/1\nÂÖÉÊó¶\tNew Yesr's Day\t2025/1/2\nÂÖÉÊó¶\tNew Yesr's Day\t2025/1/3\nÊò•ËäÇ\tThe Spring Festival\t2025/1/28\nÊò•ËäÇ\tThe Spring Festival\t2025/1/29\nÊò•ËäÇ\tThe Spring Festival\t2025/1/30\nÊò•ËäÇ\tThe Spring Festival\t2025/1/31\nÊò•ËäÇ\tThe Spring Festival\t2025/2/1\nÊò•ËäÇ\tThe Spring Festival\t2025/2/2\nÊò•ËäÇ\tThe Spring Festival\t2025/2/3\nÊ∏ÖÊòé\tQingming Festival\t2025/4/4\nÊ∏ÖÊòé\tQingming Festival\t2025/4/5\nÊ∏ÖÊòé\tQingming Festival\t2025/4/6\nÂä≥Âä®\tLabour Day\t2025/5/1\nÂä≥Âä®\tLabour Day\t2025/5/2\nÂä≥Âä®\tLabour Day\t2025/5/3\nÁ´ØÂçà\tThe Dragon Boat Festival\t2025/5/30\nÁ´ØÂçà\tThe Dragon Boat Festival\t2025/5/31\nÁ´ØÂçà\tThe Dragon Boat Festival\t2025/6/1\nÂõΩÂ∫Ü\tNational Day\t2025/10/1\nÂõΩÂ∫Ü\tNational Day\t2025/10/2\nÂõΩÂ∫Ü\tNational Day\t2025/10/3\nÂõΩÂ∫Ü\tNational Day\t2025/10/4\nÂõΩÂ∫Ü\tNational Day\t2025/10/5\nÂõΩÂ∫Ü\tNational Day\t2025/10/6\nÂõΩÂ∫Ü\tNational Day\t2025/10/7\nÂõΩÂ∫Ü\tNational Day\t2025/10/8",
            "Hi there @DaisyLL , thank you for your help.\nSome questions:\n\n\nthe main goal of the library is to provide a business logic to setup holidays for past present and (possibly) future.\nSo in the end, instead of collecting fixed dates (which are very verbose and are not future-proof), we always try to implement code like \"Labour day happens in the first workday of May\" (just an example: the sentence is probably wrong).\nThen of course, when this is not possible, we try to manage the exceptions.\nDo you think this approach is feasible/applicable to HK/Chinese holidays too?\n\n\nIn the list above I see a lot of holidays made up of multiple days (eg: National Day from 2025/10/1 to 2025/10/8): is this correct?\n\n\nCan you rearrange your data according to these requests?\nThank you very much, KUTGW",
            "Hi there @DaisyLL , thank you for your help.\nSome questions:\n1. the main goal of the library is to provide a business logic to setup holidays for past present and (possibly) future.\n   So in the end, instead of collecting fixed dates (which are very verbose and are not future-proof), we always try to implement code like \"Labour day happens in the first workday of May\" (just an example: the sentence is probably wrong).\n   Then of course, when this is not possible, we try to manage the exceptions.\n   Do you think this approach is feasible/applicable to HK/Chinese holidays too?\n\n2. In the list above I see a lot of holidays made up of multiple days (eg: National Day from 2025/10/1 to 2025/10/8): is this correct?\n\nCan you rearrange your data according to these requests?\nThank you very much, KUTGW\n\nThe dates provided by @DaisyLL was China's holidays, and Hong Kong would have another holidays dates.  Therefore, I suggest using another separate thread for @DaisyLL case on China's holidays.",
            "#208 I have implemented support for Hong Kong calendar and a pull request has been made."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/200",
        "title": "Add support for IS (Iceland) and KE (Kenya)",
        "count": 2,
        "turns": [
            "Could you please add support for Iceland and Kenya",
            "#203",
            "All done... thx üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/198",
        "title": "Passing a year to .get and .get_list yields only New Year's Day",
        "count": 1,
        "turns": [
            "If I try pass a year to .get or .get_list, only New Year's Day is returned. I would expect to get a list of all the holidays in that year.\nTo expand, I am using the CountryHoliday class, but don't know the exact dates of the holidays, so would like to retrieve them by passing the year.",
            "Hi,\nyou haven't provided any code in your issue, but anyway it seems, being using the year only, you're implicitly passing a single date (i.e.: ????/1/1) to the method, so that's why you receive only New Year's Day.\nYou should instead be using a date range, like this ( = https://github.com/dr-prodigy/python-holidays#example-usage 's last snippet ):\n>>> from datetime import date\n>>> holidays.US()[date(2018, 1, 1): date(2018, 12, 31)]\n\nCheers\ndr-p"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/197",
        "title": "GB representation for UK",
        "count": 3,
        "turns": [
            "üëã\nISO standard country code for United Kingdom is actually GB\nHaving GB as well as UK makes lookup with ISO codes cleaner",
            "Thank you üëç",
            "no, thank you, that was blazing fast üòª",
            "Oh well y'know, 2 rows of code overall! :-D"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/193",
        "title": "Cant import the library",
        "count": 2,
        "turns": [
            "I already install the library, as shown here:\n(djangoDev) C:\\Users\\Jdash\\Documents\\gitlab\\working-days>pip install holidays\nRequirement already satisfied: holidays in c:\\users\\jdash\\anaconda3\\envs\\djangodev\\lib\\site-packages (0.9.10)\nRequirement already satisfied: six in c:\\users\\jdash\\anaconda3\\envs\\djangodev\\lib\\site-packages (from holidays) (1.12.0)\nRequirement already satisfied: python-dateutil in c:\\users\\jdash\\anaconda3\\envs\\djangodev\\lib\\site-packages (from holidays) (2.8.0)\n\nBut when trying to import it with import holidays, I get the message that there is no module name holidays\nWhat i'm doing wrong?",
            "Hi,\nat a first glance, it seems you're not doing anything particularly wrong: the issue has sth to do with your virtualenv, not doing what it's expected to (have you relocated it?).\nAnyway, given that this is a setup issue, not depending on the package itself, I'm afraid I won't be able to provide more support.\nBest regards",
            "I just had the same issue.\nI created a fresh conda environment with the pandas seaborn and scikit-learn libraries. Then I tried to install holidays with pip, then with conda, and finally with easy_install (I removed the package after each attempt). No difference:\nIn [1]: import holidays                                                                                                                                       \n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\n<ipython-input-1-fa4bcd159274> in <module>\n----> 1 import holidays\n\nModuleNotFoundError: No module named 'holidays'"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/192",
        "title": "Family Day in New Brunswick",
        "count": 3,
        "turns": [
            "New Brunswick started observing Family Day beginning on February 19, 2018.",
            "Sorry, this issue has too few details (is this about Canada? which day is it on?).\nPlease update it with complete information, thx.",
            "My apologies.  I forget that other places are called New Brunswick.\nNew Brunswick, Canada started observing Family Day in 2018 on the 3rd Monday in February.",
            "Okay, updated on beta. Thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/190",
        "title": "Holidays for Malta",
        "count": 1,
        "turns": [
            "Good morning :)\nCan we get holidays for Malta please?",
            "Good morning!\nUnfortunately, this ain't no restaurant, so no orders accepted, sorry :-)\nIn order to have your request satisfied, I would suggest you to provide your preferred degree of contribution to the project (holidays information / code implementation / unit tests): the more contribution you provide, the more likely to see the work done in a short time.\nBest regards, have a nice day!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/185",
        "title": "Czech -> Czechia or CzechRepublic",
        "count": 3,
        "turns": [
            "Nice library!\nHowever, I'd slightly change the name of class for Czech holidays. \"Czech\" is an adjective (like \"Italian\" or \"Milanese\"), not a country name. The short or the long name should be used instead.\nShould I make a PR (perhaps with some deprecation warning)?",
            "Hi Jan,\nthank you very much!\nI see your point.. It's not my fault, Czech implementation has been added in the past by another dev..\nAnyway I agree we should better fix it.\nIf you could contribute with your own PR, it would be great!\nSome tips:\n\nfor now, don't remove support for current name (Czech), just add a deprecation hint to it\nadd a synonym for it (let's say czechia)\nadd tests for your new code, so that coveralls doesn't complain :)\nIn a next release we will remove support for the misspelled name.\n\nLast but not least, start your work from \"dev\" branch, because I'll be merging your PR to it.\nThanks a lot for your contribution, cheers!\nDr. P",
            "Ok,\nI'll follow the tips. However, there is no dev branch in your repository... Which one should I create the pull request against?\nJan",
            "Hi Jan,\nI made a mistake: I wrote \"dev\" branch, but I was meaning \"beta\".\nPlease work starting from it, thank you very much!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/181",
        "title": "holidays returns empty",
        "count": 2,
        "turns": [
            "Hi there,\nI recently installed holidays into a fresh environment and holidays.US() returns {}.\nI'm on Python 3.7 and holidays 0.9.9.\nAny help is appreciated.\nAllan\npip list\naltair            2.3.0     \nasn1crypto        0.24.0    \nattrs             18.2.0    \nbackcall          0.1.0     \nbleach            3.1.0     \ncertifi           2018.11.29\ncffi              1.11.5    \nchardet           3.0.4     \ncryptography      2.4.2     \ncycler            0.10.0    \ndecorator         4.3.0     \nentrypoints       0.3       \nholidays          0.9.9     \nidna              2.8       \nipykernel         5.1.0     \nipython           7.2.0     \nipython-genutils  0.2.0     \njedi              0.13.1    \nJinja2            2.10      \njsonschema        3.0.0a3   \njupyter-client    5.2.4     \njupyter-core      4.4.0     \njupyterlab        0.35.4    \njupyterlab-server 0.2.0     \nkiwisolver        1.0.1     \nMarkupSafe        1.1.0     \nmatplotlib        3.0.2     \nmistune           0.8.4     \nmkl-fft           1.0.6     \nmkl-random        1.0.1     \nnbconvert         5.3.1     \nnbformat          4.4.0     \nnotebook          5.7.4     \nnumpy             1.15.4    \npandas            0.23.4    \npandocfilters     1.4.2     \nparso             0.3.1     \npatsy             0.5.1     \npexpect           4.6.0     \npickleshare       0.7.5     \npip               18.1      \nprometheus-client 0.5.0     \nprompt-toolkit    2.0.7     \nptyprocess        0.6.0     \npycparser         2.19      \nPygments          2.2.0     \npyodbc            4.0.24    \npyOpenSSL         18.0.0    \npyparsing         2.3.1     \npyrsistent        0.14.9    \nPySocks           1.6.8     \npython-dateutil   2.7.5     \npytz              2018.7    \npyzmq             17.1.2    \nrequests          2.21.0    \nscipy             1.2.0     \nSend2Trash        1.5.0     \nsetuptools        40.6.2    \nsix               1.11.0    \nstatsmodels       0.9.0     \nStringDist        1.0.9     \nterminado         0.8.1     \ntestpath          0.4.2     \ntoolz             0.9.0     \ntornado           5.1.1     \ntraitlets         4.3.2     \nurllib3           1.24.1    \nvega-datasets     0.7.0     \nwcwidth           0.1.7     \nwebencodings      0.5.1     \nwheel             0.32.3",
            "Hi,\nthat's how you do it:\n>>> holidays.US(years=2019).items()\n[(datetime.date(2019, 7, 4), 'Independence Day'), (datetime.date(2019, 2, 18), \"Washington's Birthday\"), (datetime.date(2019, 12, 25), 'Christmas Day'), (datetime.date(2019, 11, 28), 'Thanksgiving'), (datetime.date(2019, 5, 27), 'Memorial Day'), (datetime.date(2019, 1, 1), \"New Year's Day\"), (datetime.date(2019, 9, 2), 'Labor Day'), (datetime.date(2019, 10, 14), 'Columbus Day'), (datetime.date(2019, 1, 21), 'Martin Luther King, Jr. Day'), (datetime.date(2019, 11, 11), 'Veterans Day')]\n\nas explained here https://github.com/dr-prodigy/python-holidays#more-examples\nCheers!",
            "Thanks very much."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/180",
        "title": "Spanish Regions Codes",
        "count": 1,
        "turns": [
            "Hi, I really love the project.\nI have found that the nomenclature of the regions of Spain do not follow the ISO 3166-2 standard. I was thinking about changing it, but I don't know whether to maintain compatibility with the current names or not. What is preferred?\nBest regards and thank you for your time.",
            "Hi,\nthank you very much!\nI would surely suggest to add support for Spanish ISO codes, aside to the currently supported codes, so to keep \"the best of both worlds\" ;-)\nIf you could implement this, I'd surely include it in the next releases.\nThx a lot, KUTGW!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/169",
        "title": "Support Holidays in Russia",
        "count": 0,
        "turns": [
            "No description provided."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/167",
        "title": "Easter Sunday and Whit Sunday are holidays in BB",
        "count": 0,
        "turns": [
            "The issue https://github.com/dr-prodigy/python-holidays/issues/110 is not correct.\nEaster Sunday (Ostersonntag) and Whit Sunday (Pfingstsonntag) are Holidays only in BB (Berlin-Brandenburg). For HE (Hessen) every Sunday is a holiday.\nhttps://de.wikipedia.org/wiki/Gesetzliche_Feiertage_in_Deutschland"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/165",
        "title": "2 Missing Dates in Germany",
        "count": 2,
        "turns": [
            "So the 24th and 31st december are afternoon-only holidays in Germany. Though most people take half-days off there anyway. In our case we use this for opening times of doctor's offices and the 24th and 31th december are closed times.\nCould a GermanyExt be added similar to PortugalExt? Or could they even be added to Germany entirely?\nI don't entirely know why they're missing, it seems intentional, hence me asking.",
            "They are not even afternoon-only holidays, they are regular working days by the law. However, most companies let their employees go home the afternoon for free (or, rather have them only spend half a day of vacation for each of the days).",
            "Sorry for my late answer.\nThank you both for your contributions. Given this, I'm going to close the issue.\n@Achimh3011 , thanks again for your always prompt and valuable interventions.. tchuss!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/163",
        "title": "queen birthday in WA, AU is wrong",
        "count": 2,
        "turns": [
            "Queen birthday is on last Monday of September.\nline 1911 in holidays.py",
            "Hi,\nif possible, I would kindly ask you to implement the changes and tests, and pack them in a PR: I'll surely be merging it in the next release.\nThank you very much, cheers",
            "Already fixed. Closing"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/162",
        "title": "public holiday returning false even when I can see it in print command",
        "count": 3,
        "turns": [
            "here is my print command output for NSW, AU showing that 1st Oct,2018 is Labour day public holiday.\nBut when you try to print if it is public holiday, it return false.\nSame for queen birthday holiday.\n>>> au_holidays = holidays.AU(prov='NSW')\n>>> print('1-10-2018' in au_holidays)\nFalse\n>>> print('11-6-2018' in au_holidays)\nFalse\n>>> print(au_holidays)\n{datetime.date(2018, 1, 1): \"New Year's Day\", datetime.date(2018, 1, 26): 'Australia Day', datetime.date(2018, 3, 30): 'Good Friday', datetime.date(2018, 3, 31): 'Easter Saturday', datetime.date(2018, 4, 1): 'Easter Sunday', datetime.date(2018, 4, 2): 'Easter Monday', datetime.date(2018, 4, 25): 'Anzac Day', datetime.date(2018, 6, 11): \"Queen's Birthday\", datetime.date(2018, 10, 1): 'Labour Day', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2018, 12, 26): 'Boxing Day'}",
            "I just tried for VIC. Same issue.\n3-12-2018 (3 dec) is showing as true instead of 12-3-2018(12 march).\nAnd 6/11/2018 and 11/6/2018 both are coming as public holidays.\n>>> au_holidays = holidays.AU(prov='VIC')\n>>> print('11-6-2018' in au_holidays)\nTrue\n>>> print(au_holidays)\n{datetime.date(2018, 1, 1): \"New Year's Day\", datetime.date(2018, 1, 26): 'Australia Day', datetime.date(2018, 3, 30): 'Good Friday', datetime.date(2018, 3, 31): 'Easter Saturday', datetime.date(2018, 4, 2): 'Easter Monday', datetime.date(2018, 4, 25): 'Anzac Day', datetime.date(2018, 6, 11): \"Queen's Birthday\", datetime.date(2018, 3, 12): 'Labour Day', datetime.date(2018, 9, 28): 'Grand Final Day', datetime.date(2018, 11, 6): 'Melbourne Cup', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2018, 12, 26): 'Boxing Day'}\n>>> print('11-6-2018' in au_holidays)\nTrue\n>>> print('6-11-2018' in au_holidays)\nTrue\n>>> print('12-3-2018' in au_holidays)\nFalse\n>>> print('3-12-2018' in au_holidays)\nTrue",
            "Hi isha1111, thank you for your support and interest in the prj.\nGenerally speaking, you are experiencing issues due to how you initialize dates from strings.\nMore specifically, to avoid day/month inversions, you'd better stick to the format:\nyyyy-mm-dd\nwhich is always recognized. You should get correct results then.\nPlease let me know, thank you",
            "Okay cool.\nActually in 2018, 6-11-2018 and 11-6-2018 both were public holidays that got me confused."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/161",
        "title": "WA day not correct in AU",
        "count": 1,
        "turns": [
            "WA day is on the first Monday of June and not on 1st June.",
            "Hi,\nthis is relevant code:\n        if self.prov == 'WA' and year > 1832:\n            if year >= 2015:\n                name = \"Western Australia Day\"\n            else:\n                name = \"Foundation Day\"\n            self[date(year, JUN, 1) + rd(weekday=MO(+1))] = name\n\nwhich returns correct results for Western Australia province.\nPlease double-check and close this issue if everything makes sense to you too, thank you."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/160",
        "title": "England holidays",
        "count": 5,
        "turns": [
            "Hi,\nLove the project.\nWould it be possible to get an abbreviation for England, or provinces for UK?\nI'm using your project as a workday/holiday sensor in my Home Assistant install, as shown here.\nCurrently I believe it is getting all UK holidays, some of which are not relevant in England (i.e. Scotland, Wales and N. Ireland have some different public holidays).\nIt would be awesome if I could narrow it down to only get holidays for England to prevent any issues with my Home Assistant automations.\nCheers.",
            "Hi,\nthank you very much for your support and interest in the project. Yours is a very nice one too üëç\nI had a look at UK implementation (which was done in the very early days of the prj, while I was not involved), and possibly found what you're looking for.\nIn particular, you can initialize holidays using:\nholidays.UK() or holidays.UnitedKingdom() => holidays for all provinces\nor\nholidays.England()\nholidays.Scotland()\nholidays.IsleOfMan()\nholidays.Wales()\nholidays.NorthernIreland()\nholidays.Ireland() # (of course IE is not in the UK, but it's probably been put in the list to simplify things)\n\n=> holidays only for requested province\nPlease let me know if this covers your needs, thank you very much",
            "Hi,\nI did see that issue before, I should've mentioned that to make my request more clear!\nUnfortunately I don't think that method is a possibility for me, as outlined here it's only possible to specify the country abbreviation from the module that has been included in Home Assistant.\nPlease correct me if I'm wrong, I'm unfamiliar with Python and not that experienced with HA as I've only started using it recently!\nAs I'm writing this, I'm thinking I probably should have opened an issue on the Home Assistant project instead.\nSorry if this is a pain for you. Let me know what you think.\nCheers.",
            "Hi,\nsorry for late answering!\nThus probably not completely intuitive, you can provide any state description (both full or shortened, indistinctly) to CountryHoliday(...) method, like here:\nmy_holidays = holidays.CountryHoliday('Wales')\nGiven this, you should be able to provide any of those state names (yep, they're not provinces!) in your configuration.yaml, like this:\nExample configuration.yaml entry\nbinary_sensor:\n\nplatform: workday\ncountry: England\nworkdays: [mon, wed, fri]\n\nPlease let me know, cheers",
            "Hi @tigattack ,\nnot hearing from you in the last month, I assume this issue has been resolved.\nPlease let me know, in case of no news I'll be closing it in some days.\nThank you very much",
            "Solved :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/159",
        "title": "Easter sunday is holiday in VIC, QLD, ACT in AU",
        "count": 2,
        "turns": [
            "in file python.py , line 1871\nif self.prov == 'NSW':\n            self[easter(year)] = \"Easter Sunday\"\n\n\nCan you please ACT, VIC, QLD states as well. As they also consider easter sunday as public holiday. Thanks",
            "Hi,\nif possible, I would kindly ask you to implement the changes and tests, and pack them in a PR: I'll surely be merging it in the next release.\nThank you very much, cheers",
            "Fixed in 64d2366"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/156",
        "title": "Grand final day no holiday in VIC, AU",
        "count": 1,
        "turns": [
            "Grand final day is not coming as a holiday in Victoria, Australia",
            "Thanks for your contribution: I added this on beta branch."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/155",
        "title": "Columbus Day no holiday in AR?",
        "count": 1,
        "turns": [
            "Hi,\nI'm retrieving holidays for Arkansas and it shows that Columbus day is a holiday, e.g.:\nimport holidays\nus_holidays = holidays.CountryHoliday('US', state='AR')\nus_holidays.get('2021-10-11') -> 'Columbus Day'\n\nIs this true? According to my quick research (please note I'm not from the US, so I might confuse something), it isn't:\n\nhttps://www.officeholidays.com/countries/usa/regional.php?list_year=2018&list_region=Arkansas\nhttps://www.employmentlawhandbook.com/leave-laws/state-leave-laws/arkansas/holidays/\n\nThank you.",
            "Hi,\nthank you for your contribution.\nYour analisys seems correct: I've just released a fix on beta branch.\nThank you very much, cheers"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/152",
        "title": "TypeError: Canada Holiday",
        "count": 1,
        "turns": [
            "https://github.com/dr-prodigy/python-holidays/blob/7d9c4ed98bfb90f01d1278c9bd9b7d591c70a5b8/holidays.py#L578\nTypeError: 'in ' requires string as left operand, not NoneType\nit should be elif self.prov == 'NS' and year >= 2015:\nAlso on https://github.com/dr-prodigy/python-holidays/blob/7d9c4ed98bfb90f01d1278c9bd9b7d591c70a5b8/holidays.py#L581\nand possibly other places",
            "It should be fixed now on beta.. please let me know.\nThx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/148",
        "title": "Confusion around Australian holidays",
        "count": 2,
        "turns": [
            "In my particular use case, I'd like to show all the holidays for all states of Australia (referred to as provinces in this project) on a calendar, as we have staff working across the country. I know it's possible to add a number of Holiday base classes together, but we then lose the ability to know which holiday is for which state - especially since a holiday can have the same name but is held on a different date depending on the state.\nAdditionally, if I was to call the Australia class, my expectation would be to get all the national holidays and not additionally the ACT holidays. In my mind the default behaviour should be that we get given state/province specific holidays only when we need/request them.\nTo combat this, I'd suggest the following:\n\nWhen adding different holiday classes together, they are appended with information about the state/province each holiday is for (eg Labour Day (ACT, NSW, SA))\nDropping the default for countries provinces so that, like the US, a specific state can be requested when needed but otherwise only national holidays are returned by default\n\nI'm happy to try and produce a PR that will achieve the first point - when I get a moment - if it's a direction the maintainers think would be useful.",
            "Hi @jameskirsop ,\nthank you very much for your contribution.\nI surely can see your points, and they make good sense to me too.\nWhat I feel important is to avoid / reduce at min any incompatibility with previous versions, but as long as your code is respectful about this (it seems quite so), I will for sure merge your PR.\nNOTES\n\nI maybe wrong but, if I catch your idea well, it will take quite an extensive work to achieve point 1, due to how provincial holidays are appended to national ones (ie: only the selected prov holidays are considered, so the other ones are not available in any way at runtime).\nPoint 2 changes lib's default behaviour a little (warn), but in a way which is surely preferable and more precise ( => ok), so I don't have any objections on it.\n\nIf you consider providing your work on these upgrades, please go on and I will be glad to release it.\nThank you very much again, cheers!",
            "Closing this issue until a PR comes out .. thx ;-)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=14&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/145",
        "title": "Please, add Russian holidays",
        "count": 1,
        "turns": [
            "No Russia :( Please add.",
            "No Russia? Please contribute! :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/139",
        "title": "Country list",
        "count": 5,
        "turns": [
            "Are you interested of holidays for more countries?  I can provide Cyprus",
            "Of course: all contributions are welcome!\nIn case you work to add a new country, please remember to:\n\nrun flake8 checks about PEP8 compliance\nprovide unit tests for all your new code (we expect to maintain 100% code coverage)\n\nThank you very much, best regards",
            "Hi.\nI am for from a programmer so what I can do is to provide a list of all\nholidays in Cyprus.  Unfortunately I cant help with something else\n\nAnders\n‚Ä¶\nOn Wed, 10 Oct 2018, 16:15 Maurizio Montel, ***@***.***> wrote:\n Of course: all contributions are welcome!\n\n In case you work to add a new country, please remember to:\n\n    - run flake8 checks about PEP8 compliance\n    - provide unit tests for all your new code (we expect to maintain 100%\n    code coverage)\n\n Thank you very much, best regards\n\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#139 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/Ap_EEWgBCA7s5lC5KgOt8q0tF-w-_nZwks5ujfLWgaJpZM4XVJIn>\n .",
            "Hi,\nin my experience we should be able to find holidays for any country quite easily on the web so, unless your pages are very specific / very well documented, you could avoid worrying about this.\nIn case no code contribution is provided, addition of new countries (such as Cyprus or any other) will be developed when possible.\nThank you very much, best regards",
            "If you dont want the help I will ofc not give it. I just wanted to make the\nworkday sensor usable also for us on Cyprus.\n‚Ä¶\nOn Wed, Oct 10, 2018 at 5:10 PM Maurizio Montel ***@***.***> wrote:\n Hi,\n in my experience we should be able to find holidays for any country quite\n easily on the web so, unless your pages are very specific / very well\n documented, you could avoid worrying about this.\n\n In case no code contribution is provided, addition of new countries (such\n as Cyprus or any other) will be developed when possible.\n\n Thank you very much, best regards\n\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/139#issuecomment-428587048>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/Ap_EEdud8X7pMvd-Zh7XYa0tjccD9b9Sks5ujf_NgaJpZM4XVJIn>\n .\n\n\n-- \nKind Regards\n\nAnders Yuran\n\nHavouza 15\n4607 Pissouri\nCyprus",
            "Hi,\nI haven't said we don't want your help: as stated, apart from very specific cases, it's not really difficult to obtain information about country holidays all over the world, so unfortunately your proposed work wouldn't be of so much help.\nCurrently we cover 38 countries out of nearly 200 existing in the world (so, not a small number, but still very far from completion).\nIt goes without saying that, if no code contribution is provided, any of these missing 162 countries will share the same priority, so we can't \"promise\" any specific country implementation, especially in a short time.\nI hope this makes sense to you; I'm closing this issue.\nThanks all the same for your interest."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/128",
        "title": "setting state/province using CountryHoliday",
        "count": 4,
        "turns": [
            "Assuming that, CountryHoliday is used as described in the README and the country is not know until runtime (e.g. it is read from a config or user input):\nimport holidays\n\ncountry = \"DE\"  # from sys.argv, for example\nch = holidays.CountryHoliday(country)\nThis of course yields a perfectly fine instance. The problem comes up when the state or province is also relevant. Since CountryHoliday returns an instance, there is no way to add a state, which is set using the constructor.\nA couple of workarounds:\n\nuse type() or .__class__ to get the class; create a new instance\nuse getattr(holidays, country) to get the class directly, skips the nice error handling\n\nNeither of those seem like a sleek and easy to understand solution to me.\nTo resolve this, I propose that all keyword arguments to CountryHoliday should be passed onto the class, like so (omitting error handling):\ndef CountryHoliday(country, **kwargs):\n    country_holiday = globals()[country](**kwargs)\n    return country_holiday\n\nholidays_de_he = CountryHoliday(\"DE\", prov=\"HE\")\nThis enables setting the state/province and of course all other options like expand or observed, even when using the very friendly CountryHoliday. The external API stays stable, since arguments are only added and the single existing one just stays in place.\nWhat do you think? :) I am happy to code up a quick PR including docs and a test, if you'd like.",
            "Hi,\nthanks for your very good analysis! üëç\nI totally agree with you: province / state initialization should find their place in CountryHoliday method as well.\nBut instead of providing **kwargs (not explicit parameters), I'd better like to see a clearer method signature (ie: thru optional parameters), such as\ndef CountryHoliday(country, prov='', state=''):\n    [...]\n\nOf course, go on coding if you like: I'll be glad to include this upgrade in the next releases.\nPlease let me know, thank you",
            "Thanks a lot for your contribution.. closing, cheers!",
            "@dr-prodigy Thanks :) do you know when this will be released?",
            "Hi.. nope, not yet: not having a real release scheduling, I usually pile up some updates on beta branch, then when they're a considerable amount (no specific rule about this: it's just up to my sense), I \"pour\" them on master and release a new official version to github and pypi.\nMeanwhile, if you can't wait, there's always the possibility to install the beta directly from the repo.\nAs much as possible, I always care about stability, test coverage etc. before committing any change, and I never apply refactorings which could break compatibility with previous code (even beta), so you should never have issues basing your solution on Holidays beta versions.\nPlease refer to:\nhttps://github.com/dr-prodigy/python-holidays#development-version\nThank you again, ciao! ;)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/127",
        "title": "Day after Thanksgiving is a holiday in CA",
        "count": 3,
        "turns": [
            "Day after Thanksgiving is a holiday in CA: https://www.dmv.ca.gov/portal/dmv/detail/about/holidays",
            "In fact, it appears to be one in a number of US states: https://www.officeholidays.com/countries/usa/black_friday.php",
            "Hi, thank you.\nDay after TG is already managed in the lib for a lot of US states (but, as you stated, not currently for CA).\nUnfortunately, in your links I can't find since when it's been holiday, and if it is going to remain like this in the future.\nWould you please integrate your issue with these data?\nThank you very much",
            "Ping.."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/126",
        "title": "Multi-locale support",
        "count": 7,
        "turns": [
            "Hello there!\nAs long as the library provides verbose human-readable pieces of text (names of holidays), it would make a lot of sense to make that locale-aware. It is especially relevant for countries that have several official languages (like Switzerland, Canada or Belarus).\nI see the simplest implementation as adding another parameter to HolidayBase.__init__  as well as the respective get() and its variations.\n>>> h = holidays.Canada()\n>>>  h.get('2018-09-03')\nLabour Day\n\n>>> h.get('2018-09-03', locale='fr_CA')\nF√™te du travail\n\nWould love to hear if that sounds reasonable...\nThank you!",
            "Well it sure is reasonable.. thank you!\nWe should theoretically complete this new feature by managing all multi-language countries.\nI will think of it and let you know ASAP.\nThanks again, best regards",
            "Hi there.. just completed a new release, so it's time to start thinking about next updates..\nCould you be possibly providing translations for all Belarus locales? In this case I would be able to implementing this new feature for it.\nThen, in the future next countries will hopefully come over..\nPlease let me know what you think, thanks in advance!",
            "Thanks for keeping this on the radar!\nSure, I'll be glad to provide the translations for Belarus. Shall I contribute to a branch where you implement multi-locale?",
            "Hi @Gennady-Andreyev ,\nsorry for being late..\nI have made some analysis on this subject: it seems it would take quite a large refactoring to achieve your (still good) proposal.\nI will try to start this so you can complete the work, but due to other priorities, I currently can't provide a precise scheduling.\nI'll let you know, thank you very much for your support!",
            "I'd just like to add my support for this feature. I'll happily translate Switzerland where a French, Italian, and possibly an English translation would be useful.",
            "Why, of course: if you want to contribute with this useful feature, I'll surely be glad to support you and include your work in the proj.\nThank you very much, KUTGW!",
            "Closing this issue until somebody will make some work on it ;-)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/123",
        "title": "Adding a Singapore Calendar",
        "count": 5,
        "turns": [
            "Similarly to what has been requested for Israel, Singapore public holidays are made of fixed dates (New Year, Labour day, National Day and Christmas). Other public holidays are \"religious\" celebrations taken from muslim, Hinddu and Buddhist calendars). These \"religious\" celebrations vary every year but the Ministry of Manpower in Singapore publishes the official public holidays with 1 year in advance (currently published are 2018 and 2019).\nThere is no accurate way to calculate (or I do not know it) what will be the dates for these religious holidays for 2020 and beyond. Which means that this library, if it is created will have to be updated at the beginning or every year.\nI have prepared a SG class covering 2018 and 2019. I could submit it but I will need some guidance as I am a newbie to all this (Github, python,...)\nHere is the code:\n`# -- coding: utf-8 --\nclass Singapore(HolidayBase):\nPROVINCES = []\ndef __init__(self, **kwargs):\n    self.country = 'SG'\n    HolidayBase.__init__(self, **kwargs)\n\ndef _populate(self, year):\n# Singapore became independent on 9th August 1965\n    if year < 1965:\n        return\n\n    # New Year's Day\n    name = \"New Year's Day\"\n    jan1 = date(year, 1, 1)\n    self[jan1] = name\n    # If New year falls on Sunday, Monday becomes public Holiday\n    if self.observed and jan1.weekday() == 6:\n        self[date(year, 1, 2)] = name + \" (Observed)\"\n\n    # Chinese New Year\n    name = \"Chinese New Year (1)\"\n    if year == 2018:\n        self[date(year, 2, 16) = name\n    if year == 2019:\n        self[date(year, 2, 5) = name\n\n    # Chinese New Year\n    name = \"Chinese New Year (2)\"\n    if year == 2018:\n        self[date(year, 2, 17) = name\n    if year == 2019:\n        self[date(year, 2, 6) = name\n\n    # Good Friday\n    self[easter(year) + rd(weekday=FR(-1))] = \"Good Friday\"\n\n    # Labour Day\n    name = \"Labour Day\"\n    # Started being celebrated in 1960 after People Action Party went into power\n    # Reference Wikipedia (Labour Day Singapore)\n    if year >= 1960:\n        self[date(year, 5, 1) = name\n    # if Labour day falls on a Sunday, Monday is observed\n    if self.observed and may1.weekday() == 6:\n        self[date(year, 5, 2)] = name + \" (Observed)\"\n\n    # Vesak Day\n    name = \"Vesak day\"\n    if year == 2018:\n        self[date(year, 5, 29) = name\n    if year == 2019:\n        self[date(year, 5, 19) = name\n\n    # Hari Raya Puasa\n    # End of Ramadan\n    name = \"Hari Raya Puasa\"\n    if year == 2018:\n        self[date(year, 6, 15) = name\n    if year == 2019:\n        self[date(year, 6, 5) = name\n\n    # National Day\n    if year > 1965:\n        name = \"National Day\"\n        aug9 = date(year, 8, 9)\n        self[feb6] = name\n    # if National day falls on a Sunday, Monday is observed\n        if self.observed and year >= 1965 and aug9.weekday() == 6:\n            self[date(year, 8, 10)] = name + \" (Observed)\"\n\n    # Hari Raya Hadji\n    # First day of muslim pilgrimage to Mecca\n      name = \"Hari Raya Hadji\"\n      if year == 2018:\n          self[date(year, 8, 22) = name\n      if year == 2019:\n          self[date(year, 8, 11) = name\n\n    # Deepavali\n      name = \"Deepavali\"\n      if year == 2018:\n          self[date(year, 11, 6) = name\n      if year == 2019:\n          self[date(year, 10, 27) = name\n\n    # Christmas Day\n    name = \"Christmas Day\"\n    dec25 = date(year, 12, 25)\n    self[dec25] = name\n    # if Christms day falls on a Sunday, Monday is observed\n    if self.observed and dec25.weekday() == 6 :\n        self[date(year, 12, 26)] = name + \" (Observed)\"\n\nclass SG(Singapore):\npass\n`",
            "Hi,\nthank you for your work.\nUnfortunately, IMHO, a good library (or sw in general) is supposed to work as-is for a reasonable time (say: 10 years at least?) with no need for mandatory upgrades (which could instead be applied in case of bug fixing or more functionalities added / needed).\nMoreover, a future release could, for other reasons, break compatibility with previous versions: this would impose code refactoring to anyone using it, only to keep it working from a year to the next.\nFor these reasons, I have to say that this approach (ie: impose a new release every year to include new year's data) is not acceptable in the official version.\nBut, of course, we still can receive logic for all the fixed and known holidays.\nThen, I would suggest you to:\n\ncreate your own fork of the library\nadd and commit your code there\nso you can play around and test everything with no harm and, when you're done, we will be able to separate and include the compliant part of the code in the mainstream.\n\nThis way (which, btw, is the \"standard\" :) ) you still can stick to your custom version if the official library doesn't cover all your needs.\nThank you very much, best regards",
            "Hi\nThank you for your quick answer. I understand your point (work as-is for a reasonable time).\nIf I create my own fork, will I be able to use it for the works I do in my home automation (Home Assistant binary_sensor.workday_sensor)? (This is my main objective in trying to build this \"Singapore\" Class).\nI will follow your recommendation anyway and try my best to come out with something viable.\nBest regards",
            "The 10+ years stability will not work with other holidays as well (e.g., the newly introduced \"Reformationstag\" holiday in Germany (single occurence holiday for entire Germany with one year lead time, newly set up holiday in parts later on).\nGiven that, definition of holidays two years in advance does not sound so bad...\nI think it's important to be clear with what users can expect from the library and that holidays are a moving (sometimes even fast moving) target.",
            "I see the point, but - still - an exception can't become rule.\nAs a maintained library, python-holidays - of course - will always try to reflect any change that will occur in the future.\nOn the other hand, it must be up to the user whether to update or not, which means, among other assumptions, it won't impose cadenced updating to remain operational.\nIn other words, every version released aims to be a \"final\" version (even if of course, it won't be).\nAs I already explained in a direct email to @popsyann, a good approach to these use cases would be to integrate external services providing the required data as soon as they become available (ie: consume some holiday web service) but, being an impacting and disruptive modification, at least for now, we must consider it out of scope.",
            "PS @popsyann : of course, you will be able to use your library fork if needed, either installing it manually with a \"git clone ..\" or, if using virtualenv or similar, also adding your repo to project through requirement files.\nSome info here:\nhttps://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source\nPlease keep me updated, thx!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/122",
        "title": "Adding Israeli holidays",
        "count": 1,
        "turns": [
            "I'd like to suggest adding Israeli holidays.\nNote that Israel has a few different calendars for holidays: they are not different between states (no states in Israel) but rather between religions: Jewish, Christian and Muslim holidays are all different.\nFurthermore, they don't all follow the Georgian calendar. Libraries such as pyluach might be convenient in implementing these holidays.\nI will try to address the issue, and update accordingly.",
            "Hi,\ncontributions are welcome!\nI'll be waiting for yours, thank you very much"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/120",
        "title": "Is there a way to get school vacation ?",
        "count": 1,
        "turns": [
            "Days off are great, but holidays may also be understood as school vacation. did someone already spend some time on this topic ?",
            "Hi,\nthank you.\nNope. Unfortunately I think it's not feasible, because school days (and vacations) are set on year basis with no specific logic."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/119",
        "title": "Push archive of 0.9.6 to PyPI",
        "count": 2,
        "turns": [
            "Could you please push 0.9.6 as archive to PyPI? At the moment only the .egg is available.\nThanks.\nIs required by home-assistant/core#15831",
            "Thank you for your issue reporting: I've just released 0.9.6 with tar.gz format.\nPls let me know, thanks",
            "Works.\nThanks again for your fast reaction."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/117",
        "title": "Not able to access Indian Holidays",
        "count": 4,
        "turns": [
            "I am trying to run holidays.IND() for Indian Holidays but it is showing me following error:\nAttributeError                            Traceback (most recent call last)\n in ()\n----> 1 holidays.IND()\nAttributeError: module 'holidays' has no attribute 'IND'\nplease suggest any solution for this.",
            "Hi,\nunfortunately, indian holidays still have to be released in PyPi lib release.\nEither wait for the current source version to be released in PyPi, or use it through sources (which already contain indian holidays implementation).\nThanks",
            "Just released v.0.9.6 to pypi. Thanks",
            "Thanks.\n‚Ä¶\nOn Thu, Aug 2, 2018 at 3:15 AM, Maurizio Montel ***@***.***> wrote:\n Just released v.0.9.6 to pypi. Thanks\n\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <https://github.com/dr-prodigy/python-holidays/issues/117#issuecomment-409734561>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AhtXvdOGOMfhXaurrq01UVzjZzVD8Debks5uMiFqgaJpZM4VhTZB>\n .",
            "Hi,\nI am getting similar error when I run the following\nfrom datetime import date\nimport holidays\nuk_holidays = holidays.UnitedKingdom()\nfor ptr in holidays.UnitedKingdom(years = 2020).items():\nprint(ptr)\nError: AttributeError: module 'holidays' has no attribute 'UnitedKingdom'\nMay you please advise on a solution"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/115",
        "title": "Holidays for state BW in Germany are missing (?)",
        "count": 3,
        "turns": [
            "Hi,\nthanks for coming up with this nice package, I am using 0.9.5 from Debian :-)\nI just realized, that the holidays for BW in Germany are incomplete:\nimport holidays\n        \nbw_holidays = holidays.DE(state='BW',years=2018)\n\nfor date, name in sorted(bw_holidays.items()):\n    print(date, name)\n\n\nresults in\n\nrd@b370:~$ python3 test-holidays.py \n2018-01-01 Neujahr\n2018-03-30 Karfreitag\n2018-04-02 Ostermontag\n2018-05-01 Maifeiertag\n2018-05-10 Christi Himmelfahrt\n2018-05-21 Pfingstmontag\n2018-10-03 Tag der Deutschen Einheit\n2018-12-25 Erster Weihnachtstag\n2018-12-26 Zweiter Weihnachtstag\nrd@b370:~$ \n\nA full list is give e.g. here:\nhttps://www.schulferien.org/Feiertage/Feiertage_Baden_Wuerttemberg.html",
            "I just realized that I need\nholidays.DE(prov='BW',years=2018)\nNot sure what is the exact difference, but this gives a correct result:\nrd@b370:~$ python3 test-holidays.py \n2018-01-01 Neujahr\n2018-03-30 Karfreitag\n2018-04-02 Ostermontag\n2018-05-01 Maifeiertag\n2018-05-10 Christi Himmelfahrt\n2018-05-21 Pfingstmontag\n2018-10-03 Tag der Deutschen Einheit\n2018-12-25 Erster Weihnachtstag\n2018-12-26 Zweiter Weihnachtstag\nrd@b370:~$ \n\nThe bugreport should than be rather clarify difference between state and prov (?)",
            "State code is currently used for United States only, while single states (such as Germany) are divided into provinces (in some states this definition may be not totally exact, but should be acceptable as a generic name for districts / departments / etc.).\nI'll try to clarify this in README.rst, thanks",
            "Done, thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/114",
        "title": "Canada Day vs. Dominion Day",
        "count": 2,
        "turns": [
            "You currently report Canada Day as being valid all the way back to 1867, but before 1983, the holiday was called \"Dominion Day\".\nAlso, it was not a statutory holiday until 1879, which means there should be no \"(Observed)\" version of Dominion Day before 1879.",
            "Okay, all clear.. will fix it in next release.\nI assume these considerations are valid both for NL province (whose holiday is currently named \"Canada Day\") and for other provinces (whose holiday is named \"Memorial Day\").\nHope this makes sense: please let me know, otherwise we'll rearrange code consequently.\nThank you",
            "Released in v.0.9.6. Thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/113",
        "title": "pull date range",
        "count": 5,
        "turns": [
            "Hi\nI am a newbie to this library and I tried to find the holidays in a date range that started from date A to date B in Canada.\nfor example, this is what I would do with the U.S. holidays:\nfrom pandas.tseries.holiday import USFederalHolidayCalendar as calendar\ncal = calendar()\nholidays = cal.holidays(start='05-13-2014, end=05-13-2016)\nprint(holidays)\nI would appreciate if you help me with that.\nRegards",
            "I solved the problem outside. But it could be a nice function for the library.\ndef holidays_from_range(lower_date, upper_date, prov):\n    # smallest and biggest year\n    smallest_year = lower_date.year\n    biggest_year = upper_date.year\n    # list_holidays has all holidays\n    list_holidays = sorted(holidays.CH(prov=prov, years=range(smallest_year, biggest_year+1)))\n    df_holidays = pd.DataFrame(index=list_holidays)\n    # return just the holidays between lower- and upper-date\n    df_holidays = df_holidays[lower_date:upper_date]\n    ls_holidays = []\n    for row_index, row in df_holidays.iterrows():\n        ls_holidays.append(row_index.strftime('%Y%m%d'))\n    return ls_holidays",
            "I will release this solution after some more analysis: thank you very much for your contribution.",
            "Hey @dr-prodigy I've got an idea to tackle this, mind if I take a shot and get some feedback if you haven't had a chance to get started?",
            "Hey elln2,\nin fact unfortunately I couldn't work on this until now, but still it's an interesting feature.\nSo, of course, I'll surely be happy to consider/include your work, if you want to contribute in any way.\nThank you very much, cheers!",
            "Thank you very much for your contribution @elln2 .. much appreciated! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/112",
        "title": "Add support for Singapore country",
        "count": 2,
        "turns": [
            "Add support for new country: Singapore\nhttp://www.mom.gov.sg/newsroom/press-releases/2017/0405-singapore-public-holidays-2018",
            "A potential way to implement this differently could be using Holiday API, but this might be a better feature for Hassio repository maybe.",
            "If you could contribute with your help I would surely apply to integrating your code in the project mainstream ASAP.\nYour contribution is much appreciated, thank you very much."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/111",
        "title": "Bu√ü- und Bettag was a Germany-wide holiday from 1990-1994",
        "count": 2,
        "turns": [
            "Hi,\nfrom 1990 until 1994, Bu√ü- und Bettag was a Germany-wide holiday after which it was removed except for federal state Saxonia (prov == 'SN'). python-holidays` incorrectly lists it as a Saxonia-specific holiday from 1990 onward.\nhttps://en.wikipedia.org/wiki/Bu%C3%9F-_und_Bettag#As_a_statutory_non-working_holiday\nhttps://de.wikipedia.org/wiki/Bu%C3%9F-_und_Bettag#Abschaffung",
            "Okay, will be fixed in next release, thank you",
            "Fixed in just released v.0.9.6. Thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/110",
        "title": "Easter Sunday is a holiday in all of Germany, not only in Brandenburg.",
        "count": 2,
        "turns": [
            "For some reason I don't understand python-holidays only defines Easter Sunday for country == 'DE' as holiday in prov = 'BB' which I guess means Brandenburg. Easter Monday and Good Friday are (correctly) set up for entire Germany.\nI'm not aware of any special regulation in Brandenburg, so I'd say this is a bug. Of course, Easter Sunday is always a Sunday, so the consequences aren't that great from a work time perspective, but anyhow...\nP.S.: https://www.youtube.com/watch?v=kdwKbiMyvu0\nP.P.S: Same issue with Pentecost (Pfingstsonntag)...",
            "Thank you: it will be fixed in the next release.",
            "Released in v.0.9.6. Thank you"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/109",
        "title": "Push archive of 0.9.5 to PyPI",
        "count": 4,
        "turns": [
            "Please push 0.9.5 as archive to PyPI. Thanks.",
            "It's been already released on 23rd of April:\nhttps://pypi.org/manage/project/holidays/release/0.9.5/\nThanks.",
            "Yes, it has but only the .egg is available.",
            "Okay, now everything should be in place! Pls let me know, thank you!",
            "Works. At least for home-assistant/core#14274 üòâ\nThanks for your effort."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/108",
        "title": "Should province and state be synonyms?",
        "count": 3,
        "turns": [
            "Hi,\nshouldn't states and provinces be synonyms so that they can be used interchangeably?\nFor example, so that\nholidays.DE(state='BW') == holidays.DE(prov='BW') # True\nRegards,\nAchim",
            "Hi,\nfunctionally, states and provinces behave and work the same, in that you have specific holidays for a given state or province among all the ones belonging to a country.\nOn the other hand, \"state\" concept makes sense for, for instance, USA, but makes no sense in \"normal\" countries (ie: not federal union or similar), so it's correct to keep them separated.\nThank you regards\nMaurizio",
            "Hi Maurizio,\n\nIn case of Germany then, states should be permitted as it is a federal country. Thus, can you reopen the issue.\n\nBest regards,\nAchim\n\nAm 17. Apr. 2018, 13:30 +0200 schrieb Maurizio Montel <notifications@github.com>:\n‚Ä¶\n Hi,\n functionally, states and provinces behave and work the same, in that you have specific holidays for a given state or province among all the ones belonging to a country.\n On the other hand, \"state\" concept makes sense for, for instance, USA, but makes no sense in \"normal\" countries (ie: not federal union or similar), so it's correct to keep them separated.\n Thank you regards\n Maurizio\n ‚Äî\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or mute the thread.",
            "Okay, but in this case, for Germany we should move from provinces (as-is) to states, breaking compatibility with lib previous versions..\nAt the time this would carry more cons than pros, so we will consider this only in case of a remarkable refactoring.\nThank you very much"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/105",
        "title": "How register some strange holidays",
        "count": 3,
        "turns": [
            "Hello,\nI am working on Argentina Holidays, and I have an issue.\nIn addition to 'traditional holidays', we have some holidays named 'Non-work day' for some religions and 'Bridge holidays' or 'tourist holidays'. The last, is not fixed each year. How could I register this holidays?\nRegards!",
            "Well, there should be a way to \"predict\" those holidays.. or are they just defined at the beginning of each year?\nIf you can predict them, you should provide a complete algorithm to do so.. otherwise, I think they can't be supported..\nPlease let me know, thank you very much",
            "Thanks for your response.\nNo, they have not a \"logic\" depends of political decisions. You are right, this can not be supported.\nMaybe,  it would be interesting to have some way to make update of holidays by an api, or something similar, a way to update the holidays database, and don't have to modify the code to add a holiday.\nWhat do you think?\nBut for now, I close this issue.",
            "Well it sure would be an interesting upgrade..\nUnfortunately, python-holidays is a statically-installed standalone library (which is standard for any pip package, I would say) and theoretically it should work as-is, with no network connection, so it's not really easy to manage this new requirement remaining in scope..\nMoreover, we should have that API installed somewhere, and grant it will stay up&running for a sufficiently long time..\nWe'll see, thank you as for now! üëç"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/104",
        "title": "Is there a way to get dates of holidays in following years?",
        "count": 1,
        "turns": [
            "Is it possible to get dates of specific holidays in next few years? Like holidays.get_dates('Labor Day', next=5) will return the dates of labor day in next 5 years?\nThanks.",
            "No, currently there ain't such feature.. But I see the point: we will see if an implementation is feasible.\nThank you very much"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/100",
        "title": "Retrive calendar by country name/abbreviation",
        "count": 2,
        "turns": [
            "In many occasions the country for which we want to retrive the calendar is a parameter of the program/analysis itself so don't want to hardcode an infinite list of if ... elif.\nIs it possible to have a function like get_calendar(country), from which we can retrive a calendar class by passing a string with the country name/abbreviation?\nThanks",
            "It would be nice to have a simple way of doing this out of the box but this is also possible by dynamically loading the class you need:\nimport holidays\n\ncountry = 'US'\nCountryHolidays = getattr(holidays, country)\ncountry_holidays = CountryHolidays()",
            "Just done! Thx to both ;)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/90",
        "title": "Queen's birthday in AU/Queensland is wrong",
        "count": 0,
        "turns": [
            "Yes, we are bit odd state that we celebrate her birthday on a different date compared to all other Australian states, just like WA does.\nWe used to have same exact date up until 2012 (that we decided to celebrate twice) than turned back to normal for a few years. In 2016, we again decided that we could move her birthday to completely different month, first Monday of October (same as in 2012) and it remained permanent (so far).\nhttps://www.timeanddate.com/holidays/australia/queens-birthday\nPR will be provided within the cumulative merge #84."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/88",
        "title": "Include the Ekka show of Queensland AU",
        "count": 0,
        "turns": [
            "The Royal Queensland Show (known as Ekka)\n\nThe Show starts on the first Friday of August - providing this is not prior to the 5th - in which case it will begin on the second Friday.\n\nhttps://www.rna.org.au/about-us/ekka-dates-2013-2050.aspx\nSo the Wednesday during the show is a public holiday in our state.\nPR will be provided including a test."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/85",
        "title": "12th of October is a national day in Spain",
        "count": 1,
        "turns": [
            "12th of October is a national holiday in Spain.",
            "It currently reports \"D√≠a de la Hispanidad\""
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/77",
        "title": "CI build error: E722 do not use bare 'except'",
        "count": 1,
        "turns": [
            "Latest master is failing due to a new flake8 warning:\n$ flake8 holidays.py tests.py\nholidays.py:71:13: E722 do not use bare except'\n\nhttps://travis-ci.org/hugovk/python-holidays/jobs/294448964",
            "Fixed in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=15&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/75",
        "title": "October Bank Holiday in Ireland is wrong",
        "count": 1,
        "turns": [
            "In the code, it should be 10, not 8.\n # October Bank Holiday (last Monday in October) if self.country == 'Ireland': name = \"October Bank Holiday\" self[date(year, 8, 31) + rd(weekday=MO(-1))] = name",
            "Fixed in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/70",
        "title": "Missing Spanish Holiday",
        "count": 2,
        "turns": [
            "The national day of Spain seems to be missing from the holiday list. It is held every year on October 12.\n>>> import holidays\n>>> hd = holidays.ES()\n>>> hd.get('2016-10-12')\n\nMore information can be found on the Wikipedia page: https://en.wikipedia.org/wiki/Fiesta_Nacional_de_Espa%C3%B1a",
            "I added this as a pull request in #74. Just waiting for the merge! In the meanwhile, you can use my fork",
            "Merged in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/68",
        "title": "Reformationstag Germany",
        "count": 2,
        "turns": [
            "Reformationstag 31.10. is always a public holiday in Germanys state Brandenburg (BR)\nFurthermore in 2017 it is a public holiday in all states (500. Anniversary of Martin Luthers 95 Thesis)",
            "Brandenburg is BB and not BR and BB is already in the list. The 2017 issue is correct though.",
            "Fixed in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/63",
        "title": "12 July 2017 is a holiday in UK",
        "count": 10,
        "turns": [
            "Why is today holiday in uk?\nif datetime.date.today() in holidays.UK():\n        print('UK holiday')",
            ">>> holidays.UK()[datetime.date.today()]\n'Battle of the Boyne [Northern Ireland]'\nHowever, it seems to concern only Northern Ireland.",
            "Thanks for the explanation. Is there a \"UK Bank Holiday\" equivalent?",
            "There's quite a few which are only for Northern Ireland or Scotland. I think all the England and Wales ones are also holidays in NI and Scotland.\nhttps://www.gov.uk/bank-holidays\nPerhaps the home nations should be added for the UK as \"Provinces/States Available\"?\nhttps://github.com/ryanss/python-holidays#available-countries",
            "From the code, it seems like that by design. Not really sure if it's correct or not anyway! What do you think?",
            "Use holidays.England() for UK Bank Holidays.  I've checked this against https://www.gov.uk/bank-holidays",
            "This is a bug.\nThis particular holiday should only be in holidays.NorthernIreland().",
            "Or rather, this is by design.\n>>> import holidays\n>>> for date, name in sorted(holidays.UK(years=2018).items()):\n...     print(date, name)\n...\n2018-01-01 New Year's Day\n2018-01-02 New Year Holiday [Scotland]\n2018-03-30 Good Friday\n2018-04-02 Easter Monday [England, Wales, Northern Ireland]\n2018-05-07 May Day\n2018-05-28 Spring Bank Holiday\n2018-08-06 Summer Bank Holiday [Scotland]\n2018-08-27 Late Summer Bank Holiday [England, Wales, Northern Ireland]\n2018-11-30 St. Andrew's Day [Scotland]\n2018-12-25 Christmas Day\n2018-12-26 Boxing Day\n>>>\nSee https://github.com/dr-prodigy/python-holidays/issues/40 for details.\nIf the holiday has square brackets, you'll need to check the country you're interested in is mentioned.\nOr you can check holidays.England() or whichever ones you're interested in.",
            "@hugovk : how should we manage this?",
            "Well, at the moment it is working as designed, as detailed in #40.\nIf that's fine for everyone then this can be closed.",
            "Okay, that's what I wanted to hear.. ;)\nThx mate!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/59",
        "title": "Black Friday/Cyber Monday",
        "count": 1,
        "turns": [
            "Did you not include these on purpuse ? i dont mind writing a pull request and fix it",
            "Indeed, they're not to be included in bank holidays."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/58",
        "title": "in Colombia 2017 don't show the  \"A√±o Nuevo [New Year's Day]\"???",
        "count": 2,
        "turns": [
            "for date, name in sorted(holidays.CO(years=2017).items()):\nprint(date, name)\n?????\n2017-01-09 D√≠a de los Reyes Magos Epiphany\n2017-03-20 D√≠a de San Jos√© Saint Joseph's Day\n2017-04-13 Jueves Santo [Maundy Thursday]\n2017-04-14 Viernes Santo [Good Friday]\n2017-05-01 D√≠a del Trabajo [Labour Day]\n2017-05-29 Ascensi√≥n del se√±or Ascension of Jesus\n2017-06-19 Corpus Christi [Corpus\n.\n.\n.\non 2016 and 2018 appears ok\nthanks, good job",
            "According to code, New Year's Day is not considered as holiday when it falls in weekend.\nNot totally sure about this, but it makes some sense.\nPlease review this issue, thx!",
            "We can assume described behaviour is correct :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/56",
        "title": "Problem with travis?",
        "count": 3,
        "turns": [
            "It appears that there is a problem with the build configuration. pip install $DATEUTIL fails on Python 3.2 (and therefore also pypy3). This may be because pip>=8.0.0 no longer supports python 3.2.\nSee eg https://travis-ci.org/ryanss/python-holidays/jobs/232419470",
            "I imagine it would be easiest to drop Python 3.2, it's no longer supported.",
            "Here's a PR to drop Python 3.2: #78.",
            "Fixed in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/55",
        "title": "Add support for Swedish Holidays",
        "count": 1,
        "turns": [
            "Doing some googling the following could be used as data source:\nhttp://api.dryg.net/dagar/v2.1/YYYY, http://api.dryg.net/dagar/v2.1/YYYY/MM, http://api.dryg.net/dagar/v2.1/YYYY/MM/DD\nResult for 2017\n{\n  \"cachetid\": \"2017-05-10 14:05:17\",\n  \"version\": \"2.1\",\n  \"uri\": \"/dagar/v2.1/2017\",\n  \"startdatum\": \"2017-01-01\",\n  \"slutdatum\": \"2017-12-31\",\n  \"dagar\": [\n    {\n      \"datum\": \"2017-01-01\",\n      \"veckodag\": \"S√∂ndag\",\n      \"arbetsfri dag\": \"Ja\",\n      \"r√∂d dag\": \"Ja\",\n      \"vecka\": \"52\",\n      \"dag i vecka\": \"7\",\n      \"helgdag\": \"Ny√•rsdagen\",\n      \"namnsdag\": [],\n      \"flaggdag\": \"Ny√•rsdagen\"\n    },\n    {\n      \"datum\": \"2017-01-02\",\n      \"veckodag\": \"M√•ndag\",\n      \"arbetsfri dag\": \"Nej\",\n      \"r√∂d dag\": \"Nej\",\n      \"vecka\": \"01\",\n      \"dag i vecka\": \"1\",\n      \"namnsdag\": [\n        \"Svea\"\n      ],\n      \"flaggdag\": \"\"\n    },\n    {\n...\nDocumentation can be found at: https://api.dryg.net",
            "Support added in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/50",
        "title": "Add France Holidays",
        "count": 3,
        "turns": [
            "Could it be possible to include France national holidays?",
            "I made a pull request (#48) for that, feel free to contribute.",
            "Hello, in which milestone this feature will be available ? please",
            "Merged in 1452cc3"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/49",
        "title": "Brazilian national and state holidays",
        "count": 2,
        "turns": [
            "Could it be possible to include Brazilian national (federal) and state holidays? I am working on an app where I need to calculate odd workdays, that is single weekdays squeezed between holidays, or holiday and weekend. What I need for now is the federal + the state of Esp√≠rito Santo.",
            "Could you possibly implement it? Thank you very much, your help is much appreciated! ;)",
            "Okay, I'd say \"timeout expired\" for this request :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/45",
        "title": "can we get indian holidays also along with other countries in this list? ",
        "count": 2,
        "turns": [
            "No description provided.",
            "Could you possibly implement it? Thank you very much, your help is much appreciated! ;)",
            "Okay, I think this is no issue anymore.. :)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/40",
        "title": "UK Needs province",
        "count": 5,
        "turns": [
            "Currently the United Kingdom has no province/state member but there are different bank holidays between the countries that make up the UK.\nSpecifically with E=England, W=Wales, S=Scotland, N=Northern Ireland, R=Republic of Ireland & M=Isle of Man and with all holidays movable to the next working day in the case of not falling on a working day:\n\n1 January (New Year's Day) - EWSNRM\n2 January - S\n17 March (St Patrick's Day) - NR\nThe Friday before Easter Sunday (Good Friday) - EWSN M\nThe Monday after Easter Sunday (Easter Monday) - EW NRM\nFirst Monday in May[2][3] (May Day, Early May Bank Holiday) - EWSNRM\nLast Monday in May[4][5] (Spring Bank Holiday) - EWSN M\nFirst Monday in June (June Bank Holiday) - R\nFirst Friday in June (TT Bank Holiday) - M\n5 July (Tynwald Day) - M\n12 July (The Twelfth, Battle of the Boyne) - N\nFirst Monday in August (Summer Bank Holiday) - S R\nLast Monday in August (Late Summer Bank Holiday, August Bank Holiday) - EW N M\nLast Monday in October (October Bank Holiday) - R\n30 November (St Andrew's Day) - S\n25 December (Christmas Day) - EWSNRM\n26 December (Boxing Day, St Stephen's Day) - EWSNRM\n\nThe really confusing one is that if Christmas day falls on a weekend day it is move to the day after Boxing Day so that if the 25th is Saturday then Boxing Day will be moved from Sunday to Monday and Christmas Day will have a substitute day on the 28th.\nPlease consider adding these regions with their specific holidays to this tool",
            "I added the individual countries separately as they are countries and not provinces. If you could take a look at the new additions and let me know if you see any problems that would be terrific, thanks!\nholidays.England()\nholidays.Wales()\nholidays.Scotland()\nholidays.NorthernIreland()\nholidays.Ireland()\nholidays.IsleOfMan()",
            "Thanks for the quick response. The only problem is that while you are correct that all of them are individual countries they are also a part of the UK, (except Isle of Man, a self-governing crown dependency and the Republic of Ireland, no longer a part of the United Kingdom), so the entries for UK should either require a member state/country, possibly defaulting to England & Wales which will annoy some or do as diaries do and show them all with qualifiers on those that are not for all of England, Wales, Scotland, Northern Ireland & Isle of Man - some physical diaries include Eire or RoI so as to increase their distribution.\nMaybe if the constructor for UK were to have members for each of them, get the holidays for each of the member states and any that weren't common to all add a suffix for which.\nN.B. If you go for the suffix or the adding a state/province/country to UK please don't include Ireland/Eire/RoI as that will cause upset as well.",
            "Here is an attempt at adding qualifiers to the holiday names (only when generated with holidays.UnitedKingdom() or holidays.UK()). What do you think of this?\n>>> import holidays\n>>> for date, name in sorted(holidays.UK(years=2016).items()):\n...     print date, name\n... \n'2016-01-01' New Year's Day\n'2016-01-02' New Year Holiday [Scotland]\n'2016-01-04' New Year Holiday [Scotland] (Observed)\n'2016-03-17' St. Patrick's Day [Northern Ireland]\n'2016-03-25' Good Friday\n'2016-03-28' Easter Monday [England, Wales, Northern Ireland]\n'2016-05-02' May Day\n'2016-05-30' Spring Bank Holiday\n'2016-07-12' Battle of the Boyne [Northern Ireland]\n'2016-08-01' Summer Bank Holiday [Scotland]\n'2016-08-29' Late Summer Bank Holiday [England, Wales, Northern Ireland]\n'2016-11-30' St. Andrew's Day [Scotland]\n'2016-12-25' Christmas Day\n'2016-12-26' Boxing Day\n'2016-12-27' Christmas Day (Observed)\n>>>",
            "Looks good!",
            "Great, thanks for the help on this!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/38",
        "title": "\"Bevrijdingsdag\" logic for Netherlands not correct",
        "count": 0,
        "turns": [
            "Hi,\nThe logic for \"Bevrijdingsdag\" in the Netherlands is not entirely correct:\nRelated code: https://github.com/ryanss/python-holidays/blob/master/holidays.py#L2015\nRelated PR: #37\nOfficial government page about this day (in Dutch): https://www.rijksoverheid.nl/onderwerpen/arbeidsovereenkomst-en-cao/vraag-en-antwoord/bevrijdingsdag-5-mei-vrije-dag\nSummary: It is an official holiday every year but people do not necessarily get a day off. For a lot of people (but not all) their contract states that they have a day off every 5 years (year % 5) so in those cases the current logic is correct.\nSolution: The solution depends on the definition of holiday. If it has to be a day that nobody has to work, then bevrijdingsdag is never a holiday. If it is 'just' an official holiday, bevrijdingsdag is a holiday every year.\nI might have time to work on the solution during the weekend.\nCheers,\nAart"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/35",
        "title": "setup.py fails in non-utf8 locales",
        "count": 0,
        "turns": [
            "When setup.py us run in non-unicode locales, it crashes with the error below. This is caused by the implicit use of codecs. To find the version number, holidays.py is read using the codecs module, but no codec is specified. Because of this, the codec used depends on the locale, which is ascii for non-unicode locales. Holidays.py contains many non-ascii characters in the holiday names, so this fails.\nNon-unicode locales are the default in most minimal setups (such as docker images), so this has quite a bit of impact. Fortunately the fix is trivial; I'll add a merge request.\nCollecting holidays (from -r requirements.txt (line 22))\n  Downloading holidays-0.6.tar.gz (40kB)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-a2dby65n/holidays/setup.py\", line 21, in <module>\n        fd.read(), re.MULTILINE).group(1)\n      File \"/usr/lib/python3.5/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 16417: ordinal not in range(128)\n\nWorkaround for those who depend on the pypi version (requires the C.UTF-8 locale to be generated on your system. Ubuntu docker image has that by default.)\nLC_CTYPE=C.UTF-8 python setup.py install  # or whatever pip command you need"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/33",
        "title": "Holiday object doesn't generate holidays until __contains__() ran",
        "count": 3,
        "turns": [
            "As shown below holidays won't appear in the object until I check if a date is in the holiday object.\nPython 2.7.5 (default, Oct 11 2015, 17:47:16) \n[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import holidays\n>>> print holidays.__version__\n0.5\n>>> h = holidays.UnitedStates()\n>>> h\n{}\n>>> datetime.datetime.now() in h\nFalse\n>>> h\n{datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 2, 15): \"Washington's Birthday\", datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 1, 1): \"New Year's Day\", datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 1, 18): 'Martin Luther King, Jr. Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 5, 30): 'Memorial Day'}",
            "This is on purpose. There is an optional years parameter you can use to force it to generate specific years before checking any dates.\n>>> h = holidays.US(years=2016)\n>>> h\n{datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 2, 15): \"Washington's Birthday\", datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 1, 1): \"New Year's Day\", datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 1, 18): 'Martin Luther King, Jr. Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 5, 30): 'Memorial Day'}\n\n# or multiple years\n>>> h = holidays.US(years[2015, 2016, 2017])\nOne option would be to default the years argument to the current year but my thinking was as follows:\nAt the time of creating object h it doesn't know what year(s) you are going to be working with and you wouldn't want to waste cpu cycles generating the current year if you plan on working with another year, or perhaps you initialize the holiday object and never need to use it.\nIf you think this is not the ideal default I'm open to be persuaded differently.",
            "@ryanss that makes sense. Appreciate your response. No I think your reasoning is valid. Mind if create a Pull Request that updates the README with an example of initiating the object with the years? As I'm using it to get a list of holidays to exclude from dateutil rrule set.",
            "Sure, better documentation is always helpful.\nYou may be interested in another one of my projects https://github.com/ryanss/bdateutil.\nThe main feature is adding a new bday option to relativedelta and BDAILY to rrule. The last example in the top Example Usage section might be what you're looking for.\nimport holidays\nfrom bdateutil import rrule, BDAILY\nfrom datetime import date\n\nfor dt in rrule(BDAILY, count=10, dtstart=date(2015, 12, 23), holidays=holidays.US()):\n    print dt\nUnfortunately, the holidays keyword is only available in the master branch, not the latest release v0.1, so you would have to clone the repository and python setup.py install instead of installing using easy_install or pip. I will be releasing v0.2 to PyPI sometime in the next week."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/31",
        "title": "Ad-hoc UK bank holidays not included",
        "count": 2,
        "turns": [
            "The UK definitions are based on a calculation of when holidays would fall in a given year. However this fails to take into account additional bank holidays. For example 29 April 2011 was a bank holiday but the library reports that it was not.",
            "Thanks. Are there any other one-off holidays like this you are aware of?",
            "There's a list of a few in the Notes section of:\nhttps://en.wikipedia.org/wiki/Public_holidays_in_the_United_Kingdom#England.2C_Northern_Ireland_and_Wales."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/26",
        "title": "Option for ignoring \"unobserved\" holidays",
        "count": 1,
        "turns": [
            "It might be nice to allow for not adding holidays that are not going to be observed on their normal date. I'm guessing that this only happens when the actual holiday falls on a weekend so maybe it doesn't matter.",
            "To get a list like this you could just check if there's an \"(Observed)\" version of that holiday name and if there is not include it. Example:\nimport holidays\n\nus_holidays = holidays.US(years=2016)\n\n# Print all holidays\nfor date, name in sorted(us_holidays.items()):\n    print date, name\n\n# Print only observed holidays\n# skip holidays that fall on weekends that have an \"(Observed)\" version\nfor date, name in sorted(us_holidays.items()):\n    if name + \" (Observed)\" not in us_holidays.values():\n        print date, name"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/25",
        "title": "Georgia: Martin Luther King Day",
        "count": 1,
        "turns": [
            "Is it possible that Martin Luther King, Jr. Day is missing for Georgia?\nfor date,holiday in sorted(holidays.US(state='GA', years=range(2011,2014)).items()):\n    print date, holiday\n2010-12-31 New Year's Day (Observed)\n2011-01-01 New Year's Day\n2011-01-17 Robert E. Lee's Birthday\n2011-04-25 Confederate Memorial Day\n...\n2012-01-01 New Year's Day\n2012-01-02 New Year's Day (Observed)\n2012-04-23 Confederate Memorial Day\n...\n2012-11-22 Thanksgiving\n2012-11-23 Robert E. Lee's Birthday\n2012-12-24 Washington's Birthday\n2012-12-25 Christmas Day\n2013-01-01 New Year's Day\n2013-04-22 Confederate Memorial Day\n2013-05-27 Memorial Day\n...\n\n(For brevity, I replaced some holidays with ... )\nThe code seems to associate Martin Luther King, Jr. Day with Robert E. Lee's Birthday prior to 2012.\n        # Martin Luther King, Jr. Day\n        if year >= 1986:\n            name = \"Martin Luther King, Jr. Day\"\n            if self.state == 'AL':\n                name = \"Robert E. Lee/Martin Luther King Birthday\"\n            elif self.state in ('AS', 'MS'):\n                name = (\"Dr. Martin Luther King Jr. \"\n                        \"and Robert E. Lee's Birthdays\")\n            elif self.state in ('AZ', 'NH'):\n                name = \"Dr. Martin Luther King Jr./Civil Rights Day\"\n            elif self.state == 'GA' and year < 2012:\n                name = \"Robert E. Lee's Birthday\"\n            elif self.state == 'ID' and year >= 2006:\n                name = \"Martin Luther King, Jr. - Idaho Human Rights Day\"\n            if self.state != 'GA' or year < 2012:\n                self[date(year, 1, 1) + rd(weekday=MO(+3))] = name\n\nHowever, there are two issues. First, for Martin Luther King, Jr. Day to be included for Georgia after 2012, the last two lines should probably read\n            if self.state != 'GA' or year >= 2012:\n                self[date(year, 1, 1) + rd(weekday=MO(+3))] = name\n\nSecond, it seems that Martin Luther King, Jr. Day has been a state holiday in Georgia already prior to 2012. See https://web.archive.org/web/20110224172609/http://www.georgia.gov/00/channel_modifieddate/0,2096,4802_64437763,00.html, https://web.archive.org/web/20100304032739/http://www.georgia.gov/00/channel_modifieddate/0,2096,4802_64437763,00.html, and https://georgia.gov/popular-topic/observing-state-holidays.\nBesides, the above links also seem to suggest that Lincoln's Birthday does not necessarily coincide with Martin Luther King, Jr. Day in Georgia.",
            "Originally the information regarding Martin Luther King, Jr. Day in Georgia came from here: http://www.timeanddate.com/holidays/us/martin-luther-king-day\nIt is clearly not correct. It looks like the federal holiday was adopted right away in 1986 and Robert E. Lee's Birthday was moved to the last Friday on or before Nov. 29th the same year."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/20",
        "title": "Part-day public holiday",
        "count": 2,
        "turns": [
            "Hi there.\nSouth Australia has a part day public holiday after 7pm on Christmas Eve and New Years Eve:\nhttp://www.safework.sa.gov.au/show_page.jsp?id=2483#.VyR-0GNvN0c\n(I'm guessing this is not something that will be supported any time soon: I've still not implemented it in my manual public-holiday stuff internally).",
            "If these days are only considered holidays after 7pm -- and therefore banks, government buildings, etc are open during the day -- I think these days should not be considered holidays considering the types of uses this library has.\nSince the library makes it very easy to create custom holiday lists I think we should ignore these for now unless enough \"part-day\" holidays exist in other countries to warrant adding an optional part_day argument to the Holiday class.",
            "In Australia, it's not just \"business hours\" that are important: we have different pay rates for employees who work on public holidays."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/18",
        "title": "Installation error via pip under Python 3.5",
        "count": 0,
        "turns": [
            "Got the following error while trying to install under Python 3.5:\n\nComplete output from command python setup.py egg_info:\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/tmp/pip-e2vwj6jf-build/setup.py\", line 29, in <module>\n    long_description=open('README.rst').read(),\n  File \"/root/miniconda2/envs/keras/lib/python3.5/encodings/ascii.py\", line 26, in decode\n    return codecs.ascii_decode(input, self.errors)[0]\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 5823: ordinal not in range(128)\n\n\nThank you for the package, BTW!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/7",
        "title": "Determining true holiday, verses observed. ",
        "count": 1,
        "turns": [
            "When generating the US holidays for 2022, the observed new year's day is in 2021 (Dec. 31).\nus_holidays = holidays.US()\ndate(2022, 1, 1) in us_holidays\n\nThe observed new year's day in not among the us_holidays. To have the observed holiday, you need to also populate 2021:\ndate(2021, 1, 1) in us_holidays",
            ">>> for d, name in sorted(holidays.US(years=[2022]).items()):\n...     print d, name\n... \n2021-12-31 New Year's Day (Observed)\n2022-01-01 New Year's Day\n2022-01-17 Martin Luther King, Jr. Day\n2022-02-21 Washington's Birthday\n2022-05-30 Memorial Day\n2022-07-04 Independence Day\n2022-09-05 Labor Day\n2022-10-10 Columbus Day\n2022-11-11 Veterans Day\n2022-11-24 Thanksgiving\n2022-12-25 Christmas Day\n2022-12-26 Christmas Day (Observed)"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/6",
        "title": "US Presidential Inauguration Day",
        "count": 2,
        "turns": [
            "Is there a reason why you didn't include the US Presidential Inauguration Day:\nhttp://www.opm.gov/policy-data-oversight/pay-leave/pay-administration/fact-sheets/holidays-work-schedules-and-pay",
            "From your link it looks like a very small percentage of the United States gets this day as a holiday so leaving it off the list of default US holidays is the correct thing to do. In the future I plan on adding an optional state parameter that will allow state-specific holidays like Presidential Inauguration Day, Election Day, Good Friday, etc.\nAt this time, if you need holidays that differ from the default holidays, it is very easy to subclass holidays.UnitedStates to modify the holidays:\nfrom datetime import date\nfrom dateutil.relativedelta import relative delta\n\nimport holidays\n\nclass MyUSHolidays(holidays.UnitedStates):\n    def _populate(self, year):\n        # Populate the holiday list with the default US holidays\n        holidays.UnitedStates._populate(self, year)\n        # Add Presidential Inauguration Day\n        # Occurs every four years starting in 1937\n        if (year - 1937) % 4 == 0:\n            # If Jan 20 is a Sunday holiday falls on Jan 21\n            if date(year, 1, 20).weekday() != 6:\n                self[date(year, 1, 20)] = \"Presidential Inauguration Day\"\n            else:\n                self[date(year, 1, 21)] = \"Presidential Inauguration Day\"\n\nprint date(2013, 1, 21) in MyUSHolidays()",
            "That makes sense. Thank you for creating this module."
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/5",
        "title": "Add requirements file",
        "count": 3,
        "turns": [
            "pip install holidays fails if python-dateutil is not already present\nI believe the project needs to include a requirement file to ensure the dependencies get installed.\nThis is essential for including this package into any automated deployments...",
            "Still failing even with requirements.txt file\n$ pip install holidays\nDownloading/unpacking holidays\n  Downloading holidays-0.3.1.tar.gz\n  Running setup.py (path:/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py) egg_info for package holidays\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py\", line 17, in <module>\n        import holidays\n      File \"holidays.py\", line 17, in <module>\n        from dateutil.easter import easter\n    ImportError: No module named dateutil.easter\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py\", line 17, in <module>\n\n    import holidays\n\n  File \"holidays.py\", line 17, in <module>\n\n    from dateutil.easter import easter\n\nImportError: No module named dateutil.easter\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays\nStoring debug log for failure in /Users/ryan/.pip/pip.log",
            "Most likely because it is importing holidays inside the setup.py before python-dateutil has been installed. Removing the import and hardcoding the version in setup.py should fix this.",
            "Confirmed to work for me, thanks for the fix!"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/4",
        "title": "Error when combining holiday objects for different provinces",
        "count": 0,
        "turns": [
            ">>> import holidays\n>>> bc = holidays.CA(prov='BC')\n>>> on = holidays.CA(prov='ON')\n>>> bc + on\n\nTraceback (most recent call last):\n  File \"sum.py\", line 4, in <module>\n    bc + on\n  File \"/Users/ryan/Code/holidays.py/holidays.py\", line 104, in __add__\n    HolidaySum = createHolidaySum(c1, c2)\n  File \"/Users/ryan/Code/holidays.py/holidays.py\", line 115, in createHolidaySum\n    class HolidaySum(class1, class2):\nTypeError: Error when calling the metaclass bases\n    duplicate base class CA"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/3",
        "title": "RuntimeError when creating custom class with Dec 31st holiday",
        "count": 0,
        "turns": [
            ">>> from datetime import date\n>>> import holidays\n>>> \n>>> class TestHolidays(holidays.US):\n...     def _populate(self, year):\n...         holidays.US._populate(self, year)\n...         self[date(year, 12, 31)] = \"New Year's Eve\"\n... \n>>> '2014-12-31' in TestHolidays()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"holidays.py\", line 79, in __contains__\n    return dict.__contains__(self, self.__keytransform__(key))\n  File \"holidays.py\", line 75, in __keytransform__\n    self._populate(year)\n  File \"<stdin>\", line 4, in _populate\n  File \"holidays.py\", line 85, in __setitem__\n    return dict.__setitem__(self, self.__keytransform__(key), value)\n  File \"holidays.py\", line 75, in __keytransform__\n    self._populate(year)\n  File \"<stdin>\", line 4, in _populate\n  File \"holidays.py\", line 85, in __setitem__\n    return dict.__setitem__(self, self.__keytransform__(key), value))\n...\n  File \"holidays.py\", line 75, in __keytransform__\n    self._populate(year)\n  File \"<stdin>\", line 3, in _populate\n  File \"holidays.py\", line 112, in _populate\n    self[date(year, 1, 1)] = name\n  File \"holidays.py\", line 85, in __setitem__\n    return dict.__setitem__(self, self.__keytransform__(key), value)\n  File \"holidays.py\", line 72, in __keytransform__\n    year = (key + rd(days=+1)).year\nRuntimeError: maximum recursion depth exceeded while calling a Python object"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=16&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/2",
        "title": "US business days - configurable options ",
        "count": 1,
        "turns": [
            "I have reviewed/tested the code to check what exactly it does with US.\nMy assumption is that the main use for the module is to identify business vs. non-business days. Seems like there might some discrepancies / options at least within US.\nThe current list seems to reflect US Post Office schedule, though most businesses are likely to follow Bank Holiday schedule (no business if bank is closed - main difference banks closed on Easter).\nMoreover, there are some special cases (e.g. \"long weekends\" with extra Friday on Thanksgiving, etc, early business closing on \"pre-holiday\" days, like xmas/new year and possibly others).\nI wonder if it might be valuable to make things like this configurable beyond the basic USPS schedule?\nReferences -\nhttp://www.theholidayschedule.com/post-office-holidays.php\nhttp://www.theholidayschedule.com/bank-holidays.php\nhttp://www.theholidayschedule.com/nyse-holidays.php",
            "I have not heard of there being an Easter bank holiday before. Admittedly I am not as familiar with US holidays as Canadian, but I've written a lot of software that deals with processing ACH transactions in the US system where holidays have to be taken into account and I've never seen transactions delayed due to Easter. The Federal Reserve does not consider it a holiday[1].\nI'd definitely be open to adding some additional options for the US if there were some clear standards that appeared to be agreed on, but that doesn't seem to be the case?\nFor special cases like Christmas Eve and New Year's Eve, which only some industries/companies observe, it is quite easy to create your own custom holiday class by inheriting from one of the existing classes.\nExample:\n>>> from datetime import date\n>>> import holidays\n>>> \n>>> class NYSEHolidays(holidays.US):\n>>>     def _populate(self, year):\n>>>         # Add standard holidays from holidays.US class\n>>>         holidays.US._populate(self, year)\n>>>         # Add custom holiday\n>>>         self[date(year, 12, 24)] = \"Christmas Eve\"\n>>> \n>>> print '2014-12-24' in NYSEHolidays()\nTrue\n[1] - http://www.federalreserve.gov/aboutthefed/k8.htm"
        ]
    },
    {
        "url_base": "https://github.com/vacanza/python-holidays/",
        "source_url": "https://github.com/vacanza/python-holidays/issues?page=17&q=is%3Aissue+is%3Aclosed",
        "link": "https://github.com/vacanza/python-holidays/issues/1",
        "title": "PyPI failures",
        "count": 2,
        "turns": [
            "The package is now \"not found\" on PyPI ( https://pypi.python.org/pypi/holidays/0.1 ), pip install command fails as well",
            "Sorry about that. Version 0.1 is back up on PyPI now, as well as new version 0.2.\nThere are backward incompatible changes in v0.2 so check out the new examples in the README for more info.",
            "Thanks for the prompt resolution!"
        ]
    }
]