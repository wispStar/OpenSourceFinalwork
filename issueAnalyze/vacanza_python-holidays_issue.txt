Fix README links targets
Some of the README.rst's Contributions and License section links looks right on Github but result in 404 on PYPI and RTD platforms. We need to fix it so links would work right everywhere.

Standardize Islamic holidays comments
Yes, for some Islamic holidays we use here "traditional" version of the name rather than translated one. Where Eid al-Fitr and Eid al-Adha can still be translated (as "Feast of Breaking the Fast" and "Feast of Sacrifice"), I can't find a suitable short name for Isra' and Mi'raj and Ashura, for example :)

Originally posted by @KJhellico in #1673 (comment)

Australia NSW - Bank Holiday only within Holiday data
Hi
Well done on maintaining library!
Further to the original request, which I see has been closed, this 5th August Subdiv=NSW Australia Holiday remains.
This 1st Monday August entry here:
Code Link - Australia.py
australia.py
    def _populate_subdiv_nsw_public_holidays(self):
        # Easter
        self._add_holy_saturday("Easter Saturday")
        self._add_easter_sunday("Easter Sunday")

        # Labour Day
        self._add_holiday_1st_mon_of_oct("Labour Day")

        # Sovereign's Birthday
        if self._year >= 1936:
            self._add_holiday_2nd_mon_of_jun(self.sovereign_birthday)

        # Bank Holiday
        if self._year >= 1912:
            self._add_holiday_1st_mon_of_aug("Bank Holiday")

This Bank Holiday one‚Ä¶
NSW Public Holidays
(It is referenced here - but with caveat only applies to Bank workers.)
It is a ‚ÄòBank employee‚Äô only holiday and not a public holiday for the vast majority of population.
? Seems to be misreported still currently in 0.41
It could be removed, in my mind altogether, OR have add a new category for bank for AU added- and include this current entry as a bank only holiday?
Thanks for reviewing.
Originally posted by @Ghawken in #293 (comment)

Add _add_holiday_* methods documentation
See #1665 for more details.

Implement subdivision aliases support
Per #1656 discussion it'd be great to have an ability to assign aliases to ISO3166-2 subdivision codes.
Let's figure out complexity and priority of the task (v0 vs v1) and implement this feature. It would provide better user experience.
BTW I could help implementing this, but I noticed that you seem to have very strict ideas, how the API should work and I guess also how it should be implemented. If you don't have the time to do it yourself and you give me some valuable hints, I could help out ‚Ä¶
Yeah, that'd be much appreciated.
The main priority for the current PH version is compatibility. This may be the reason for the seemed strictness you've mentioned. Then goes performance and code readability. Those are sort of my promises to previous code author/maintainer.
We've started working on v1 of the library. If you have improvement ideas or with to participate in some other way -- check out #1649
In other words the only strict requirement for any contribution is compatible and well tested code made right from performance perspective (we have ~5M monthly downloads relying on that).
I can have a go, if you like. Three different approaches come do mind (all without in-depth investigation): Using a dictionary, where the key is the official ISO code and the value a tuple of all aliases. Secondly, use a tuple with a tuple for each subregion, where the first element is the official ISO code and all other elements aliases. And finally keep the subregion tuple as it is and have a separate dictionary with the aliases. Any preferences?
The idea with mapping is right -- use alias subdiv as a key and iso3166 code as a value:
subdivisions_aliases = {
    "B": "1",
    "K": "2",
    ...
}
This way you'd have average O(1) lookup. Then just swap alias to an official subdiv code at right place of HolidayBase::init. I guess that would be it (no in-depth investigation as well). You'll need to update TestArgs::test_subiv of tests/test_holiday_base.py to make sure it works as expected.
An apparent drawback of this simple approach is that the holidays object would have the subdiv code implicitly changed from the user perspective.
Just create a PR or use this thread for further questions if any.
I also thought about this approach, because of the same reason: the quick lookup. The reason why I did not propose it, was the other major drawback: You are limited to just one alias. In the Austrian case: You can only use 'N', but not 'N√ñ' or even 'Nieder√∂sterreich', all valid and widely used aliases for the subregion 3!
Thinking further about it, we could use:
subdivisions_aliases = {
    "B": "1",
    "K": "2",
    "N": "3",
    "N√ñ": "3",
    "Nieder√∂sterreich": "3",
    ...
}
Quick lookup vs. readability ‚Ä¶
I believe that wouldn't be the case:
subdivisions_aliases = {
    "N": "3",
    "N√ñ": "3",
    "Nieder√∂sterreich": "3"
}
All mapped to "3". Am I missing something?
Same idea at the same time! üòÖ

Generate l10n file on per locale basis
Currently we generate .po/.mo files for every entity. This approach is not ideal for l10n management and produces somewhat redundant l10n items. The better approach would be generate .po/.mo files on per locale basis. We need to consider switching to more simple mechanism and implement it when we have a chance. This would be a significant improvement for Weblate integration management too.
I have some ideas about new l10n layout.
PO files use unified strings (derived from English name) as msgids. For holidays with the same name in all countries msgid begin with just "_" or some common prefix: "_new_years_day", "_good_friday", "_immaculate_conception" etc.
However, in some countries, the names of common holidays differ. For them, we use separate msgid with country code prefix:  "ar_immaculate_conception", "bg_independence_day" etc.
So PO files will contain:
en_US.po:
#. New Year's Day.
msgid "_new_years_day"
msgstr "New Year's Day"
...
#. Good Friday.
msgid "_good_friday"
msgstr "Good Friday"
...
#. Immaculate Conception.
msgid "_immaculate_conception"
msgstr "Immaculate Conception"
...
#. Immaculate Conception.
msgid "ar_immaculate_conception"
msgstr "Immaculate Conception"

#. Independence Day.
msgid "_independence_day"
msgstr "Independence Day"

#. Independence Day.
msgid "bg_independence_day"
msgstr "Independence Day"

(in en_US locale names for Immaculate Conception in Argentina and Independence Day in Bulgaria doesn't differ from common)
es.po:
#. New Year's Day.
msgid "_new_years_day"
msgstr "A√±o Nuevo"
...
#. Good Friday.
msgid "_good_friday"
msgstr "Viernes Santo"
...
#. Immaculate Conception.
msgid "_immaculate_conception"
msgstr "Inmaculada Concepci√≥n"
...
#. Immaculate Conception.
msgid "ar_immaculate_conception"
msgstr "Inmaculada Concepci√≥n de Mar√≠a"
(in es locale name for Immaculate Conception in Argentina is different)
bg.po:
...
#. Independence Day.
msgid "_independence_day"
msgstr "–î–µ–Ω –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—Ç–∞"
# or there is simply no translation, if we don't yet need Bulgarian translation of countries other than Bulgaria

#. Independence Day.
msgid "bg_independence_day"
msgstr "–î–µ–Ω –Ω–∞ –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—Ç–∞ –Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è"
(in bg locale name for Independence Day in Bulgaria is different)

v1: entity class naming
Currently there is no standard on entity holiday class naming. In general it somehow aligns with a country name. The idea is to use unified approach on entity class naming. For iso3166 entities it could be based either on alpha-2 or alpha-3 code, e.g. UsHolidays or UsaHolidays. The classes should still be available via their alpha-2 (and probably alpha-3) code aliases so for example US() and USA() imports would also work.
See #998 (comment) for the original discussion.

Verify SE holiday calendar
SE has every Saturday included as a public holiday, even though only the banks are closed. Is this intended? If so it is at least misleading as BANK is not the primary category if I understand it correctly.
Originally posted by @nick2202 in #1646 (comment)
Actually, it's every Sunday we have as public holiday (with special arg include_sundays=True). I've always wondered how Sundays in Sweden differ from Sundays in other countries (where they are also days off). As far as I understood, the reason for this difference is that

In Sweden, public holidays are defined in the Swedish Constitution as a Sunday, or another day in a list of public holidays

(from Wiki, machine translation to English)
Is this a enough reason for us to include all Sundays in the list of holidays? Maybe we could at least set include_sundays default value to False? (exactly how it's done for Norway now)

Verify IE holiday calendar
2024-03-18 should not be a holiday as you do get compensation for a holiday on the weekend but it is not automatically the following Monday (https://www.citizensinformation.ie/en/employment/employment-rights-and-conditions/leave-and-holidays/public-holidays/)
Originally posted by @nick2202 in #1646 (comment)

v1: subdivision codes standardization
It'd be fair to revisit the current subdivision handling approach too. PH had prov and state fields before adopting subdiv as the parameter name. I can't think of a better naming suggestions atm.
Following #1650 approach we should focus on subcodes defined by ISO3166-2, apparently remove deprecated stuff and some supported subdivisions that don't follow ISO3166-2 format (city names instead of their ISO codes).

v1: entity types and structure standardization
The current version has 2 main types of supported entities: country and financial. Not all entities of the country type can be countries per se. As ISO3166 defines a broader set of supported entities, e.g. names of countries, dependent territories, and special areas of geographical interest it'd be fair to rename accordingly, use iso3166 as a placeholder for iso3166 based entities. Keeping it as is for financial/market category can be a good idea.
The iso3166 entity files would be named according to their iso3166-1 codes.
Another point is the difference for specifying the code for country/market entities: using a standardized attribute name for both types would be more consistent. The difference could be provided based on class inheritance (separate base classes for iso3166 and financial entities) and/or entity_type field.
Questions and ideas are welcome!
This also should address concerns raised in #1063

v1 roadmap
This is a placeholder for all tickets that need to be addressed to release library first stable version.
The v1 version isn't going to be backward compatible with v0 instead it'll be focused on better user experience and standardization of supported entities and provided API. The v1 and following versions should comply with semantic versioning approach.
At some point v0 library support will be limited to maintenance releases / bug fixes only.

v1: entity types and structure standardization¬†#1650
v1: subdivision codes standardization¬†#1651
Introduce custom exceptions¬†#1151
Update project documentation¬†#1474
v1: entity class naming¬†#1655
Generate l10n file on per locale basis¬†#1658

Jersey
Hello,
Would it be possible to add Jersey as a country to Holidays please?
Many thanks
@jjanderson I assume these two are usable sources, right?
https://www.jerseylaw.je/laws/current/Pages/15.560.aspx (Original 1951 Law)
https://www.jerseylaw.je/laws/current/Pages/15.560.20.aspx (Current 2010 Act)
oh wow! Thanks for such a quick response. Yes those look good. Thanks very much
@jjanderson I assume these two are usable sources, right?
https://www.jerseylaw.je/laws/current/Pages/15.560.aspx (Original 1951 Law) https://www.jerseylaw.je/laws/current/Pages/15.560.20.aspx (Current 2010 Act)

Hey @PPsyrius, does it mean you're going to take care of this one?
Hey @PPsyrius, does it mean you're going to take care of this one?

Yes, I have a PR for this being worked on at the moment

Additional Holidays 
Valentine's Day (02/14), St. Patrick's Day (03/17), Halloween (10/31) and Election Day (First Tues every 4 years ((this year is 11/05)) ). Could you please add these to the US Holiday Calendar?
Thanks for the correction, I'll get a PR to get this fixed ASAP
@KJhellico While the first 3 of the list above aren't official holidays for the US, which category would be the most appropriate here? WORKDAY, OPTIONAL, or some new ones altogether?
I think, if such holidays are to be added, there should be a new category for them (UNOFFICIAL or something like that).
@KJhellico While the first 3 of the list above aren't official holidays for the US, which category would be the most appropriate here? WORKDAY, OPTIONAL, or some new ones altogether?

The category support was started as ad-hoc feature and has been improved recently. I think it still needs some more attention in terms of standardized across entities and proper documentation.
UNOFFICIAL / NON_PUBLIC would do it for now.
I'll use NON_PUBLIC for this case then üëç

When I followed the contributor guildline,"make pre-commit" ourred an error"rstcheck Failed"
env:python 3.9 linux ubuntun
rstcheck.................................................................Failed

hook id: rstcheck
exit code: 1

WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/contributing.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/changelog.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/index.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
docs/source/api.rst:4: (INFO/1) No directive entry for "automodule" in module "docutils.parsers.rst.languages.en".
docs/source/api.rst:4: (ERROR/3) Unknown directive type "automodule".
docs/source/api.rst:5: (INFO/1) No directive entry for "automodule" in module "docutils.parsers.rst.languages.en".
docs/source/api.rst:5: (ERROR/3) Unknown directive type "automodule".
docs/source/modules.rst:4: (INFO/1) No directive entry for "autosummary" in module "docutils.parsers.rst.languages.en".
docs/source/modules.rst:4: (ERROR/3) Unknown directive type "autosummary".
Error! Issues detected.
as usual ,I didn't change anything.
@peter-ni-noob Please ensure you've pip install -r insert_filename_here.txt everything in the python-holidays\requirements folder.
I'm still determining how to proceed if that doesn't work since I've only coded with WSL2 on Windows, but @arkid15r likely has the answer here.
Thank you for your help,I apply "make setup" to install this project,and I saw
pip install --upgrade pip
pip install --requirement requirements/dev.txt
pip install --requirement requirements/docs.txt
pip install --requirement requirements/runtime.txt
pip install --requirement requirements/tests.txt
in MakeFile,so I have installed everything in the python-holidays\requirements. I think the cause of the error is in docs/source/api.rst:4: (ERROR/3) Unknown directive type "automodule", but I dont really know rstcheck/(„Ñío„Ñí)/~~.
I was able to reproduce this with python3.9
I guess the best work around now would be commenting related pre-commit configuration block out.
You might also need to run make package after make setup if you see importlib_metadata.PackageNotFoundError: No package metadata was found for holidays error.
Thanks for reporting this!
I just commented related pre-commit configuration block out,and all passed.
the this issue will be closed.
Yeah, that's a workaround for now. I'd prefer to not close the issue yet if you don't mind. At least until we look deeper into the problem.

Revisit nested functions usage
Figure out and implement the preferred approach of using/not using nested functions (vs object/static methods).

Pot file for United States it not generated
The reason could be that countries/united_states.py is not using tr.
Yes, the US holidays hasn't been localized yet.

Feature request: add option to warm-up country import cache
Hello,
Thanks for this library, nice work!
I'm using it in a web application that receives lots of requests, and recently had to debug an issue of thread contention caused by the importlib.import_module here: 


python-holidays/holidays/registry.py


         Line 213
      in
      600ac69






 self.entity = getattr(importlib.import_module(self.module_name), self.entity_name) 





The threads were getting stuck trying to acquire the import lock, the call stack (obtained with py-spy) looked like this:
Thread 1525 (active): "AnyIO worker thread"
    _get_module_lock (<frozen importlib._bootstrap>:185)
    __enter__ (<frozen importlib._bootstrap>:170)
    _find_and_load (<frozen importlib._bootstrap>:1173)
    _gcd_import (<frozen importlib._bootstrap>:1204)
    import_module (importlib/__init__.py:126)
    get_entity (holidays/registry.py:211)
    __call__ (holidays/registry.py:193)
    country_holidays (holidays/utils.py:187)

The fix for it was to call country_holidays in my code at import time for every country i care about, thus avoiding the importlib.import_module from being called from inside the request lifecycle as the entity attribute will be already loaded.
What do you think of adding an option to do that by default?
For example, something like:
if os.getenv('PYTHON_HOLIDAYS_CACHE_WARMUP_ENABLED') == 'true':
    # preload it here
Hi @eliasdorneles,
I know we don't have an issue template yet so I blame myself only for the fact I can't figure out what exactly caused the issue and what the preferred fix would be. In general, I'd avoid introducing env variable dependency but the PH code is totally open for contributions that fix existing users headaches.
Having said that, I'd like to request some clarification on this (multi-threading?) issue. It'd be ideal to have a PR (draft is okay) to understand the problem and assess the fix implementation approach.
Thank you!
Hello,
Right, I understand, I will try to get a minimal example that shows the problem.
I believe it's an issue related to importlib.import_module not being thread-safe.
The web application I mentioned (which I unfortunately cannot share the code as-is) is a FastAPI app, with endpoints defined as "sync" (using regular def and not async def), so the requests are served by anyio worker threads.
I will come back with more details later!

Day in Lieu / observed day for National Day for Truth and Reconciliation in BC?
Title edited to reflect change in direction in the conversation.
New description:
Should there be a day in lieu for National Day for Truth and Reconciliation when it falls on a weekend?
Original description:

Basically an updated version of this. National Day for Truth and Reconciliation is not recognized as an official statutory holiday in BC as of March 9, 2023.
Source:

https://www2.gov.bc.ca/gov/content/governments/indigenous-people/national-day-for-truth-and-reconciliation#:~:text=On%20March%209%2C%202023%2C%20the,on%20September%2030%20each%20year.
https://dailyhive.com/canada/statutory-holiday-canada-truth-reconciliation-day-2023

When it falls on a weekend it is taken as a day I leu. So this year (2023) we have Monday Oct 2nd off work and school.
I guess we can finally add it as an official stat? üòä
Never mind, it looks like it was added in 0ba670c. Perhaps Home Assistant just hasn't updated to that version of python-holidays yet?
Yes, HA may not be using the most recent version. I believe this issue can be closed @bverkron ?
Yes, can indeed be closed. Sorry for wasting your time!
@arkid15r I am curious about something though. It seems this change was made in v0.20 and HA is using v0.28 so it should have this change. However, when I setup a test sensor for today (Oct 2nd 2023, which is our actual day off) it says it is a workday.
I'm not sure if this is an issue on the HA side or perhaps holidays isn't indicating that today is a day in leu since the actual stat fell on a weekend (Saturday)?



Thoughts?
So, it's on Sep 30th and is observed Oct 2nd this year? If so we'll need to add an observance rule for that as it's currently doesn't have one.
@bverkron Do all employees in BC have in lieu holiday on Monday when NDTR falls on weekend? Then we need to add observance rule for it.
By the way, is Remembrance Day have the same rule in BC?
So, it's on Sep 30th and is observed Oct 2nd this year?

If by "observed" you mean the way we get off work and school, etc then yes. My employer (crown corporation so pseudo government) and the school system have the day in lieu and thus we get a paid day off (or day off school) on Oct 2nd this year.

@bverkron Do all employees in BC have in lieu holiday on Monday when NDTR falls on weekend?

I'm having a hard time telling if that universally applies to all industries. The general rules according to this link says:

"Substitute a different day: Employers and employees may agree (in writing) to substitute another day for a statutory holiday. The substitute day must be treated the same as a statutory holiday."

These pages do not really add any extra clarity, as least I don't think so.

https://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/forms-resources/igm/esa-part-5-section-45
https://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/forms-resources/igm/esa-part-5-section-48

This article says vaguely:

Saturday, Sept. 30, is Truth and Reconciliation Day in B.C., although many businesses and schools will take the statutory holiday on Monday.

This site (which I'm not familiar with but is a law site) says few things of note:



National Day for Truth and Reconciliation (federally regulated workplaces only) (also applies to Easter Monday but not Remembrance Day


"If a holiday is designated for federally regulated workplaces only, such as banks and post offices, non-federal employees will not necessarily have a paid day off work. Non-federal employees may take the day off of work if their non-federal employer chooses to recognize the holiday and pay their employees."


"If a holiday falls on a non-work day, another day will be observed as the holiday, typically the preceding Friday or the following Monday.



I am not sure how this all this aligns with the stances of python-holidays. The above may add more confusion than clarity üòï
Edit: Here is one more resource: https://www.peninsulagrouplimited.com/ca/resource-hub/stat-holidays-and-pay/statutory-holidays-british-columbia/

National Day for Truth and Reconciliation now officially a statutory holiday in BC
The new stat holiday became official after the National Day for Truth and Reconciliation Act, 2023, received royal assent in B.C.‚Äôs legislature on March 9th, 2023.  Employers in BC will now be required to provide eligible employees under the Employment Standards Act, a day off with pay on September 30.
This year, the holiday falls on a Saturday. This means all eligible employees are entitled to stat holiday pay irrespective of whether they work on Saturdays or not.
For those who work on Saturdays, employers can agree in writing to substitute another day off for the statutory holiday, but they are not required to do so.
One more note. I just noticed the Apple provided Canadian Holidays calendar shows today as "National Day for Truth and Reconciliation (observed)" so at least that answers the "observed" question and might help with the decision?

BEGIN:VEVENT
DTSTAMP;VALUE=DATE:19760401
UID:d7b0957c-4379-3d35-acb9-13ff4fdc97c9
DTSTART;VALUE=DATE:20231002
CLASS:PUBLIC
SUMMARY;LANGUAGE=en:National Day for Truth and Reconciliation (observed)
TRANSP:TRANSPARENT
CATEGORIES:Holidays
X-APPLE-UNIVERSAL-ID:b7206b3d-0fe9-016e-3a16-75b21eb9d029
END:VEVENT

Though there is this on the actual date as well...

BEGIN:VEVENT
DTSTAMP;VALUE=DATE:19760401
UID:f08ff108-8e0e-3086-93ee-2d4fd6529390
DTSTART;VALUE=DATE:20220930
CLASS:PUBLIC
SUMMARY;LANGUAGE=en:National Day for Truth and Reconciliation
TRANSP:TRANSPARENT
RRULE:FREQ=YEARLY;COUNT=6
CATEGORIES:Holidays
X-APPLE-UNIVERSAL-ID:b7206b3d-0fe9-016e-3a16-75b21eb9d029
END:VEVENT
I appreciate the context you've provided, @bverkron!
Yeah, it's not that simple when it comes to subdivision+category holidays. I didn't look into all those links yet. ATM I see this holiday as a subdivision based (BC) not-for-everyone (fed. regulated workplaces) day-off. This leads us to the categories. I guess in this case it would be the GOVERNMENT? If my vision of this situation is correct then we could work on changing the code to reflect these rules.

I am not sure how this all this aligns with the stances of python-holidays.

The main goal of PH is providing the end users with a list of an entity holidays as close to the reality as possible. In our case it's a part of CA/BC population. I'd prefer making a decision on the users feedback rather than on ambiguous sources when it comes to this kind of discrepancy. So your input here is quite valuable -- we need to identify this group of "federally regulated workplaces". What's that?
I hope we'll be able to figure out the right solution soon!
// I guess other Canada provinces/territories may follow similar logic. It'd be great to identify those too.
I'm not familiar with Categories in the context of PH but it sounds like it's for filtering to only holidays that are applicable to different sectors like public vs government?
Regarding which category to use it looks like there is already some code around this for Canada and NDTR is already included?



python-holidays/holidays/countries/canada.py


         Line 106
      in
      fbefb92






 """Holidays for federally regulated workplaces.""" 





Seems like this was added just recently by @KJhellico here: #1448
I'm not familiar with how categories are utilized in PH and have not see options for that in HA so I may need to submit an enhancement request on the HA side to leverage it. Searching the doc for 'category' this is all I could find. https://python-holidays.readthedocs.io/en/latest/changelog.html#version-0-32
As for defining what a federally regulated workplace is there is a list here: https://www.canada.ca/en/services/jobs/workplace/federally-regulated-industries.html
Interestingly the 'observed' example I showed here  for NDTR in 2023 only seems to be done by Apple for that holiday, not Remembrance Day or any other day for the entire year as far as I can tell. Though not all of the 11 Canadian stat holidays have fallen on a weekend in either 2022 or 2023 so I have limited data to check.
Not sure how much any of this helps with the decision.

Pylance: "IT" is not exported from module "holidays.countries"
Hi,
i started using Pylance in VSCode and noted that it complains that:
from holidays.countries import IT
"IT" is not exported from module "holidays.countries"
¬†¬†Import from "holidays.countries.italy" instead

Is this a false positive? Because my code actually works.
Thanks!
Hi @steakhutzeee,

Is this a false positive? Because my code actually works.

We don't have __all__ specified for countries (and financial) module reimports. I believe Pylance complains exactly because of that.
Try playing with
  "python.analysis.diagnosticSeverityOverrides": {
    "reportPrivateImportUsage":"none" 
  }

settings if that's too annoying.
I'll look into what can be done on the PH side later.
Thank you for reporting this!

Add PH resulting package tests
Make sure the packaging works as expected, smoke check distribution builds.

Update project documentation
This is a ticket for tracking our documentation updates debt and other ideas on the docs improvement:

Document the holiday categories usage¬†#1348
Update documentation for way to get list of all supported countries¬†#1093
Update documentation for cross-platform development¬†#1089
Add _add_holiday_* methods documentation¬†#1666

Unify French holiday names for different countries
The holidays/coutnries/france.py may need to be changed.
I guess identifying such cases (e.g, Algeria/France New Year's Day) may take some time.
Currently we have these l10n files:
holidays/locale/en_US/LC_MESSAGES/FR.po
holidays/locale/uk/LC_MESSAGES/FR.po
holidays/locale/fr/LC_MESSAGES/DJ.po
holidays/locale/fr/LC_MESSAGES/FR.po
holidays/locale/fr/LC_MESSAGES/LU.po
holidays/locale/fr/LC_MESSAGES/BE.po
holidays/locale/fr/LC_MESSAGES/CA.po
holidays/locale/fr/LC_MESSAGES/MC.po
holidays/locale/fr/LC_MESSAGES/MA.po
holidays/locale/fr/LC_MESSAGES/CH.po

Consider extending subdiv arg to accept multiple values
Add ability to request holidays for more than one entity's subdivision. Keep it backward compatible.

For Canada, 'subdivision' is NULL for the province ON but populated for other provinces
subdivision is NULL in the data for province of Ontario. A simple query also shows that ON is the only province that does not appear in the data for Canada at all. However, there are many holidays with NULL subdivision for Canada. I confirmed that at least some of them are associated with ON based on a Canadian holiday that's unique to that province only - Boxing Day. I would assume all of the NULL subdivision values are associated with ON.
Hi @cybersyn-rayna, thank you for bringing this up!
For some (historical?) reason the "ON" subdivision has been set as the default one for Canada holidays implementation. Not sure if that causes the output not meeting your expectations.
Could you add more context as it's not clear what issue you're reporting and it looks like you aren't using our package directly (based on the NULL value appearance).
Thank you!

Introduce entity holidays start/end year controls
Introduce start/end year control later and raise or warn when user requests holidays out of range of supported years (instead of returning an empty dict). Both start/end year range would be optional and enforced if they were set only.

Create an issue template
Add instructions on suggested issue filing format.

Add Yemen holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Yemen
https://www.timeanddate.com/holidays/yemen/

Add Uganda holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Uganda
https://www.timeanddate.com/holidays/uganda/

Add Tuvalu holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Tuvalu
https://www.timeanddate.com/holidays/tuvalu/

Add Turkmenistan holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Turkmenistan
https://www.timeanddate.com/holidays/turkmenistan/

Add Trinidad and Tobago holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Trinidad_and_Tobago
https://www.timeanddate.com/holidays/trinidad/
https://otp.tt/trinidad-and-tobago/national-holidays-and-awards/

Add Togo holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Togo
https://www.timeanddate.com/holidays/togo/

Add Tajikistan holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Tajikistan
https://www.timeanddate.com/holidays/tajikistan/

Add Syrian Arab Republic holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Syria
https://www.timeanddate.com/holidays/syria/

Add Suriname holidays
Links:

https://en.wikipedia.org/wiki/Suriname#National_holidays
https://www.timeanddate.com/holidays/suriname/
https://www.cbvs.sr/en/statistics/financial-market-statistics/daily-publications/147-public-holidays-in-suriname

Add Sudan holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Sudan
https://www.timeanddate.com/holidays/sudan/

Add Sri Lanka holidays
Links:

https://en.wikipedia.org/wiki/Culture_of_Sri_Lanka#List_of_holidays
https://www.timeanddate.com/holidays/sri-lanka/

Add South Sudan holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_South_Sudan
https://www.timeanddate.com/holidays/south-sudan/

Add Somalia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Somalia
https://www.timeanddate.com/holidays/somalia/

Add Solomon Islands holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Solomon_Islands
https://www.timeanddate.com/holidays/solomon-islands/
https://solomons.gov.sb/12100-2/

Add Sierra Leone holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Sierra_Leone
https://www.timeanddate.com/holidays/sierra-leone/

Add Seychelles holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Seychelles
https://www.timeanddate.com/holidays/seychelles/
https://www.cbs.sc/PublicHolidays.html
I'm working on this one, here's the actual Public Holidays Act.
Thanks a lot, @PPsyrius!

Add Senegal holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Senegal
https://www.timeanddate.com/holidays/senegal/

Add Sao Tome and Principe holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_S%C3%A3o_Tom%C3%A9_and_Pr%C3%ADncipe
https://www.timeanddate.com/holidays/sao-tome-and-principe/

Add Samoa holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Samoa
https://www.timeanddate.com/holidays/samoa/

Add Saint Vincent and the Grenadines holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Saint_Vincent_and_the_Grenadines
https://www.timeanddate.com/holidays/saint-vincent-and-the-grenadines/
http://pmoffice.gov.vc/pmoffice/index.php/public-holidays

Add Saint Lucia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Saint_Lucia
https://www.timeanddate.com/holidays/saint-lucia/
https://archive.stlucia.gov.lc/saint_lucia/public_holidays.htm

Add Saint Kitts and Nevis holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Saint_Kitts_and_Nevis
https://www.timeanddate.com/holidays/saint-kitts-and-nevis/

Add Rwanda holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Rwanda
https://www.timeanddate.com/holidays/rwanda/
https://www.gov.rw/holidays
I would be more than happy to contribute on this issue!
HI @fishem, thank you for doing this!
Hey @fishem, how is your Rwanda PR going? Anything you need help with?

Add Qatar holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Qatar
https://www.timeanddate.com/holidays/qatar/

Unify observed holidays handling
Identify acceptable common approach(-es?), naming convention and code structuring for country observed holidays.
Refactor existing code, update documentation to ensure future PRs compliance

Add Palau holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Palau
https://www.timeanddate.com/holidays/palau/

Add Oman holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Oman
https://www.timeanddate.com/holidays/oman/

Add Niger holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Niger
https://www.timeanddate.com/holidays/niger/

Add Nepal holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Nepal
https://www.timeanddate.com/holidays/nepal/

Add Nauru holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Nauru
https://www.timeanddate.com/holidays/nauru/

Add Myanmar holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Myanmar
https://www.timeanddate.com/holidays/myanmar/
https://evisa.moip.gov.mm/home/publicholiday
https://myanmar.gov.mm/upcoming-holidays
Note on this: Myanmar need its own traditional Burmese Calendar to be mapped out first for their Buddhist Holidays - akin to the Indochinese ones used by Thailand, Laos, and Cambodia.

Add Mongolia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Mongolia
https://www.timeanddate.com/holidays/mongolia/

Add Micronesia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Federated_States_of_Micronesia
https://www.timeanddate.com/holidays/micronesia/

Add Mauritania holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Mauritania
https://www.timeanddate.com/holidays/mauritania/
I'd like to work on this one üëçüèº
Thanks a lot, @kasya!

Add Mali holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Mali
https://www.timeanddate.com/holidays/mali/

Add Libya holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Libya
https://www.timeanddate.com/holidays/libya/

Add Liberia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Liberia
https://www.timeanddate.com/holidays/liberia/

Add Lebanon holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Lebanon
https://www.timeanddate.com/holidays/lebanon/
https://www.bdl.gov.lb/pages/index/9/154/Official-Banking-Holidays.html

Add Kuwait holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Kuwait
https://www.timeanddate.com/holidays/kuwait/

Add Kiribati holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Kiribati
https://www.timeanddate.com/holidays/kiribati/

Add Jordan holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Jordan
https://www.timeanddate.com/holidays/jordan/

Add Iraq holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Iraq
https://www.timeanddate.com/holidays/iraq/

Add Haiti holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Haiti
https://www.timeanddate.com/holidays/haiti/

Add Mauritius holidays
Hello,
Grateful if you could add Mauritius holidays.
Links:

https://pmo.govmu.org/Communique/Public_Holidays_2023.pdf
https://publicholidays.mu/2023-dates/
https://www.timeanddate.com/holidays/mauritius/

Add Guyana holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Guyana
https://www.timeanddate.com/holidays/guyana/
https://moha.gov.gy/public-holidays/

Add Guinea Bissau holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Guinea-Bissau
https://www.timeanddate.com/holidays/guinea-bissau/

Add Guinea holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Guinea
https://www.timeanddate.com/holidays/guinea/

Add Grenada holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Grenada
https://www.timeanddate.com/holidays/grenada/

Add Gambia holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Gambia
https://www.timeanddate.com/holidays/gambia/
http://www.visitthegambia.gm/public-holidays

Add Arabic language localisation
Hi. I saw that your library doesn't support Arabic localisation. As a native speaker, I'd like to contribute to add support for it. Thanks.
Hi @abh31000,
it's great to hear that you're willing to add Arabic language support for PH!
The l10n process is not hard but not ideal yet. A (non language specific) help is available from other contributors. I suggest starting here. And here you can find several PRs you could use as an example.
Let me know in case you have l10n related questions.
Thanks again, we're very lucky to have a native Arabic speaker in our l10n team!
Hi @abh31000,
it's great to hear that you're willing to add Arabic language support for PH!
The l10n process is not hard but not ideal yet. A (non language specific) help is available from other contributors. I suggest starting here. And here you can find several PRs you could use as an example.
Let me know in case you have l10n related questions.
Thanks again, we're very lucky to have a native Arabic speaker in our l10n team!

I'll start working on it right away! If I encounter any difficulties or get stuck on something, I'll make sure to get back to you!
Hi @arkid15r,
There are some updates that should be made to the countries that need Arabic localization. Should I include them in one PR or work on them on a separate one?
Thank you!
Hey @abh31000,
it's okay to combine multi-country changes if they are related. So a single PR would be fine.
Hi @arkid15r,
This is actually my first l10n work.
I implented the arabic localization for some countries. And they all work as expected.
Since all Islamic holidays are estimated. Please if you can, tell me how do I add localization for the estimated_label attributes in IslamicHolidays class.
Thank you.
Hi @abh31000, that's a totally valid point which requires some attention. I expect the issue to be addressed in https://github.com/dr-prodigy/python-holidays/pull/1140 end of the week -- early next week. I hope this won't block you from submitting your PR
Hey @abh31000, how is it going with your first l10n attempt? Do you need help with anything (just want to make sure you aren't stuck with some technical difficulty)?
Hey @abh31000, how is it going with your first l10n attempt? Do you need help with anything (just want to make sure you aren't stuck with some technical difficulty)?

Hey! It's just that I have been very busy lately. I will continue working on it when I find some free time.
Thank you.

Add Fiji holidays
Links:

https://www.fiji.gov.fj/About-Fiji/Public-Holidays
https://www.timeanddate.com/holidays/fiji/
https://en.wikipedia.org/wiki/List_of_festivals_in_Fiji

Add Eritrea holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Eritrea
https://www.timeanddate.com/holidays/eritrea/

Add Equatorial Guinea holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Equatorial_Guinea
https://www.timeanddate.com/holidays/guineaecuatorial/

Add Dominica holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Dominica
https://www.timeanddate.com/holidays/dominica/
http://dominica.gov.dm/about-dominica/public-holidays

Add Democratic Republic of the Congo holidays
Not to be confused with the Congo
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Democratic_Republic_of_the_Congo
https://www.timeanddate.com/holidays/dr-congo/

Add Democratic People's Republic of Korea holidays
a.k.a North Korea
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_North_Korea
https://www.timeanddate.com/holidays/north-korea/

Add Ivory Coast holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Ivory_Coast
https://www.timeanddate.com/holidays/ivory-coast/
https://holidayapi.com/countries/ci/2022

Add Congo holidays
Not to be confused with the neighboring Democratic Republic of the Congo
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Republic_of_the_Congo
https://www.timeanddate.com/holidays/republic-of-the-congo/

Add Comoros holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Comoros
https://www.timeanddate.com/holidays/comores/

Add Central African Republic holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Central_African_Republic
https://www.timeanddate.com/holidays/central-african-republic/
https://holidayapi.com/countries/cf/2023

Add Cabo Verde holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Cape_Verde
https://www.timeanddate.com/holidays/cape-verde/

Add Bhutan holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Bhutan
https://www.timeanddate.com/holidays/bhutan/

Add Benin holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Benin
https://www.timeanddate.com/holidays/benin/

Introduce custom exceptions
The package has been using quite plain (NotImplementedError which is a quite bad choice) exceptions for handling erroneous situations. The idea is to introduce a set of tailored exceptions for handling those cases, e.g., a country/financial not supported, a year not covered for a country/financial, and other cases if any.

Add Antigua and Barbuda holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Antigua_and_Barbuda
https://www.timeanddate.com/holidays/antigua-and-barbuda/
I can take this one, as it's an English speaking country.
Thank you üëç

Add Afghanistan holidays
Some links:

https://en.wikipedia.org/wiki/Public_holidays_in_Afghanistan
https://www.timeanddate.com/holidays/afghanistan/

Add new countries list
This is a placeholder issue for tracking the list of countries we want to be supported by PH (based on https://github.com/dr-prodigy/python-holidays/discussions/959)
Please reply to a corresponding thread when you start working on a new country holidays implementation. This will help to avoid multiple contributors working on the same issue situation.
A

Add Afghanistan holidays¬†#1144
Add Algeria holidays¬†#1145, implemented by @abh31000 in Add Algeria holidays¬†#1176
Add Antigua and Barbuda holidays¬†#1146

B

Add Bahamas holidays¬†#1152, implemented by @PPsyrius  in Add Bahamas holidays¬†#1152
Add Barbados holidays¬†#1153, implemented by @arjunanan6 in Add Barbados holidays¬†#1393
Add Belize holidays¬†#1154, implemented by @KJhellico in Add Belize holidays¬†#1181
Add Benin holidays¬†#1155
Add Bhutan holidays¬†#1156
Add Brunei Darussalam holidays¬†#1157, implemented by @PPsyrius in Add Brunei Darussalam holidays¬†#1168
Add Burkina Faso holidays¬†#1158, implemented by @KJhellico in Add Burkina Faso holidays¬†#1278

C

Add Cabo Verde holidays¬†#1159
Add Cambodia holidays¬†#1160, implemented by @PPsyrius in Add Cambodia holidays¬†#1294
Add Cameroon holidays¬†#1161, implemented by @KJhellico in Add Cameroon holidays¬†#1243
Add Central African Republic holidays¬†#1162
Add Chad holidays¬†#1163, implemented by @KJhellico in Add Chad holidays¬†#1279
Add Comoros holidays¬†#1164
Add Congo holidays¬†#1165
Add Ivory Coast holidays¬†#1166

D

Add Democratic People's Republic of Korea holidays¬†#1170
Add Democratic Republic of the Congo holidays¬†#1171
Add Dominica holidays¬†#1172

E

Add El Salvador holidays¬†#1177, implemented by @KJhellico in Add El Salvador holidays¬†#1198
Add Equatorial Guinea holidays¬†#1178
Add Eritrea holidays¬†#1179

F

Add Fiji holidays¬†#1180

G:

Add Gabon holidays¬†#1189, implemented by @KJhellico in Add Gabon holidays¬†#1244
Add Gambia holidays¬†#1190
Add Ghana holidays¬†#1191, implemented by @JerryAgbesi in Add Ghana holidays¬†#1639
Add Grenada holidays¬†#1192
Add Guatemala holidays¬†#1193, implemented by @aztrock in Add Guatemala holidays¬†#1364
Add Guinea holidays¬†#1194
Add Guinea Bissau holidays¬†#1195
Add Guyana holidays¬†#1196

H:

Add Haiti holidays¬†#1199

I:

Add Iran holidays¬†#1202, implemented by @KJhellico in Add Iran holidays¬†#1409
Add Iraq holidays¬†#1203

J:

Add Jordan holidays¬†#1209

K:

Add Kiribati holidays¬†#1210
Add Kuwait holidays¬†#1211

L:

Add Laos holidays¬†#1215, implemented by @PPsyrius in Add Laos holidays¬†#1483
Add Lebanon holidays¬†#1216
Add Liberia holidays¬†#1217
Add Libya holidays¬†#1218

M:

Add Maldives holidays¬†#1223, implemented by @kasya in Add Maldives holidays¬†#1508
Add Mali holidays¬†#1224
Add Mauritania holidays¬†#1225
Add Mauritius holidays¬†#1197
Add Micronesia holidays¬†#1226
Add Mongolia holidays¬†#1227
Add Myanmar holidays¬†#1228

N:

Add Nauru holidays¬†#1233
Add Nepal holidays¬†#1234
Add Niger holidays¬†#1235

O:

Add Oman holidays¬†#1237

P:

Add Palau holidays¬†#1238
Add Papua New Guinea holidays¬†#1239, implemented by @PPsyrius in Add Papua New Guinea holidays¬†#1605

Q:

Add Qatar holidays¬†#1253

R:

Add Rwanda holidays¬†#1254

S:

Add Saint Kitts and Nevis holidays¬†#1261
Add Saint Lucia holidays¬†#1262
Add Saint Vincent and the Grenadines holidays¬†#1263
Add Samoa holidays¬†#1264
Add Sao Tome and Principe holidays¬†#1265
Add Senegal holidays¬†#1266
Add Seychelles holidays¬†#1267
Add Sierra Leone holidays¬†#1268
Add Solomon Islands holidays¬†#1269
Add Somalia holidays¬†#1270
Add South Sudan holidays¬†#1271
Add Sri Lanka holidays¬†#1272
Add Sudan holidays¬†#1273
Add Suriname holidays¬†#1274
Add Syrian Arab Republic holidays¬†#1275

T:

Add Tajikistan holidays¬†#1285
Add Timor-Leste holidays¬†#1286, implemented by @PPsyrius in Add Timor-Leste holidays¬†#1516
Add Togo holidays¬†#1287
Add Tonga holidays¬†#1288, implemented by @PPsyrius in Add Tonga holidays¬†#1288
Add Trinidad and Tobago holidays¬†#1289
Add Turkmenistan holidays¬†#1290
Add Tuvalu holidays¬†#1291

U:

Add Uganda holidays¬†#1292
Add United Republic of Tanzania holidays¬†#1293, implemented by @PPsyrius in Add Tanzania holidays¬†#1505

V:

Add Vanuatu holidays¬†#1298, implemented by @Strategos1 in Add Vanuatu holidays¬†#1423

Y:

Add Yemen holidays¬†#1299

Migrate remaining subdivision holidays to their own methods
As per https://github.com/dr-prodigy/python-holidays/pull/1057 and https://github.com/dr-prodigy/python-holidays/pull/1097/ (just another example).
I plan to migrate New Zealand in a few days.

Update documentation for way to get list of all supported countries
Per #1022 (now closed), it probably should be documented

Update documentation for cross-platform development
Update Contributing documentation with instructions that do not require the use of make, a utility which is not native to Python or Windows but only to Unix and derivatives.
More on this, the current pre-commit doesn't work on Windows for some reason, but it seems to work just fine on Ubuntu (though slow as I'm running this through WSL2 rather than a separate VM)

Add a test for pypi README syntax validation
Based on failed deploy 
Checking dist/holidays-0.20-py3-none-any.whl: FAILED
ERROR    `long_description` has syntax errors in markup and would not be        
         rendered on PyPI.                                                      
         line 515: Error: Unknown interpreted text role "py:attr".              
Checking dist/holidays-0.[20](https://github.com/dr-prodigy/python-holidays/actions/runs/4255685517/jobs/7403860606#step:7:21).tar.gz: FAILED
ERROR    `long_description` has syntax errors in markup and would not be        
         rendered on PyPI.                                                      
         line 515: Error: Unknown interpreted text role "py:attr".

L10n howto for Windows based contributors
I am thinking of contributing Italian names for Italian holidays and am following this thread closely. I too am on Windows but don't know the technology/library used here, and am a bit worried as I don't really want to install WSL2. Also worrisome is the lack of support for UTF-8 (based on the error reported above) as it's required for Italian.
As the author of #827 and the make file that doesn't seem to work on Windows, do you have any input on where I should look to be able to contribute a Windows-native solution?
Originally posted by @mborsetti in https://github.com/dr-prodigy/python-holidays/issues/946#issuecomment-1432731177
Here's one of the placeholder methods until we get this working natively on Windows (not ideal, but it works for now).

Enable "Windows Subsystem for Linux" (WSL2)

wsl --install, select your repo of choice (I picked Ubuntu 22.04 LTS for this case)
After setting everything up, wsl ~ to enter WSL


Installing additional packages:

sudo apt update && sudo apt upgrade -y to update Linux distro.
sudo apt install gettext -y needed for localisation.


cd to the installed location: cd /mnt/[drive no]/[whatever folders]/python-holidays
Check echo $PYTHONPATH; if this is not set yet, run export PYTHONPATH=/mnt/[drive no]/[whatever folders]/python-holidays
Installing additional python requirements: pip install --requirement requirements/dev.txt
Creating the following files and folders (either in Windows Explorer's GUI or mkdir in the command line):

holidays/locale/pot
holidays/locale/[new_language_code]/LC_MESSAGES/[new_language_code].po ‚Üê (if new translation files, both for the new languages and in the English folder)


You should now be able to run make l10n

Edit:
For countries with non-ASCII holiday names, instead of merely blank files you'll need to add header to the file itself to get the code working, here's an example:
# CountryName holidays English translation.
# Authors: AuthorName <YourEmail@Mail.Com>, (c) 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Python Holidays 0.20\n"
"POT-Creation-Date:\n"
"PO-Revision-Date: \n"
"Last-Translator: AuthorName <YourEmail@Mail.Com>\n"
"Language-Team: Python Holidays localization team\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
Respectfully, this is not a recipe on how to enable contributions from the Windows community (~50+% of computers).  It's one for installing a brand new operating system chewing up over ~5GB of space, which is a huge ask!!
I think we can do better; most open source projects I am aware of are cross-platform compatible.

Support for USGS and USNY
Hi,  would it be possible to add support for USGS and USNY as they have in OpenGamma?
Originally posted by @mg3146 in https://github.com/dr-prodigy/python-holidays/discussions/690

Zurich half-day holidays in Switzerland
Zurich has 2 half-day holidays every year: Sechsel√§uten and Knabenschiessen.
I wonder if we can somehow include this in the library?
But then not sure how to mark them. I don't know if any other country has something similar so it is worth doing.
Hi @dragoon thank you!
I can't give a final answer to your question, but if there are other countries with similar cases in existence, as of now we surely neither currently manage, nor even know them :-D
This said, to avoid implementing an impacting change for those 2 half days only (which I currently don't see a point in), I would suggest (very trivially..) to manage them just adding a note to their names, such as "Sechsel√§uten (half day)" or similar.. as we already do with observed holidays, in other words.
Not very accurate, while still better than nothing! üëç
I observe that a similar situation takes place for NYSE, which has so-called reduced trading hours days when it closes at 13:00 (see footnotes at https://www.nyse.com/markets/hours-calendars#holidays).
Having some sort of standardized mechanism to handle those days would be nice and potentially very useful. Maybe add a partial boolean argument to the method, which if set to True will cause partial holidays to be returned as well as the full day ones, and that the partial ones have a label which ends with a country-standardized annotation in brackets (e.g., for NYSE, "Day after Thanksgiving [13:00 close]"?
(+1) We have it in Germany too for Christmas Eve (12-24) and New Years Eve (12-31). Right now, we manually add these edge cases in our application, but support for a flag would be preferred.
I came from https://github.com/commenthol/date-holidays to check, how the python library is faring, when dealing with shortened workdays. I'm just adding 2 euro cents.
The node version has type for every holiday https://github.com/commenthol/date-holidays#types-of-holidays
I have a vague feeling, that we need more attributes to holidays. Is it a shortened day or what kind of holiday this is. How many hours is the workday shortened or at what time does the workday end.
Use case: Baltic states use shortened workdays before some public holidays. Estonian rule is simple, shorten the workday by 3 hours. The shortened days are fixed (23.02, 22.06, 23.12 and 31.12). Latvia and Lithuania shorten the workday by 1 hour, but they have bizarre rules, how the public holidays are moving from weekend to weekdays and thus, the shortened days are also not fixed.

Russian holidays for 2021 are missing some reschedulings
Specifically:
For the rational use of weekends and non-working holidays, the Government of the Russian Federation decides:
Reschedule the following weekend in 2021:
from Saturday 2 January to Friday 5 November;
from Sunday 3 January to Friday 31 December;
from Saturday 20 February to Monday 22 February.
Source:
http://www.consultant.ru/law/ref/calendar/proizvodstvennye/2021/
@master0v is there some logic to this (can it be computed), or do they randomly decide to change them?
I don't think this can be computed.  The logic, I believe, is to create continuous holidays without holes in them, so for example Feb 23 is a holiday, so they move the Saturday to Monday, so that people can have 3 continuous days off.  For the other ones, I am not so sure.  Lately the logic of Russian leaders escapes me ;)
This given, we can't implement this change with static logic rules as we normally do. Anyone interested in adding year-specific rules is appreciated, thx.
The #1365 has introduced substituted holidays support recently.
Please consider filing a PR to fix the issue.

India - Optional Holiday and Other Holidays which depend on Lunar dates
Hi Guys,
Is there an option to specify optional holidays based or religion?
To give you an example Christmas is a public holiday irrespective of the religion, but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People following Jainism). Similarly there are plenty of examples for Hindus, Sikhs, Muslims etc.
Also most of these very much depend on lunar dates and not on Georgian calendar. Is there a library that you are aware of that can provide the correct phase of moon? I can use those to specify the other major Holidays in India.
Rishab
I would like to work on and submit a patch for an Indian holiday for 19th Feb, which is Shivaji Jayanti in Maharashtra, India. Is it fine if I submit a patch as part of this PR?
I would like to work on and submit a patch for an Indian holiday for 19th Feb, which is Shivaji Jayanti in Maharashtra, India. Is it fine if I submit a patch as part of this PR?

@xames3 PRs are always welcomed! Just start a new PR (this one here is an issue to begin with) with the code.
Rashid,

Is there an option to specify optional holidays based or religion? To give you an example Christmas is a public holiday irrespective of the religion, but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People following Jainism). Similarly there are plenty of examples for Hindus, Sikhs, Muslims etc.

That's an interesting use case and for the moment only states or provinces are allowed, but of course code could be modified.

Also most of these very much depend on lunar dates and not on Georgian calendar. Is there a library that you are aware of that can provide the correct phase of moon? I can use those to specify the other major Holidays in India.

We already import the convertdate package and it appears to handle Indian civil calendar dates.
You got my name wrong üòï

I'll look at the Chinese calendar and see how similar or not it is to
Indian Calendar.

Thanks
‚Ä¶
On Fri, 8 Oct, 2021, 4:52 am Mike Borsetti, ***@***.***> wrote:
 Rashid,

 Is there an option to specify optional holidays based or religion? To give
 you an example Christmas is a public holiday irrespective of the religion,
 but something like 'Mahaveer Jayanti' is a holiday for 'Jains' (People
 following Jainism). Similarly there are plenty of examples for Hindus,
 Sikhs, Muslims etc.

 That's an interesting use case and for the moment only states or provinces
 are allowed, but of course code could be modified.

 Also most of these very much depend on lunar dates and not on Georgian
 calendar. Is there a library that you are aware of that can provide the
 correct phase of moon? I can use those to specify the other major Holidays
 in India.

 There's now a lunar calendar function in the utils module. It is based on
 the Chinese lunar calendar, and I am not familiar enough to know if the
 Indian calendar is any different.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/413#issuecomment-938222588>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AK5X3XXK3HD6HZ67NEZF7ATUFYTRZANCNFSM4V2BDHBQ>
 .
You got my name wrong üòï

Whoops, may apologies Rishab!

I'll look at the Chinese calendar and see how similar or not it is to Indian Calendar.

Actually, I edited my response to "we already import the convertdate package and it appears to handle Indian civil calendar dates."
Thanks for your looking into contributing to this project!
Hi @rishabmehta7
sorry for getting to this so late.
At the current time, religious holidays are not taken into account by python-holidays, so an improvement like this, although meaningful, is out of the current scope of the lib, so it would ask for a similar review for every supported country.
Due to this, I consider it as a long running (and low-priority) task, but if you wish to work on it for India, we will later consider it / review it as a global lib improvement.
Thanks! üëç
PH supports more granular holidays definition based on region/category/special or regular status now. It should be much easier to implement those holidays support atm.

Holidays in Portugal
Even though in Portugal there are nationwide holidays, others are regional or municipal (depending on the city).
If one runs the following script, to access the holidays in Portugal plus extended days most people have off:
from datetime import date
import holidays
for date, name in sorted(holidays.PTE(years=2020).items()):
    print(date, name)

One gets the following list:

2020-01-01 Ano Novo
2020-02-25 Carnaval
2020-04-10 Sexta-feira Santa
2020-04-12 P√°scoa
2020-04-25 Dia da Liberdade
2020-05-01 Dia do Trabalhador
2020-06-10 Dia de Portugal
2020-06-11 Corpo de Deus
2020-06-13 Dia de Santo Ant√≥nio
2020-08-15 Assun√ß√£o de Nossa Senhora
2020-10-05 Implanta√ß√£o da Rep√∫blica
2020-11-01 Dia de Todos os Santos
2020-12-01 Restaura√ß√£o da Independ√™ncia
2020-12-08 Imaculada Concei√ß√£o
2020-12-24 V√©spera de Natal
2020-12-25 Dia de Natal
2020-12-26 26 de Dezembro
2020-12-31 V√©spera de Ano Novo

I have seen that the general/national holidays for Portugal are missing, here is its list:



Date
Name




1 of January
Ano Novo


Tuesday (between 3 of February and 9 of March)
Entrudo/Carnaval


Friday (between 20 of March and 23 of April)
Sexta-Feira Santa


Sunday (between 22 of March and 25 of April)
P√°scoa


25 of April
Dia da Liberdade


1 of May
Dia do Trabalhador


Thursday (between 21 of May and 24 of June)
Corpo de Deus


10 of June
Dia de Portugal


15 of August
Assun√ß√£o de Nossa Senhora


5 of October
Implanta√ß√£o da Rep√∫blica


1 of November
Todos os Santos


1 of December
Restaura√ß√£o da Independ√™ncia


8 of December
Imaculada Concei√ß√£o


25 of December
Natal



As one can see, it is slightly different than the one above, as the first one considers some municipal holidays. Here is a detailed list of the holidays in Portugal, in their specific months.
Additional Notes:
‚Ä¢ The state has been giving "Entrudo" since 1978, but there were some exceptions: 1993 and 2012‚Äì2015.
‚Ä¢ Corpus Cristus and Implanta√ß√£o da Rep√∫blica were suspended between 2013 and 2015 (inclusive).
I may suggest adding the 18 district holidays: Aveiro, Beja, Braga, Bragan√ßa, Castelo Branco, Coimbra, √âvora, Faro, Guarda, Leiria, Lisboa, Portalegre, Porto, Santar√©m, Set√∫bal, Viana do Castelo, Vila Real e Viseu.
I can create a PR with this addition if you agree @dr-prodigy
To get more granular, we would need to add the 318 municipal holidays ... that would take considerably more time to implement.
@Nalguedo it sounds like a good plan.. I definitely agree on it! If you wish to implement this first version, please do and I'll be happy to include it.. then there's always time to improve and proceed with the other 300 :-)
Thank you very much!
@dr-prodigy This is now solved with the latest release.
Not sure if we want to keep it open to track progress on adding those ~300 holidays mentioned by @goncaloperes  and @pmpbaptista
It makes sense to keep it open ;)

Consider migration to ruff
It may make sense to use ruff instead of black + flake8. Figure out what needs to be done and whether there are any serious challenges to implement this step.

Verify NL holiday calendar
2024-03-29 Good Friday is missing, 2024-05-05 Liberation Day is missing (https://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands)
Originally posted by @nick2202 in #1646 (comment)
Now in PH both of these holidays belong to OPTIONAL category - according to Dutch Wiki and info from #1590.
@nick2202, if you have other info, feel free to comment.
I have looked here: https://wetten.overheid.nl/BWBR0002448/2010-10-10#:~:text=236-,1,is%20equated%20with%20the%20days%20referred%20to%20in%20the%20previous%20paragraph.,-3
This does mention May 5 and Good Friday in the same breath as other public holidays (I do not speak Dutch so this is only the translation).
But I guess I would trust the apparently Dutch person commenting in #1590 more.
All right, let's keep them optional with no changes at this time.

Some public holidays missing for some countries
I scraped holidays for some countries:
['AT', 'BE', 'CZ', 'DE', 'ES', 'FR', 'GB', 'HU', 'IE', 'IT', 'LI', 'LT', 'LV', 'NL', 'PL', 'RO']
off a website:
officeholidays.com
and compared some of them with the ones in the library, there are quite a few differences. For most (but definitely not all!) of them, I think the scraped data is correct (yours in "self", the scraped ones in "other"):
difference_holidays.xlsx
Compared them to a few more a colleague at work scraped:
difference_holidays2.xlsx
@nick2202, thank you for bringing up this issue.

For most (but definitely not all!) of them, I think the scraped data is correct

Can you give a few examples?
Can you give a few examples?

Sure.
library incorrect
Spain:

2020-11-01: All Saints Day
2020-12-06: Constitution Day
etc.
https://en.wikipedia.org/wiki/Public_holidays_in_Spain

UK/GB:

2020-04-13, 2021-04-05, 2022-04-18 etc.: Easter Monday
2022-08-29 etc.: Summer Bank Holiday
https://www.gov.uk/bank-holidays

I suppose there are quite a few more examples, in the other file in my second comment there a few regional holidays listed as public ones for BA for example.
library correct
Poland

2021-01-06: Epiphany
https://en.wikipedia.org/wiki/Public_holidays_in_Poland
Spain:

2020-11-01: All Saints Day
2020-12-06: Constitution Day
etc.
https://en.wikipedia.org/wiki/Public_holidays_in_Spain


Official source for 2020.

UK/GB:

2020-04-13, 2021-04-05, 2022-04-18 etc.: Easter Monday
2022-08-29 etc.: Summer Bank Holiday
https://www.gov.uk/bank-holidays


These holidays are relevant only for England, Wales and Northern Ireland, not the entire United Kingdom. They are available in Python Holidays for relevant subdivisions, e.g. UnitedKingdom(subdiv="ENG").
I suppose there are quite a few more examples, in the other file in my second comment there a few regional holidays listed as public ones for BA for example.

Yes, perhaps it's worth revisiting holidays of all subdivisions. But I see, for example, that Officeholidays lists Orthodox Christmas as local holiday only for Republika Srpska, although according to official sources, it is also holiday in Federation of Bosnia and Herzegovina and Brƒçko District.
Okay, I see, quite a few intricacies I was not aware of.
Thanks for taking the time to answer, actually not that surprising that your dates are more correct :D
One more try, what about?:
CH:

2024-05-19: marked as holiday (maybe supposed to be 2024-05-20 Whit Monday?)
One more try, what about?:
CH:

2024-05-19: marked as holiday (maybe supposed to be 2024-05-20 Whit Monday?)


Yes, Switzerland needs to be seriously revised.  I already see that we have at least Easter Sunday and Whit Sunday, which are not listed as a holidays, and there are many more‚Ä¶ Thank you for this catch! üëç
May I ask how you compile the holiday data? Do you try to find official sources and then manually define rules for each country (and region) from which you build the modules with which the user checks for holidays?
@nick2202 That's indeed the case for the newer added/updated countries, i.e. see China (CN) and South Korea (KR). I usually start with the latest holiday act available for that particular administration, then backtrack from there and, if available, all the exceptions/one-off holidays.
South Korea:

2024-04-10 is the provisional National Assembly Election Day
2024-05-06 is the Alternative holiday for Children's Day

China:

2024: see ÂõΩÂä°Èô¢ÂäûÂÖ¨ÂéÖÂÖ≥‰∫é2024Âπ¥ÈÉ®ÂàÜËäÇÂÅáÊó•ÂÆâÊéíÁöÑÈÄöÁü•

Japan:

2024: see Japanese Cabinet Office's data
2025-01-08: I'm pretty sure both https://www.officeholidays.com/countries/japan/2025 and https://www.timeanddate.com/calendar/?year=2025&country=26 has already updated their data on Coming of Age Day to Jan 13
@nick2202 thank you for pointing out to the discrepancies. Normally we address them on a per-entity basis. And it seems Switzerland holidays have already been updated in #1648
Could you create a separate issue for each country if there anything that needs to be fixed from your perspective?
Thank you!
Okay, I think I found a few more and will just comment here for now:

IE: 2024-03-18 should not be a holiday as you do get compensation for a holiday on the weekend but it is not automatically the following Monday (https://www.citizensinformation.ie/en/employment/employment-rights-and-conditions/leave-and-holidays/public-holidays/)
NL: 2024-03-29 Good Friday is missing, 2024-05-05 Liberation Day is missing (https://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands)
SE has every Saturday included as a public holiday, even though only the banks are closed. Is this intended? If so it is at least misleading as BANK is not the primary category if I understand it correctly.
Thanks a lot, @nick2202!
I've created the per-country tickets to address the reported issues.
The reports like this one are really important for keeping the library contents up to date. If you find more cases, please let us know.

Chinese Spring Festival holiday in 2020 error
The Chinese Spring Festival holiday in 2020 was extended until February 2nd due to COVID-19.
Now Script Result:
2020-01-24Ôºö‰ºëÊÅØÊó•Ôºà2020-01-19Êó•Ëµ∑Âèñ‰ª£Ôºâ
2020-01-25ÔºöÊò•ËäÇ
2020-01-26ÔºöÊò•ËäÇ
2020-01-27ÔºöÊò•ËäÇ
2020-01-28ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ
2020-01-29ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ
2020-01-30Ôºö‰ºëÊÅØÊó•Ôºà2020-02-01Êó•Ëµ∑Âèñ‰ª£Ôºâ
Actual Holidays:
2020-01-24Ôºö‰ºëÊÅØÊó•Ôºà2020-01-19Êó•Ëµ∑Âèñ‰ª£Ôºâ
2020-01-25ÔºöÊò•ËäÇ
2020-01-26ÔºöÊò•ËäÇ
2020-01-27ÔºöÊò•ËäÇ
2020-01-28ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ
2020-01-29ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ
2020-01-30ÔºöÊò•ËäÇÔºàËßÇÂØüÊó•Ôºâ
2020-01-31ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü
2020-02-01ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü
2020-02-02ÔºöÊò•ËäÇÂª∂ÈïøÂÅáÊúü
Ref:
https://www.gov.cn/zhengce/zhengceku/2020-01/27/content_5472352.htm
@DarkKnightYHJ Thanks for the correction - I'll get a PR for this error done in the next 15 minutes;  if you spot any other discrepancies, feel free to open additional issues. üëç

holiday in Brazil
As of version 0.32, several Brazilian holidays from 2024 have disappeared.
Below is the list between the two versions:
v0.32
(datetime.date(2024, 1, 1), 'Confraterniza√ß√£o Universal')
(datetime.date(2024, 2, 12), 'Carnaval')
(datetime.date(2024, 2, 13), 'Carnaval')
(datetime.date(2024, 2, 14), 'In√≠cio da Quaresma')
(datetime.date(2024, 3, 29), 'Sexta-feira Santa')
(datetime.date(2024, 4, 21), 'Tiradentes')
(datetime.date(2024, 5, 1), 'Dia do Trabalhador')
(datetime.date(2024, 5, 30), 'Corpus Christi')
(datetime.date(2024, 9, 7), 'Independ√™ncia do Brasil')
(datetime.date(2024, 10, 12), 'Nossa Senhora Aparecida')
(datetime.date(2024, 10, 28), 'Dia do Servidor P√∫blico')
(datetime.date(2024, 11, 2), 'Finados')
(datetime.date(2024, 11, 15), 'Proclama√ß√£o da Rep√∫blica')
(datetime.date(2024, 12, 24), 'V√©spera de Natal')
(datetime.date(2024, 12, 25), 'Natal')
(datetime.date(2024, 12, 31), 'V√©spera de Ano-Novo')
v0.33
(datetime.date(2024, 1, 1), 'Confraterniza√ß√£o Universal)
(datetime.date(2024, 3, 29), 'Sexta-feira Santa')
(datetime.date(2024, 4, 21), 'Tiradentes')
(datetime.date(2024, 5, 1), 'Dia do Trabalhador')
(datetime.date(2024, 9, 7), 'Independ√™ncia do Brasil')
(datetime.date(2024, 10, 12), 'Nossa Senhora Aparecida')
(datetime.date(2024, 11, 2), 'Finados')
(datetime.date(2024, 11, 15), 'Proclama√ß√£o da Rep√∫blica')
(datetime.date(2024, 12, 25), 'Natal')
There is a separate category for optional BR holidays. Just pass all categories you need on initialization.

2023-12-30/31 is holiday in China. However, this library reports false result. It may be a bug. 
2023-12-30/31 is holiday in China. However, this library reports false result. It may be a bug. The corresponding codes are as follows:
`from datetime import date
import holidays
cn_holidays = holidays.China()
check_date = date(2023, 12, 30)
if check_date in cn_holidays:
print(f"{check_date} is a holiday in China: {cn_holidays.get(check_date)}")
else:
print(f"{check_date} is not a holiday in China.")`
Dec 30 and 31 is Saturday and Sunday, they are non-working days, just like regular weekends. Do you mean that they have some kind of special holiday status?
I couldn't find any confirmation of 2023-12-30 being a holiday in China. Please reopen with a link to a source attached.
Thank you

SyntaxError: invalid escape sequence '\_' with Python 3.11
Running Python 3.11.4 from a Dockerfile (python:3.11.4-alpine). When loading the library, I get this:
 app/facilities/holidays/datastructures/standard_holiday_calendar.py:4: in <module>
     from holidays.countries import united_states
  /opt/pysetup/.venv/lib/python3.11/site-packages/holidays/countries/__init__.py:83: in <module>
      from .kazakhstan import Kazakhstan, KZ, KAZ
  E     File "/opt/pysetup/.venv/lib/python3.11/site-packages/holidays/countries/kazakhstan.py", line 18
  E       """
  E       ^^^
  E   SyntaxError: invalid escape sequence '\_'
  make: *** [Makefile:11: test] Error 4
 2

Looks like the problematic code was added at aa78057#diff-3835a4c66a509f1de886fe22c21ea9c22d7e83d49203fdb4dfc448ec56527549R23
the linter also gave a violation here W605 which was ignored explicitly with `# noqa: W605, not sure why
Thanks for reporting this, it's fixed in #1619

[BUG]when I followed Contributing guildline ,found scripts/generate_release_notes.py:82: error: Module has no attribute "BooleanOptionalAction"  [attr-defined]
[env]linux unbuntu 18,python=3.8.raw conda envirionment.
I just follow the CONTRIBUTING.rst,and dont change anything,after "make setup","make pre-commit" is not passed because :
scripts/generate_release_notes.py:82: error: Module has no attribute "BooleanOptionalAction"  [attr-defined]
Found 1 error in 1 file (checked 339 source files)
rst code is two backticks............................................Passed
rstcheck.................................................................Failed

hook id: rstcheck
exit code: 1

WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/contributing.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/changelog.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
WARNING:rstcheck_core.checker:An AttributeError error occured. This is most probably due to a code block directive (code/code-block/sourcecode) without a specified language. This may result in a false negative for source: 'docs/source/index.rst'. The reason can also be another directive. For more information see the FAQ (https://rstcheck-core.rtfd.io/en/latest/faq) or the corresponding github issue: rstcheck/rstcheck-core#3.
docs/source/api.rst:4: (INFO/1) No directive entry for "automodule" in module "docutils.parsers.rst.languages.en".
docs/source/api.rst:4: (ERROR/3) Unknown directive type "automodule".
docs/source/api.rst:5: (INFO/1) No directive entry for "automodule" in module "docutils.parsers.rst.languages.en".
docs/source/api.rst:5: (ERROR/3) Unknown directive type "automodule".
docs/source/modules.rst:4: (INFO/1) No directive entry for "autosummary" in module "docutils.parsers.rst.languages.en".
docs/source/modules.rst:4: (ERROR/3) Unknown directive type "autosummary".
Error! Issues detected.
I found the cause of this problem is the version of python,it needs python 3.9+,I think we need specify the version recommendation for this project.ref:https://stackoverflow.com/questions/15008758/parsing-boolean-values-with-argparse
or I can change the code to make it compatible with python 3.8
Hi @peter-ni-noob, it seems you're right as BooleanOptionalAction is not available for python3.8
The issue is with our internal script that supports our release process. I guess it'd be fine just suppress the error if possible.
I'll look into it. Thanks for bringing this up!
I solved this bug in #1627
Fixed in #1627

Update 2024 Chinese holiday
I am Chinese, and Chinese holidy is various from other years,and the holidays of 2024 is published by Chinese government,ref:https://www.gov.cn/yaowen/liebiao/202310/content_6911540.htm„ÄÇ
I want to update this information as my first issue good issue,Can I do this?
Hi @peter-ni-noob ,
it you feel it's something you can do -- go ahead. Our community welcomes all contributions and ready to help in case you have questions or face issues during the process.
It's great to have another open source contributor interested in Python Holidays!
Hi @peter-ni-noob, it seems the issue has been resolved via #1601
Let me know if you'd like other good first issue for contribution, I'll try to figure something out.

Regression in holidays in the Netherlands
I noticed the change Update Netherlands holidays: add holiday categories #1552 broke my unit tests as it no longer considers Liberation day as a holiday on the 5yr interval even though it is a holiday for most people in the Netherlands every 5 years.
On Liberation day (Bevrijdingsdag) the majority of employees have a day off every 5 years (2005, 2010, 2015, etc.). This was the previous behaviour which worked as expected.
Now the 5-year rule of Liberation day is combined with Good Friday in the OPTIONAL category. This equates the status of Liberation day with Good Friday, but this is not logical. Good Fridays is more similar to Liberation Day on the non 5yr-years as those are still a bank holiday but fewer people have a guaranteed holiday than in the 5-yr years. There is no option to add the non-5yr holidays it seems.
The behaviour I would expect is:

PUBLIC includes 5yr Liberation days
OPTIONAL includes Good Friday and the non-5yr liberation days
Hi @harmbuisman and thanks for bringing this up!
I understand your concern about the breaking change introduced in #1552 . Sorry about that.
I found a couple of .nl resources mentioning "Liberation day":

https://www.government.nl/topics/working-hours/question-and-answer/public-holidays-in-the-netherlands
https://business.gov.nl/regulation/holiday-entitlement/#art:liberation-day-5-may

@KJhellico, should this be revisited based on the report and the resources informaion I've just mentioned?
Thank you!
Yes, it seems that information about Liberation Day in Wiki is not entirely correct:

5 mei is sinds 1990 aangewezen als jaarlijkse nationale feestdag. Hiermee kwam een einde aan de situatie dat 5 mei alleen eens in de vijf jaar een nationale feestdag was.

@harmbuisman, thank you for this info, and sorry for inconvenience caused by these changes. I agree with this position:

PUBLIC includes 5yr Liberation days
OPTIONAL includes Good Friday and the non-5yr liberation days

but can you say whether there were any changes in 1990?
Hi, thanks for considering the changes. I was a kid in those days, but from what I understand is that.

Since 1990, Liberation Day has been a bank holiday every year during which people in some sectors are free (e.g., government), and every 5 years, most sectors have a holiday (as most labor agreements have this in).  (1990, 1991, 1992, 1993, 1994, 1995, 1996, ... etc.),
Before 1990, Liberation Day was a bank holiday every 5 years (so only 1950, .. 1985, 1990).

NYSE holidays incorrectly includes new years eve (2021/12/31) when new years day (2022/01/01) falls on Saturday
The NYSE 2021 holiday calendar lists new years eve (2021/12/31) as a holiday for new years day observed (2022/01/01) as the latter falls on a Saturday.  However, per NYSE Rule 7.2:
The Exchange will not be open for business on New Year's Day, Martin Luther King Jr. Day, Presidents' Day, Good Friday, Memorial Day, Independence Day, Labor Day, Thanksgiving Day and Christmas Day. When a holiday observed by the Exchange falls on a Saturday, the Exchange will not be open for business on the preceding Friday and when any holiday observed by the Exchange falls on a Sunday, the Exchange will not be open for business on the succeeding Monday, unless unusual business conditions exist, such as the ending of a monthly or yearly accounting period. Adopted: December 30, 2015 (NYSE-2015-67)
Because 2021/12/31 is the end of the yearly accounting period, new years day is not observed on that date and should not be included as a holiday for the NYSE calendar.
See also
https://capital.com/no-new-year-s-holiday-for-wall-street#:~:text=Rule%207.2%20was%20adopted%20in,an%20exception%20to%20the%20rule.
https://www.nasdaqtrader.com/content/technicalsupport/2021tradingcalendar.pdf
https://www.businesswire.com/news/home/20181204005629/en/NYSE-Group-Announces-2019-2020-and-2021-Holiday-and-Early-Closings-Calendar
@ryanlardinois, thank you for your suggestion! It seems that Friday, December 31, was not a holiday even before 2015 (Rule 7.2 adoption), according to Rule 51. So I think it would be right to remove holiday shift to December 31 completely. It will be fixed in next release.
cheers! Thanks very much.

DeprecationWarning after release of 0.38
I have a project where holidays is a dependency. I run Python 3.10 on Linux and Windows. This error only shows on Linux. The error was first noticed in a Github action Linux workflow. Then tested also on Windows WSL. It breaks during the collection phase of my test suite. If I pin the holidays version to 0.37 the error goes away.
Apologies if this is a bit thin. I am a self taught in Python mostly.
Hi Martin, thanks for reporting this.
I guess the issue is related to one of the recent changes. I'll try to look into this today or tomorrow. It's interesting our CI/CD didn't catch it.
Before you do any work... I have the below section in my pyproject.toml config file. It turns warnings into fails. When I remove it the test suite runs and the line with noqa W605 raise a warning only.
[tool.pytest.ini_options]
filterwarnings = [
    "error",
    'ignore::DeprecationWarning:dateutil.*:',
    'ignore::DeprecationWarning:openpyxl.*:',
    "ignore::DeprecationWarning:pandas_datareader.*:"
]
It's good to know, thanks for adding more context!
I believe this was fixed in #1619

Update snapshot generator: group holidays by subdiv
Add grouping by subdiv for better difference visibility.
// suggested by @KJhellico

TypeError: ObservedHolidayBase._add_observed() got an unexpected keyword argument 'before'
this test code was working fine under 0.27.1 (where the method was still named _add_with_observed()) but now with the latest 0.37 it complains about 'unexpected argument' as in the title.
what is the new way of adding custom holidays so they can only be pushed forward?
from holidays.countries import US
from holidays.constants import JAN, JUL

class MyCivilHolidays(US):
    def _populate(self, year):
        super()._populate(year)
        self.pop_named('New Year')
        self.pop_named('Independence')

        self._add_observed(date(year, JAN, 1), "New Year's Day", before=False) # strictly no backtracks to friday
        self._add_observed(date(year, JUL, 4), 'Independence Day', before=False) # if these fall on saturday then they must be pushed to monday

my_holidays = MyCivilHolidays()

date(2024, 1, 1) in my_holidays```
Yes, code for observed holidays handling has been significantly changed and unified.
If you want to exactly implement the behavior of before=False parameter, you need code like:
from holidays.countries import US
from holidays.observed_holiday_base import ObservedHolidayBase, SUN_TO_NEXT_MON

class MyCivilHolidays(US):
    def _populate(self, year):
        super()._populate(year)
        self.pop_named("New Year")
        self.pop_named("Independence")

        self._add_observed(self._add_new_years_day("New Year's Day"), rule=SUN_TO_NEXT_MON)
        self._add_observed(self._add_holiday_jul_4("Independence Day"), rule=SUN_TO_NEXT_MON)
But when holiday falls on a Saturday, there will be no observed at all.
If it should be exactly as comment says, "if these fall on saturday then they must be pushed to monday", then code should be like:
from holidays.countries import US
from holidays.observed_holiday_base import ObservedHolidayBase, SAT_SUN_TO_NEXT_MON

class MyCivilHolidays(US):
    def _populate(self, year):
        super()._populate(year)
        self.pop_named("New Year")
        self.pop_named("Independence")

        self._add_observed(self._add_new_years_day("New Year's Day"), rule=SAT_SUN_TO_NEXT_MON)
        self._add_observed(self._add_holiday_jul_4("Independence Day"), rule=SAT_SUN_TO_NEXT_MON)
this works, thanks.
btw, what are those methods _add_new_years_day() and _add_holiday_jul_4()?
if i wanted to add ninja turtle day is there a special method for that? or can i just name these things whatever on the fly?
No, those are predefined methods. However, their nature differs a bit. While _add_new_years_day() is part of international holidays group the _add_holiday_jul_4() is a syntactic sugar method handled by HolidayBase::__getattr__() logic -- you can use _add_holiday_<3_letter_month_name>_<day_number>() for adding custom holidays.
but self._add_holiday_jul_13("Ninja Turtle Day") and self[date(year, 7, 13)] = "Ninja Turtle Day" still do the same thing, yes? or is the latter expected to be deprecated in the future?
Right, both examples result in the same holidays object state as HolidayBase is a dict based object. I don't think the __setitem__ functionality is going to be deprecated so you can continue using it directly (self[date(year, 7, 13)] = "Ninja Turtle Day").
ok, thank you very much for this useful library

Holiday categories: inconsistent behaviour and ghost categories üå´Ô∏è
Hey holiday folks!
While exploring this package, I came across a few unexpected and inconsistent behaviours regarding holiday categories. I hope you can shed some light on where I'm going wrong.
Strange behaviour 1
While all entities can declare a set of supported_categories, this is never validated, enforced, or otherwise used anywhere else in the codebase.
$ find . -name '*.py' | xargs grep -nr 'supported_categories'
./holiday_base.py:232:    supported_categories: Set[str] = set()
./countries/south_korea.py:53:    supported_categories = {BANK, PUBLIC}
./countries/bulgaria.py:49:    supported_categories = {PUBLIC, SCHOOL}
./countries/austria.py:22:    supported_categories = {BANK, PUBLIC}
./countries/canada.py:46:    supported_categories = {GOVERNMENT, OPTIONAL, PUBLIC}
./countries/greece.py:32:    supported_categories = {HALF_DAY, PUBLIC}
./countries/indonesia.py:53:    supported_categories = {GOVERNMENT, PUBLIC}
./countries/slovakia.py:29:    supported_categories = {PUBLIC, WORKDAY}
./countries/thailand.py:139:    supported_categories = {ARMED_FORCES, BANK, GOVERNMENT, PUBLIC, SCHOOL, WORKDAY}
./countries/japan.py:34:    supported_categories = {BANK, PUBLIC}
./countries/china.py:65:    supported_categories = {PUBLIC, HALF_DAY}
./countries/laos.py:67:    supported_categories = {BANK, PUBLIC, SCHOOL, WORKDAY}
./countries/brazil.py:61:    supported_categories = {OPTIONAL, PUBLIC}
./countries/liechtenstein.py:30:    supported_categories = {BANK, PUBLIC}
./countries/timor_leste.py:44:    supported_categories = {GOVERNMENT, PUBLIC, WORKDAY}
./countries/uruguay.py:40:    supported_categories = {BANK, PUBLIC}
./countries/portugal.py:50:    supported_categories = {OPTIONAL, PUBLIC}
./countries/tanzania.py:61:    supported_categories = {BANK, PUBLIC}
./countries/belgium.py:30:    supported_categories = {BANK, PUBLIC}
For instance, should this not be checked here:



python-holidays/holidays/holiday_base.py


        Lines 320 to 324
      in
      daa4b80






 unknown_categories = self.categories.difference(ALL_CATEGORIES) 



 if len(unknown_categories) > 0: 



 raise NotImplementedError( 



 f"Category is not supported: {', '.join(unknown_categories)}." 



     ) 





e.g.,
    unsupported_categories = self.categories - self.supported_categories
    if unsupported_categories:
        raise ValueError(f"Categories are not supported: {unsupported_categories}.")
Strange behaviour 2
The categories field has to be a tuple but when left empty defaults to the {PUBLIC} set. On the other hand, the supported_categories attribute is an empty set by default. So, by default, you always query PUBLIC holidays from an entity with no supported categories.
Should this be standardized such that both categories and supported_categories are sets (or just iterables) and both default to {PUBLIC} (such that, by default, all entities support PUBLIC holidays)?
Strange behaviour 3.1
Sometimes... you can query unsupported categories from entities that do specify supported_categories
>>> holidays.country_holidays("BR", subdiv="TO", years=2023).supported_categories
{'optional', 'public'}
>>> holidays.country_holidays("BR", subdiv="TO", years=2023, categories=("islamic",))
{datetime.date(2023, 3, 18): 'Dia da Autonomia', datetime.date(2023, 9, 8): 'Nossa Senhora da Natividade', datetime.date(2023, 10, 5): 'Cria√ß√£o do Estado'}
I believe this happens because of the logic defined in the base _add_subdiv_holidays() method which tries to register _add_subdiv_to_islamic_holidays() (doesn't register anything in this case) and _add_subdiv_to_holidays() which is called no matter the values the categories tuple.
I'm not sure what the solution should be here but it looks like _add_subdiv_{subdiv}_holidays should default to _add_subdiv_{subdiv}_public_holidays to respect the category filters. I believe this would also be consistent with my suggestion in "Strange behaviour 2".
This becomes even more unintuitive when the user gets different results for different categories:
>>> len(holidays.country_holidays("BR", subdiv="TO", years=2023, categories=("optional",)))
10
>>> len(holidays.country_holidays("BR", subdiv="TO", years=2023, categories=("public",)))
12
>>> len(holidays.country_holidays("BR", subdiv="TO", years=2023, categories=("islamic",)))
3
which would lead the user to believe that these 3 holidays were islamic but they are in-fact "categoryless" or "pan-categorical" since they always get returned no matter the categories passed
>>> len(holidays.country_holidays("BR", subdiv="TO", years=2023, categories=("islamic", "christian", "government")))
3
Strange behaviour 3.2
Other times... you can only query categories that are defined in supported_categories.
>>> # Portugal only supports 'public' and 'optional' holidays
>>> holidays.country_holidays("PT").supported_categories
{'optional', 'public'}

>>> # As expected, not filtering is the same as filtering only on `PUBLIC`
>>> holidays.country_holidays("PT", years=2020) == holidays.country_holidays("PT", years=2020, categories=("public",))
True
>>> holidays.country_holidays("PT", years=2020) == holidays.country_holidays("PT", years=2020, categories=("public", 'optional'))
False

>>> # Filtering on 'optional' also works ‚úÖ 
>>> holidays.country_holidays("PT", years=2020, categories=('optional',))
{datetime.date(2020, 2, 24): 'Carnaval', datetime.date(2020, 6, 13): 'Dia de Santo Ant√≥nio', ...

However, this time filtering on non-existing categories returned an empty calendar
>>> holidays.country_holidays("PT", years=2020, categories=("bank",))
{}
>>> holidays.country_holidays("PT", years=2020, categories=("bank", "christian", "government"))
{}
Which happens because Portugal explicitly marks all holidays as either OPTIONAL or PUBLIC (i.e., there are no "categoryless" holidays).



python-holidays/holidays/countries/portugal.py


        Lines 194 to 208
      in
      daa4b80






 def _add_subdiv_15_public_holidays(self): 



 self._add_holiday_sep_15(tr("Dia de Bocage")) 



 



 def _add_subdiv_16_public_holidays(self): 



 self._add_holiday_aug_20(tr("Dia de Nossa Senhora da Agonia")) 



 



 def _add_subdiv_17_public_holidays(self): 



 self._add_holiday_jun_13(tr("Dia de Santo Ant√≥nio")) 



 



 def _add_subdiv_18_public_holidays(self): 



 self._add_holiday_sep_21(tr("Dia de S√£o Mateus")) 



 



 def _add_subdiv_20_public_holidays(self): 



 if self._year >= 1981: 



 self._add_whit_monday(tr("Dia da Regi√£o Aut√≥noma dos A√ßores")) 





Possible solutions
In order to make the category filtering behaviour more intuitive and internally consistent, I can only think of the following two options:

First-class support for "categoryless" holidays. The user should be able to control whether these are returned or not. If this is desired, maybe the sentinel value of category=None should be used for this special case.
If you don't want to support "categoryless" holidays, this should be implicitly converted to PUBLIC holidays.

Ideally, this snippet would work exactly the same if the user set categories = holidays.ALL_CATEGORIES.
country_alpha2 = "BR"
subdiv = "TO"
categories = holidays.country_holidays(country_alpha2, subdiv=subdiv).supported_categories
all_holidays = [
    {"category": cat, "date": date, "name": name}
    for cat in categories
    for date, name in holidays.country_holidays(
        country=country_alpha2,
        categories=(cat,),
        years=2023,
        language="en_US",
        subdiv=subdiv,
    ).items()
]
üëÜ Alternatively, you could also raise a ValueError for unsupported categories as suggested in "Strange behaviour 1".

Sorry for the long post... I hope this helps :)
Hi, @tpvasconcelos! Thank you for a very clear and detailed issue description!

For instance, should this not be checked here:

Yes, we will most likely do that. üëç

Should this be standardized such that both categories and supported_categories are sets (or just iterables)

categories made as tuple in order to be immutable, to avoid the following situations.

I'm not sure what the solution should be here but it looks like add_subdiv{subdiv}_holidays should default to add_subdiv{subdiv}_public_holidays to respect the category filters.

Exactly! Fixed in #1562.

Which happens because Portugal explicitly marks all holidays as either OPTIONAL or PUBLIC (i.e., there are no "categoryless" holidays).

This is how it should be everywhere. Brazil was simply "lost". üôÇ
Hi @tpvasconcelos, thanks for posting this!
The PH categories support is quite recent addition to the library and is still WIP. I appreciate the meaningful feedback you've provided. This will definitely help us improve the end-user experience.
It has already been addressed partially in today's v0.37 release (#1562 by @KJhellico) and I expect the rest to be sorted out in v0.38.
Thanks for the quick responses @arkid15r and @KJhellico!
This behaviour can also be seen with holiday subdivisions. However, in this case, I guess that the default behaviour does make sense. i.e., holidays with no explicit subdivision should implicitly apply to all country subdivisions.
That said, I still think that this behaviour does not make sense for categories. If you agree that holidays.PUBLIC should be the default category (which already happens for the categories search field), then we could work towards enforcing it.
Option 1 (explicit)
The explicit approach would be to not allow adding categoryless holidays, forcing the user to explicit mark them as PUBLIC
For instance, this line would be removed:



python-holidays/holidays/holiday_base.py


         Line 656
      in
      4eed261






 method_names = [f"_add_subdiv_{subdiv}_holidays"] 





The all instances of _add_subdiv_{subdiv}_holidays() would have to be refactored to _add_subdiv_{subdiv}_public_holidays().
A big downside of this approach is that it introduces a big regression and will likely break lots of user code. If this route is considered, them maybe an initial step towards this would be to add a deprecation warning to _add_subdiv_{subdiv}_holidays() usages. And, in a later version, raise a ValueError and only accept _add_subdiv_{subdiv}_{category}_holidays() definitions.
Option 2 (implicit)
This option avoids breaking lots of user code but would probably warrant careful documentation of the behaviours making it very clear that "public" is treated as the default category throughout the package. I think that this approach would require changing the following lines:



python-holidays/holidays/holiday_base.py


        Lines 656 to 659
      in
      4eed261






 method_names = [f"_add_subdiv_{subdiv}_holidays"] 



 



 for category in sorted(self.categories): 



 method_names.append(f"_add_subdiv_{subdiv}_{category}_holidays") 





to:
method_names = []
if PUBLIC in self.categories:
    method_names.append(f"_add_subdiv_{subdiv}_holidays")

for category in sorted(self.categories):
    method_names.append(f"_add_subdiv_{subdiv}_{category}_holidays")

If you wish, I would be happy to help out üëç
That said, I still think that this behaviour does not make sense for categories. If you agree that holidays.PUBLIC should be the default category (which already happens for the categories search field), then we could work towards enforcing it.

That's exactly what we planned - PUBLIC as category supported by default. And over time, all countries will switch to this format (with _populate_xxxx_holidays() instead of _populate()). Perhaps this time has already come...

A big downside of this approach is that it introduces a big regression and will likely break lots of user code.

They are the internal methods of HolidayBase and its descendants, and user code should not call them or depend on them.
They are the internal methods of HolidayBase and its descendants, and user code should not call them or depend on them

Do you mean that users should only interact with _populate_{category}_holidays() and never use the _add_subdiv_{subdiv}_{category}_holidays() etc variants?
I initially assumed that these methods were free game for users of the holidays package to define custom Holiday classes. I can see now that only _populate() is documented in your docs:
It would be great to support the creation of arbitrary holidays. This might be a new issue altogether but it doesn't seem like it would be hard to implement. Take, for instance, the example where you want to create a custom holiday class for your company's holidays:
class MyCompanyHolidays(holidays.HolidayBase):
    supported_categories = {"ALL", "CONTRACT", "EXTERNAL"}
    subdivisions = ("EMEA", "APLA", "NA")
 
    # For everyone in EMEA
    def _add_subdiv_emea_all_holidays(self):
        self._add_holiday_jan_1("New Year")
 
    # Only for full-time employees in North America
    def _add_subdiv_na_contract_holidays(self):
        self._add_holiday_feb_2("Mental health day")

    # This should fail instead of defaulting to PUBLIC
    def _add_subdiv_apla_holidays(self):
        self._add_holiday_mar_3("A holiday for everyone in APLA")
   
    # For all external workers (across all subdivisions)
    def _populate_external_holidays(self):
        self._add_holiday_jul_4("Forced time off")
I believe that the only thing in the way of allowing a user to create this is again the unknown_categories check (which is straightforward to fix)



python-holidays/holidays/holiday_base.py


        Lines 320 to 324
      in
      daa4b80






 unknown_categories = self.categories.difference(ALL_CATEGORIES) 



 if len(unknown_categories) > 0: 



 raise NotImplementedError( 



 f"Category is not supported: {', '.join(unknown_categories)}." 



     )
Hi @tpvasconcelos, it's great to have such a detailed and valuable feedback from time to time. We've created several PRs and significantly improved the code quality based on your ideas.
Taking into account your interest I'd like to mention that this year our goal is to release v1 of the library. We could definitely use suggestions on what features would be useful to implement from users' perspective. Any input is appreciated!

Update Denmark holidays
I've received an email with a link to https://www.norden.org/en/info-norden/public-holidays-denmark
The author complained about absence of June 5th in the list of holiday dates:

The calendar for Denmark does not include 5 June.

Denmark holidays need to be extended using categories approach.

Localize Israel holidays
Next step is l10n. :)
Originally posted by @KJhellico in #1541 (comment)

add native holidays names
add en_US translation

Revisit README.rst badge section
It's time to take another look at shields.io badges
The focus should be on these 2 aspects:

update the code snippets for rst format
make badges look more visually consistent

It'd also be a great idea to make sure we use all related badges available on shields.io

py.typed marker is missing in 0.34
Hey, since the release of 0.34 mypy is complaining with
Run tox -e type_check
##[debug]/usr/bin/bash -e /home/runner/work/_temp/bd19b5f4-fb3e-460f-b257-cb95c16b7b7d.sh
type_check: install_deps> python -I -m pip install mypy types-python-dateutil types-pytz -r requirements.txt
type_check: freeze> python -m pip freeze --all
type_check: holidays==0.34,mypy==1.5.1,mypy-extensions==1.0.0,pip==23.2.1,python-dateutil==2.8.2,pytz==2023.3.post1,setuptools==68.2.0,six==1.16.0,types-python-dateutil==2.8.19.14,types-pytz==2023.3.1.1,typing_extensions==4.8.0,wheel==0.41.2
type_check: commands[0]> mypy --show-error-codes src/bdew_datetimes
src/bdew_datetimes/calendar.py:7: error: Skipping analyzing "holidays": module is installed, but missing library stubs or py.typed marker  [import]
src/bdew_datetimes/calendar.py:8: error: Skipping analyzing "holidays.constants": module is installed, but missing library stubs or py.typed marker  [import]
src/bdew_datetimes/calendar.py:9: error: Skipping analyzing "holidays.countries.germany": module is installed, but missing library stubs or py.typed marker  [import]
src/bdew_datetimes/calendar.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
src/bdew_datetimes/periods.py:14: error: Skipping analyzing "holidays": module is installed, but missing library stubs or py.typed marker  [import]
Found 4 errors in 2 files (checked 4 source files)
type_check: exit 1 (1.43 seconds) /home/runner/work/bdew-datetimes/bdew-datetimes> mypy --show-error-codes src/bdew_datetimes pid=1834
  type_check: FAIL code 1 (6.75=setup[5.32]+cmd[1.43] seconds)
  evaluation failed :( (6.82 seconds)
Error: Process completed with exit code 1.

The following screenshot shows both tarballs from pypi:

Comparing both releases show that with ac29789 include holidays/py.typed in MANIFEST.in was dropped.

Origin: mj0nez/bdew-datetimes#55
Hi Marcel,
that one is indeed missing. Thanks for reporting it!
The fix in on the way.

Canada Object is not running _populate_government_holidays
When querying Canadian holidays, the method _populate_government_holidays is not called. Probably even other methods from Canada
Hey @AntonioVentilii,
did you specify you wanted the GOVERNMENT category holidays to be included? The default one is PUBLIC.
If so, please share some code examples to reproduce the issue.
Thank you!
Hi @arkid15r ! Tks for the answer!
Actually, I did not specify it, I imagined all of them would appear if I do a generic search. For example, the Reconciliation Day should appear (30th september 2023, obs. 2nd october 2023), but it doesn't.
import holidays

ca_holidays = holidays.country_holidays('Canada', observed=True, years=[2023])

print(ca_holidays)
Hey Antonio,
currently CA holidays implementation adds that holiday for either GOVERNMENT category or multiple subdivisions that recognize the holiday. The default CA holidays set does not include "National Day for Truth and Reconciliation" related holidays.
This would work, though:
holidays.country_holidays('Canada', years=2023, categories=(holidays.GOVERNMENT,))
holidays.country_holidays('Canada', years=2023, subdiv="BC")

Please also note we have sort of related discussion here - #1492
Understood! Thank you for the answer!
I will close the issue

Revisit holidays entity class structure
Consider moving special/substituted holidays to a separate entities. Reduce the boilerplate look of country classes.

Simplify PR template checklist
Keep essentials, remove low priority items in order to decrease newcomer entrance threshold.

Add UK easter holidays
The holidays in UK don't include easter and the summer bank holiday
Hi @remipham, try checking the UK holidays for ENG and WLS subdivs, e.g., holidays.UK(years=2023, subdiv="ENG")
Thanks, got everything I need!

Coverall Errors: wrong filepath setup?
From #1483, the result all appears incorrectly and are marked with either "Source not available" or "incorrect hash"
@PPsyrius, I can see source now. Try to sign in on coveralls.io with your GitHub account.
@PPsyrius, I can see source now. Try to sign in on coveralls.io with your GitHub account.

Oh, that explains it

Juneteenth is a NYSE holiday only starting from 2022 and not 2021
The NYSE and other markets have recognized Juneteenth only starting 2022, however when running the following code it recognizes 2021 Juneteenth as a NYSE holiday:
import holidays
from datetime import date

nyse_holidays = holidays.NYSE()
print(date(2021, 6, 18) in nyse_holidays)

Expected Output:
False
Actual Output:
True
@roy-themachine, thank you for your suggestion! It will be fixed in next release.

Incomplete list of Chinese holidays
Hello, I'd like to ask you to check list of  Chinese (CN) holidays. Based on my research (see links below) it seems that some of public holidays are missing there, for example 4.-6.10.2023 (week of National Day).
https://www.officeholidays.com/countries/china/2023
https://www.china-briefing.com/news/china-public-holiday-2023-schedule/
https://en.wikipedia.org/wiki/Public_holidays_in_China
Could you please have a look?
Thank you in advance!
Seems like none of the English version sources pre-2022 are reliable, though the Chinese government appears to have official ones from 2007 onwards from their website, which I'm working on at the moment - as well as adding both l10n support (English(US)/Thai/Simplified Chinese/Traditional Chinese) and half-day holiday supports.

Clean up package build log warnings
Take care of a bunch of
  check.warn(importable)
/private/var/folders/wr/zbdvblqs5fqff7xr1gqgg03c0000gn/T/build-env-v7q9lxn2/lib/python3.11/site-packages/setuptools/command/build_py.py:204: _Warning: Package 'holidays.locale.uk.LC_MESSAGES' is absent from the `packages` configuration.
!!

        ********************************************************************************
        ############################
        # Package would be ignored #
        ############################
        Python recognizes 'holidays.locale.uk.LC_MESSAGES' as an importable package[^1],
        but it is absent from setuptools' `packages` configuration.

        This leads to an ambiguous overall configuration. If you want to distribute this
        package, please make sure that 'holidays.locale.uk.LC_MESSAGES' is explicitly added
        to the `packages` configuration field.

        Alternatively, you can also rely on setuptools' discovery methods
        (for example by using `find_namespace_packages(...)`/`find_namespace:`
        instead of `find_packages(...)`/`find:`).

        You can read more about "package discovery" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html

        If you don't want 'holidays.locale.uk.LC_MESSAGES' to be distributed and are
        already explicitly excluding 'holidays.locale.uk.LC_MESSAGES' via
        `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,
        you can try to use `exclude_package_data`, or `include-package-data=False` in
        combination with a more fine grained `package-data` configuration.

        You can read more about "package data files" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/datafiles.html


        [^1]: For Python, any directory (with suitable naming) can be imported,
              even if it does not contain any `.py` files.
              On the other hand, currently there is no concept of package data
              directory, all directories are treated like packages.
        ********************************************************************************

!!
  check.warn(importable)

warning messages generated during make package command run.

Add per subdiv special holidays support
Implement it in a similar to country wide special holidays.
(use Canada for further refactoring).
Resolved in #1520.

Return wrong language for the Netherlands holidays
I have updated my code to the latest version and it seems the holiday names do not return in it's own language.
Running this code:
import datetime
import holidays

for ptr in holidays.NL(datetime.datetime.now().year).items():
    print(ptr)


‚úÖ Running the above code using version 0.22 gives (good and expected results):
(datetime.date(2023, 1, 1), 'Nieuwjaarsdag')
(datetime.date(2023, 4, 9), 'Eerste paasdag')
(datetime.date(2023, 4, 7), 'Goede Vrijdag')
(datetime.date(2023, 4, 10), 'Tweede paasdag')
(datetime.date(2023, 5, 18), 'Hemelvaart')
(datetime.date(2023, 5, 28), 'Eerste Pinksterdag')
(datetime.date(2023, 5, 29), 'Tweede Pinksterdag')
(datetime.date(2023, 12, 25), 'Eerste Kerstdag')
(datetime.date(2023, 12, 26), 'Tweede Kerstdag')
(datetime.date(2023, 4, 27), 'Koningsdag')

üî¥ Running the code from version 0.23 (also the same results running 0.32) gives the below wrong result:
(datetime.date(2023, 1, 1), "New Year's Day")
(datetime.date(2023, 4, 7), 'Good Friday')
(datetime.date(2023, 4, 9), 'Easter Sunday')
(datetime.date(2023, 4, 10), 'Easter Monday')
(datetime.date(2023, 4, 27), "King's Day")
(datetime.date(2023, 5, 18), 'Ascension Day')
(datetime.date(2023, 5, 28), 'Whit Sunday')
(datetime.date(2023, 5, 29), 'Whit Monday')
(datetime.date(2023, 12, 25), 'Christmas Day')
(datetime.date(2023, 12, 26), 'Second Day of Christmas')

So you can see the dates are correct but the labels (naming) are in English instead of Dutch. If this is the new standard, this is fine for me then I will translate myself. Otherwise, I hope you can fix this.
If you need more info, please me know. I will run version 0.22 in the mean time.
Many thanks for this library!
Hey @jovana
thanks for the detailed issue description!
The reason for this (unexpected) behavior is that we've localized NL holidays some time ago. There are currently 3 languages supported: nl (default), en_US, and uk.
And it seems you're running it under en locale. Please try setting the language explicitly:
import datetime
import holidays

for ptr in holidays.NL(datetime.datetime.now().year, language="nl").items():
    print(ptr)

If you're a native Dutch language speaker we'd appreciate you taking a look at those labels and let us know if something isn't correct.
Thank you!
Hi @arkid15r , Thanks for the quick reply!
Okay, I understand now! I have added the language="nl" option and it gives the correct output.
Many thanks!
I have looked into the documentation, now I know I can find it. But it would be nice if there is an example in the readthedocs.
Hey @jovana thanks for the detailed issue description!
The reason for this (unexpected) behavior is that we've localized NL holidays some time ago. There are currently 3 languages supported: nl (default), en_US, and uk.
And it seems you're running it under en locale. Please try setting the language explicitly:
import datetime
import holidays

for ptr in holidays.NL(datetime.datetime.now().year, language="nl").items():
    print(ptr)

If you're a native Dutch language speaker we'd appreciate you taking a look at those labels and let us know if something isn't correct.
Thank you!

I have added an update in the documentation, in this pull request. Not sure if it is usefull: #1456
Thanks for helping and this great lib!

[br] Optional holiday - Dia do servidor p√∫blico
python-holidays/holidays/countries/brazil.py


         Line 130
      in
      110e3cc






 self._add_holiday_oct_28("Dia do Servidor P√∫blico") 





On brazilian holidays, some are considered 'optional' (feriado facultativo).
When verifying for a holiday, I'd like to get the fixed holidays, or filter out these 'optional' ones.
That is because, as the name suggests, its observance will depend on employer, region, government decision, etc.
https://blog-grancursosonline-com-br.translate.goog/feriados-pontos-facultativos/?_x_tr_sl=pt&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp
How could I handle a case like that?
@rulrok, thank you for your remark about Brazilian optional holidays.
As Python Holidays now support holidays categories, in PR #1452 we have implemented correct categorization of Brazil holidays. So now you can distinguish fixed and optional holidays.
Code example:
>>> from holidays.countries.brazil import Brazil
>>> from holidays.constants import OPTIONAL, PUBLIC
>>> br = Brazil(years=2023)  # equivalent to: br = Brazil(categories=(PUBLIC,), years=2023)
>>> br_full = Brazil(categories=(OPTIONAL, PUBLIC), years=2023)
>>> "2023-10-28" in br
False
>>> "2023-10-28" in br_full
True
These changes are currently available in beta version, and version 0.33 will be released next week. I hope this will be useful.
Nice. Thank you :)

2 Missing UK Bank holidays
There are normally 8 bank holidays in the UK each year (https://www.gov.uk/bank-holidays), whilst holidays.CountryHoliday("UnitedKingdom", years=2023) lists 6 regulars bank holidays.
The missing bank holidays are the "Summer bank holiday" and the "Easter Monday bank holiday". This error occurs in both 2023 and 2024.
@will-judge, thank you for your comments and useful source!
These holidays (Easter Monday and Late Summer Bank Holiday) are not common to the entire United Kingdom, but only to England, Wales and Northern Ireland (they are not holidays in Scotland). So you may find them in something like
holidays.CountryHoliday("UK", subdiv="ENG", years=2023)
(also "NIR" or "WLS" instead of "ENG").
Yeah, I was just going to reply with pretty much the same code example.
The UK holidays implementation was revamped recently (see #1316)
I hope this helps.
I believe this can be closed.

For Canada, Remembrance Day is treated differently depending on subdivisions
First, thanks for the great package! Very helpful.
Some Canadian subdivisions use the _add_observed method before adding 'Remembrance Day' as a holiday, whereas others don't use this. The effect is that Remembrance Day falling on a Sunday will have an observed day on the following Monday in 5 subdivisions but not the other 6. I haven't seen anything that these holidays are actually treated differently in this way.
In addition for those that use the self._add_observed() method, they have include_sat=False. I also haven't seen any reference that says this holiday doesn't count for a day in-lieu (i.e., observed) if falling on the Saturday but does if falling on the Sunday.
self._add_observed(self._add_remembrance_day(tr("Remembrance Day")), include_sat=False)
Used by:
NL, NS, NT, PE, SK
_add_subdiv_pe_holidays
self._add_remembrance_day(tr("Remembrance Day"))
Used by:
AB, BC, MB, NB, NU, YT
Recommended fixes:

Change all uses to use self._add_observed() before self._add_remembrance_day() (In Canada)
Set include_sat=True in all uses of self._add_observed() for Remembrance Day (In Canada)

If you agree with the changes, I can make a PR for this.
Hi Tim, thanks for filing this.
Yeah, I can't deny Canada holidays implementation needs some attention (see another recent issue #1439).
BTW, the issue detailed description is much appreciated üëç
I took a quick look and it seems those changes were added by @KJhellico (who is really good in figuring out holidays and respective observance rules). I guess it was done based on this source https://en.wikipedia.org/wiki/Public_holidays_in_Canada

If you agree with the changes, I can make a PR for this.

This would be totally awesome as we always encourage people to submit their contributions. I'd wait for a reply from @KJhellico though to make sure that proposed changes are what we want.
If you have any questions -- just let us know.
@timcashion, thank you for your feedback! I'll take a closer look at this.
I started with Alberta. Official source says nothing about additional holiday if Remembrance Day falls on weekend. The only holiday to be shifted in Alberta is Canada Day (and only if on Sunday):

Canada Day is on July 1 every year except when it falls on a Sunday, then it‚Äôs on July 2.
Thanks for the quick responses!
I guess maybe I'm misinterpreting 'observed'. My use case is to get days when offices are usually closed after a holiday that falls on a weekend. This might be a grey area as it's fairly standard practice for this to happen even if it's not in the legal definitions provided (such as your link to AB government).
For example, Canada Day was on Saturday, July 1st this year and most office workers will get the Monday off in lieu. It's not that the holiday is 'Observed' on that day, but you get a day off regardless and this day off is taken on the Monday following the holiday. The treatment of Christmas Day and Boxing Day in the package seems to follow this logic, but Remembrance Day doesn't seem to.
Yes, "Observed" in this project - it's something like "additional day off that appears when holiday falls on non-working day (weekend/Sunday/other holiday etc)". But we are trying to use reliable sources, especially official ones, to determine the rules of this "Observed" calculation.

Creating custom holidays - entity inheritance error
Hello,
i was using the following code with holidays v0.16. Now after i updated it to v0.30 i'm getting an error.
Code is in a module that's imported in another one.
Code is:
# Import datetime classes to operate with dates
from datetime import date

# Import the holidays library to check for holidays
import holidays


# Inherit IT holidays and add custom ones
class MyHolidays(holidays.IT):
    def _populate(self, year):

        holidays.IT._populate(self, year)

        # Add custom holidays
        [...]

The error i receive is:
  File "xxx\my_holidays.py", line 9, in <module>
    class MyHolidays(holidays.IT):
  File "xxx\Lib\site-packages\holidays\registry.py", line 172, in __init__
    raise TypeError(
TypeError: This is a python-holidays entity loader class. For entity inheritance purposes please import a class you want to derive from directly: e.g., `from holidays.countries import Entity` or `from holidays.financial import Entity`.

Code follows the docs https://python-holidays.readthedocs.io/en/latest/examples.html
Implementation changed? Thank you!
Following #1260 i modified my code this way:
# Import datetime classes to operate with dates
from datetime import date

# Import the holidays library to check for holidays
from holidays.countries import IT


# Inherit IT holidays and add custom ones
class MyHolidays(IT):
    def _populate(self, year):
        IT._populate(self, year)

        # Add custom holidays
        [...]

and now is working.
Docs should probably be updated.
Hi @steakhutzeee
thanks for opening this issue!
It seems you did pretty much what the error message had suggested -- imported IT from the countries module instead of the top level module:

This is a python-holidays entity loader class. For entity inheritance purposes please import a class you want to derive from directly: e.g., from holidays.countries import Entity or from holidays.financial import Entity.

We'll take care of the stale documentation update as it slipped our attention in #1087. I appreciated for pointing out to that!

Add l10n tests
Cover at least duplicated entries check.
Originally posted by @arkid15r in #1416 (comment)
resolved in #1420

Error with Austrian holidays from version 0.22
import holidays
at_holidays = holidays.AT(state=9)
'2023-12-25' in at_holidays

This code works fine up to version 0.21.13, but breaks at version 0.22 and above:
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py", line 406, in __contains__
    cast("Mapping[Any, Any]", self), self.__keytransform__(key)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py", line 384, in __keytransform__
    self._populate(dt.year)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/countries/austria.py", line 34, in _populate
    super()._populate(year)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py", line 794, in _populate
    self._add_subdiv_holidays()
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/holidays/holiday_base.py", line 764, in _add_subdiv_holidays
    self, f"_add_subdiv_{self.subdiv.lower()}_holidays", None
AttributeError: 'int' object has no attribute 'lower'

It's the same in Python 3.9. I got the error on MacOS Catalina as well as FreeBSD 13.2
I got somewhat a similar error.
AttributeError: module 'holidays' has no attribute 'CountryHoliday'
The same code was working just a couple of days ago on OSX. Now I have the same exact line on another OS (Debian), same error.
Hi @georgpfolz,
thanks for the report!
The state arg has been deprecated for a while. You can use either at_holidays = holidays.AT(subdiv=9) or at_holidays = holidays.AT(state="9") to avoid the error.
I'll look into what can be done to improve the subdivision handling on our side.
Thank you!
I got somewhat a similar error. AttributeError: module 'holidays' has no attribute 'CountryHoliday'
The same code was working just a couple of days ago on OSX. Now I have the same exact line on another OS (Debian), same error.

Hi @hinson-x,
this doesn't look the same to me. Could you file a separate issue w/ a detailed description?
Thank you!
Hello @arkid15r
Actually I found the issue. I was not too smart where I named my new test python file holiday.py too, so it was trying to.... import itself thus not finding any functions/attributes. Thanks anyhow, appreciate it.
The issue has been resolved in v0.30

Add REVISED_JULIAN_CALENDAR
Add REVISED_JULIAN_CALENDAR constant for Christian holidays of Eastern Orthodox countries that use this calendar (Bulgaria, Cyprus, Greece, Romania, from Sep 2023 - Ukraine).
I believe this was resolved by #1380

No module named 'holidays.financial'
when i make .exe app with auto-py-to-exe
and run it
it says that
No module named 'holidays.financial'
Hi @siavashvampire
thanks for bringing this up.
Could you provide more details on how to reproduce the issue? Also it's not clear what version of python-holidays you've been using.
It might happen if one of your local files is named as holidays.py
I'd start from checking no that.
Closing this, feel free to re-open if you have more information.

Document the holiday categories usage
The category list keeps growing. It has to be documented when/how each of the categories should be used. Ideally with some use case examples.

Originally posted by @arkid15r in #1347 (comment)

holiday date not correct
please update the holiday of diwali in month of november instead in october.The date for diwali is 12/11/2023 not 12/10/2023.
Which country is this for? @tyagi858
India
‚Ä¶
On Thu, 22 Jun 2023, 2:22 pm PPsyrius, ***@***.***> wrote:
 Which country is this for? @tyagi858 <https://github.com/tyagi858>

 ‚Äî
 Reply to this email directly, view it on GitHub
 <#1329 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/A6O2EO3XZAPTH6V5BFCY6SDXMQBT5ANCNFSM6AAAAAAZPWLIK4>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>
Can you confirm a bit whether if your version of python-holidays is up-to-date? Here's the code for v0.27 for example which seems correct to me: @tyagi858
        # Directly lifted Diwali and Holi dates from FBProphet from:
        # https://github.com/facebook/prophet/blob/main/python/prophet/hdays.py
        # Warnings kept in place so that users are aware
        if year < 2001 or year > 2030:
            warning_msg = "Diwali and Holi holidays available from 2001 to 2030 only"
            warnings.warn(warning_msg, Warning)

        # https://www.timeanddate.com/holidays/india/diwali
        diwali_dates = {
            2001: (NOV, 14),
            2002: (NOV, 4),
            2003: (OCT, 25),
            2004: (NOV, 12),
            2005: (NOV, 1),
            2006: (OCT, 21),
            2007: (NOV, 9),
            2008: (OCT, 28),
            2009: (OCT, 17),
            2010: (NOV, 5),
            2011: (OCT, 26),
            2012: (NOV, 13),
            2013: (NOV, 3),
            2014: (OCT, 23),
            2015: (NOV, 11),
            2016: (OCT, 30),
            2017: (OCT, 19),
            2018: (NOV, 7),
            2019: (OCT, 27),
            2020: (NOV, 14),
            2021: (NOV, 4),
            2022: (OCT, 24),
            2023: (NOV, 12),
            2024: (NOV, 1),
            2025: (OCT, 20),
            2026: (NOV, 8),
            2027: (OCT, 29),
            2028: (OCT, 17),
            2029: (NOV, 5),
            2030: (OCT, 26),
        }

        # https://www.timeanddate.com/holidays/india/holi
        holi_dates = {
            2001: (MAR, 10),
            2002: (MAR, 29),
            2003: (MAR, 18),
            2004: (MAR, 7),
            2005: (MAR, 26),
            2006: (MAR, 15),
            2007: (MAR, 4),
            2008: (MAR, 22),
            2009: (MAR, 11),
            2010: (MAR, 1),
            2011: (MAR, 20),
            2012: (MAR, 8),
            2013: (MAR, 27),
            2014: (MAR, 17),
            2015: (MAR, 6),
            2016: (MAR, 24),
            2017: (MAR, 13),
            2018: (MAR, 2),
            2019: (MAR, 21),
            2020: (MAR, 10),
            2021: (MAR, 29),
            2022: (MAR, 18),
            2023: (MAR, 8),
            2024: (MAR, 25),
            2025: (MAR, 14),
            2026: (MAR, 4),
            2027: (MAR, 22),
            2028: (MAR, 11),
            2029: (MAR, 1),
            2030: (MAR, 20),
        }

        if year in diwali_dates:
            self._add_holiday("Diwali", *diwali_dates[year])

        if year in holi_dates:
            self._add_holiday("Holi", *holi_dates[year])
Same goes for the ones used by Malaysia and Singapore.
Can u check for 0.13 version beacuse i use python3.6 version
‚Ä¶
On Thu, 22 Jun 2023, 3:25 pm PPsyrius, ***@***.***> wrote:
 Can you confirm a bit whether if your version of python-holidays is
 up-to-date? Here's the code for v0.26 for example
 <https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/india.py>
 which seems correct to me: @tyagi858 <https://github.com/tyagi858>

         # Directly lifted Diwali and Holi dates from FBProphet from:
         # https://github.com/facebook/prophet/blob/main/python/prophet/hdays.py
         # Warnings kept in place so that users are aware
         if year < 2001 or year > 2030:
             warning_msg = "Diwali and Holi holidays available from 2001 to 2030 only"
             warnings.warn(warning_msg, Warning)

         # https://www.timeanddate.com/holidays/india/diwali
         diwali_dates = {
             2001: (NOV, 14),
             2002: (NOV, 4),
             2003: (OCT, 25),
             2004: (NOV, 12),
             2005: (NOV, 1),
             2006: (OCT, 21),
             2007: (NOV, 9),
             2008: (OCT, 28),
             2009: (OCT, 17),
             2010: (NOV, 5),
             2011: (OCT, 26),
             2012: (NOV, 13),
             2013: (NOV, 3),
             2014: (OCT, 23),
             2015: (NOV, 11),
             2016: (OCT, 30),
             2017: (OCT, 19),
             2018: (NOV, 7),
             2019: (OCT, 27),
             2020: (NOV, 14),
             2021: (NOV, 4),
             2022: (OCT, 24),
             2023: (NOV, 12),
             2024: (NOV, 1),
             2025: (OCT, 20),
             2026: (NOV, 8),
             2027: (OCT, 29),
             2028: (OCT, 17),
             2029: (NOV, 5),
             2030: (OCT, 26),
         }

         # https://www.timeanddate.com/holidays/india/holi
         holi_dates = {
             2001: (MAR, 10),
             2002: (MAR, 29),
             2003: (MAR, 18),
             2004: (MAR, 7),
             2005: (MAR, 26),
             2006: (MAR, 15),
             2007: (MAR, 4),
             2008: (MAR, 22),
             2009: (MAR, 11),
             2010: (MAR, 1),
             2011: (MAR, 20),
             2012: (MAR, 8),
             2013: (MAR, 27),
             2014: (MAR, 17),
             2015: (MAR, 6),
             2016: (MAR, 24),
             2017: (MAR, 13),
             2018: (MAR, 2),
             2019: (MAR, 21),
             2020: (MAR, 10),
             2021: (MAR, 29),
             2022: (MAR, 18),
             2023: (MAR, 8),
             2024: (MAR, 25),
             2025: (MAR, 14),
             2026: (MAR, 4),
             2027: (MAR, 22),
             2028: (MAR, 11),
             2029: (MAR, 1),
             2030: (MAR, 20),
         }

         if year in diwali_dates:
             self._add_holiday("Diwali", *diwali_dates[year])

         if year in holi_dates:
             self._add_holiday("Holi", *holi_dates[year])

 ‚Äî
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/1329#issuecomment-1602351453>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/A6O2EO3TRBV3CE4LKKGQW73XMQI75ANCNFSM6AAAAAAZPWLIK4>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>
I did check and it seems that the correction above was done in v0.18 which requires python >=3.7 at the very least.
Ok, thanks for the clarification.
‚Ä¶
On Thu, 22 Jun 2023, 3:41 pm PPsyrius, ***@***.***> wrote:
 I did check and it seems that the correction above was done in v0.18
 <https://github.com/dr-prodigy/python-holidays/releases/tag/v.0.18> which
 requires python >=3.7 at the very least.

 ‚Äî
 Reply to this email directly, view it on GitHub
 <#1329 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/A6O2EOY4BPCW6AKTSFUQKKTXMQK5DANCNFSM6AAAAAAZPWLIK4>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>

HolidayBase::pop_named won't remove holiday by a partial name
File ".../home-assistant-core/venv/lib/python3.10/site-packages/holidays/holiday_base.py", line 825, in pop_named
    holiday_names.remove(name)
ValueError: list.remove(x): x not in list

Add Vanuatu holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Vanuatu
https://www.timeanddate.com/holidays/vanuatu/
https://www.gov.vu/index.php/events/holidays
Issue with make check and make pre-commit
Hi.
I want to contribute to the module because it helped me, so I want to return the favour and contribute with Adding Vanuatu.
I made two files vanuatu.py, test_vanuatu.py. I modified registry.py, init.py and README.srt
I created a new environment and started with $ make setup I ran into a problem with makefile errors

I tried to $ make check. The same error
It passed $ make test, even $ pytest -s tests/countries/test_vanuatu.py
And on $ make pre-commit, it failed rstcheck

Could someone please help me?
Hi @Strategos1
thank you for making Vanuatu holidays support possible!
I guess it would be easier to help you if you exported your code (I understand it's WIP). Try git commit / git push with --no-verify flag.
For the next troubleshooting step I'd run scripts/l10n/generate_po_files.py
@Strategos1,
Seems it's babel problem. As advised here, try to run:
TZ=UTC make setup
I just tried this on gitpod.io and there are no errors. Same for other make commands.
Accepted and merged, thank you!
No I thank you for all your help :)

Add United Republic of Tanzania holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Tanzania
https://www.timeanddate.com/holidays/tanzania/

Add Tonga holidays
Links:

https://en.wikipedia.org/wiki/Culture_of_Tonga#Public_holidays
https://www.timeanddate.com/holidays/tonga/

Add Timor-Leste holidays
Links:

https://en.wikipedia.org/wiki/Culture_of_East_Timor#Public_holidays
https://www.timeanddate.com/holidays/timor-leste/
http://timor-leste.gov.tl/wp-content/uploads/2022/03/EN_CdI_National-holidays-2.pdf
I'm working on this atm, also found the exact law wording for East Timor here: https://www.ilo.org/dyn/natlex/docs/ELECTRONIC/79910/86128/F-358739794/TMP79910.pdf
@arkid15r @KJhellico Hi, I got some quick questions here before I create a PR on this after wrapping the translation for this one, should Timor-Leste appear in the holiday registry as holidays.countries.timorleste or holidays.countries.timor_leste ?
The official country name always includes the hyphen (Timor-Leste) i.e. as seen here, pretty sure it's the same case for Guinea-Bissau (#1195) too, but the python interpreter seems to not take this well:
E     File "[directory name]\python-holidays\holidays\countries\__init__.py", line 134
E       from .timor-leste import TimorLeste, TL, TLS
E                  ^
E   SyntaxError: invalid syntax
Please let me know if you have reached a consensus on this.
He @PPsyrius,
yeah, you can't do that in Python.
I'd go with holidays.countries.timor_leste for the module name and TimorLeste for the class name based on your description.

Cannot "Pop" Combined Texas Emancipation/Juneteenth Holiday
Creating a holiday using TX as the state, there is the combined holiday 'Emancipation Day In Texas; Juneteenth National Independence Day'
Previous versions of python-holidays seemed to treat this concatenation with a comma a such: 'Emancipation Day In Texas, Juneteenth National Independence Day'
I am able to 'pop_named' the holiday in the older version, not in the newer with the semicolon seperator:
python3.6/holidays 0.11.3.1:

python 3.10/holidays .25:
I guess technically these are two separate holidays. I can pop_named them individually but it ends up removing both anyways since it pops the date itself.
seems like 'get_names' has changed since version .20 with this code from #991
Hi @jasonalsing,
I agree w/ your point that pop_named() should have kept the second holiday present. We'll spend some time to make sure the fix is ready before the next release.
Thanks for bringing this up!
thanks, that makes sense to keep secondary holidays if one is pop_named()
However, what will the behavior be if both are pop_named() in the concatenated form:
pop_named('Emancipation Day In Texas; Juneteenth National Independence Day')
currently this just fails. Should users of this module expect to have to pop them individually as well? (like two separate pops) can pop_named() method support sending multiple with the HOLIDAY_NAME_DELIMITER included?
Thanks!
Ideally it'd cover all of these use cases:

delete both for pop_named('Emancipation Day In Texas; Juneteenth National Independence Day')
delete respective holidays for pop_named('Emancipation Day In Texas) and pop_named('Juneteenth National Independence Day')

As for now I don't see any reason why it should be implemented in a different way. I'll confirm when we get closer to the implementation process.
Implemented in #1306, in beta now

Bug in version 0.25: TypeError: object.__init__() takes exactly one argument (the instance to initialize)
Ran into a bug that was solved by downgrading to 0.24.
Here's the errror:
https://github.com/dr-prodigy/python-holidays/blob/6ce469d50ff2be42cb4cd4dbc6b150fe02791edf/holidays/registry.py#L178
TypeError: object.__init__() takes exactly one argument (the instance to initialize) 
Traceback (most recent call last):   File "/opt/main.py", line 247, in <module>     from model.predict import predict as entrypoint   File "/usr/local/lib/python3.8/site-packages/model/predict.py", line 7, in <module>     from prophet import Prophet   File "/usr/local/lib/python3.8/site-packages/prophet/__init__.py", line 7, in <module>     from prophet.forecaster import Prophet   File "/usr/local/lib/python3.8/site-packages/prophet/forecaster.py", line 19, in <module>     from prophet.make_holidays import get_holiday_names, make_holidays_df   File "/usr/local/lib/python3.8/site-packages/prophet/make_holidays.py", line 14, in <module>     import prophet.hdays as hdays_part2   File "/usr/local/lib/python3.8/site-packages/prophet/hdays.py", line 779, in <module>     class TU(Turkey):   File "/usr/local/lib/python3.8/site-packages/holidays/registry.py", line 178, in __init__     super().__init__(*args, **kwargs)
Duplicate of https://github.com/dr-prodigy/python-holidays/issues/1200.
The https://github.com/dr-prodigy/python-holidays/issues/1260 might also be useful.

TypeError: object.__init__() takes exactly one argument (the instance to initialize)
Hi,
I have been using the holidays package since the last six months for my enterprise's project and never have had this issue before:

I don't know if this comes from the recent release of version 0.25 or not. But could someone please check on this and help me out. Thanks a ton in advance!
This is an issue with v0.25 - use v0.24 instead
Thanks for teh response @ngerald . Could you please provide some sort of evidence to back this claim? For instance, is this bug a result of introducing entity lazy loading as in https://github.com/dr-prodigy/python-holidays/pull/1087?
This issue on the holidays package repo should serve as evidence: https://github.com/dr-prodigy/python-holidays/issues/1200. Yes, it was an issue with the EntityLoader in the issue you mentioned.
@TaherHabib if it's related to prophet you need to update to the most recent version that has the issue fixed.
If it's something else -- your enterprise project's code needs to be changed to import entries from holidays.countries / holidays.financial instead of directly from holidays for inheritance.
Hi @arkid15r, many thanks for responding.
No, the issue is not related to prophet in this particular case. It is rather that I am creating my enterprise's own holiday class which, by design, inherits from holidays.AT or holidays.DE to populate the standard calendar holidays; and on top, I am adding a few more holidays to the dict which are unique to my enterprise.
It is when the interpreter executes this inheritance code that the error gets generated.
Also, your proposed fix doesn't solve my issue. Based on your suggestion, I basically:
changed the class definition/inheritance from this:
import holidays
class SomeHolidays(holidays.AT)
    """
    <Body of the class>
    """
To this:
import holidays
class SomeHolidays(holidays.countries.AT)
    """
    <Body of the class>
    """
And now, it gives me this error:  AttributeError: module 'holidays' has no attribute 'countries'
I am sure I am making some mistake here in terms of interpreting your suggested solution, could you please elaborate on the matter? Thanks!
@TaherHabib, please, try
from holidays.countries import AT

class SomeHolidays(AT):
    """
    <Body of the class>
    """
Thank you @KJhellico for the suggestion. It seems to have worked for me :)
However, now I am faced with a different issue! :/
The inheritance and class initialization works fine now, however, when I call the MyEnterpriseHolidays method get_dict_holidays(self, subdiv) which basically returns the holiday dictionary (object of SomeHolidays(<country_code: AT or DE>)) based on the country and the subdivision, I get the following error traceback when running for Austria:

Line where the error occurs:

Pytest Summary of all tests using MyEnterpriseHolidays():

Skeleton of my class:
from holidays.countries import AT

class MyEnterpriseHolidays():
    def __init__(self, ...):
        # <class attributes incl. `country_code`>
    
    def get_dict_holidays(self, subdiv):
        if self.country_code == 'AT':
            return SomeHolidaysAT(
                        subdiv=subdiv, 
                        years=list(range(some_past_yr, some_future_yr))
                        )
        elif self.country_code == 'DE':
            return SomeHolidaysDE(
                        subdiv=subdiv, 
                        years=list(range(some_past_yr, some_future_yr))
                        )

class SomeHolidaysAT(AT):
   
    def _populate(self, year):
        AT._populate(self, year)
        # Further Add customized holidays

class SomeHolidaysDE(DE):

    def _populate(self, year):
        DE._populate(self, year)
        # Further Add customized holidays
Any suggestions on where this might be going wrong or how to fix it? Thanks once again! Really appreciate the help
This error means that most likely holiday from year other than year is being added somewhere in SomeHolidaysAT::_populate().
@KJhellico Thanks a lot for your inputs. The package now works just fine, as expected, again! :)

Missing Orthodox Good Friday in Greece national holiday
Hello team,
I was looking at your package's data and noticed one missing day for Greece.
Source: https://www.officeholidays.com/countries/greece/2022
Missing day: 2023 Fri, Apr 14 National Holiday (Orthodox Good Friday)
Would it be possible to include it in your package, please?
Best regards,
David Boudart
Hi @DBoudart23,
I guess somebody will volunteer and fix this soon as it's quite simple and straightforward.
Huge thanks for reporting this, David!
Thank you very much, @arkid15r
Implemented in https://github.com/dr-prodigy/python-holidays/pull/1257
Thanks everyone!
Thank you!!
Hi @arkid15r ,
I looked at the holiday package and couldn't find the mentioned national holiday configured.
gk_holidays = holidays.country_holidays('Greece')
gk_holidays.get('2023-04-14')  # Good friday

Returns no records at all.
Can you kindly help me understand the reason?
It'll be available starting v0.26 that's going to be released today.
Gotcha - thank you very much for the quick answer

Add Papua New Guinea holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Papua_New_Guinea
https://www.timeanddate.com/holidays/papua-new-guinea/
I'm working on this at the moment based on the actual law itself as of 1953 and wayback machine copy for actual holiday dates between 2021-2024

Add Maldives holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Maldives
https://www.timeanddate.com/holidays/maldives/
http://www.mma.gov.mv/#/about/bankholidays
Implemented in #1508.

Add Laos holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Laos
https://www.timeanddate.com/holidays/laos/
More on this, aside from the official ASEAN calendar for 2022-2023 we use for double-checking in Brunei and Cambodia's PR:


There appears to be a Laotian Securities Exchange Official Calendar here which from a quick check only works from 2019 only. Interestingly enough the calendar indicates that observance/in-lieu are added to the next working day if existing holiday fall on the weekends. -> ‡∫û‡∫±‡∫Å‡∫ä‡∫ª‡∫î‡ªÄ‡∫ä‡∫µ‡∫ç%s


Laotian Keyword search: ‡∫ß‡∫±‡∫ô‡∫û‡∫±‡∫Å on Lao Official Gazette i.e. 2018 Official Calendar

Missing: Victoria Day (Nova Scotia, Canada)
Looks like most provinces in https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/canada.py have Victoria Day listed.
Victoria Day is also celebrated here in Nova Scotia but there is no reference in the _add_subdiv_ns_holidays function.
I'm afraid that isn't the case according to RCC:

Nova Scotia: Despite provincial tradition, Victoria Day is not a statutory holiday nor is it a retail closing day. This creates confusion in the province as many Nova Scotia businesses close for Victoria Day and some even provide their employees with a paid day off. Yet, under the law, retailers are free to open on this day and employees do not have the right to refuse to work.
Hi @program-the-brain-not-the-heartbeat,
could you provide some additional information or references to look into in order to confirm the claim?
Thank you!
Sorry for the delay, my apologies. It is a non-statutory holiday.
Wasn't sure if this library considers non-statutory holidays as holidays or not.

Add Iran holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Iran
https://www.timeanddate.com/holidays/iran/
Hi @arkid15r
This is a list of Iranian holidays (en-IR),
Based on the official document:
https://calendar.ut.ac.ir/Fa/News/Data/Doc/Calendar%201402.pdf
Used Google Calendar translation:
https://calendar.google.com/calendar/embed?src=en.ir%23holiday%40group.v.calendar.google.com
https://calendar.google.com/calendar/ical/en.ir%23holiday%40group.v.calendar.google.com/public/basic.ics



#
Title
Day
Month
Calendar




1
Revolution Day
2
11
Gregorian


2
Oil   Nationalization Day
3
20
Gregorian


3
Norooz (Persian New Year)
3
21
Gregorian


4
Norooz   Holiday
3
22
Gregorian


5
Norooz Holiday
3
23
Gregorian


6
Norooz   Holiday
3
24
Gregorian


7
Islamic Republic Day
4
1
Gregorian


8
Nature   Day
4
2
Gregorian


9
Demise of Imam Khomeini
6
4
Gregorian


10
Khordad   National Uprising
6
5
Gregorian


11
Tassoua
1
9
Islamic


12
Ashura
1
10
Islamic


13
Arbaeen
2
20
Islamic


14
Demise   of Prophet Muhammad and Martyrdom of Imam Hassan
2
28
Islamic


15
Martyrdom of Imam Reza
2
29
Islamic


16
Martyrdom   of Imam Hasan al-Askari
3
8
Islamic


17
Birthday of Prophet Muhammad and   Imam Sadeq
3
17
Islamic


18
Martyrdom   of Hazrat Fatima
6
3
Islamic


19
Birthday of Imam Ali and   Father's Day
7
13
Islamic


20
Prophet's   Ascension
7
27
Islamic


21
Imam Mahdi's birthday
8
15
Islamic


22
Martyrdom of Imam Ali
9
21
Islamic


23
Eid-e-Fetr (End of Ramadan)
10
1
Islamic


24
Eid-e-Fetr   (Additional Holiday)
10
2
Islamic


25
Martyrdom of Imam Sadeq
10
25
Islamic


26
Eid-e-Ghorban   (Feast of Sacrifice)
12
10
Islamic


27
Eid-e-Ghadir
12
18
Islamic



(Download JSON version: fa-IR.json)
Thanks for sharing this @xmha97!
Thanks for sharing this @xmha97!

@arkid15r You're welcome.
But note that some events in Iran are based on the Gregorian calendar and others are based on the Islamic calendar.
In addition, can I add events of Iran in Persian language (fa-IR)?
I haven't used your library yet and I don't know if it has language capability or not.
But note that some events in Iran are based on the Gregorian calendar and others are based on the Islamic calendar.

Yeah, that's fine. We have countries that use multiple calendars for their holidays.

In addition, can I add events of Iran in Persian language (fa-IR)?
I haven't used your library yet and I don't know if it has language capability or not.

Yes, it's possible to localize holiday names. The original holiday names should (preferably) be in country's official language which I believe fa_IR actually is.
Yes, it's possible to localize holiday names.

This is great. üëç
In what format should I send events? I need a template.
Do you agree with posting a comment on this issue?
Normally, when a person volunteers to add a new country holidays support it goes straight to the library code of the new country (see #1168 as one of the most recent examples). If a country support has already been implemented the l10n process requires regular .po files like this one. You can find some additional info here.
Posting the original holiday names here would of course be appreciated but does not guaranty adding them to the python-holidays until somebody implements the code.
I hope I interpreted your questions correctly.
Implemented in #1409

TypeError: object.__init__() takes exactly one argument (the instance to initialize)
When using the latest version of the holidays, getting the following error.
File "/usr/local/airflow/.local/lib/python3.7/site-packages/prophet/hdays.py", line 683, in <module> class TU(Turkey): File "/usr/local/airflow/.local/lib/python3.7/site-packages/holidays/registry.py", line 178, in __init__ super().__init__(*args, **kwargs) TypeError: object.__init__() takes exactly one argument (the instance to initialize)
Please help someone to fix this issue in the holidays module
+1 -  v0.25 does't work for me, but v0.24 was OK.
+1 Holidays v0.24 worked for me - fixed the prophet issue
This was addressed in #1208
Please use v0.24 as a workaround or let me know if you need help w/ class inheritance migration.

Add Guatemala holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Guatemala
https://www.timeanddate.com/holidays/guatemala/
Implemented in https://github.com/dr-prodigy/python-holidays/pull/1364

Add Ghana holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Ghana
https://www.timeanddate.com/holidays/ghana/
https://www.mint.gov.gh/statutory-public-holidays/
https://www.bog.gov.gh/official-holidays/
I can pick this up if it's still available
Hi @JerryAgbesi, assigning this to you
Thank you!
@JerryAgbesi this has been merged into beta!
Thanks a lot for your contribution and the efforts to address the PR review comments!

Add Gabon holidays
Links:

https://en.wikipedia.org/wiki/Public_holidays_in_Gabon
https://www.timeanddate.com/holidays/gabon/
Implemented in #1244.

Error being emitted by holidays==0.25
Just had pytest tests in a pipeline start emitting an error culminating in:
../../anaconda3/envs/dp_env_new/lib/python3.8/site-packages/holidays/registry.py:178: in init
super().init(*args, **kwargs)
E   TypeError: object.init() takes exactly one argument (the instance to initialize)
The error goes away if I force holidays==0.24 (holidays was being installed as a dependency of prophet==1.1).  The pipeline is using Python 3.8.
Hi @rdunlap-inspire11,
thanks for reporting this.
Please see facebook/prophet#2431
same issue is occurring with greykite import as well when running
from greykite.framework.templates.forecaster import Forecaster
The corresponding prophet issue has been resolved.
Closing this.

same issue is occurring with greykite import as well when running from greykite.framework.templates.forecaster import Forecaster

If the issue had been caused by prophet was also fixed (prophet v1.1.3)

Update README.rst: consider merging available and localized country tables
The default / supported languages can be integrated into "Available countries" table.
// based on @KJhellico's idea
Implemented in https://github.com/dr-prodigy/python-holidays/pull/1241

Add El Salvador holidays
Links:

https://www.timeanddate.com/holidays/el-salvador/
https://www.officeholidays.com/countries/el-salvador/2022
Implemented in #1198.

Add Chad holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Chad
https://www.timeanddate.com/holidays/chad/
Implemented in #1279.

Add Cameroon holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Cameroon
https://www.timeanddate.com/holidays/cameroon/
Implemented in #1243.

Add Cambodia holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Cambodia
https://www.nbc.gov.kh/english/news_and_events/official_holiday.php
https://www.timeanddate.com/holidays/cambodia/
I'll try to tackle this myself later (as well as Laos) - considering the fact that their Buddhist calendar are the same as Thailand's
Additional source: https://mef.gov.kh/calendar-2021/ got official calendars for cross-checking from 2020-2023 though their 2020 ones has yet to accounted for Covid-19 postponements.
Resolved in #1294

Add Burkina Faso holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Burkina_Faso
https://www.timeanddate.com/holidays/burkina-faso/
Implemented in #1278.

Add Brunei Darussalam holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Brunei
https://www.timeanddate.com/holidays/brunei/
I'm working on this at the moment, though I've yet to find the relevant legal clause on in-lieu holidays being observed on the following Saturday and Monday if they fall on Friday and Sunday yet based on ASEAN's 2022 and 2023 calendar.
Other sources I'm working with right now (Wikipedia didn't cite any sources, so it's hardly usable):

Brunei's Ministry of Labour website
Specific Clause on Employment Order, 2009

That and the Armed Forces Day despite being a public holiday, are not covered in Employment Order, 2009.
Gonna move the to-do codes here for possible #1168 extensions should anyone be up for it:
# Former Holidays
# This section is here should we extend our calendar coverage later on.

# Good Friday
# Good Friday
# Status: No longer observed post-Independence.

# Freedom Day
# Hari Kebebasan
# Status: No longer observed.
# Commemorating the landing of the Allies in Muara to liberate Brunei
#   on June 10, 1945. Presumed to be observed from 1946-1983.

# Queen Elizabeth II's Birthday
# Hari Lahir Queen
# Status: No longer observed.
# Observed on June, 12 from 1952-1983.

# Sultan Omar Ali Saifuddien III's Birthday
# Hari Lahir Duli Yang Maha Mulia
# Status: No longer observed.
# Observed on September, 23 from 1950-1967.

# Safar Bath
# Mandi Safar
# Status: No longer observed.
# Observed on last Wednesday on the month of Safar until around 1963.
Implemented in #1168.

Add Belize holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Belize
https://www.pressoffice.gov.bz/public-and-bank-holidays-2022-updated/
https://www.timeanddate.com/holidays/belize/
Implemented in #1181.

Add Barbados holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Barbados
https://www.timeanddate.com/holidays/barbados/
Assign to me please, I'd like to help out.  Possibly even with more.
@arjunanan6 you got it.
Thank you!
@arkid15r Pretty much done here, but I can't commit.. I get a lot of errors relating to the pre-checks:
[INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1689880665-42063.
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...........................................(no files to check)Skipped
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Failed
- hook id: trailing-whitespace
- exit code: 1
- files were modified by this hook

Fixing tests/countries/test_barbados.py

black....................................................................Failed
- hook id: black
- files were modified by this hook

reformatted holidays/countries/barbados.py

All done! ‚ú® üç∞ ‚ú®
1 file reformatted, 1 file left unchanged.

flake8...................................................................Failed
- hook id: flake8
- exit code: 1

holidays/countries/barbados.py:66:100: E501 line too long (110 > 99 characters)

isort....................................................................Failed
- hook id: isort
- files were modified by this hook

Fixing /Users/arjun/Documents/git/python-holidays/holidays/countries/barbados.py

mypy.....................................................................Passed
rst ``code`` is two backticks........................(no files to check)Skipped
rstcheck.............................................(no files to check)Skipped
tox-ini-fmt..........................................(no files to check)Skipped
setup-cfg-fmt........................................(no files to check)Skipped
[WARNING] Stashed changes conflicted with hook auto-fixes... Rolling back fixes...

Any idea what's happening here? I believe I set up everything according to the contributor's guide.
Issue is with: make l10n
@arjunanan6 try to run make pre-commit, this should fix these errors.
@KJhellico Thanks. make pre-commit goes through without a hitch, but when I push my changes it once again fails at "run tests":
run tests................................................................Failed
- hook id: tests
- exit code: 2

make l10n
make[1]: Entering directory 'C:/Users/arjun/Documents/git/python-holidays'
scripts/l10n/generate_po_files.py >/dev/null 2>&1
make[1]: *** [Makefile:27: l10n] Error 1
make[1]: Leaving directory 'C:/Users/arjun/Documents/git/python-holidays'
make: *** [Makefile:15: check] Error 2
The pre-commit runs make check (includes make l10n, make pre-commit, make doc, and make test) command via pre-commit/pre-push hooks.
It seems the problem is w/ scripts/l10n/generate_po_files.py. Its output is suppressed when running via make l10n
Could you run scripts/l10n/generate_po_files.py directly for (hopefully) more descriptive error message?
A link to your exported code branch could also help to troubleshoot it.
My guess is that .po files have some unresolved conflicts (or malformated in some other way).
A link to your exported code branch could also help to troubleshoot it.

I can't commit as it stands, so can't even get the branch pushed. :(
I just ran scripts/l10n/generate_po_files.py and this is the output:
Traceback (most recent call last):
  File "C:\Users\arjun\Documents\git\python-holidays\scripts\l10n\generate_po_files.py", line 111, in <module>
    POGenerator.run()
  File "C:\Users\arjun\Documents\git\python-holidays\scripts\l10n\generate_po_files.py", line 107, in run
    POGenerator().process_countries()
  File "C:\Users\arjun\Documents\git\python-holidays\scripts\l10n\generate_po_files.py", line 73, in process_countries
    create_pot_file(
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\click\core.py", line 1130, in __call__
    return self.main(*args, **kwargs)
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\click\core.py", line 1055, in main
    rv = self.invoke(ctx)
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\click\core.py", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\click\core.py", line 760, in invoke
    return __callback(*args, **kwargs)
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\lingua\extract.py", line 426, in main
    for message in extractor(real_filename, extractor_options):
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\lingua\extractors\python.py", line 415, in __call__
    return parser(token_stream, options, filename, lineno)
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\lingua\extractors\python.py", line 187, in __call__
    for (token_type, token, location, _) in token_stream:
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\lingua\extractors\python.py", line 162, in next
    token = self._transform(next(self.queue))
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\tokenize.py", line 452, in _tokenize
    line = readline()
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\site-packages\lingua\extractors\python.py", line 122, in __call__
    line = self.readline()
  File "C:\Users\arjun\AppData\Local\Programs\Python\Python310\lib\encodings\cp1252.py", line 23, in decode
    return codecs.charmap_decode(input,self.errors,decoding_table)[0]
UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 2954: character maps to <undefined>
I've tried this out on my win. machine by the way, on my mac it gives me all the errors from my first comment. I tried out the same files on win. where it reports just this issue with l10n.
On Windows, localization process is currently problematic. If you want to try this on Win, to solve encoding problem, you need to set environment variable:
set PYTHONUTF8=1
(and better to delete holidays\locale\pot\*.* files, if any exist). So it's easier to try it on Mac, if you can.

on my mac it gives me all the errors from my first comment

It's pre-commit hook output. These errors were fixed by make pre-commit. Now try to run scripts/l10n/generate_po_files.py there, on Mac. What will it show?
I ran scripts/l10n/generate_po_files.py now on my mac and it outputs:
No changes found - not replacing holidays/locale/pot/AM.pot
No changes found - not replacing holidays/locale/pot/AR.pot
No changes found - not replacing holidays/locale/pot/AW.pot
No changes found - not replacing holidays/locale/pot/BA.pot
No translatable strings found, aborting
And this is the output of make pre-commit from the mac:
pre-commit run --all-files
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...............................................................Passed
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Passed
black....................................................................Passed
flake8...................................................................Passed
isort....................................................................Passed
mypy.....................................................................Failed
- hook id: mypy
- exit code: 1

scripts/generate_release_notes.py:82: error: Module has no attribute "BooleanOptionalAction"  [attr-defined]
Found 1 error in 1 file (checked 314 source files)

rst ``code`` is two backticks............................................Passed
rstcheck.................................................................Passed
tox-ini-fmt..............................................................Passed
setup-cfg-fmt............................................................Passed
make: *** [pre-commit] Error 1
I ran scripts/l10n/generate_po_files.py now on my mac and it outputs:

Try to delete holidays/locale/pot/*.pot files first.

scripts/generate_release_notes.py:82: error: Module has no attribute "BooleanOptionalAction"  [attr-defined]

What's your Python version? This argparse option was added in 3.9. @arkid15r , looks like we have a bit of an inconsistency here üôÑ
Deleted *.pot files as suggested, but I am not really seeing a difference. My python version is 3.8.5.
Do you think upgrading to 3.9 will help? I have no problems doing that.
Yes, try with 3.9 minimum.
scripts/generate_release_notes.py:82: error: Module has no attribute "BooleanOptionalAction"  [attr-defined]
What's your Python version? This argparse option was added in 3.9. @arkid15r , looks like we have a bit of an inconsistency here üôÑ


Yeah, I guess # type: ignore[attr-defined] should be added to L82. It's not a big deal as the script is for internal purposes, but you're right, we should address that.
@arjunanan6 either that or upgrade to python 3.9 should help.
So I am now using python 3.11.1 and have set up a new venv and ran make setup.
Following that, I ran make pre-commit which outputs:
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...............................................................Passed
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Passed
black....................................................................Passed
flake8...................................................................Passed
isort....................................................................Passed
mypy.....................................................................Passed
rst ``code`` is two backticks............................................Passed
rstcheck.................................................................Passed
tox-ini-fmt..............................................................Passed
setup-cfg-fmt............................................................Passed

However, if I were to commit something after that, it is back to the same situation as before:
% git commit -m "Add Barbados holidays"
[WARNING] Unstaged files detected.
[INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1690020648-79795.
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...........................................(no files to check)Skipped
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Failed
- hook id: trailing-whitespace
- exit code: 1
- files were modified by this hook

Fixing tests/countries/test_barbados.py

black....................................................................Failed
- hook id: black
- files were modified by this hook

reformatted holidays/countries/barbados.py

All done! ‚ú® üç∞ ‚ú®
1 file reformatted, 1 file left unchanged.

flake8...................................................................Failed
- hook id: flake8
- exit code: 1

holidays/countries/barbados.py:66:100: E501 line too long (110 > 99 characters)

isort....................................................................Failed
- hook id: isort
- files were modified by this hook

Fixing /Users/arjun/Documents/git/python-holidays/holidays/countries/barbados.py

mypy.....................................................................Passed
rst ``code`` is two backticks........................(no files to check)Skipped
rstcheck.............................................(no files to check)Skipped
tox-ini-fmt..........................................(no files to check)Skipped
setup-cfg-fmt........................................(no files to check)Skipped
[WARNING] Stashed changes conflicted with hook auto-fixes... Rolling back fixes...

I'm at a loss :/
> [WARNING] Unstaged files detected.
> [INFO] Stashing unstaged files to /Users/arjun/.cache/pre-commit/patch1690020648-79795.

Maybe you have unstaged changes made by pre-commit? Try to look with git status and add them with git add if necessary.
Oh damn, that was it. Such a silly mistake! I can now run commit, however, when I push..:
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...........................................(no files to check)Skipped
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Passed
black....................................................................Passed
flake8...................................................................Passed
isort....................................................................Passed
mypy.....................................................................Passed
rst ``code`` is two backticks........................(no files to check)Skipped
rstcheck.............................................(no files to check)Skipped
tox-ini-fmt..........................................(no files to check)Skipped
setup-cfg-fmt........................................(no files to check)Skipped
run tests................................................................Failed
- hook id: tests
- exit code: 2

make l10n
scripts/l10n/generate_po_files.py >/dev/null 2>&1
make[1]: *** [l10n] Error 2
make: *** [check] Error 2

error: failed to push some refs to 'github.com:arjunanan6/python-holidays.git'

I can however run generate_po_files.py on its own without any errors.
> run tests................................................................Failed
> - hook id: tests
> - exit code: 2

Run make test, you should see errors.
I ran make test now, and indeed, I missed out on a doc change. That''s fixed, and make test runs without errors now. However, I am still getting an error when pushing:
check python ast.........................................................Passed
check builtin type constructor use.......................................Passed
check yaml...........................................(no files to check)Skipped
fix end of files.........................................................Passed
fix python encoding pragma...............................................Passed
mixed line ending........................................................Passed
trim trailing whitespace.................................................Passed
black....................................................................Passed
flake8...................................................................Passed
isort....................................................................Passed
mypy.....................................................................Passed
rst ``code`` is two backticks............................................Passed
rstcheck.................................................................Passed
tox-ini-fmt..........................................(no files to check)Skipped
setup-cfg-fmt........................................(no files to check)Skipped
run tests................................................................Failed
- hook id: tests
- exit code: 2

make l10n
scripts/l10n/generate_po_files.py >/dev/null 2>&1
make[1]: *** [l10n] Error 2
make: *** [check] Error 2

error: failed to push some refs to 'github.com:arjunanan6/python-holidays.git'

Truncated output from make test:
1852 passed in 32.50s
scripts/l10n/generate_po_files.py executed without errors? And scripts/l10n/generate_mo_files.py too?
Yes, both of those execute without any errors.
As I understand, the issue is with 	make l10n. I can run make pre-commit just fine. But if run make l10n, I get this:
scripts/l10n/generate_po_files.py >/dev/null 2>&1
make: *** [l10n] Error 2

And there's no problem executing scripts/l10n/generate_mo_files.py or scripts/l10n/generate_po_files.py.
Well, that doesn't make too much sense to me as make l10 is just an alias for running those 2 script consequently (see https://github.com/vacanza/python-holidays/blob/master/Makefile#L26).
Does make l10 command fail when you run it explicitly?
As this is just a local hook you should be able to suppress it w/ --no-verify flag and export your code. This would simplify the troubleshooting process a lot.
I hope this would work for you.
Does make l10 command fail when you run it explicitly?

It does, weirdly. I've looked at the Makefile and figured out what it does, but I can't seem to figure out why the two scripts execute individually, but not when run with make l10.
Anyway, I've pushed the changes with --no-verify. Thanks a lot for your support and patience!
That's a great progress! Thanks for getting it done, Arjun.
I'd think of it as a part of the process. I bet you already have or will learn something new during your work on this PR :)
Absolutely, and it was a great experience.
Sorry, I've made it against the master branch and not beta. Fixing that now and I will send in the new PR! :)
@arkid15r Sorry, I might need your help again, I've made a PR in the 'right' way, but it looks like it still wants to go to master rather than beta.
I've forked this repo and cloned my fork, switched to the beta branch and then made my own branch. Should do the trick normally. Or did I miss something?
You can select target branch when creating PR on Github
I changed the branch to beta :)
Nice, thank you! :)
I will keep that in mind for next time.
I suppose this one can be closed now @arkid15r.
That's right, I'll take care of it.
It hasn't been auto-closed after the merge as beta isn't the default branch (may be revisited soon).
Implemented by @arjunanan6 in #1393

Add Bahamas holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_the_Bahamas
https://www.timeanddate.com/holidays/bahamas/
Ironically enough, none of the government site got usable data except for https://www.bahamashclondon.net/consular-information/public-holidays/, but that was for 2020.
With some random resort got better formatted sources (but still only on par to Wikipedia): https://tainobeach.com/amenities/grand-bahama-island/holidays/
Edit: nvm, found it - thank god ILO source exists: https://www.ilo.org/dyn/travail/docs/1204/PublicHolidaysAct_1.pdf

Add Algeria holidays
Useful links:

https://en.wikipedia.org/wiki/Public_holidays_in_Algeria
https://www.timeanddate.com/holidays/algeria/
Implemented in #1176

Add a list_all_countries_with_translations() function?
Dear python-holiday devs,
First of all, thank you very much for this very useful library and for all the hard work you put in it! üëè
That said, I'd love if there could be an option to get a list of the countries that have at least one translation (and also get the languages they're translated into).
I'm testing a function I've written, which at first sight seems to be working, but I haven't thoroughly checked it. I assume stuff (explained in the pydocs for the function) that just might be wrong.
If you happen to find some time and feel like it, would you mind taking a quick look at it?
def list_all_countries_with_translations() -> Dict[str, List[Optional[str]]]:
    """
    Recursively search for all .po files in python-holidays's locale dir.
    Assume the filename is the country code the parent's parent dir is the language.

    The structure looks like this:

    holidays/locale/{lang}/LC_MESSAGES/{country_code}.po

    Returns a dict whose keys are the country_codes and whose values are the list of
    languages that are available for that country.

    Beware that countries without any translation won't have their key present in
    the resulting dictionary.
    """
    module_dir = os.path.dirname(os.path.abspath(holidays.__file__))
    locale_dir = os.path.join(module_dir, 'locale')
    country_codes = {}
    for root, dirs, files in os.walk(locale_dir):
        for file in files:
            if file.endswith('.po'):
                country_code = re.sub(r'(.*)\.po', r'\1', file)
                lang = os.path.basename(os.path.dirname(root))
                country_codes.setdefault(country_code, []).append(lang)
    return dict(sorted(country_codes.items()))
If you like the idea, and feel like adding it to holidays, please feel free to do so. If not, it doesn't really bother me having it somewhere in my python code. I am just not sure if my assumptions are correct.
P.D.- As to why I'd like to have something like this. I was looking for an ICS URL for the city I live in so that I could subscribe to it. And just couldn't find it, which brought me to trying to generate one. Which brought me to your lib. And it worked great! Then I thought I might as well just export all ICS files and publish them. So I ended up creating a super simple GitLab page[1] so that I can set my calendar apps to update from there periodically ü§∑
Holy Moly Days!
And I though I could add the translations whenever available... üòä
Hi @juanitobananas, thanks for your request!
This is totally valid idea that should be implemented as our l10n approach has been in place for a while and seems to be working fine. We could reuse the code you kindly provided (or similar, depending on the implementation details) to close https://github.com/dr-prodigy/python-holidays/issues/984 as well.
I guess these are the parts of PH you might find useful:

https://github.com/dr-prodigy/python-holidays/blob/master/holidays/holiday_base.py#L291
https://github.com/dr-prodigy/python-holidays/blob/master/scripts/l10n/generate_mo_files.py#L25

or just wait until the utils::list_localized_countries() is implemented.
Your project looks great and the name is lit üî•
Hey @arkid15r, thanks for getting back to me that fast!

This is totally valid idea that should be implemented as our l10n approach has been in place for a while and seems to be working fine.

Nice!

We could reuse the code you kindly provided (or similar, depending on the implementation details) to close https://github.com/dr-prodigy/python-holidays/issues/984 as well.

If it's worth anything, please do so üòÑ

I guess these are the parts of PH you might find useful:

https://github.com/dr-prodigy/python-holidays/blob/master/holidays/holiday_base.py#L291
https://github.com/dr-prodigy/python-holidays/blob/master/scripts/l10n/generate_mo_files.py#L25

Thanks, I'll take a closer look at that.

or just wait until the utils::list_localized_countries() is implemented.

And will most probably still wait for this. For the moment, my code seems to work. Well enough for the (very probably) sole user üòâ
Again, thank you very much!
Cheers
Okay, the #1185 with utils::list_localized_countries()has just been merged into beta.
Beautiful! Thank you so much for that!
I haven't had time to test it out until now. And I had completely forgotten how everything worked. Fortunately, I can just use it as a drop-in replacement of my own code üòâ
Thank you so much again!
Sure!
Thanks for the suggestion @juanitobananas, it was quite valuable üëç

Add pre-calculated data for Korean lunar calendar
Similar to https://github.com/dr-prodigy/python-holidays/pull/1090 and https://github.com/dr-prodigy/python-holidays/pull/1104 we need to apply the approach  to use cases of the korean-lunar-calendar.
Implemented in #1148.

ImportError after updating to newer version
I updated from holidays==0.11.1 to 0.23 and got the following error
Exception has occurred: ImportError       (note: full exception trace is shown but execution is paused at: _run_module_as_main)
cannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura' (d:\workspace\cerox\venv\lib\site-packages\hijri_converter\ummalqura.py)

I installed hijri-converter==2.3.1 manually to fix it.
I propose to add a constraint to the version of hijri-converter in setup.cfg
may be related to #425
I believe that's a pip cache issue. When the hijri-converter package is required without a version specifier, the pip tends to install a cached version, which could be missing new features used.
To solve this temporarily, run pip install -U hijri-converter.
However, as you said, a compatible version should be specified in setup.cfg.
This dependency is no longer in use for the recent PH version(s).
Please upgrade if possible.
Thank for reporting this.

Add pre-calculated holidays scripts
The documentation part need some attention. The docstring has to include some information on how these dates have been generated so next time we could try this process to extend the date list.

I have a script for this class code generation. Probably, it should be added in scripts/.
Originally posted by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1090#discussion_r1172628892
It seems that dependencies need to be updated too.
It'd be great to update the script with the changes related to the latest calendars data migrations!
Closed by #1128, #1219, #1222.

Depend on hijridate rather than hijri-converter
Greetings holidays maintainers! Thanks for making working with the world's holidays in Python fast and flexible.
I see that hijri-converter has been deprecated and hijridate is the recommended dependency to take. Are there plans to migrate to hijridate in the near future?
Hi @metrizable, thanks for the question!
Let me share a link to this PR first.
We'll make sure the mentioned deprecation doesn't affect PH.
Thank you for bringing our attention to this!
Currently, both packages hijri-coverter and hijridate are fully compatible except for the name, which only requires replacement.
Additionally, to avoid breaking changes or issues such as #1127 in the future, I highly recommend specifying the required version to a compatible version, e.g. hijridate~=2.3.0
hijridate is now a source for estimated Islamic holidays.
Thank you!

Time span performance
Firstly, thank you for producing a great library! This tool is invaluable!
Problem
Was curious if the following performance characteristics are expected, or if there is scope to enhance lazy loading?
In [1]: import holidays

In [2]: %timeit holidays.country_holidays("GB", years=range(2000, 2100))
2.14 ms ¬± 4.18 ms per loop (mean ¬± std. dev. of 7 runs, 10 loops each)
Vs manually querying each year. For my use case, I would prefer to be able query holidays lazily (for a given year), vs eagerly loading a given time period.
In [3]: def manual():
    ...:     for year in range(2000, 2100):
    ...:         holidays.country_holidays("GB", years=year)

In [4]: %timeit manual()
11.1 ms ¬± 993 ¬µs per loop (mean ¬± std. dev. of 7 runs, 10 loops each)
Hi,
thank you for your appreciation in our lib :-)
I hope I'm catching it right, but in fact, in python_holidays' standard usage you shouldn't definitely need to pre-initialize a year range.
Here's a sample code to check a date, as taken from here:
from datetime import date
import holidays

us_holidays = holidays.US()  # this is a dict
date(2015, 1, 1) in us_holidays  # True

As you can see, it is sufficient to check presence of a specific date in a holidays dict to have it initialized for that year.
Does this answer your question?
Hello,
Thank you for you reply,
It looks like %timeit may have been disguising some caching
In [1]: def manual():
    ...:     for i in range(2000, 2100):
    ...:         holidays.country_holidays("GB", years=i)
    ...: 

In [2]: %time _ = manual()
CPU times: user 183 ms, sys: 8.08 ms, total: 191 ms
Wall time: 193 ms

In [3]: %time _ =  holidays.country_holidays("GB", years=range(2000, 2100))
CPU times: user 124 ms, sys: 0 ns, total: 124 ms
Wall time: 123 ms
Happy to close üëç
Thank you!

Add dependency requirements tests
The test should make sure that README.rst reflects dependency requirements properly for each country.
Closing as obsolete (https://github.com/dr-prodigy/python-holidays/pull/889 has been closed w/o merging)

Revisit black/isort config settings
I always had this issue too on Windows (with Python 3.11). Just check on Ubuntu (with Python 3.8) - the same, isort splits a long multiline import string into two shorter ones. With isort 5.12.0 (latest from https://github.com/pycqa/isort) - the same.
.pre-commit-config.yaml
# holidays/countries/__init__.py is excluded due to imports being in
# relevance order vs. alphabetical one.
# tests/countries/test_united_states_virgin_islands.py is excluded due
# to a bug whereby black and isort don't agree and enter into an
# infinite fix loop.
# TODO remove this exclusion when isort and black play nice again.
            
Originally posted by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1049#discussion_r1154347452
Resolved by https://github.com/dr-prodigy/python-holidays/pull/1297

TypeError: Invalid input types when passing years=np.array() (only for CL?)
I just encountered this error when trying to build up a bunch of holidays for different countries:
>>> import holidays
>>> import numpy as np
>>> holidays.CL(years=np.array([2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/mark/.local/lib/python3.8/site-packages/holidays/holiday_base.py", line 318, in __init__
    self._populate(year)
  File "/home/mark/.local/lib/python3.8/site-packages/holidays/countries/chile.py", line 113, in _populate
    epoch = Sun.get_equinox_solstice(year, target="summer")
  File "/home/mark/.local/lib/python3.8/site-packages/pymeeus/Sun.py", line 503, in get_equinox_solstice
    raise TypeError("Invalid input types")
>>> holidays.UK(years=np.array([2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029]))
{datetime.date(2020, 1, 1): "New Year's Day", datetime.date(2020, 4, 10): 'Good Friday', datetime.date(20... etc
I guess the pymeeus library is expecting a plain int rather than numpy.int64 which is why it's choking on my input.
It's straightforward to workaround (I'll just use a regular Python list for my dates!) but just seemed strange that the other countries I tried were OK (guess they arent hitting this particular code path) - but also happy enough if you want to close this as "WONTFIX".
I also guess you're using lrucache or similar too for the call to the pymeeus library, because once I've got my dates using a regular list, I can get the dates using a numpy array (this made me doubt my sanity as I starting writing this issue!):
>>> holidays.CL(years=np.array([2020, 2021]))
{datetime.date(2020, 1, 1): "New Year's Day", datetime.date(2020, 4, 10): 'Good Friday', datetime.date(20... etc
EDIT: source of the issue is passing the np.int64 to the Epoch constructor here, which I guess could be wrapped in an int() cast, but feels a little icky.
>>> from pymeeus.Epoch import Epoch
>>> Epoch(1)
Epoch(1.0)
>>> import numpy as np
>>> Epoch(np.int64(1))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/mark/.local/lib/python3.8/site-packages/pymeeus/Epoch.py", line 199, in __init__
    self.set(*args, **kwargs)  # Use 'set()' method to handle the setup
  File "/home/mark/.local/lib/python3.8/site-packages/pymeeus/Epoch.py", line 351, in set
    raise TypeError("Invalid input type")
TypeError: Invalid input type
>>> Epoch(int(np.int64(1)))
Epoch(1.0)
It seems you've figured out how to make that right!
I can only add that you may experience similar behavior for JP as well.

Question: python way to get list of all supported countries
Hello !
I have a strong interest in this library and I was wondering whether there is a way to get a list of all supported countries ?
Thanks in advance !
Hello @laurent-brisbois! There is a function list_supported_countries() for this purpose. For example:
import holidays
countries = holidays.list_supported_countries()
@KJhellico
Ok thanks and sorry, I didn't see it while browsing the repo !
Perfect üëå !

This one also is no more a holiday in Ukraine
https://github.com/dr-prodigy/python-holidays/blob/d4cfc391d1562f33f8be9fd692c85a97544786ad/holidays/countries/ukraine.py#L187
Look at the date trigger again: @foxtrot-dfm1
        # USSR Constitution day
        name = self.tr("–î–µ–Ω—å –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü—ñ—ó –°–†–°–†")
        if 1981 <= year <= 1990:
            self[date(year, OCT, 7)] = name
        elif 1937 <= year <= 1980:
            self[date(year, DEC, 5)] = name

I am sure that is not more a holiday in Ukraine
https://github.com/dr-prodigy/python-holidays/blob/d4cfc391d1562f33f8be9fd692c85a97544786ad/holidays/locale/uk/LC_MESSAGES/UA.po#L86
It's there for historical coverage with date trigger for pre-2000:
        # October Revolution
        if year <= 1999:
            name = self.tr(
                "–†—ñ—á–Ω–∏—Ü—è –í–µ–ª–∏–∫–æ—ó –ñ–æ–≤—Ç–Ω–µ–≤–æ—ó —Å–æ—Ü—ñ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≤–æ–ª—é—Ü—ñ—ó"
            )
            _add_with_observed(date(year, NOV, 7), name, days=2)
            _add_with_observed(date(year, NOV, 8), name, days=2)
It's there for historical coverage with date trigger for pre-2000:
        # October Revolution
        if year <= 1999:
            name = self.tr(
                "–†—ñ—á–Ω–∏—Ü—è –í–µ–ª–∏–∫–æ—ó –ñ–æ–≤—Ç–Ω–µ–≤–æ—ó —Å–æ—Ü—ñ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—ó —Ä–µ–≤–æ–ª—é—Ü—ñ—ó"
            )
            _add_with_observed(date(year, NOV, 7), name, days=2)
            _add_with_observed(date(year, NOV, 8), name, days=2)

Okay thanks for explaining

Update MANIFEST.in
Clean up and make sure sdist contains all needed files.
Fixed in https://github.com/dr-prodigy/python-holidays/pull/1028

Add NYSE years coverage
Add all financials 1950-2050 test coverage.
Resolved by #1061

"RuntimeError: Set changed size during iteration" in version 0.20
Hello, I would like to report a bug when doing the following:
holidays.financial_holidays('NYSE', years=2020)
It will give  RuntimeError: Set changed size during iteration in version 0.20
I reverted to version 0.19 and it works again, tested on miniconda3 on win server.
HI @lunarflint,
thanks for reporting this!
The good news is that the issue has already been addressed in https://github.com/dr-prodigy/python-holidays/pull/1000
You might be interested in using beta (0.21)
pip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/beta
I hope to release the 0.21 today.

Maximize load performance 
We advertise this library as "fast, efficient", and is performance or memory footprint affected by loading every single class for every single country (that's 360+ classes) even when the user needs holidays only for a single country, which I assume this to be 90%+ of use cases, or just a few countries? What about on small footprints (e.g. Raspberry Pi)? I would assume so, but am not very familiar with Python innards.
If so, are there architectures that we can implement to maximize load performance especially when only one (or a few) countries are needed?
Originally posted by @mborsetti in https://github.com/dr-prodigy/python-holidays/issues/948#issuecomment-1432382359
Some thoughts

We're importing a ton of alpha-3 codes, and nowhere in the documentation we say we support them. I don't really see a reason why we should support them (they are superfluous to the alpha-2 codes that are very familiar due to their use as TLDs); maybe it's a good time to start deprecating the existing alpha-3 codes (and stop adding them when new countries are added)?
Do we even want a long-form nonstandard for countries, which also opens ourselves up to discussions on political issues such as whether the class for HK should be HongKong vs. HongKongSAR (the latter being closer to the official name), CN be China vs. PeoplesRepublicOfChina and on and on?
I also found IRL that finding a class called "HongKong" ("HongKongSAR"?) or "Eswatini" or similar in the debugger is very confusing -- Eswatini what? What is the Eswatini or China or whatever object supposed to be? We should consider calling the base class in the format of HolidaysHK, HolidaysSZ, etc. to make it very clear when debugging what is the function of an object of this class.

I can (slowly) work on all of this if there's interest.
I have found this issue because I'm profiling a project's startup time (as per this blog post), and holidays is one of the slower-to-import libraries. It takes 56ms on my machine, most of which is indeed wasted on loading countries which the project doesn't need.
Here's a profile:

python -X importtime -c 'import holidays'

import time: self [us] | cumulative | imported package
import time:       268 |        268 |   _io
import time:        40 |         40 |   marshal
import time:       539 |        539 |   posix
import time:       586 |       1430 | _frozen_importlib_external
import time:       198 |        198 |   time
import time:       142 |        340 | zipimport
import time:        94 |         94 |     _codecs
import time:       493 |        587 |   codecs
import time:       908 |        908 |   encodings.aliases
import time:      1493 |       2987 | encodings
import time:       365 |        365 | encodings.utf_8
import time:       293 |        293 | _signal
import time:        48 |         48 |     _abc
import time:       260 |        308 |   abc
import time:       358 |        666 | io
import time:        64 |         64 |       _stat
import time:       114 |        178 |     stat
import time:       944 |        944 |     _collections_abc
import time:        18 |         18 |       genericpath
import time:        40 |         58 |     posixpath
import time:       271 |       1449 |   os
import time:        36 |         36 |   _sitebuiltins
import time:      1174 |       1174 |   _distutils_hack
import time:       238 |        238 |   types
import time:       211 |        211 |       warnings
import time:       123 |        333 |     importlib
import time:       199 |        199 |     importlib._abc
import time:        74 |         74 |         itertools
import time:        78 |         78 |         keyword
import time:        48 |         48 |           _operator
import time:       217 |        264 |         operator
import time:       112 |        112 |         reprlib
import time:        82 |         82 |         _collections
import time:       771 |       1380 |       collections
import time:        85 |         85 |         _functools
import time:      1065 |       1150 |       functools
import time:       710 |       3239 |     contextlib
import time:       135 |       3904 |   importlib.util
import time:        69 |         69 |   importlib.machinery
import time:        66 |         66 |   sitecustomize
import time:     11430 |      18363 | site
import time:       193 |        193 |   holidays.constants
import time:       196 |        196 |         math
import time:       177 |        177 |         _datetime
import time:      1205 |       1578 |       datetime
import time:        91 |         91 |           dateutil._version
import time:       147 |        238 |         dateutil
import time:       131 |        368 |       dateutil.easter
import time:       159 |        159 |           collections.abc
import time:      1070 |       1070 |             enum
import time:        44 |         44 |               _sre
import time:       175 |        175 |                 re._constants
import time:       458 |        633 |               re._parser
import time:        69 |         69 |               re._casefix
import time:       249 |        993 |             re._compiler
import time:       144 |        144 |             copyreg
import time:       402 |       2607 |           re
import time:       109 |        109 |           _typing
import time:      1881 |       4755 |         typing
import time:        98 |         98 |               _bisect
import time:        97 |        195 |             bisect
import time:        61 |         61 |             hijri_converter.helpers
import time:      1125 |       1125 |             hijri_converter.locales
import time:       178 |        178 |             hijri_converter.ummalqura
import time:       260 |       1817 |           hijri_converter.convert
import time:       143 |       1960 |         hijri_converter
import time:       277 |       6991 |       holidays.calendars
import time:       137 |        137 |             _weakrefset
import time:       381 |        517 |           weakref
import time:        47 |         47 |               org
import time:        16 |         63 |             org.python
import time:         9 |         71 |           org.python.core
import time:       156 |        743 |         copy
import time:        62 |         62 |             _locale
import time:      3489 |       3550 |           locale
import time:       389 |       3939 |         calendar
import time:       617 |        617 |         gettext
import time:        94 |         94 |           fnmatch
import time:        59 |         59 |             _winapi
import time:        41 |         41 |             nt
import time:        35 |         35 |             nt
import time:        32 |         32 |             nt
import time:        51 |         51 |             nt
import time:       167 |        167 |             nt
import time:       134 |        516 |           ntpath
import time:        42 |         42 |           errno
import time:        85 |         85 |             urllib
import time:       993 |       1077 |           urllib.parse
import time:       616 |       2345 |         pathlib
import time:       116 |        116 |             __future__
import time:        20 |         20 |               _string
import time:       470 |        490 |             string
import time:       164 |        164 |                 _struct
import time:       141 |        304 |               struct
import time:       730 |       1033 |             six
import time:       223 |        223 |                 numbers
import time:       514 |        737 |               _decimal
import time:        88 |        824 |             decimal
import time:       616 |        616 |               dateutil._common
import time:       187 |        802 |             dateutil.relativedelta
import time:        24 |         24 |                 six.moves
import time:       140 |        140 |                 dateutil.tz._common
import time:       140 |        140 |                 dateutil.tz._factories
import time:        18 |         18 |                   six.moves.winreg
import time:       185 |        203 |                 dateutil.tz.win
import time:       849 |       1355 |               dateutil.tz.tz
import time:       118 |       1472 |             dateutil.tz
import time:       752 |       5487 |           dateutil.parser._parser
import time:       236 |        236 |           dateutil.parser.isoparser
import time:       258 |       5980 |         dateutil.parser
import time:       706 |      14327 |       holidays.holiday_base
import time:       377 |      23638 |     holidays.countries.albania
import time:       212 |        212 |       holidays.countries.united_states
import time:       160 |        372 |     holidays.countries.american_samoa
import time:       113 |        113 |     holidays.countries.andorra
import time:       165 |        165 |     holidays.countries.angola
import time:       335 |        335 |     holidays.countries.argentina
import time:       103 |        103 |     holidays.countries.armenia
import time:       210 |        210 |     holidays.countries.aruba
import time:       122 |        122 |     holidays.countries.australia
import time:       112 |        112 |     holidays.countries.austria
import time:       136 |        136 |     holidays.countries.azerbaijan
import time:       108 |        108 |     holidays.countries.bahrain
import time:        82 |         82 |     holidays.countries.bangladesh
import time:       329 |        329 |     holidays.countries.belarus
import time:       127 |        127 |     holidays.countries.belgium
import time:       136 |        136 |     holidays.countries.bolivia
import time:       150 |        150 |     holidays.countries.bosnia_and_herzegovina
import time:       124 |        124 |     holidays.countries.botswana
import time:       125 |        125 |     holidays.countries.brazil
import time:       117 |        117 |     holidays.countries.bulgaria
import time:       112 |        112 |     holidays.countries.burundi
import time:       164 |        164 |     holidays.countries.canada
import time:       122 |        122 |         pymeeus
import time:        74 |         74 |         pymeeus.base
import time:       261 |        261 |         pymeeus.Angle
import time:       502 |        959 |       pymeeus.Epoch
import time:       139 |        139 |           pymeeus.Interpolation
import time:       569 |        707 |         pymeeus.Coordinates
import time:      1136 |       1136 |         pymeeus.Earth
import time:       190 |       2031 |       pymeeus.Sun
import time:       328 |        328 |           sysconfig
import time:       476 |        476 |           _sysconfigdata__linux_aarch64-linux-gnu
import time:      1204 |       2007 |         zoneinfo._tzpath
import time:       843 |        843 |         zoneinfo._common
import time:       133 |        133 |         _zoneinfo
import time:       423 |       3405 |       zoneinfo
import time:       234 |       6627 |     holidays.countries.chile
import time:       106 |        106 |     holidays.countries.china
import time:       125 |        125 |     holidays.countries.colombia
import time:        87 |         87 |     holidays.countries.croatia
import time:        91 |         91 |     holidays.countries.cuba
import time:       104 |        104 |     holidays.countries.curacao
import time:        80 |         80 |     holidays.countries.cyprus
import time:        99 |         99 |     holidays.countries.czechia
import time:        83 |         83 |     holidays.countries.denmark
import time:       107 |        107 |     holidays.countries.djibouti
import time:       489 |        489 |     holidays.countries.dominican_republic
import time:        98 |         98 |     holidays.countries.egypt
import time:       107 |        107 |     holidays.countries.estonia
import time:       100 |        100 |     holidays.countries.eswatini
import time:       175 |        175 |     holidays.countries.ethiopia
import time:       143 |        143 |     holidays.countries.finland
import time:       137 |        137 |     holidays.countries.france
import time:       113 |        113 |     holidays.countries.georgia
import time:       126 |        126 |     holidays.countries.germany
import time:       199 |        199 |     holidays.countries.greece
import time:       184 |        184 |     holidays.countries.guam
import time:       133 |        133 |     holidays.countries.honduras
import time:       141 |        141 |     holidays.countries.hongkong
import time:       186 |        186 |     holidays.countries.hungary
import time:       124 |        124 |     holidays.countries.iceland
import time:       117 |        117 |     holidays.countries.india
import time:       196 |        196 |     holidays.countries.indonesia
import time:       149 |        149 |     holidays.countries.ireland
import time:       180 |        180 |       holidays.countries.united_kingdom
import time:       107 |        286 |     holidays.countries.isle_of_man
import time:        94 |         94 |             convertdate.utils
import time:       160 |        253 |           convertdate.gregorian
import time:        65 |         65 |           convertdate.julian
import time:       154 |        471 |         convertdate.armenian
import time:        89 |         89 |         convertdate.bahai
import time:        58 |         58 |         convertdate.coptic
import time:        56 |         56 |           convertdate.julianday
import time:       114 |        170 |         convertdate.daycount
import time:        46 |         46 |         convertdate.dublin
import time:        74 |         74 |             convertdate.data
import time:       169 |        243 |           convertdate.data.french_republican_days
import time:        99 |        342 |         convertdate.french_republican
import time:        95 |         95 |         convertdate.hebrew
import time:        78 |         78 |           convertdate.islamic
import time:       203 |        280 |         convertdate.holidays
import time:        83 |         83 |         convertdate.indian_civil
import time:       129 |        129 |         convertdate.iso
import time:       122 |        122 |         convertdate.mayan
import time:        92 |         92 |         convertdate.persian
import time:       505 |        505 |           convertdate.data.positivist
import time:        94 |        598 |         convertdate.positivist
import time:        62 |         62 |         convertdate.ordinal
import time:       326 |       2956 |       convertdate
import time:       132 |       3088 |     holidays.countries.israel
import time:       164 |        164 |     holidays.countries.italy
import time:        80 |         80 |     holidays.countries.jamaica
import time:       236 |        236 |     holidays.countries.japan
import time:        84 |         84 |     holidays.countries.kazakhstan
import time:       101 |        101 |     holidays.countries.kenya
import time:        87 |         87 |     holidays.countries.kyrgyzstan
import time:        87 |         87 |     holidays.countries.latvia
import time:        88 |         88 |     holidays.countries.lesotho
import time:        93 |         93 |     holidays.countries.liechtenstein
import time:        74 |         74 |     holidays.countries.lithuania
import time:       101 |        101 |     holidays.countries.luxembourg
import time:        71 |         71 |     holidays.countries.madagascar
import time:        70 |         70 |     holidays.countries.malawi
import time:       235 |        235 |     holidays.countries.malaysia
import time:        75 |         75 |     holidays.countries.malta
import time:       110 |        110 |     holidays.countries.marshall_islands
import time:        64 |         64 |     holidays.countries.mexico
import time:        85 |         85 |     holidays.countries.moldova
import time:       123 |        123 |     holidays.countries.monaco
import time:        87 |         87 |     holidays.countries.montenegro
import time:        80 |         80 |     holidays.countries.morocco
import time:        86 |         86 |     holidays.countries.mozambique
import time:        87 |         87 |     holidays.countries.namibia
import time:        92 |         92 |     holidays.countries.netherlands
import time:       121 |        121 |     holidays.countries.new_zealand
import time:       100 |        100 |     holidays.countries.nicaragua
import time:       104 |        104 |     holidays.countries.nigeria
import time:        83 |         83 |     holidays.countries.north_macedonia
import time:        86 |         86 |     holidays.countries.northern_mariana_islands
import time:        97 |         97 |           _heapq
import time:       152 |        248 |         heapq
import time:       371 |        619 |       dateutil.rrule
import time:       108 |        726 |     holidays.countries.norway
import time:       169 |        169 |     holidays.countries.pakistan
import time:        70 |         70 |     holidays.countries.panama
import time:        80 |         80 |     holidays.countries.paraguay
import time:        83 |         83 |     holidays.countries.peru
import time:        71 |         71 |     holidays.countries.philippines
import time:       223 |        223 |     holidays.countries.poland
import time:       190 |        190 |     holidays.countries.portugal
import time:       148 |        148 |     holidays.countries.puerto_rico
import time:       110 |        110 |     holidays.countries.romania
import time:       105 |        105 |     holidays.countries.russia
import time:        98 |         98 |     holidays.countries.san_marino
import time:       110 |        110 |     holidays.countries.saudi_arabia
import time:        93 |         93 |     holidays.countries.serbia
import time:       288 |        288 |     holidays.countries.singapore
import time:        87 |         87 |     holidays.countries.slovakia
import time:       114 |        114 |     holidays.countries.slovenia
import time:        89 |         89 |     holidays.countries.south_africa
import time:       214 |        214 |         korean_lunar_calendar.korean_lunar_calendar
import time:       120 |        333 |       korean_lunar_calendar
import time:       164 |        497 |     holidays.countries.south_korea
import time:       178 |        178 |     holidays.countries.spain
import time:       134 |        134 |     holidays.countries.sweden
import time:        90 |         90 |     holidays.countries.switzerland
import time:        92 |         92 |     holidays.countries.taiwan
import time:       520 |        520 |     holidays.countries.thailand
import time:       123 |        123 |     holidays.countries.tunisia
import time:       152 |        152 |     holidays.countries.turkey
import time:       148 |        148 |     holidays.countries.ukraine
import time:        88 |         88 |     holidays.countries.united_arab_emirates
import time:       110 |        110 |     holidays.countries.united_states_minor_outlying_islands
import time:        92 |         92 |     holidays.countries.united_states_virgin_islands
import time:       160 |        160 |     holidays.countries.uruguay
import time:       102 |        102 |     holidays.countries.uzbekistan
import time:        76 |         76 |     holidays.countries.vatican_city
import time:        70 |         70 |     holidays.countries.venezuela
import time:       176 |        176 |     holidays.countries.vietnam
import time:       122 |        122 |     holidays.countries.zambia
import time:        81 |         81 |     holidays.countries.zimbabwe
import time:      1783 |      51229 |   holidays.countries
import time:       110 |        110 |     holidays.financial.european_central_bank
import time:       125 |        125 |     holidays.financial.ny_stock_exchange
import time:       109 |        343 |   holidays.financial
import time:        47 |         47 |         _ast
import time:       856 |        902 |       ast
import time:        93 |         93 |           _opcode
import time:       220 |        312 |         opcode
import time:       549 |        861 |       dis
import time:        90 |         90 |           token
import time:       578 |        668 |         tokenize
import time:       112 |        780 |       linecache
import time:      1343 |       3885 |     inspect
import time:       174 |       4058 |   holidays.utils
import time:       581 |      56402 | holidays


Lazy-loading these modules would be the biggest win for speed, I think. This may involve moving some attributes like the alpha codes into a centralized dictionary, rather than pulling them from the classes, since you want to avoid importing the class until requested.
I can (slowly) work on all of this if there's interest.

@arkid15r Any interest?  We'd probably be looking at a transition architecture with deprecation followed by a much faster v1.0.
@arkid15r Any interest? We'd probably be looking at a transition architecture with deprecation followed by a much faster v1.0.

Hey Mike, absolutely!
This idea is great! The library performance is the second highest priority for us. I didn't look into any implementation details yet and at this point I can only see potential compatibility issues that could be a show stopper for this. I'm looking forward to seeing any early stage PR(s) or PoC code to discuss specifics.
Thank you!
// @adamchainz I appreciate your input too!
Hey Mike, absolutely! This idea is great! The library performance is the second highest priority for us. I didn't look into any implementation details yet and at this point I can only see potential compatibility issues that could be a show stopper for this. I'm looking forward to seeing any early stage PR(s) or PoC code to discuss specifics.

Hi Arkadii, I think I found a way to solve all three issues simply and elegantly ,and still be backwards compatible. However, I hit an undocumented function argument, which you added; can you please see my comments in https://github.com/dr-prodigy/python-holidays/pull/878?
Hey Mike, that sounds promising! I'm eager to see your solution!
I replied to your comments for #878, let me know if you still have questions.
The v0.25 with the lazy loading implementation has just been released.
üëç Thank you for doing this.
python -X importtime -c 'import holidays' now shows 29ms for me, compared to 56ms before. A 27ms saving, and most of the time is now in Python standard library modules.
Thanks for your input and the feedback @adamchainz

Add README supported languages tests
Make sure the table gets updated when a new language is added.
Added in https://github.com/dr-prodigy/python-holidays/pull/1241

Update Mexico holidays
According to this official document from the Mexico government (https://www.gob.mx/profedet/articulos/sabes-cuales-son-los-dias-de-descanso-obligatorios-163134?idiom=es) (in Spanish) New Year's and Independence Day are not re-calculated even if they happen on a weekend day
From the list in the doc, holidays should be:

January 1st
February 5th, or the first Monday in February
March 21st, or the third Monday in March
May 1st
September 16th
November 20th, or the third Monday in November
Every 6 years, December 1st, corresponding to Change of Federal Government
December 25th

I've created a Pull Request #977 trying to help update these, but I'm not sure how to fix the tests, so I'd appreciate it if you could take a look.
Thanks!
https://github.com/dr-prodigy/python-holidays/pull/980 has been merged into v0.21 beta.
Thank you for making python-holidays better!

Invalid multibyte sequence error on make l10n
A bit minor note: I did try switching to having Thai text as default based on this PR, and the issue still persists when using make l10n as you can see below:
holidays/locale/pot/TH.pot:53: warning: The following msgid contains non-ASCII characters.
                                        This will cause problems to translators who use a character encoding
                                        different from yours. Consider using a pure ASCII msgid instead.
                                        ‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏û‡∏¥‡∏ò‡∏µ‡∏â‡∏•‡∏≠‡∏á‡∏™‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ñ‡∏£‡∏ö 60 ‡∏õ‡∏µ ‡∏û.‡∏®. 2549
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
holidays/locale/pot/TH.pot:53: invalid multibyte sequence
With this in mind, I'm considering continuing my approach on #946 instead, but will switch around the test cases to generate our desired result of having th as default and en_US as supported.
Originally posted by @PPsyrius in https://github.com/dr-prodigy/python-holidays/issues/955#issuecomment-1434250465
Hey @PPsyrius,
could you share your code - I'll try to reproduce the error and fix it.
@arkid15r Sure, here's the version of the code I used https://github.com/PPsyrius/python-holidays/tree/955_thailand_i18n_support
@arkid15r Found solution to this now, turns out on top of adding blank files, headers are also needed so that the reader would accept UTF-8 charset:
Here's one of the examples that finally get the script working for me:
TH.po
# Thailand holidays English translation.
# Authors: PPsyrius <ppsyrius@ppsyrius.dev>, (c) 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Python Holidays 0.20\n"
"POT-Creation-Date: 2023-02-19 14:03+0700\n"
"PO-Revision-Date: \n"
"Last-Translator: PPsyrius <ppsyrius@ppsyrius.dev>\n"
"Language-Team: Python Holidays Translation Team\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
This issue can be closed down, IMO.
Hey @PPsyrius,
it's great you figured that out without my help!
Just FYI the misformatted .po file hadn't been included into https://github.com/PPsyrius/python-holidays/tree/955_thailand_i18n_support when I looked into it.
Anyway, it seems the error had to do with this specific header "Content-Type: text/plain; charset=UTF-8\n" absence.
Closing this out.

Add non-observed holidays tests support
Introduce TestCase::assertNoObservedHoliday(s)
Implemented in https://github.com/dr-prodigy/python-holidays/pull/979

Missing holidays in Spain
Hi,
Holiday Easter Monday (10th of April) is missing in the CT subdivision in Spain.
Thanks,
Seems to be fixed in #902. Please, check with beta version, if you can.
Looks good in v0.20
When will be released?
Looks good in v0.20 When will be released?

It's my plan to release it within the next 2 weeks (pessimistic ETA -- by end of this month)
ok, thanks a lot!
Hi, is this fix included in 0.21.13? Today is being shown as a working day to me.
Hi, @cdeharo! Yes, it was included in 0.20. I've just checked:
>>> import holidays
>>> ct = holidays.ES(subdiv="CT")
>>> ct["2023-04-10"]
'Lunes de Pascua'
>>> holidays.__version__
'0.20'

Same with 0.21.13.
Hi, is this fix included in 0.21.13? Today is being shown as a working day to me.

HI @cdeharo,
the issue was resolved in v0.20 and closed by the OP.
Please open a new ticket if you're still experiencing holidays inconsistency.

Ireland - St Bridget's Day
I believe that the implementation of St Bridget's Day in Ireland is incorrect.
The code (ireland.py) marks 1st February as a "holiday", and 6th February as the Observed Holiday (2023).
1st February is the saints day but is not the Holiday. The 6th February is the Holiday (1st Monday in February), unless the 1st falls on a Friday.
I believe that this is the code change required:
diff --git a/holidays/countries/ireland.py b/holidays/countries/ireland.py
@@ -39,9 +39,10 @@ class Ireland(HolidayBase):
         if year >= 2023:
             name = "St. Brigid's Day"
             dt = date(year, FEB, 1)
-            self[dt] = name
-            if self.observed and dt.weekday() != FRI:
-                self[dt + rd(weekday=MO)] = name + " (Observed)"
+            if dt.weekday() == FRI:
+                self[dt] = name
+            else:
+                self[dt + rd(weekday=MO)] = name
Sorry - I see I duplicated #917 - closing

Version 0.19 throws ImportError on hijri_converter.ummalqura
I have just upgraded to python-holidays 0.19 and have no restrictions on hijri_converter in my venv requirements, but holidays is now throwing an ImportError:
cannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura'

It happens in holidays/utils.py:28. hijri_converter, as installed by pip, is on this version:
# pip freeze | grep hijri
hijri-converter==2.1.1

... looking at their repo they're on 2.2.4.
Hi @inputvalidation, thanks for bringing this up.
I tried to reproduce the error:
virtualenv venv && source venv/bin/activate

created virtual environment CPython3.9.12.final.0-64 in 157ms
creator CPython3Posix(dest=/Users/ark/Dev/ph-test/venv, clear=False, no_vcs_ignore=False, global=False)
seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/ark/Library/Application Support/virtualenv)
added seed packages: pip==22.3.1, setuptools==65.6.3, wheel==0.38.4
activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator

pip install holidays==0.19

Collecting holidays==0.19
Using cached holidays-0.19-py3-none-any.whl (208 kB)
Collecting korean-lunar-calendar
Using cached korean_lunar_calendar-0.3.1-py3-none-any.whl (9.0 kB)
Collecting convertdate>=2.3.0
Using cached convertdate-2.4.0-py3-none-any.whl (47 kB)
Collecting hijri-converter
Using cached hijri_converter-2.2.4-py3-none-any.whl (14 kB)
Collecting PyMeeus
Using cached PyMeeus-0.5.12-py3-none-any.whl
Collecting python-dateutil
Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting six>=1.5
Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Installing collected packages: PyMeeus, korean-lunar-calendar, six, hijri-converter, convertdate, python-dateutil, holidays
Successfully installed PyMeeus-0.5.12 convertdate-2.4.0 hijri-converter-2.2.4 holidays-0.19 korean-lunar-calendar-0.3.1 python-dateutil-2.8.2 six-1.16.0

python -c "from holidays import utils" worked fine.
Then I pinned hijri-converter to 2.1.1
pip freeze

convertdate==2.4.0
hijri-converter==2.1.1
holidays==0.19
korean-lunar-calendar==0.3.1
PyMeeus==0.5.12
python-dateutil==2.8.2
six==1.16.0

and successfully reproduced the error message
python -c "from holidays import utils"

Traceback (most recent call last):
File "", line 1, in 
File "/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/init.py", line 13, in 
from holidays.countries import *
File "/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/countries/init.py", line 12, in 
from .albania import AL, ALB, Albania
File "/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/countries/albania.py", line 20, in 
from holidays.utils import _islamic_to_gre
File "/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/holidays/utils.py", line 28, in 
from hijri_converter.ummalqura import GREGORIAN_RANGE
ImportError: cannot import name 'GREGORIAN_RANGE' from 'hijri_converter.ummalqura' (/Users/ark/Dev/ph-test/venv/lib/python3.9/site-packages/hijri_converter/ummalqura.py)

So a workaround would be pip install -U hijri-converter.
A permanent fix may require setting specific versions for python-holidays dependencies (we'll look into this option).
Please let me know if you have questions/suggestion regarding this issue.
Thank you!
Closing this out. Please let me know if you need additional assistance with the issue.

February Bank Holiday in Ireland calculated wrong
Today -1st February - is incorrectly marked as a holiday in Ireland.
The bank holiday this year is on the 6th - the first Monday of the month.
It should only be marked as a bank holiday on the 1st if the day is a Friday.
https://www.irishcentral.com/roots/st-brigids-day-traditions
I agree.
The code (ireland.py) marks 1st February as a "holiday", and 6th February as the Observed Holiday (2023).
1st February is the saints day but is not the Holiday. The 6th February is the Holiday (1st Monday in February), unless the 1st falls on a Friday.
I believe that this is the code change required:
diff --git a/holidays/countries/ireland.py b/holidays/countries/ireland.py
@@ -39,9 +39,10 @@ class Ireland(HolidayBase):
         if year >= 2023:
             name = "St. Brigid's Day"
             dt = date(year, FEB, 1)
-            self[dt] = name
-            if self.observed and dt.weekday() != FRI:
-                self[dt + rd(weekday=MO)] = name + " (Observed)"
+            if dt.weekday() == FRI:
+                self[dt] = name
+            else:
+                self[dt + rd(weekday=MO)] = name
Updated in https://github.com/dr-prodigy/python-holidays/pull/953
Thank you!

Holidays in Panam√°
Hi there!
I'm very thankful for this project, it had really helped me :)
I did not find the Panam√° holidays list, so I've been wondering if you have an special format to add a new country or is it a different process?
I've read the contributing guidelines but I am not sure if this applies to this kind of request.
Hi @Afroefras,
there is no special process for adding new country to python-holidays (PH). The contribution guidelines cover general approach for any PH contribution (new country, bug fix, tests, chores, etc).
If you're interested in adding a new country into PH you may find similar examples of recently accepted PRs here:

https://github.com/dr-prodigy/python-holidays/pull/888
https://github.com/dr-prodigy/python-holidays/pull/877
https://github.com/dr-prodigy/python-holidays/pull/875

Let me know if you need further assistance or have any questions.
Hey @Afroefras, Panama holidays support PR has been merged into beta.
@KJhellico went ahead and implemented it.
Closing this out.

Streamline PRs creation process
Introduce a PR template with basic checkboxes, pre-filled blocks, useful info for first-time contributors.
Closing as completed for now.

Today (2022/01/02) is not holiday in Madrid (province: MD), Spain
Hi, the workday_sensor is returning Off, holiday today January 2 for Madrid (MD), Spain. That's wrong. Today is working day.
Hello, also Spain (ES) and Autonomous community: CT (Catalonia), January 2 is a working day.
Seems it resolved by #902
The fix was merged into beta. Closing this out.
@ifajardoj, @flipdream  thank you for bringing this up!

Multiple holidays delimiter
Now we use comma (,) as delimiter when several holidays fall on the same date. But some countries have holidays with comma in name (BR, BG, LT, TR). For these cases get_list() function does not work correctly. We need to global change delimiter symbol (e.g. to semicolon) or introduce something like self.delimiter and change it for these countries.
Thanks for reporting this issue @KJhellico!
The fix has been merged into beta.

TestCase::parse_argument ignoring HolidayBase instance
I unfortunately had to revert this PR with #842, due to a failing test on an observed holiday (2012-01-03).
Could you please review and provide a fix for that @KJhellico ?
Thx as usual! üëç
Originally posted by @dr-prodigy in https://github.com/dr-prodigy/python-holidays/issues/829#issuecomment-1350118826
@dr-prodigy, now I need to repeat Kazakhstan PR?
@dr-prodigy, now I need to repeat Kazakhstan PR?
Nope @KJhellico it seems #844 fixed the issue (thx @arkid15r !), so I will try to re-apply your Kazakhstan update.. pls hold on, thx both üëç
All done and working properly.. closing, thx üëç

South Africa new public holiday 27th December 2022
27th of December is a public holiday in South Africa
Proof:
https://www.gov.za/speeches/president-cyril-ramaphosa-declares-27-december-public-holiday-8-dec-2022-0000
South Africans will enjoy Tuesday, 27 December 2022, as a public holiday in lieu of Christmas Day falling on a Sunday.
This doesn't seem to be updated in the current holidays db.  Can it be added?
import holidays #Version (0.17.2)
sa_holidays =  holidays.country_holidays('ZA')
'2022-12-27' in sa_holidays
False
Have created a pull request with the change
https://github.com/dr-prodigy/python-holidays/pull/839
Fixed in beta with #848 .. closing this, thank you! üëç

Add Bahrain holidays
To track BH holidays adding process (requested by @taljishi in #813).
Some sources:

https://www.cbb.gov.bh/official-bank-holidays/
https://www.officeholidays.com/countries/bahrain/2022
https://en.wikipedia.org/wiki/Public_holidays_in_Bahrain
Implemented in https://github.com/dr-prodigy/python-holidays/pull/888

Countrycode LI for Liechtenstein not working in HA
When i put in the Countrycode for Liechtenstein "LI" Home Assistant says the configuration is not valid.
"Invalid config for [binary_sensor.workday]: Country is not supported. for dictionary value @ data['country']. Got 'LI'. (See ?, line ?). "
If i change it to Switzerland (CH) or Germany (DE) it is valid and works.
Hi @MartinR80 ,
unfortunately this doesn't seem to be related to python_holidays, as you can check from here:
>>> import holidays
>>> import datetime
>>> x = holidays.country_holidays('LI')
>>> x
holidays.country_holidays('LI')
>>> datetime.date(2022,1,1) in x
True
>>> x
{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}
>>> x = holidays.LI()
>>> datetime.date(2022,1,1) in x
True
>>> x
{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}
>>> x = holidays.Liechtenstein()
>>> datetime.date(2022,1,1) in x
True
>>> x
{datetime.date(2022, 1, 1): 'Neujahr', datetime.date(2022, 1, 2): 'Berchtoldstag', datetime.date(2022, 1, 6): 'Drei K√∂nige', datetime.date(2022, 2, 2): 'Mari√§ Lichtmess', datetime.date(2022, 3, 1): 'Fasnachtsdienstag', datetime.date(2022, 3, 19): 'Josefstag', datetime.date(2022, 4, 15): 'Karfreitag', datetime.date(2022, 4, 17): 'Ostersonntag', datetime.date(2022, 4, 18): 'Ostermontag', datetime.date(2022, 5, 1): 'Tag der Arbeit', datetime.date(2022, 5, 26): 'Auffahrt', datetime.date(2022, 6, 5): 'Pfingstsonntag', datetime.date(2022, 6, 6): 'Pfingstmontag', datetime.date(2022, 6, 16): 'Fronleichnam', datetime.date(2022, 8, 15): 'Staatsfeiertag', datetime.date(2022, 9, 8): 'Maria Geburt', datetime.date(2022, 11, 1): 'Allerheiligen', datetime.date(2022, 12, 8): 'Maria Empf√§ngnis', datetime.date(2022, 12, 24): 'Heiliger Abend', datetime.date(2022, 12, 25): 'Weihnachten', datetime.date(2022, 12, 26): 'Stefanstag', datetime.date(2022, 12, 31): 'Silvester'}

No clues about why it is not working on Home Assistant, but in case you have no other evidences to shed light on a possible issue on python_holidays side, I suggest you to report this to the HA project.
Good luck üëç
Thanks for your quick replay and the info. Ill check with HA then.
Thanks for your quick replay and the info. Ill check with HA then.

Hey @MartinR80,
It does look like an HA issue so far. The LI support was added not very long time ago. Could be just an old version issue. I'll add more details later after looking into it.
The issue should be fixed in HA soon - home-assistant/core#82799.
Yep.. caused by outdated (0.16) holidays dependency.
@MartinR80 even if HA is probably about to release a fix for this, you still can manually upgrade holidays yourself to the latest version (0.17) to get support for Liechtenstein prior to that fix.
This said I'm closing this.. cheers everyone üëç

DeprecationWarning upon "import holidays" in version 0.17
The implementation of deprecating the Swaziland calendar contains a bug. Just importing the holidays package is enough to fire the DeprecationWarning.
Steps to reproduce (in bash):
# Setup
python -m venv demo
source demo/bin/activate
pip install --upgrade pip

# Bad version
pip install holidays==0.17

# Expose bug
python -W error::DeprecationWarning -c 'import holidays'

# Workoround
pip uninstall -y holidays
pip install holidays!=0.17
python -W error::DeprecationWarning -c 'import holidays'

# Cleanup
deactivate
rm -rf demo
Expected behavior:
The DeprecationWarning should only fire when the user constructs an instance of the Swaziland or a subclass.
HI @walkerh,
thanks for the detailed issue explanation!
My understanding is that the root cause of the problem is not the deprecation warning itself but the way you're treating them with -W error::DeprecationWarning options. What is your use-case for turning the warning into an exception?
While I can help "fixing" the issue in this particular case with Swaziland there is no guarantee that another warning won't arise in next python-holidays version. The class level warning can be fixed by wrapping it to a constructor method. With module level deprecation warnings there wouldn't be such a workaround possible.
I'm working on a PR to fix the reported issue for now.
The -W error::DeprecationWarning flag was a simple way of demonstrating the problem. I first became aware of this issue when updating holidays cause my pytest output to start emitting these warnings. I could have just suppressed the warnings, but that just hides the real problem.
Thanks for getting on this.
Got it, thanks for the explanation @walkerh!
I agree that in this particular case the warning could be fired in a more sophisticated way (#794 PR filed). However, as I  understand the concept, a warning itself is not a problem but an intentionally shown piece of information notifying the end users about upcoming changes.
Please let me know if you have any suggestions regarding the way you'd prefer to work with the deprecation warnings in the future.
Thank you!
My suggestion is to implement a constructor for Swaziland that:

emits the warning
invokes super(*args, **kwargs)

Then the warning will only show up when someone actually invokes Swaziland(). The vast, vast majority of users of this package have never and will never use the deprecated Swaziland calendar. They shouldn't have to see this deprecation warning just because they run pytest.
The suggested fix was implemented in #794 PR yesterday.
Thank you!
What is your use-case for turning the warning into an exception?

Another answer to this question: Our CI runs with -W error::DeprecationWarning to allow us to spot any upcoming issues early. We then either fix the warning right away or explicitly ignore it.
Thanks for fixing it!
Another answer to this question: Our CI runs with -W error::DeprecationWarning to allow us to spot any upcoming issues early. We then either fix the warning right away or explicitly ignore it.

Same here
Is there a release schedule for the fix?
Is there a release schedule for the fix?

Not that I'm aware of.
Unfortunately I could not work on a new release for some days.. now it's online and should be okay. Thx!

Hangeul day in South Korea
I found that there is an error about the Hangeul day.
Originally, Hangeul day was a holiday, but during the period from 1991 to 2012, it was removed from the holiday.
After 2013, it was redesignated as a holiday again.
https://elaw.klri.re.kr/kor_service/lawView.do?hseq=59601&lang=ENG ‚Üê This is the Decree on which it is based.
The ADDENDUM <Presidential Decree No. 24273, Dec. 28, 2012> below in the Decree is notifying that Hanguel day would be redesignated as a holiday again.
I could not find the addendum in English, so I attached in Korean version(https://law.go.kr/LSW/lsInfoP.do?lsiSeq=234501&viewCls=lsRvsDocInfoR#).
@Inundata does #791 fix it? Pls let us know, thx
@dr-prodigy, #791 does not fix yet üò•
I have upgraded the package version to 0.17.2, but the errors still exist.
I have attached the screenshots.
I clicked the wrong button. Sorry. I reopen it.
Hi @Inundata
thanks for your check / feedback.. in fact, #791 is currently released on beta branch only, so in order to test the new behaviour, you should upgrade your python-holidays to the current beta version version using the procedure explained here:
https://github.com/dr-prodigy/python-holidays#beta-version
#791 will then be made available into the next official version, ie: v0.18, which is currently being finalized with the last PRs, theoretically in some weeks.
Pls let me know, thank you again
Hi @dr-prodigy ,
I checked it by updating it to the beta version.
It works well. Thank you for all your help!üòÄ
Thank you, closing this then! Pls let us know if we can do it with your other 2 currently open issues!
Cheers üëç

Labour day in South Korea
There is an error about Labour day in South Korea.
Labour day was a holiday on March 10, before 1994, and it changes to May 1 after 1994.
In the Package, Labour day was returned on May 1 even if it was before 1994.
https://elaw.klri.re.kr/kor_service/lawView.do?lang=ENG&hseq=23586 ‚Üê This is the Decree on which it is based.
@Inundata does #791 fix it? Pls let us know, thx
Also was fixed in #791, closing out.
Thanks everyone!

Tree planting day in South Korea
I found that there is an error about the tree-planting day.
This day was ruled out from the holiday after 2006.
However, the package still returns this day as a holiday on 2006-4-5 and 2007-4-5.
https://glaw.scourt.go.kr/wsjo/lawod/sjo190.do?contId=1680822#1668387535738 ‚Üê This is the Decree on which it is based.
Translating the Decree shortly, the Tree planting day and the Constitution day would be ruled out after 2006 and 2008, respectively.
@Inundata does #791 fix it? Pls let us know, thx
Fixed in #791, closing this.
@Inundata thanks for reporting the issue!

HK holiday , 30 September 2022  (The day following the Chinese Mid-Autumn Festival) problem, day of the Mid-Autumn Festival not a holiday , only (T+1) is the public holiday!
It cannot show the day following the Chinese Mid-Autumn Festival for 30 sept 2022
2022-09-10 Chinese Mid-Autumn Festival
day of the Mid-Autumn Festival  , it itself is not a holiday , only the day after it (T+1)  is the public holiday
i think the logic should be :
if "the day following the Chinese Mid-Autumn Festival"  lays on a Sunday , then there will be  ""The second weekday after Chinese Mid-Autumn Festival  "
MAYBE this can be changed to
    # Chinese Mid-Autumn Festival
    name = "Chinese Mid-Autumn Festival"
    first_after_mid_autumn= "The day following the " + name
    second_after_mid_autumn = "The second following the " + name

    dt = self.cnls.lunar_to_gre(year, 8, 15)
    mid_autumn_date = date(dt.year, dt.month, dt.day)

    if self.observed:
        if mid_autumn_date.weekday() == SAT:
            self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn
            self[mid_autumn_date + rd(days=+2)] = second_after_mid_autumn 
        else:
            self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn
        mid_autumn_date = mid_autumn_date + rd(days=+1)
    else:
        self[mid_autumn_date + rd(days=+1)] = first_after_mid_autumn
Hi @magggzzz this should be fixed with #779 (now merged in beta). Could you please confirm?
Thx!
hi @dr-prodigy , checked , confirm working fine, thank you very much, but the day of mid autumn it self is not a public holiday
Hi @magggzzz , the situation is like this:
3 Oct 2009 (SAT) is Chinese Mid-Autumn Festival and GOV set the same day as public holiday.
10 Sep 2022 (SAT) is Chinese Mid-Autumn Festival and GOV set the 12 Sep 2022 (MON) as public holiday.
#779 added speiacl case for this situation on 2022, further may need to add the case depend on the GOV if Chinese Mid-Autumn Festival on saturday and GOV set the public holiday to next monday.
REF:
https://www.gov.hk/en/about/abouthk/holiday/2009.htm
https://www.gov.hk/en/about/abouthk/holiday/2022.htm
HI, @poshingchu , it is not a special case
it has always been like this , the day of mid autumn , is not a holiday , only the following day is public holiday !


from 1983 to 2010, the logic goes :
if mid autumn lies on a sat , i.e.: the following day is a sunday , then the mid autumn day will be a full day holiday
** 2009 is the last time it happened


since 2011 the legislation has changed , the following is the changes in legislation. can check the link below
(o)the day following the Chinese Mid-Autumn Festival (or if that day is a Sunday, then the second day following that Festival) or such other day as the Chief Executive in Council may, by order in the Gazette, appoint in place of that day; (Amended 23 of 2011 s. 3)


ref:  https://www.elegislation.gov.hk/hk/cap149?xpid=ID_1438402723242_002
Hi @magggzzz , you mean that 2022 is not a special case, 2009 is. And want to switch?
As my understand, point (o) can negotiate but more chance to set public holiday on Monday if Chinese Mid-Autumn Festival lies on Saturday. The next Chinese Mid-Autumn Festival lies on Saturday will be 22 Sep 2029.
hi @dr-prodigy  ,
so both of them are not special case
from 1983 to 2010, the gov 's logic was  :
if mid autumn lies on a sat , i.e.: the following day is a sunday ,
then the mid autumn day ITSELF will be a full day public holiday
from 2011  HK government change the logic :
if mid autumn lies on a sat , i.e.: the following day is a sunday ,
then  INSTEAD of making  the mid autumn day ITSELF will be a full day public holiday,
the next non holiday work day will be made into a public holiday
(or if that day is a Sunday, then the second day following that Festival) or such other day as the Chief Executive in Council may,
Special case only occurs  when and if other wise appointed by the Chief Executive in Council
Hi @magggzzz  and @dr-prodigy , #782 is fixed branch, if have other concern please sugguest.
Otherwise this case can be closed.
Thank you @poshingchu , closing! üëç

November 2nd is a holiday in Lithuania
Since 2020. Source: https://publicholidays.lt/2022-dates/
Suggested change - https://github.com/dr-prodigy/python-holidays/pull/781.
@vytautasgimbutas can you please check if there's any typo or semantic error in the holiday name?
@Nalguedo  Seems correct. Thanks!
I guess this can be closed @dr-prodigy ;)
Oooops, this one got unseen! Thank you very much @vytautasgimbutas  + @Nalguedo!

Optimize Kst day lookup process
Replace while loops with dateutil logic:
The list of code parts to optimize:

https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/angola.py#L63
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/botswana.py#L57
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/mozambique.py#L38
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L138
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L158
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L169
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/south_africa.py#L176
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/zimbabwe.py#L56
https://github.com/dr-prodigy/python-holidays/blob/a772f79327a64639ec1fe89c79165d585c3a9b3d/holidays/countries/zimbabwe.py#L67
Hey @KJhellico, would you like to look into this?
For some reason I thought you may be interested :)
Definitely! üòã I will look into it
#770 merged right now.. thank you both! üëç

Isle of Man Code IM Doesn't Work
Setting country to IM in configuration.yaml results in the check configuration button reporting invalid country data. IM is in the list of support countries.
Configuration invalid!
Invalid config for [binary_sensor.workday]: Country is not supported. for dictionary value @ data['country']. Got 'IM'. (See ?, line ?).
There is a note in GB section for Isle of Man to use IM.
Well, that's a bug. Thanks for reporting this!
I looked into this briefly and here is what I found:
The available country list is filtered by __base__ [undocumented Python?] attribute here https://github.com/dr-prodigy/python-holidays/blob/390f59c386b15485c78550a6b4c017b7a6e09f67/holidays/utils.py#L287
It works for usual cases (direct inheritance) and fails for more complex cases when country is derived from another HolidayBase based class.
Next step.
The list_supported_countries (and at least list_supported_financial) needs to be reworked to include all supported Alpha-2 country codes.
I'll file a fix for the issue later today.
Merged, thank you! üëç

Diwali Singapore is on 24th of October not 24th of November
Holidays returns (datetime.date(2022, 11, 24), 'Deepavali') not the actual day which is this coming Monday the 24th of October.
Full list here https://www.mom.gov.sg/employment-practices/public-holidays
@jgriem , fixed it for this year's Diwali in #754 .
Thanks!

Some holidays of Uruguay are incorrect.
Hello.
Some holidays for Uruguay are incorrect.

The Battle of stones was in May, 18.
The Respect for Cultural Diversity Day or Columbus day is October, 12.

In Uruguay are 2 categories of holidays (laborables and not laborables). In the not laborable holidays nobody works while in the laborable holidays the work is optional.
The not laborables holidays are:

01/01
01/05
18/07
25/08
25/12

The rest of holidays are laborables, and depending of the day of the week, some of them are moved to earlier monday or to the next friday. The rule is:

If the holiday is tuesday or wednesday, they moved to earlier monday.
If the holiday is thursday, is moved to next friday.
If the holiday is in monday or friday, doesn't move.

That is the reason of the error.
For example, the Battle of the Stones is the May, 18. In 2021 was tuesday and was moved to the earlier monday that was May, 17.
One exception to this rule is the November, 2 ("D√≠a de los difuntos"). This holiday is laborable, but doesn't move.
Best regards.
@oteroalejandro  I'm working on this issue. Thanks for pointing out the problem.
One question:  do you get an extra day off (observance) if not laborable holiday falls on weekend?
By the way, this is what Wikipedia states:
According to Uruguayan Law 16,805 with modifications of Law 17,414, the holidays declared by law, subject to the commemoration of them, follow the following scheme (whose commemoration as ‚Äúmoveable holidays‚Äù):

If coincide on Saturday, Sunday or Monday will be observed in those days.
If occur on Tuesday or Wednesday, will be observed on Monday immediately preceding.
If occur on Thursday or Friday shall be observed on the Monday immediately following

It is a bit different from your explanation. Could you please clarify this? Thanks!
Hi Kate.

In the case a not laborable holiday falls on weekend, we don't get any
extra day.



[image: Logo]
<https://mailtrack.io/trace/link/1198366dea37c3e1f186c6569157d85010525afa?url=https%3A%2F%2Fwww.acceleanation.com&userId=7259985&signature=f5b9c321d1b4c8b6>
*Cr. Alejandro Otero*
*Consulting Manager*
*e:* ***@***.***
*w:* acceleanation.com
<https://mailtrack.io/trace/link/796c3c61a2a904b5f2e5e6a20a7bcc6f31db93fe?url=https%3A%2F%2Fwww.acceleanation.com&userId=7259985&signature=034bc373cc95696f>
*m:* +598 99119120
Book a meeting with me: 15min
<https://mailtrack.io/trace/link/7d344c211d5d322a1276818422b980f22bbe6057?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F15min&userId=7259985&signature=e0a6ac9c0fbe139d>
 | 25min
<https://mailtrack.io/trace/link/2332a2f58c83ca7c5f312b106a0793f9a2a7c7fe?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F25min&userId=7259985&signature=56ab97f153373533>
 | 50min
<https://mailtrack.io/trace/link/cb411452873f7e8a99c7f015769f7fa632e58206?url=https%3A%2F%2Fcalendly.com%2Foteroalejandro%2F50min&userId=7259985&signature=02b6aca2a820a339>


El vie, 21 oct 2022 a la(s) 15:12, Kate ***@***.***) escribi√≥:
‚Ä¶
 @oteroalejandro <https://github.com/oteroalejandro> I'm working on this
 issue. Thanks for pointing out the problem.
 One question: do you get an extra day off (observance) if not laborable
 holiday falls on weekend?

 ‚Äî
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/745#issuecomment-1287288094>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ARMB7HUKBESZJPI5XRWA3ALWELMI5ANCNFSM6AAAAAARJCG7LE>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>
Hi Kate.

I checked with colleagues, and wikipedia is right. If the holiday is
Thursday or Friday, it's moved to next monday.

Another thing... In addition to November 2, exceptions to the holiday
movement rules are on January 06 and June 19. These holidays do not move
despite being working days.

Thanks a lot for your work.
Best regards.






[image: Logo] <https://www.acceleanation.com>
*Cr. Alejandro Otero*
*Consulting Manager*
*e:* ***@***.***
*w:* acceleanation.com <https://www.acceleanation.com>
*m:* +598 99119120
Book a meeting with me: 15min <https://calendly.com/oteroalejandro/15min> |
25min <https://calendly.com/oteroalejandro/25min> | 50min
<https://calendly.com/oteroalejandro/50min>


El vie, 21 oct 2022 a la(s) 15:17, Kate ***@***.***) escribi√≥:
‚Ä¶
 By the way, this is what Wikipedia
 <https://en.wikipedia.org/wiki/Public_holidays_in_Uruguay#Moveable_holidays>
 states:

 According to Uruguayan Law 16,805 with modifications of Law 17,414, the
 holidays declared by law, subject to the commemoration of them, follow the
 following scheme (whose commemoration as ‚Äúmoveable holidays‚Äù):

    - If coincide on Saturday, Sunday or Monday will be observed in those
    days.
    - If occur on Tuesday or Wednesday, will be observed on Monday
    immediately preceding.
    - If occur on Thursday or Friday shall be observed on the Monday
    immediately following

 It is a bit different from your explanation. Could you please clarify
 this? Thanks!

 ‚Äî
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/745#issuecomment-1287293377>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ARMB7HX47FOE744ZFT2KQQ3WELM4FANCNFSM6AAAAAARJCG7LE>
 .
 You are receiving this because you were mentioned.Message ID:
 ***@***.***>
In addition to November 2, exceptions to the holiday movement rules are on January 06 and June 19. These holidays do not move despite being working days. Thanks a lot for your work. Best regards. >

Yes, I noticed that as well in Wikipedia.
Thanks for the clarification!
Fixed by @kasya and merged in beta.. thx! üëç

South Africa rollover rules regarding holidays falling on Sundays don't appear to be correct
#392 changed South African holiday calculations to add observed holidays when the existing holiday falls on a Sunday, per:
The Public Holidays Act (Act No 36 of 1994) determines that whenever any public holiday falls on a Sunday, the Monday following on it shall be a public holiday.
However it doesn't just check if it can add it to the following Monday but continues checking for an "open" day until it can place it, leading to it incorrectly marking 27 December 2022 as a public holiday:
In [80]: list(sorted(holidays.ZA(years=2022).items()))
Out[80]:
[(datetime.date(2022, 1, 1), "New Year's Day"),
 (datetime.date(2022, 3, 21), 'Human Rights Day'),
 (datetime.date(2022, 4, 15), 'Good Friday'),
 (datetime.date(2022, 4, 18), 'Family Day'),
 (datetime.date(2022, 4, 27), 'Freedom Day'),
 (datetime.date(2022, 5, 1), "Workers' Day"),
 (datetime.date(2022, 5, 2), "Workers' Day (Observed)"),
 (datetime.date(2022, 6, 16), 'Youth Day'),
 (datetime.date(2022, 8, 9), "National Women's Day"),
 (datetime.date(2022, 9, 24), 'Heritage Day'),
 (datetime.date(2022, 12, 16), 'Day of Reconciliation'),
 (datetime.date(2022, 12, 25), 'Christmas Day'),
 (datetime.date(2022, 12, 26), 'Day of Goodwill'),
 (datetime.date(2022, 12, 27), 'Christmas Day (Observed)')]```
@pietervdw115 since you submitted the original change just want to check if there's something I'm missing here?
Issue fixed and released. Closing, thx!

Add Halloween to US Holiday Schedule
Please add Halloween (Oct 31st) to US Holiday schedule. I use this code to automate my outdoor lights based on holiday. Halloween is a fun holiday to change lights.
Hi @schmittyice-hyp!
Thanks for the idea!
I love this holiday! And it's quite unfortunate that at this moment python-holidays provides official holiday list (both federal and regional ones) only.
I don't know what your automation looks like but it sounds like you might benefit from forking the repo and adding that holiday by yourself for using the fork further in your automation. Another way would be extending the python-holidays to optionally include non-official holidays based on some parameter value. This may or may not be ready before this year's Halloween.
--
Ark
You can easily add this on your own. Here is a simple example:
class HalloweenHolidays(holidays.HolidayBase):
    def _populate(self, year):
        self[date(year, 10, 31)] = "Halloween"

german_holidays = holidays.country_holidays('DE', subdiv='NW', years=2022)
german_holidays += HalloweenHolidays()

for date, name in sorted(german_holidays.items()):
    print(date, name)
This is all documented quite well. You can create new custom holiday classes and merge different holiday classes. This way I add halloween to the german holidays and debug print the result afterwards.
At the current time, I agree with @NicoHood : the right way to go is using a custom class to implement your required additional days. Anyway, thanks everyone for your interest and support!

Sovereign's Birthday updates for New Zealand
With the passing of Queen Elizabeth II the Sovereign's Birthday public holiday will be called King's Birthday from 2023 for Charles III. Also see #708 for new temporary holiday in 2022.
More information here.
Hi @markhoneth thank you, today I've released in beta an update on this.
I'm closing this, please follow up in case of any review required.
Thanks, cheers
dr-p

New temporary public holiday in New Zealand
New Zealand will mark the passing of Queen Elizabeth II with a one-off public holiday on Monday 26 September.
The Public Holiday will be called Queen Elizabeth II Memorial Day.
Legislation will be passed next week to bring the holiday into force.

More information here.
Hi @markhoneth thank you, today I've released in beta an update on this.
I'm closing this, please follow up in case of any review required.
Thanks, cheers
dr-p

Canada: Observed New Year's day for 2021/2022 incorrect
When querying December 31st, 2021 in Ontario, Canada, it is listed as "New Year's Day (Observed)", but this is not the case, it was observed on the following Monday. (see for example here: https://www.timeanddate.com/calendar/?year=2022&country=27 , and here https://www.timeanddate.com/holidays/canada/new-year-day)
This doesn't seem to be a problem with the data but with the logic of when the observed day falls. This seems related to these issues/PRs:
https://github.com/dr-prodigy/python-holidays/pull/579
https://github.com/dr-prodigy/python-holidays/issues/581
Thank you for maintaining this package.
import holidays
from datetime import datetime
h = holidays.country_holidays("CA", subdiv="ON")
h.get(datetime(2021,12,31))
Seems to be fixed in #811
Thank you @KJhellico , it seems correct to me as well.. can you confirm @jasonjensen ? Thx
Thank you @KJhellico , it seems correct to me as well.. can you confirm @jasonjensen ? Thx

Yes, thank you @dr-prodigy and @KJhellico , this was the one and same issue. This can be closed once #811 is incorporated into the main branch, or now if that is your convention.
Yes, we usually close issues upon their release on beta branch. Thank you @jasonjensen !

Australia one-off public holiday
Hi there,
Just thought I'd flag the one-off public holiday that Australia is getting across all states on the Thursday 2022-09-22, see below:
https://www.theguardian.com/australia-news/2022/sep/11/australia-to-have-public-holiday-to-mark-the-death-of-queen-elizabeth-ii-anthony-albanese-announces
Keep up the good work!
Hi @cozimapotato thank you: we have just sorted this out by merging #699 . It is currently released in beta, and will be included in the next release.
Cheers! üëç

Holiday names sorting
While I was working on Bolivia holidays one of my tests caught an error with holiday names when two holidays fall on the same day. In this particular case it was one regional holiday (La Tablada in Tarija) and Viernes Santo holiday. In 2022 they both fell on Apr 15, so I had to make a separate test for this case. But to test it I needed to know the logic behind how names are combined.
I checked the code and noticed that there was no "rule" for holiday names order in such cases, and that makes testing much harder.
@dr-prodigy  Would it be ok to submit a PR with a change to this fundamental logic?
Hi @kasya thank you for this interesting case!
Indeed, we don't have a clear definition of behaviour in case of holidays overlapping.. being holidays a Dict-based class, we can't in fact add more than one holiday on the same date right away.
Then, it would surely be valuable to add a standard logic to cover those cases: it would be useful especially regarding moving holidays (eg: Easter, Good Friday, etc.).
My suggestion, whenever it happens, is, while keeping one single date element, to define a standard format to include all the holiday descriptions: they could be comma/semicolon separated, or new lines.
This will probably imply some country holidays code refactoring too (I remember we have some custom logic regarding this in the project already), but that will come probably later..
Please, go on.. I'll be glad to participate to this development and include it in a PR.
Thank you!
Is this still an issue, or has #713 closed/solved this? :)
Is this still an issue, or has #713 closed/solved this? :)

#713 solved this issue (holiday names are now sorted alphabetically when 2 or more holidays fall on the same date).
Confirm.. PR released in beta. Closing this, thx everyone!

Singapore adds additional holidays every time _populate function is run for 2017
For Singapore holidays, if the _populate function is run multiple times for the year 2017 it continues to add more and more holidays:
x = country_holidays("SG")

In [3]: x._populate(2017)

In [5]: len(x)
Out[5]: 17

In [6]: x._populate(2017)

In [7]: len(x)
Out[7]: 20

In [8]: x._populate(2017)

In [9]: len(x)
Out[9]: 23

In [10]: x._populate(2017)

In [11]: len(x)
Out[11]: 26

In [12]: x._populate(2017)

In [13]: len(x)
Out[13]: 29

In [15]: pprint(x)
{datetime.date(2017, 1, 1): "New Year's Day",
 datetime.date(2017, 1, 2): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 3): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 4): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 5): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 6): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 7): "New Year's Day [In lieu]",
 datetime.date(2017, 1, 28): 'Chinese New Year',
 datetime.date(2017, 1, 29): 'Chinese New Year',
 datetime.date(2017, 1, 30): 'Chinese New Year [In lieu]',
 datetime.date(2017, 1, 31): 'Chinese New Year [In lieu]',
 datetime.date(2017, 2, 1): 'Chinese New Year [In lieu]',
 datetime.date(2017, 2, 2): 'Chinese New Year [In lieu]',
 datetime.date(2017, 2, 3): 'Chinese New Year [In lieu]',
 datetime.date(2017, 2, 4): 'Chinese New Year [In lieu]',
 datetime.date(2017, 4, 14): 'Good Friday',
 datetime.date(2017, 5, 1): 'Labour Day',
 datetime.date(2017, 5, 10): 'Vesak Day',
 datetime.date(2017, 6, 25): 'Hari Raya Puasa',
 datetime.date(2017, 6, 26): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 6, 27): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 6, 28): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 6, 29): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 6, 30): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 7, 1): 'Hari Raya Puasa [In lieu]',
 datetime.date(2017, 8, 9): 'National Day',
 datetime.date(2017, 9, 1): 'Hari Raya Haji',
 datetime.date(2017, 10, 18): 'Deepavali',
 datetime.date(2017, 12, 25): 'Christmas Day'}
@amas01 Thanks for taking the time to file a bug report!
@dr-prodigy  I can take a look at this, but probably not until next week due to commitments.
Thank you both @amas01 @mborsetti !
Yes Mike, please, if you can, definitely happy if you work on it.. no prob about your time availability: at the current time I'm almost done with closing a new version (release required due to Queen Elizabeth mourning holidays), so merging of this PR will come later, with less urgency.
Thx!
I've had time to look into this and the reported behavior is present for all of the following countries:

GR
KR
MY
SG
SZ
ZA
ZW

I traced it down to the logic employed in the code for movable (observed) holidays, which, roughly speaking, is: if the day is already marked as a holiday (or a Sunday), find the first non-holiday day and mark that one as an "in lieu" holiday. As a result of this logic if  _populate() is called when holidays are already loaded/present, new "in lieu" holidays might be added.
@amas01 What is the use case for calling _populate(), which is a private (and undocumented) method, directly?  I am trying to understand whether a "fix" is even necessary!
We pass the country holidays oject around and add aditional years if they are required. When the code was originally written _populate was used to produce a complete list of the holidays for the required years. Not sure if there is a better way of doing this now but I have written a fix for the singapore case and raised a PR. Happy for you to ignore if you don't think it's required: #717
Oh, I see.
@dr-prodigy Your architectural choice! Here are the options I can think of:
(1) _populate() should be callable on an already-populated object, in which case we should fix all 7 countries affected and have a unit test for this condition; furthermore, we should rename the method to populate() to make it clear that it's a public method; or
(2) we better document that _populate() is a private method not to be called directly, and suggest that to add years to an existing holidays object one should use the update() method as follows:
import holidays
x = holidays.country_holidays("SG", years=2017)
len(x)
Out[4]: 14
x.update(holidays.country_holidays("SG", years=2017))
len(x)
Out[6]: 14

Personally, I'm indifferent but I don't know the history; let me know and I can contribute a PR.
Hey @mborsetti thank you for pointing this out, and sorry for getting back here only after weeks:  I had some stop and I restarted today merging some PRs, such as #717 in fact.
At a first glance, I found #717, even if not very "strategic", to be an improvement at some degree, so I merged it without thinking too much..
But now thanks to these comments, I have a clearer view of the whole context.
As a general rule, _populate method, as its naming suggests and you correctly point out, is an internal one, so it should theoretically never be called from outside: there are other correct and documented ways of reinitializing the library, such as update.
Apart from specific country code just like #717, we could even possibly think about centralizing some protective behaviour to avoid data duplication (and also possibly manage observed holidays better), but that would result in a quite large refactoring. Not something we should prioritize, IMHO.
All this said, in the end, I'm definitely oriented towards case 2, so if you agree, I would surely like to invest our time in this direction.
Pls let me know your point of view on this @amas01 @mborsetti .. thank you both!
Hi @dr-prodigy apologize for missing this.
I completely agree with case #2 as it is faster due to the lack of additional checks. Unless I am mistaken, the code would stay as it is and _populate is not to be called.  Happy to submit a PR with additional remarks in the code.
Yep, you are right Mike @mborsetti , no big changes to do right now.. if you wish, some remarks and / or doc integration could help anyway. Thx! üëç
Yep, you are right Mike @mborsetti , no big changes to do right now.. if you wish, some remarks and / or doc integration could help anyway. Thx! üëç

Will contribute (in due time) some remarks and/or documentation.

Today is not holiday in region CT, Spain.
Hi, the library is returning holiday today 12th of September for Catalonia (CT), Spain. That's wrong. Today is working day.
I think the issue is the holiday from yesterday (Sep. 11th)  is traslated to today because yesterday was Sunday as I have seen in the code. But here we do not move the holyday to the next day if it's sunday... Usually they assign another local holiday and that's it... Can you exclude the +1 day rule when it's sunday?
Hi @mrbluebrett,
I googled a bit and it seems that there are only 2 holidays that can be moved to Monday (and that is decided by each Autonomous Community) - Christmas Day and Labor Day. Everything else is usually celebrated on the day of the holiday.
Is this logic correct? Thanks!
Not exactly. All national holidays that happen in sunday can be moved to another day, but each autonomous community decides the new day. Some of the choose the next Monday, but others a completely different day. And also this can change every year so a community that choses to move one holiday to monday one year, the next year can choose to move to a completely different day.
I have also seen in the code that you have put JUN 6 as a holiday in CT, but that was only true this year. When this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.
Feel free to ask if you need more clarification.
If there's no definitive logic in how sunday holidays are moved it might be hard to program it.

When this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.

And about this one... So, as I understand it at this moment: if any of those 4 holidays fall on Sunday, you kind of have one "unused" holiday and in this case you have this Pentecost Monday (Jun 6 this year) somewhere in May-June. But if none of those 4 were on Sunday - you don't get a day off, is that correct?
When this holiday happens is 7 weeks (or 49 days) after easter monday. And also this only happens if 1 of the 4 autonomous holidays for catalonia (easter monday, JUN 24, SEP 11 and DEC 26) happen in sunday.

And about this one... So, as I understand it at this moment: if any of those 4 holidays fall on Sunday, you kind of have one "unused" holiday and in this case you have this Pentecost Monday (Jun 6 this year) somewhere in May-June. But if none of those 4 were on Sunday - you don't get a day off, is that correct?

Yes, that‚Äôs correct for Catalonia. It‚Äôs the first substitute holiday for the other four (in fact 3, because easter monday can never be in sunday).
Apparently it's no longer an issue after multiple Spain holidays fixes and refactorings.
>>> "2022-09-12" in holidays.ES(years=2022, subdiv="CT")
False
Closing this.

Canadian Holidays are not working in 2022
The folllowling should return "Christmas Day" but does not
import holidays
holidays.CA().get('2022-12-25')
# No return

However, it does work for the US
holidays.US().get('2022-12-25')
'Christmas Day'
I'll look into this.
Hi @Dpananos
I made a check, and I confirm Canada code is working as expected: the difference between it and the other countries is it applies observance by default:
>>> import holidays
>>> h = holidays.CA()
>>> h
holidays.country_holidays('CA', subdiv='ON')
>>> h.get('2022-12-25')
>>> h
{datetime.date(2022, 1, 1): "New Year's Day", datetime.date(2022, 2, 21): 'Family Day', datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 4, 18): 'Easter Monday', datetime.date(2022, 5, 23): 'Victoria Day', datetime.date(2022, 7, 1): 'Canada Day', datetime.date(2022, 8, 1): 'Civic Holiday', datetime.date(2022, 9, 5): 'Labour Day', datetime.date(2022, 10, 10): 'Thanksgiving', datetime.date(2022, 12, 27): 'Christmas Day (Observed)', datetime.date(2022, 12, 26): 'Boxing Day'}
>>> h.get('2022-12-27')
'Christmas Day (Observed)'

Basically, Christmas Day is there, but for 2022, is shifted to 2022-12-27.
In the end, this behaviour could be debated (could you please check whether it's correct or not?), but there seems not to be any technical issue behind it (ie: it's like so by design).
Please let me know if this makes sense to you, thank you!
Here's a fix: https://github.com/dr-prodigy/python-holidays/pull/715
This is to be closed.. thx!

Market holidays clarification?
Hi, I'm wondering if someone can clarify how the financial package is intended to be used with a code sample. Code looks simple enough but using NYSE as a country, as the docs suggest, results in an error. I downgraded to the previous release and encountered the same issue.
Hi Tim,
it's always a good idea to attach the error message to a bug report and make it as detailed as possible.
As there are no clear steps to reproduce the issue I've just tried these:
‚ùØ virtualenv venv

created virtual environment CPython3.9.13.final.0-64 in 266ms
creator CPython3Posix(dest=/Users/ark/Dev/python-holidays/venv, clear=False, no_vcs_ignore=False, global=False)
seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/ark/Library/Application Support/virtualenv)
added seed packages: pip==22.2.2, setuptools==63.4.3, wheel==0.37.1
activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator

‚ùØ pip install holidays

Collecting holidays
Downloading holidays-0.15-py3-none-any.whl (181 kB)
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 181.3/181.3 kB 802.2 kB/s eta 0:00:00
Collecting convertdate>=2.3.0
Using cached convertdate-2.4.0-py3-none-any.whl (47 kB)
Collecting korean-lunar-calendar
Using cached korean_lunar_calendar-0.2.1-py3-none-any.whl (8.0 kB)
Collecting hijri-converter
Using cached hijri_converter-2.2.4-py3-none-any.whl (14 kB)
Collecting python-dateutil
Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting pymeeus<=1,>=0.3.13
Using cached PyMeeus-0.5.11.tar.gz (5.4 MB)
Preparing metadata (setup.py) ... done
Collecting six>=1.5
Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Building wheels for collected packages: pymeeus
Building wheel for pymeeus (setup.py) ... done
Created wheel for pymeeus: filename=PyMeeus-0.5.11-py3-none-any.whl size=730971 sha256=e07715b75457573b8fcbbf2acb68014c7aa3a8a3d7005135e3d5effe54a43acb
Stored in directory: /Users/ark/Library/Caches/pip/wheels/33/3d/82/4579e9cca41ff991140b2e050bc6df3a38292f26e4fa06b15d
Successfully built pymeeus
Installing collected packages: pymeeus, korean-lunar-calendar, six, hijri-converter, convertdate, python-dateutil, holidays
Successfully installed convertdate-2.4.0 hijri-converter-2.2.4 holidays-0.15 korean-lunar-calendar-0.2.1 pymeeus-0.5.11 python-dateutil-2.8.2 six-1.16.0

‚ùØ python

import holidays
print(holidays.financial.ny_stock_exchange.NYSE(years=2022))
{datetime.date(2022, 1, 3): "New Year's Day (Observed)", datetime.date(2022, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2022, 2, 21): "Washington's Birthday", datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 5, 30): 'Memorial Day', datetime.date(2022, 6, 20): 'Juneteenth National Independence Day (Observed)', datetime.date(2022, 7, 4): 'Independence Day', datetime.date(2022, 9, 5): 'Labor Day', datetime.date(2022, 11, 24): 'Thanksgiving Day', datetime.date(2022, 12, 26): 'Christmas Day (Observed)'}

In general you should use NewYorkStockExchange class (or its alias NYSE) of holidays.financial.ny_stock_exchange module. Example:
from holidays.financial import ny_stock_exchange
nyse_holidays_2022 = ny_stock_exchange.NYSE(years=2022)

I hope this'll help you get started. I may be able to assist more if you provide the error you mentioned.
hi everyone!
@arkid15r thank you so much for the complete explanation.
Indeed, providing a complete issue report (with an enclosed code sample, whenever possible) is vital to obtain valuable support.
This said, everything explained here above should be more than enough to get things done in the right way.
Willing to get deeper in all the possible ways to use python holidays, there are 2 other main sources to take into account:

holidays documentation
unit test code

While official documentation provides all the required details, unit test code include a near-100% coverage of the whole library, and therefore provides valid examples for all its use cases.
@aJetHorn please let us know if this clarifies your doubts, thx
The language used in the docs:
"The standard way to refer to a financial market is to use its ISO 10383 MIC (Market Identifier Code) as a ‚Äúcountry‚Äù code when available."
Was interpreted as this usage being possible:
us_market_holidays = holidays.country_holidays('NYSE')
I guess I understand why usage is different, I just couldn't find it documented and couldn't find any code samples on Github. Thank you for clarifying.
Hi @aJetHorn , this definitely clarifies your issue report, thank you very much.
Although, as you could notice after, country_holidays('..') method is meant for countries only, a similar method should in fact be available for financial holidays too (which is not yet the case: this went unnoticed since we split financial holidays from country ones). I'm then reopening this, and we will take care of it in the next release.
Thanks again üëç
Hi @aJetHorn
I've just pushed in beta an update that should address your issue. This involved a larger refactoring regarding all the financial holidays code, including adding a new BaseHoliday property (market), used for financial holidays instead of the usual country.
Could you please make a check on it and confirm it works as expected?
Thanks!
Closing this out as the required functionality was added.

2022-01-03 was not a holiday for NYSE (XNYS)
More info: https://www.nyse.com/markets/hours-calendars
I will look into this issue.
Thanks!
Just merged on beta. Thanks both üëç

Custom holidays not iterable
Hello,
i added some holidays to the "IT" ones this way:
class my_holidays:
    def _populate(self, year):

        holidays.IT._populate(self, year)

        # Add custom holidays
        self[date(year, 6, 24)] = "San Giovanni Battista"
        self[date(year, 12, 31)] = "San Silvestro"

But when i try to call it:
Note: holidays is a personal custom list, current_day is a variable and i also tested it directly in the interpreter but issue is the same. No issue with the standard it_holidays = holidays.IT()
# Check if current day is an holiday
if x > 0 and current_day in my_holidays:
    holidays.append(
        (
           days_list[x],
           datetime.strptime(current_day, "%m/%d/%y").strftime("%d/%m/%Y"),
        )
    )

i receive the following error:
if x > 0 and current_day in my_holidays:
TypeError: argument of type 'type' is not iterable

Any idea what am i doing wrong?
Thanks!
Hi,
I kindly ask you to follow the provided doc and, when possible, avoid opening project issues about specific implementation issues.
This said, in order to make it work, you should at least inherit your class from Italy class, like so (I'm from mobile so there could be some small error / typo):
...
class my_holidays (holidays.Italy):
...

Then, if your added holidays are valid for the whole Italy or a province,  I would suggest to prepare a PR to include them in the lib code.
Thx, best
Before implementing this in my personal code i tried the exact code from the documentation in the section "Creating custom holidays (or augmenting existing ones with private ones)" and got same issue discussed here https://github.com/dr-prodigy/python-holidays/issues/500
That's why i used:
class my_holidays:
instead of:
class my_holidays (holidays.Itay):
If i use the code from the docs:
>>> import holidays
>>> from datetime import date
>>> class CorporateHolidays(holidays.US):
...     def _populate(self, year):
...             holidays.US._populate(self, year)
...             self[date(year, 7, 13)] = "Ninja Turtle Day"

>>> date(2014, 10, 14) in CorporateHolidays(country="US")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\xxx\AppData\Local\Programs\Python\Python310\lib\site-packages\holidays\countries\united_states.py", line 107, in __init__
    HolidayBase.__init__(self, **kwargs)
TypeError: HolidayBase.__init__() got an unexpected keyword argument 'country'

That is exactly the error from the link i provided.
If i try to follow the solution provided in the link:
>>> class CorporateHolidays():
...     def _populate(self, year):
...             holidays.US._populate(self, year)
...             self[date(year, 7, 13)] = "Ninja Turtle Day"

I get exactly the same issue i have in my custom code:
>>> date(2014, 10, 14) in CorporateHolidays()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: argument of type 'CorporateHolidays' is not iterable

So there is probably something i'm not doing right :/
At a further check, I confirm that specific example referred to is providing a wrong code: being already a country-inherited object, the subsequent call to country="US" is not valid, thus the first reported error.
Going to the second code, on the other hand, the inheritance is still obviously required: no examples in the doc is omitting it.
The correct code is then
import holidays
from datetime import date

class CorporateHolidays(holidays.US):
  def _populate(self, year):
    holidays.US._populate(self, year)
      self[date(year, 7, 13)] = "Ninja Turtle Day"

print (date(2014, 7, 13) in CorporateHolidays())

The doc will be fixed accordingly, thx for your clarifications!
The fix has been just pushed on beta.
It will be then published to https://python-holidays.readthedocs.io when merged on master, ie: when the next app official version (0.15) is released.
Closing this: pls reach out in case of further needs, thx.

May 1 is a holiday in Hong Kong ( .HK() )
Reference point from government source: https://www.labour.gov.hk/eng/news/latest_holidays2022.htm
As a matter of fact, 1st of May in 2022 falled on Sunday, so it is correct that Labour Day is then observed on the 2nd.
This is confirmed here too:
https://www.gov.hk/en/about/abouthk/holiday/2022.htm
and on a number of other sources.
Could you pls double-check and let me know? thx

ADD Holidays for Bosnia and Hertzegovina
Please can you add holidays for BiH Bosnia and Hertzegovina ?
Hi,
this is a completely voluntary-backed project, so we won't accept any request for specific features.
On the other hand, all contributions are always more than welcome so, if you're interested in python-holidays and / or available to give your support, my suggestion is to implement them yourself, or wait for someone to commit to this task.
Pls start from here for details:
https://github.com/dr-prodigy/python-holidays#contributions
Marking this as "help wanted".. Thx!
Hi @joksa97 ,
Could you please verify test outputs for Bosnia and Herzegovina holidays?
2022, Federation of Bosnia and Herzegovina:
2022-01-01 Nova Godina
2022-01-02 Drugi dan Nove Godine
2022-05-01 Dan rada
2022-05-02 Ramazanski Bajram, Drugi dan Dana rada
2022-05-03 Drugi Dan Ramazanski Bajram, Treƒái dan Dana rada
2022-03-01 Dan nezavisnosti
2022-04-15 Veliki Petak (Katoliƒçki)
2022-04-17 Uskrs (Katoliƒçki)
2022-04-18 Uskrsni ponedjeljak (Katoliƒçki)
2022-06-16 Tijelovo (Tijelo i Krv Kristova)
2022-07-09 Kurban Bajram
2022-07-10 Kurban Bajram
2022-07-11 Kurban Bajram
2022-07-12 Kurban Bajram
2022-07-30 Muslimanska Nova Godina
2022-11-01 Svi Sveti
2022-11-02 Du≈°ni dan
2022-11-25 Dan dr≈æavnosti
2022-12-25 Bo≈æiƒá (Katoliƒçki)
2022-12-26 Stipandan (Stjepandan)

2021, Federation of Bosnia and Herzegovina:
2021-01-01 Nova Godina
2021-01-02 Drugi dan Nove Godine
2021-05-01 Dan rada
2021-05-02 Drugi dan Dana rada
2021-03-01 Dan nezavisnosti
2021-04-02 Veliki Petak (Katoliƒçki)
2021-04-04 Uskrs (Katoliƒçki)
2021-04-05 Uskrsni ponedjeljak (Katoliƒçki)
2021-06-03 Tijelovo (Tijelo i Krv Kristova)
2021-05-13 Ramazanski Bajram
2021-05-14 Drugi Dan Ramazanski Bajram
2021-07-20 Kurban Bajram
2021-07-21 Kurban Bajram
2021-07-22 Kurban Bajram
2021-07-23 Kurban Bajram
2021-08-09 Muslimanska Nova Godina
2021-11-01 Svi Sveti
2021-11-02 Du≈°ni dan
2021-11-25 Dan dr≈æavnosti
2021-12-25 Bo≈æiƒá (Katoliƒçki)
2021-12-26 Stipandan (Stjepandan)

2022, Republika Srpska:
2022-01-01 Nova Godina
2022-01-02 Drugi dan Nove Godine
2022-05-01 Dan rada
2022-05-02 Drugi dan Dana rada
2022-05-03 Treƒái dan Dana rada
2022-01-06 Pravoslavno Badnje veƒçe
2022-01-07 Bo≈æiƒá (–ë–æ–∂–∏—õ)
2022-01-09 Dan Republike
2022-01-14 Pravoslavna Nova Godina
2022-04-22 Veliki Petak (Pravoslavni)
2022-04-24 Vaskrs (Pravoslavni)
2022-04-25 Uskrsni ponedjeljak (Pravoslavni)
2022-05-09 Dan pobjede
2022-06-28 Vidovdan
2022-11-21 Dan uspostave Op≈°teg okvirnog sporazuma za mir u Bosni i Hercegovini

2021, Republika Srpska:
2021-01-01 Nova Godina
2021-01-02 Drugi dan Nove Godine
2021-05-01 Dan rada
2021-05-02 Vaskrs (Pravoslavni), Drugi dan Dana rada
2021-01-06 Pravoslavno Badnje veƒçe
2021-01-07 Bo≈æiƒá (–ë–æ–∂–∏—õ)
2021-01-09 Dan Republike
2021-01-14 Pravoslavna Nova Godina
2021-04-30 Veliki Petak (Pravoslavni)
2021-05-03 Uskrsni ponedjeljak (Pravoslavni)
2021-05-09 Dan pobjede
2021-06-28 Vidovdan
2021-11-21 Dan uspostave Op≈°teg okvirnog sporazuma za mir u Bosni i Hercegovini

Thanks!
Implemented by @kasya (thank you very much!) and just released in beta.. marking closed.

Norway's country code not supported?
Hello,
When I change the country code to NO the lettering turns blue and I get an invalid country (even if Norway is listed) while if I try with the default DE it turns orange (using Studio Code Server)
To add, I am very new to HA, so I might be doing something wrong here, but just inputting "NO" do not seem to work..

ADD Holidays from Bolivia?
If is not much to ask?
https://publicholidays.com.bo/
Thanks!
Hi @djcrawleravp is there any special rule about the holidays in Bolivia?
like, if it lays on a sunday, do you guys get monday off as well ?
TIA (WIP)
All religious holidays are on the exact date, non religious ones are moved to monday if they are on a sunday :3
Hi,
this is a completely voluntary-backed project, so we won't accept any request for specific features.
On the other hand, all contributions are always more than welcome so, if you're interested in python-holidays and / or available to give your support, my suggestion is to implement them yourself, or wait for someone to commit to this task.
Pls start from here for details:
https://github.com/dr-prodigy/python-holidays#contributions
Marking this as "help wanted".. Thx!
I'll love to, but I'm not a developer :/, thanks anyway
I'd like to work on this one.
@djcrawleravp one more question. Are regional holidays days off too in those specific regions? For instance, is Chuquisaca Day (May 25) is a day off in the Bolivian department of Chuquisaca?
I'd like to work on this one.
@djcrawleravp one more question. Are regional holidays days off too in those specific regions? For instance, is Chuquisaca Day (May 25) is a day off in the Bolivian department of Chuquisaca?

Thank you Kasya, Yes, regional holidays days off are on the specific regions
Hi @djcrawleravp,
Could you please verify test outputs for Bolivian holidays?
Here is a printout for 2021, with observed holidays:
2021-01-01 A√±o Nuevo
2021-01-22 Nacimiento del Estado Plurinacional de Bolivia
2021-02-15 Feriado por Carnaval
2021-02-16 Feriado por Carnaval (Observed)
2021-04-02 Viernes Santo
2021-05-01 Dia del trabajo
2021-06-03 Corpus Christi
2021-06-21 A√±o Nuevo Andino
2021-08-02 D√≠a de la Revoluci√≥n Agraria
2021-08-06 Dia de la Patria
2021-11-02 Todos Santos
2021-12-25 Navidad

Here's one for 2022, with observed holidays:
2022-01-01 A√±o Nuevo
2022-01-22 Nacimiento del Estado Plurinacional de Bolivia
2022-02-28 Feriado por Carnaval
2022-03-01 Feriado por Carnaval (Observed)
2022-04-15 Viernes Santo
2022-05-01 Dia del trabajo
2022-05-02 Dia del trabajo (Observed)
2022-06-16 Corpus Christi
2022-06-21 A√±o Nuevo Andino
2022-08-02 D√≠a de la Revoluci√≥n Agraria
2022-08-06 Dia de la Patria
2022-11-02 Todos Santos
2022-12-25 Navidad
2022-12-26 Navidad (Observed)

Here'e one for 2023, with observed holidays:
2023-01-01 A√±o Nuevo
2023-01-02 A√±o Nuevo (Observed)
2023-01-22 Nacimiento del Estado Plurinacional de Bolivia
2023-02-20 Feriado por Carnaval
2023-02-21 Feriado por Carnaval (Observed)
2023-04-07 Viernes Santo
2023-05-01 Dia del trabajo
2023-06-08 Corpus Christi
2023-06-21 A√±o Nuevo Andino
2023-08-02 D√≠a de la Revoluci√≥n Agraria
2023-08-06 Dia de la Patria
2023-08-07 Dia de la Patria (Observed)
2023-11-02 Todos Santos
2023-12-25 Navidad

And here's one for 2022, Santa Cruz department with observed holidays:
2022-01-01 A√±o Nuevo
2022-01-22 Nacimiento del Estado Plurinacional de Bolivia
2022-02-28 Feriado por Carnaval
2022-03-01 Feriado por Carnaval (Observed)
2022-04-15 Viernes Santo
2022-05-01 Dia del trabajo
2022-05-02 Dia del trabajo (Observed)
2022-06-16 Corpus Christi
2022-06-21 A√±o Nuevo Andino
2022-08-02 D√≠a de la Revoluci√≥n Agraria
2022-08-06 Dia de la Patria
2022-09-24 D√≠a del departamento de Santa Cruz
2022-11-02 Todos Santos
2022-12-25 Navidad
2022-12-26 Navidad (Observed)

Thanks!
Hey @kasya! Thank you so much for this!.
Indeed those Holidays are correct, I don't quite understand what (Observed) mean but certainly those days are incorrect
Hey @djcrawleravp ,

I don't quite understand what (Observed) mean but certainly those days are incorrect

Observed holiday in this case is when a holiday falls on Sunday and you get next Monday as a day off (for non-religious holidays). As I understood after your reply on Jul 6 - that's the way in Bolivia. I also googled a bit and it seems that Bolivia does have observed holidays that fall on Sunday.
Is that not correct?
Hi @kasya,
I did my research in here and find out that Sunday holidays are moved to the next day.
In case of "Feriado de Carnaval" is a little bit complex. These are 2 Days (Monday and Tuesday) before "Viernes Santo)
In other words, Your output is correct, I was mistaken :P
@djcrawleravp  great, thanks for checking!
It is my understanding that these changes should be added to beta with next update.
Thank you very much @kasya !!!
@kasya + everyone, that's what I've just done: #698 merged today in beta  üëç
Release in master + new PyPi release will follow, as per our standard release workflow.
Thanks a lot everyone, cheers!
dr-p

No "New Year" Holiday for Colombia in some years (2022,2023)
Hi everyone, I'm testing the Python holiday library for Colombia.
col_holidays = holidays.country_holidays('CO')
But some years like 2022 and 2023 doesn't have the first holiday of the year "New Year".
Another years like 2020 or 2021 doesn't have this issue.
Thanks.
Apparently this is expected. The test code expects fixed holidays (for which there are 4, including New Year) to not be holidays if they fall on the weekend: https://github.com/dr-prodigy/python-holidays/blob/master/test/countries/test_colombia.py#L44
However, the test case references this website which states in that 2022 New Year is a holiday: https://www.officeholidays.com/countries/colombia/
So there is a contradiction. I think it would make more sense for it to be a holiday but for there to be no observed holiday.
Some articles I found suggesting that they are considered holidays but not observed on the next Monday:
https://www.municipio.com.co/dias-festivos-2022.html
https://cnnespanol.cnn.com/2022/04/13/dias-festivos-colombia-puentes-fiesta-2022-calendario-orix/
I've confirmed that they should fall on those days, but noticed some other errors in the colombia file. The law for bridging holidays to the next monday was enacted in 1983 among other things. I'll create a PR shortly.
Fixed with #676 .. Thx both! üëç

ModuleNotFoundError: No module named 'holidays.financial'
Hi guys, today after upgrade holidays got that error, I cant re stablish it on the fly.
+1 seeing this as well.
+1 darts uses holidays.financial and throws the same error. I had to set the version to 0.13
It should now be fixed and released as v.0.14.2: thanks everyone!

Iran holiday
How can I add the Iran holiday to this project?
Hi,
you'll find all the required info here:
https://github.com/dr-prodigy/python-holidays/blob/master/CONTRIBUTING.rst
Thx üëç

Change day of "Pueblos Indigenas" for Chile
The real day for  "D√≠a Nacional de los Pueblos Ind√≠genas" in Chile (CL) is the June/21
Link about "senado" of Chile.
https://www.senado.cl/noticias/pueblos-originarios/confirman-feriado-para-el-21-de-junio-como-dia-de-los-pueblos-indigenas
Hi @kev-dfs thx.
Although I confirm from 2021 on it seems like you mention, I unfortunately couldn't find a clear rule for the previous years:
https://www.timeanddate.com/holidays/chile/2022
Would you please clarify this (or even better, create a PR yourself)?
Thx again, cheers üëç
Hello @dr-prodigy couldn't find a rule either but besides that don't really get why the holiday is set to June 19. The law indicates that the holiday will be the day of the winter solstice in the southern hemisphere every year and that day will always be either June 20 or 21.
Here is an official source of the law, and btw thank u very much for this library it has been prove very helpful to me
https://www.bcn.cl/leychile/navegar?idNorma=1161743
I've submitted the following PR -> #828
The holiday takes place on the same date as the solstice; by calculating the solstice date using the formulas from the book Astronomical Algorithms, we just need to adjust it to the Chile timezone UTC-3.
The full list is available here -> https://github.com/pavolgaj/AstroAlgorithms4Python
This approach doesn't require any extra dependencies, although if you consider adding https://pypi.org/project/astronomy-engine/ we can get the date using the astronomy-engine.
Just released on beta branch.. closing this, thanks everyone! üëç

Add Holidays for Oman (country)
i would like to contrubute and add Oman in the list
basically it is similar to UAE country with differ in few holidays and yes we are same in the Islamic holidays as well as we depend on moon for holidays decisions.
please let me know what is require from my end.
hi @ammaralfarsi thank you! you can then proceed in implementing it.
You will find all the required info here:
https://github.com/dr-prodigy/python-holidays/blob/master/CONTRIBUTING.rst
Thx, best üëç

Docs contain 'OD' as a supported subdivision of 'IN' but but accessing it returns error " Country IN does not have subdivision 'OD' "
ah just checked looks like its using OR in the library but the docs mention OD.
it may be because the subdiv's name was changed from 'OR' to 'OD' around 2012
Fixed on beta.. thx, cheers üëç

England country option
England is no longer accepted as a country.
A lovely 6am wake up on a Saturday result.
Why change it?
That's why:
class England(UnitedKingdom):
    def __init__(self, **kwargs):
        warnings.warn(
            "England is deprecated, use UK(subdiv='England') instead.",
            DeprecationWarning,
        )
        kwargs["subdiv"] = "England"
        UnitedKingdom.__init__(self, **kwargs)
PS: btw, England country is in fact deprecated, but not yet disabled (although soon it will be).

Add Holidays for Liechtenstien (country)
It would be great if you could add Liechtenstien.
  # Holidays Every Year same date 2022
  - '2022-01-01' #Neujahrstag
  - '2022-01-02' #Berchtoldstag
  - '2022-01-06' #Heilige Drei Konige
  - '2022-02-02' #Lichtmess
  - '2022-03-19' #Joseftag
  - '2022-05-01' #Tag der Arbeit
  - '2022-08-15' #Furstenfest (Staatsfeiertag)
  - '2022-09-08' #Maria Geburt
  - '2022-11-01' #Allerheiligen
  - '2022-12-08' #Maria Empfagnis
  - '2022-12-24' #Heiligabned
  - '2022-12-25' #1. Weihnachtstag
  - '2022-12-26' #2. Weihnachtstag
  - '2022-12-31' #Silvester
  # Holidays 2022
  - '2022-03-01' #Fasnachtsdienstag - https://en.wikipedia.org/wiki/Shrove_Tuesday
  - '2022-04-15' #Karfreitag
  - '2022-04-17' #Ostersonntag
  - '2022-04-18' #Ostermontag
  - '2022-05-26' #Christi Himmelfahrt
  - '2022-06-05' #Pfingstsonntag
  - '2022-06-06' #Pfingstmontag
  - '2022-06-16' #Fronleichnam
@gerdschadler and @dr-prodigy, I would like to contribute here.
The clarification needed is, the holidays listed are not matching to the list provided in the below link.
https://tourismus.li/en/our-country/about-liechtenstein/bank-holidays-in-liechtenstein/
May I know the trusted website to refer for the holidays and then to add in our holidays library.
@PriyabrataSamantaray
You're right. Here's an explanation.
In addition to the statutory public holidays, there are two other public holidays that can be considered paid public holidays on the basis of collective labor agreements between individual professional groups.
Candlemas February 2nd
Josefi March 19
In addition, the following public holidays are considered bank holidays* across the country
Berchtold's Day January 2nd
Shrove Tuesday 47 days before Easter
Good Friday Friday before Easter
Christmas Eve December 24th
New Year's Eve December 31st

https://www.llb.li/en/contact/bank-holidays
Thanks @gerdschadler for the clarification, I'll work on this issue and update here once it is ready for beta version.
Completed by @kasya , merged in beta. Closing, thx everyone

ZA returns an empty dictionary
Requests for South Africa's list of holidays returned an empty dictionary:
import holidays
print(holidays.SouthAfrica())
{'observed': True, 'expand': True, 'subdiv': None, 'years': set()}
This is true for every country (at least the limited list of countries I tried). Add in the years kwarg to get the holidays of certain years. E.g.:
> pprint.pprint(holidays.SA(years=[2022]))
{datetime.date(2022, 5, 1): 'Eid al-Fitr Holiday',
 datetime.date(2022, 5, 2): 'Eid al-Fitr Holiday',
 datetime.date(2022, 5, 3): 'Eid al-Fitr Holiday',
 datetime.date(2022, 5, 4): 'Eid al-Fitr Holiday',
 datetime.date(2022, 7, 8): 'Eid al-Adha Holiday',
 datetime.date(2022, 7, 9): 'Eid al-Adha Holiday',
 datetime.date(2022, 7, 10): 'Eid al-Adha Holiday',
 datetime.date(2022, 7, 11): 'Eid al-Adha Holiday',
 datetime.date(2022, 7, 12): 'Eid al-Adha Holiday (observed)',
 datetime.date(2022, 7, 13): 'Eid al-Adha Holiday (observed)',
 datetime.date(2022, 9, 22): 'National Day Holiday (observed)',
 datetime.date(2022, 9, 23): 'National Day Holiday'}

Edit: I used SA, which is probably Saudi Arabia. ZA is South Africa.
Thank you for helping!
Thanks @jaharkema
That's the pre-initialized way. You could also simply look for a specific date in an holidays object to have it initialized for the requested date's year.. like so:
>>> import holidays
>>> import datetime
>>> za = holidays.ZA()
>>> datetime.date(2022,1,1) in za
True
>>> za
{datetime.date(2022, 1, 1): "New Year's Day", datetime.date(2022, 4, 15): 'Good Friday', datetime.date(2022, 4, 18): 'Family Day', datetime.date(2022, 12, 16): 'Day of Reconciliation', datetime.date(2022, 12, 25): 'Christmas Day', datetime.date(2022, 12, 26): 'Day of Goodwill', datetime.date(2022, 3, 21): 'Human Rights Day', datetime.date(2022, 4, 27): 'Freedom Day', datetime.date(2022, 5, 1): "Workers' Day", datetime.date(2022, 6, 16): 'Youth Day', datetime.date(2022, 8, 9): "National Women's Day", datetime.date(2022, 9, 24): 'Heritage Day', datetime.date(2022, 12, 27): 'Christmas Day (Observed)', datetime.date(2022, 5, 2): "Workers' Day (Observed)"}

üëç

TypeError: Cannot convert type '<class 'pandas.core.series.Series'>' to date.
Hi, i have problem.
Idea: create a boolean dataframe with hollidays... example: data['feriado'], true or false, but i need get a date from data['data'].
i try:
data['feriado'] = data['data'] in pt_holidays
but have error:
TypeError: Cannot convert type '<class 'pandas.core.series.Series'>' to date.
Note: data['data'] is 2022-03-16....
and i can¬¥t convert. i try 1 million different ways but always have error to convert
i think you should consider convert series automatically to date
for example:
data['feriado'] = data['data'] in pt_holidays
i only want a boolean result like data['feriado'] = true/false
Unfortunately, holidays' HolidayBase object is by design a Dict[date, str], so it won't support inclusion evaluations based on different / specific data types such as pandas Series.
Therefore, in order to obtain the correct result, you will have to convert data['data'] into a datetime.date object.

Ireland considering UK as base class and hence not being a country itself
Issue also opened here:
home-assistant/core#67542
Looks like Ireland is being considered as being part of the UK which is wrong as not all the holidays in the UK exist, or necessarily exist in Ireland.
Take a reference on this comment: home-assistant/core#67542 (comment)
It seems that problem can be:
https://github.com/dr-prodigy/python-holidays/blob/f4a03e69907b0bf0249e18c263968b5fbfc6c0ba/holidays/utils.py#L229
and:
https://github.com/dr-prodigy/python-holidays/blob/f4a03e69907b0bf0249e18c263968b5fbfc6c0ba/holidays/countries/ireland.py#L25
My comment goes in the original issue matter in HA forum, that Ireland seems not to be one of the list_supported_countries, but if you want to discuss other topic here just ignore my comment.
I don't fully understand the last part, but yeah, basically the intended discussion here (at least for me) is to be able to use again Ireland as a country in Home Assistant, not interested in politics :)
Let me know if I should change something on the details so it's clearer.
IMHO the issue subject must reflect what the problem is.
The most info you can include (besides point to another place) will make easier to maintainers to understand the problem and can be easy to them to fix.
IMHO the actual redaction seems to argue about a different matter.
Sure, sorry about that, I'll try to do my best, but as I mentioned in the other issue, I'm not fully aware of this library hence the ask for a recommendation of what to explain here...
Feel free to suggest any other changes or whatever is needed to get this properly explained
I'd humbly suggest that you don't inherit the class for one country from another - perhaps you need to audit the codebase to ensure this problem isn't going to manifest for some other country class as well.
regardless of the political aspect of this - there are a lot of assumptions that things are going to match and that changes are only going to be additive etc etc
(I do have some experience of this as developer and maintainer of the pear/php equivalent -  https://pear.php.net/package/Date_Holidays )
Indeed, and the following is a good example of the dfferences:
17th March 2022 - St. Patricks's day Bank Holiday in Ireland and Northern Ireland only.
18th March 2022 - Day of Remembrance and Recognition Bank Holiday in Ireland only.
Thanks to @TeoTN this is now fixed and released on beta.
Closing this, thx everyone üëç
hi, just wondering when will this fix be in a "proper" (non-beta) release?

Australia QLD Duplicate Entries in 2020 for "The Royal Queensland Show"
The duplicate appears in the output for holidays version==0.13.
A recent previous version actually had this holiday correctly moved.
Reference:
https://www.qld.gov.au/recreation/travel/holidays/queensland-public-holiday-dates-for-2020
Note that 2021 appears to produce the correct date output.
Although technically the holiday was repealed and replaced with "2021 People's long weekend".
https://www.qld.gov.au/recreation/travel/holidays/public
Code to replicate:
import holidays

# Select: Autralia, QLD, and the years to generate.
startYear = 2020
endYear = 2020
hols = holidays.Australia(
    years=range(startYear, endYear + 1), subdiv="QLD", expand=False
)

hols.get_named("The Royal Queensland Show")
Output:
[datetime.date(2020, 8, 14), datetime.date(2020, 8, 12)]
Closing this as #923 has been merged into beta.
@gavingc thanks for reporting this!

Confederate Memorial Day, AR
Arkansas does not recognize Confederate Memorial day as a state holiday.
Current Arkansas holidays:
January 1 . . . . . . . . . . . . . . . . . . . . . . . . . New Year‚Äôs Day (Observed on Friday December 31,2021)
January 17 . . . . . . . . . . . . . Dr. Martin Luther King Jr.‚Äôs Birthday
February 21 . . . . . . . . . . . . . . . George Washington‚Äôs Birthday and Daisy Gatson Bates Day
May 30 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Memorial Day
July 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . Independence Day
September 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Labor Day
November 11 . . . . . . . . . . . . . . . . . . . . . . . . . . . . Veterans Day
November 24 . . . . . . . . . . . . . . . . . . . . . . Thanksgiving Day
December 24 . . . . . . . . . . . . . . . . . . . . . . . . . . Christmas Eve (Observed on Friday, December 23)
December 25 . . . . . . . . . . . . . . . . . . . . . . . . . . . Christmas Day (Observed on Monday, December 26)
Holidays_2022.pdf
hi, this is in fact already working, as you can see:
>>> import holidays
>>> import datetime
>>> x = holidays.US(subdiv='AK')
>>> x
holidays.country_holidays('US', subdiv='AK')
>>> datetime.date(2022,1,1) in x
True
>>> x
{datetime.date(2022, 1, 1): "New Year's Day", datetime.date(2022, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2022, 2, 21): "Washington's Birthday", datetime.date(2022, 3, 28): "Seward's Day", datetime.date(2022, 5, 30): 'Memorial Day', datetime.date(2022, 6, 19): 'Juneteenth National Independence Day', datetime.date(2022, 6, 20): 'Juneteenth National Independence Day (Observed)', datetime.date(2022, 7, 4): 'Independence Day', datetime.date(2022, 9, 5): 'Labor Day', datetime.date(2022, 10, 18): 'Alaska Day', datetime.date(2022, 11, 11): 'Veterans Day', datetime.date(2022, 11, 24): 'Thanksgiving', datetime.date(2022, 12, 25): 'Christmas Day', datetime.date(2022, 12, 26): 'Christmas Day (Observed)'}

I suggest you to double check your init code to be sure you're setting up holidays for AK.
Closing, cheers! üëç
Well, Arkansas is AR and Alaska is AK.
I do see the correct holidays in my calendar for AR now.

BUG: failed documentation build on readthedocs.io
I can't see the build logs of readthedocs.io, but something bad is happening as the documentation at https://python-holidays.readthedocs.io/en/latest/ is nowhere close to what it should look like!
Hey there Mike @mborsetti I was in fact about to open an issue on this!
It seems the build is misbehaving due to some missing config file / unexpected directory structure.. I could possibly provide a fix, but I'd rather let you do it as you mean to..
Could you give it a look?
Thx!
Absolutely!  Just found the log files at https://readthedocs.org/projects/python-holidays/builds/16091376/
It seems now everything is working (btw, beautiful docs!! :-D), so I've merged this in master too.
Also, I've updated readthedocs config to default to "master" branch (it was to beta), so we should now see docs build triggered when we release a new master version (which is then the one to document, too) only.
.. Thank you, brilliant! üëç

Can't pop New Years (observed) by name if it falls in previous year
Version: holidays 0.12
Platform: Python 3.10.0 for Windows
Example:
import holidays


class TestClass(holidays.UnitedStates):
    def _populate(self, year):
        holidays.UnitedStates._populate(self, year)

        self.pop_named('New Year')


test_holidays = TestClass(years=2022, state='CA')

for date, name in sorted(test_holidays.items()):
    print(date, name)
Expected result: A list of dates and holidays
Actual result:
Traceback (most recent call last):
  File "test.py", line 11, in <module>
    test_holidays = TestClass(years=2022, state='CA')
  File ".virtualenv\lib\site-packages\holidays\countries\united_states.py", line 104, in __init__
    HolidayBase.__init__(self, **kwargs)
  File ".virtualenv\lib\site-packages\holidays\holiday_base.py", line 182, in __init__
    self._populate(year)
  File "test.py", line 8, in _populate
    self.pop_named('New Year')
  File ".virtualenv\lib\site-packages\holidays\holiday_base.py", line 363, in pop_named
    self.pop(key)
  File ".virtualenv\lib\site-packages\holidays\holiday_base.py", line 351, in pop    
    return dict.pop(self, self.__keytransform__(key))
KeyError: datetime.date(2021, 12, 31)
@EdwardBetts Edward, thanks for your report!
@dr-prodigy Maurizio, thankfully this code does not generate any errors when run against the beta branch. I think my PRs on ensuring that only holidays for the year requested are returned by the library fix it.
Maybe it's time for a new release (after you accept #620, obviously! üòâ)
@TeejMonster thx for your report!
@mborsetti it sounds like a good plan! :) I confirm this is already fixed in beta: I'm applying the last fixes/updates, then time for a new release! üëç

about hong kong
Hong Kong is not an independent country, so it feels like you still need to revise it, which can easily lead to ambiguity @EdwardBet
Hello doctor, your work is great, it is very helpful to me, give you a thumbs up
Hong Kong is not an independent country, so it feels like you still need to revise it, which can easily lead to ambiguity @EdwardBet

This package follows the International Organization for Standardization (ISO) classification.
May I suggest that you work with them on any reclassification? See https://www.iso.org/iso-3166-country-codes.html

Orphaned code on united_states.py, commit c4a2a0f
If I'm not mistaken, lines 378 through 381 are orphans.
Hey @Sudo-Rob that's correct! I applied your suggested fix and released in beta.
Thx, cheers!

Wrong US Holiday Shown for 2022-06-20
According to the US government (OPM), Juneteenth is observed on the 20th of June this year.  However, it shows up with the name of a non-federal holiday that is only observed by a few states in April.
In [1]: import holidays

In [2]: holidays.__version__
Out[2]: '0.12'

In [3]: holidays.UnitedStates().get("2022-06-19")
Out[3]: 'Juneteenth National Independence Day'

In [4]: holidays.UnitedStates().get("2022-06-20")
Out[4]: 'Confederate Memorial Day (Observed)'
Drive-by: the error here is that name is assigned here but then accidentally used down here without first being reassigned.
Fixed by https://github.com/dr-prodigy/python-holidays/pull/595 into beta?
You're right.. closing this, thank you! :-)

(US Holidays) Observed and not observed inverted (and also the order), therefore incorrect
In this case (2021):

2021-01-31: was Friday (not Observed) but function returns Observed. Furthermore, it has the second position, but it was the last holidays of the year
2021-06-18 / 2021-06-19: 18th results Observed, but it was not observed (it was Friday), instead 19th results not observed but it was Saturday. Furthermore, the order is inverted (19th comes before 18th)
2021-07-04 / 2021-07-05: ....
2021-12-24 / 2021-12-25: ....

It seems to be a ripetitive error, because it always presents the same path:

Observed and not Observed inverted
Inverted Order (the first date comes after the last)

Thanks for attention :)

Province holiday in Italy
I see in code that there are "santo patrono" holidays for provinces (what's called in code "Provinces holidays"). But why? The "Santo patrono" is different from city to city, every municipality has its own special holiday. There isn't province holiday here.
I think there is no mean to keep provinces in Italy... Furthermore they're even partial as my province (VA) is not event present.
To manage the single municipality is a madness (or maybe finding some webservice that has that data freely available through a rest call... :) )
Hi @energywave,
thx for your message, but I'm sorry I don't really catch its main goal (usually features are requested for add, rather than removal :) ).. to clarify :

AFAIK, a lot of small municipalities and companies align their holidays to their province's ones, so the feature is beneficial for those too
if that's not your case, you can always avoid setting the subdivision parameter, and you won't receive any local holiday
by design, python holidays doesn't rely on webservices to work

Finally, if Varese's absence is your main concern, I'm sorry it went unnoticed until now.. But then you could then submit your first PR.. :)
Thx, cheers
Thank you for your reply, @dr-prodigy . I'll reply by quoting:

usually features are requested for add, rather than removal :)

ahah, yes, you're right, I understand that sounds a bit strange. I was only thinking that a user could specify province thinking to have a more accurate result but, in fact, he will add a holiday that most probably is wrong for him.


AFAIK, a lot of small municipalities and companies align their holidays to their province's ones, so the feature is beneficial for those too


I don't know of such a situation of municipalities near where I live (Busto Arsizio, VA). I've seen you're italian too and near not far from me. For what I know every municipality has his own special holiday while the province holiday (Varese) is not an holiday, actually, for us that don't live in the province city.
While it's true that some organizations use "Sant'Ambrogio" as special holiday for the province of Milan (I think you was referring to that) I don't know of such cases outside the Milan province.
In fact event Wikiepdia states that:
Il giorno festivo varia da comune a comune, in base al santo celebrato.


if that's not your case, you can always avoid setting the subdivision parameter, and you won't receive any local holiday


Yes, you're right. But that could be misleading to specify a province and receive a wrong holiday. Maybe it's better to just not provide it.


by design, python holidays doesn't rely on webservices to work


Ok, I see.

Finally, if Varese's absence is your main concern, I'm sorry it went unnoticed until now.. But then you could then submit your first PR.. :) Thx, cheers

Yeah, I've discovered your library coming from Home Assistant by configuring workdays. while configuring I noted the province and I was wondering why to provide it, so I've read the code here to understand. I wanted to point that out to you, thinking that maybe you were not italian and was thinking that province special holiday was important.
The library is your and you decide. As you just closed the issue I think you already made the decision to keep provinces.
If you confirm that, yes, I'll make a PR by putting all the missing provinces in the list.
Thank you for your attention.
I think the problem can be fixed through documentation, as the subdivision for which the "Festa del santo patrono" holiday is calculated is the "capoluogo di provincia", not the entire provincia.
That should be an easy fix.

I'll make a PR by putting all the missing provinces in the list.

That would be nice. We currently have ~40 provincial subdivisions out of the "80 provinces, 2 autonomous provinces, 4 decentralized regional entities, 6 free municipal consortia and 14 metropolitan cities" that ISO 3166-2 specifies, so we're missing quite a lot.
I think the problem can be fixed through documentation, as the subdivision for which the "Festa del santo patrono" holiday is calculated is the "capoluogo di provincia", not the entire provincia.

At this point I agree. We should only specify it in the README.rst. I already added all the provinces there so maybe I can add a statement about that, then @dr-prodigy will review that if it's ok when merging my PR.

That would be nice. We currently have ~40 provincial subdivisions out of the "80 provinces, 2 autonomous provinces, 4 decentralized regional entities, 6 free municipal consortia and 14 metropolitan cities" that ISO 3166-2 specifies, so we're missing quite a lot.

I already implemented all such provinces, even those like the "Santo patrono" of Sud Sardegna that is the Thursday after second Sunday in May... :D
Now I'm adding tests for those new provinces and when done I'll make the PR in the beta branch.
I've released in beta #617 so this seems done as well.
Thanks for your support @energywave @mborsetti , cheers!

Holiday name traduction in other language - Suggestion
Would it be possible to be able to translate the holidays into another language? example in French?
This PR adds required functionality. After it's merged the holiday names will be translatable into other languages (the most of translations still need to be done).
@dr-prodigy This issue can probably be closed now that v0.20 is released.
The v0.20 has been released and includes basic l10n support. Any localization PRs would be highly appreciated!

Holidays in Malta
Would it be possible to add support for Malta, Europe as holidays ? Official list is available here: https://www.gov.mt/en/About%20Malta/Pages/Public%20Holidays.aspx
Hi,
relevant update just pushed on beta.
Thx, cheers
dr-p

AU VIC Next Holiday shown incorrectly
The next holiday for VIC, Australia is showing up as Good Friday (15/4/22). However, the next holiday should be Labour Day (14/3/22). The labour day holiday is shown in the holiday list but not in the right order. It shown in between Queen's Birthday (Jun) and Grand Final Day (Sep).
@kaizersoje This library, in order to be as efficient as possible, does not sort the output by date.
@dr-prodigy Maurizio, funny to see this issue being opened because as I was working on my contribution this weekend I bumped into this as well, and wondered why the holidays aren't returned sorted. It somehow was my expectation too that they would be, but then remembered the required and welcomed focus on speed. I can do a PR to add warnings and examples in the docs about this.
We could also add a sorted parameter, default it to False, and do the sorting in the library if set to True. Can add this to my PR.
What do you think?
@mborsetti Due to dates not being sorted, the state to the next holiday is also incorrect.
No longer an issue.

US - Confederate Memorial Day is NOT a national holiday
I noticed when looking at US holidays for 2021 and later that you have Confederate Memorial Day as a holiday.  This is NOT an official national holiday, and many people would consider including it in the list of US holidays as very inflamatory!  It is only observed in some states, and even then, only as a day off in fewer states (see for example https://www.timeanddate.com/holidays/us/confederate-memorial-day or https://www.forbes.com/sites/nicholasreimann/2021/04/26/state-offices-close-for-confederate-memorial-day-in-alabama-and-mississippi-heres-why-its-still-an-official-holiday-there/).
I believe this is related to #594 which I have opened a PR for: https://github.com/dr-prodigy/python-holidays/pull/595
Thank you both @DManowitz-VA @apicht , I will follow up on this on #595
Cheers everyone! üëç

If state doesn't exist, it should raise an error
This is confusing:
>>> import date
>>> import holidays
>>> date(2021,3,8) in holidays.CountryHoliday("DE", state="BE")    # should raise an error, because state="BE" does not exist
False
>>> date(2021,3,8) in holidays.CountryHoliday("DE", prov="BE")
True

The first line after the imports should better raise an error, because for Germany one has to use prov and not state. At the moment this leads to subtle bugs in computing wether a day is a holiday or not.
@dr-prodigy I have a proposed solution.
According to the README, we don't have a single country where we use both state and prov.  Since this is the case, I propose we simplify everything by conforming to ISO 3166-2 and call these subdivisions (argument name subdivision or subd) and make everything simple.
We can maintain backwards compatibility by assigning the value of either state or prov, if specified, to subdivision.
If you agree I can do global changes this weekend and submit a PR.
Hey @asmaier
thank you for pointing this out. This inconsistency in fact has already been raised (#479 ) and would in fact require a review.
@mborsetti
thank you, I like your solution a lot! If you wish to implement it, I'll absolutely bless it :-)
Then - I believe - we could/should possibly review the current subdivision names to adhere to the reported ISO codes, but that can come at a later time.
Thanks both! üëç
@dr-prodigy

I like your solution a lot! If you wish to implement it, I'll absolutely bless it :-)

Cool.
Will do the subdivisions, but first I need to make sure that #586 and #602 are merged/commented into beta branch because of the interdependencies with the documentation and I don't want to have to deal with the hell of trying to merge (or rebase?) commits back into my branch. I almost lost it today with #600, #601, and #602 (I think I need to take a class on git!)
What name do you prefer for the parameter: subdivision=,  subdiv= or subd=?

Then - I believe - we could/should possibly review the current subdivision names to adhere to the reported ISO codes, but that can come at a later time.

Yup, later time.
Hey there @mborsetti !
Regarding your question, I didn't have a chosen answer, to be honest :-)
Given that we already have another shortened property (prov instead of province) I would then go for subdiv.
Regarding the other 2 PRs, I've just merged #602 , while I kindly ask you to review #586 : I've added some notes on it.
No worries about git, it's more about you always do complex / extensive tasks, and this expose you to more difficulties.. but you're doing very fine! :-)
Thank you very much, best
Hi Maurizio/@dr-prodigy!
I agree with subdiv, which is why I gave you three choices! :)
#586 is fixed; I will be handling this next in my spare time.
This is now available in beta.. thx!

US - Juneteenth National Independence Day (Observed): name bug
This line is declaring the name variable:
https://github.com/dr-prodigy/python-holidays/blob/57dd2ed2b8659c76f776f10207456e5231c82099/holidays/countries/united_states.py#L326
This then gets picked up here, the cruel irony of which is not lost on me:
https://github.com/dr-prodigy/python-holidays/blob/57dd2ed2b8659c76f776f10207456e5231c82099/holidays/countries/united_states.py#L369-L380
In practice:
>>> us_holidays.get('June 20, 2022')
'Confederate Memorial Day (Observed)'

I will open a PR shortly to fix this.
This is now fixed in beta.
Thx, cheers!

country BR, state SC - incorrect holiday
https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/brazil.py#L202
there is a law (from 2017) that moves 11th aug to the next sunday whenever it falls in a work day.
https://www.sc.gov.br/noticias/temas/institucional/data-magna-de-santa-catarina-sera-comemorada-no-proximo-domingo
"O adiamento do feriado est√° previsto na Lei n¬∫ 17.335, de 30 de novembro de 2017, que prev√™ a transfer√™ncia, sempre que o dia 11 de agosto e o dia 25 de novembro coincidirem com dias √∫teis da semana, dos feriados e os eventos alusivos √†s datas, para o domingo subsequente."
http://leis.alesc.sc.gov.br/html/2017/17335_2017_lei.html
"Dia do Estado de Santa Catarina
Sempre que o dia 11 de agosto coincidir com dia √∫til da semana, o feriado e os eventos alusivos √† data ser√£o transferidos para o domingo subsequente.
A semana em que recair o dia 11 de agosto constituir√° per√≠odo de celebra√ß√µes c√≠vicas em todo Territ√≥rio catarinense, sob denomina√ß√£o de Semana de Santa Catarina."
My opinion on this is that since 2018, this is not an holiday anymore.
I may suggest 2 solutions:
1 - Remove the holiday from 2017 onwards
2 - Include the logic to move the date to Sunday whenever it falls in a workday.
I can take this one @dr-prodigy ... what's your thoughts about this?
Hi @Nalguedo thank you for your notes.
I agree with you on both solutions.. holidays explicitly set in the weekend are not very impacting, being them days off by themselves, but in this case it's definitely correct to track it like so.. Pls go on thx a lot! üëç
@dr-prodigy ... you can close this issue [ https://github.com//pull/761 ]
Thank you very much @Nalguedo @rpvelloso ! üëç

TypeError: 'in <string>' requires string as left operand, not NoneType
The latest release has this line  which fills in self.state value if state does not exist in kwargs but it does not help if kwargs['state'] exists but is None. Example repro:
Broken Version 0.12
# pip show holidays
Name: holidays
Version: 0.12
...
# python
Python 3.7.12 (default, Jan  4 2022, 02:07:00)
[GCC 7.5.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import holidays
>>> h = holidays.UK(prov=None, state=None, years=[2020], expand=False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py", line 36, in __init__
    HolidayBase.__init__(self, **kwargs)
  File "/apps/python3/lib/python3.7/site-packages/holidays/holiday_base.py", line 182, in __init__
    self._populate(year)
  File "/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py", line 109, in _populate
    self._country_specific(year)
  File "/apps/python3/lib/python3.7/site-packages/holidays/countries/united_kingdom.py", line 160, in _country_specific
    if self.state not in ("Scotland") and year >= 1971:
TypeError: 'in <string>' requires string as left operand, not NoneType

Last working Version: 0.11.3.1
# pip show holidays
Name: holidays
Version: 0.11.3.1
...
# python
Python 3.7.12 (default, Jan  4 2022, 02:07:00)
[GCC 7.5.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import holidays
>>> h = holidays.UK(prov=None, state=None, years=[2020], expand=False)
>>>
Expericing same issue here.
import holidays
holidays.CountryHoliday('UnitedKingdom', years=[2022])
I got further before reaching the same error:
import holidays    
import datetime

datetime.date(2022, 1, 1) in holidays.CountryHoliday('US') # True (works) 

datetime.date(2022, 1, 1) in holidays.CountryHoliday('UK') # doesn't work; error as described in title 

'1/1/2015' in holidays.CountryHoliday('UK') # also doesn't work; error as described in title
Fixed in beta.. thx everyone! üëç

Missing holiday "Friedensfest" for Augsburg, Germany
Hey, i'd like to mention that there is a holiday missing.
On xxxx-08-08 the "Friedensfest" is celebrated in the city of Augsburg, Bavaria, Germany. It is celebrated exclusively there, otherwise, the holidays are equivalent to the Bavarian ones. However, it is a valid public holiday.
Could you add it, or in case it's to much of a hassle, add it as a note for Germany to the documentation?
EDIT: I'm aware of the note in the source code, it's just not very visible there.
Hi,
thank you for your interest and support!
As you could notice in the code, that case was in fact evaluated and left willingly unmanaged, being that holiday not valid for whole Bavaria.
Also, unfortunately, there is currently no suitable space in the project doc (which is very concise and doesn't provide country specific details).
Note: @mborsetti promised to be soon working on some Sphynx documentation for the library. Depending on the depth we wish to reach, it could possibly be the right place to put this information. Mike please let us know your comments on the topic, if you wish, thx!
Thanks again, best
evaluated and left willingly unmanaged

Closing then.
Would still welcome everyones input!

Observed Holidays for Canada is incorrect
Hi,
Just noticed that the observed holidays logic for Canada is incorrect, for example the Christmas, boxing days, and new year days which falls on the weekend should have the following Monday (and Tuesday respectively) as the observed holidays not the previous day.
Ex:
Christmas = 25th - Saturday >Monday
Boxing day = 26th - Sunday>Tuesday
New year day = 31 = Saturday> Monday
There's a pull request open to correct this for Christmas Day. It should probably be expanded to include New Year's Day
#579
Yes, I just noticed this also and it's showing Saturday January 1 2022 as the holiday but there should be Observed on Monday Jan 3 2022...
Fixed with #678 .. closing, thx!

Canada Holiday Error - Observed Christmas Day
This year, the Observed Christmas holiday in Canada was on Monday 27th Dec and following Observed Boxing Day was Tue 28th Dec
https://github.com/dr-prodigy/python-holidays/blob/94d767706111b9b725bf33c122ef4f7f64566f7a/holidays/countries/canada.py#L251
Logic here states that if Christmas falls on a Saturday, the observed Holiday is on Friday.
Now I haven't gone back in time to validate the pattern, but either it needs to be double-checked or an exception added for times when Saturday holidays are observed on Monday.
Current List generated for 2021:
2021-01-01 New Year's Day
2021-02-15 Family Day
2021-04-02 Good Friday
2021-04-05 Easter Monday
2021-05-24 Victoria Day
2021-07-01 Canada Day
2021-08-02 Civic Holiday
2021-09-06 Labour Day
2021-10-11 Thanksgiving
2021-12-24 Christmas Day (Observed)
2021-12-25 Christmas Day
2021-12-27 Boxing Day (Observed)
2021-12-31 New Year's Day (Observed)
Hi,
this is already being analyzed / reviewed on #579
Marking as duplicate.. Let's follow up there, thx!

US Holidays Error: dictionary changed during iteration when passing years to holidays.US constructor
Attempting to use code to get US holidays for specific years.  This code works for some countries but not US (nor Canada)
import holidays
import numpy as np
print(holidays.__version__)
years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
x = holidays.US(years=years)

This code works when I try different countries: FR, GB, RU, DE, ES, CZ, AU, JP, CN, IN
This syntax fails to return results for the countries: US, CA
This syntax for passing numpy arrays I found in a ticket with a CZ example.  (https://github.com/dr-prodigy/python-holidays/pull/528).
I am running on Databricks runtime 10.0.  The holidays version is 0.11.3.1 as you see below.
The output I got was for US (or CA) is:
0.11.3.1
Out[41]: 
RuntimeError: dictionary changed size during iteration

Example output when I use another country, such as AU is:
0.11.3.1
Out[42]: {datetime.date(2016, 1, 1): "New Year's Day",
 datetime.date(2016, 1, 26): 'Australia Day',
 datetime.date(2016, 3, 25): 'Good Friday',
 datetime.date(2016, 3, 28): 'Easter Monday',
 datetime.date(2016, 4, 25): 'Anzac Day',
 datetime.date(2016, 12, 25): 'Christmas Day',
 datetime.date(2016, 12, 27): 'Christmas Day (Observed)',
 datetime.date(2016, 12, 26): 'Boxing Day',
 datetime.date(2017, 1, 1): "New Year's Day",
 datetime.date(2017, 1, 2): "New Year's Day (Observed)",
...
Hi @extrospective
thank you for your interest in python-holidays.
I've made a test on your code, but I can't seem to replicate your issue, neither with US, nor with CA.
Here's my result:
>>> import holidays
>>> import numpy as np
>>> print(holidays.__version__)
0.11.3.1
>>> years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
>>> x = holidays.US(years=years)
>>> x
{datetime.date(2016, 1, 1): "New Year's Day", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): "Washington's Birthday", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): "New Year's Day", datetime.date(2017, 1, 2): "New Year's Day (Observed)", datetime.date(2017, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2017, 2, 20): "Washington's Birthday", datetime.date(2017, 5, 29): 'Memorial Day', datetime.date(2017, 7, 4): 'Independence Day', datetime.date(2017, 9, 4): 'Labor Day', datetime.date(2017, 10, 9): 'Columbus Day', datetime.date(2017, 11, 11): 'Veterans Day', datetime.date(2017, 11, 10): 'Veterans Day (Observed)', datetime.date(2017, 11, 23): 'Thanksgiving', datetime.date(2017, 12, 25): 'Christmas Day', datetime.date(2018, 1, 1): "New Year's Day", datetime.date(2018, 1, 15): 'Martin Luther King Jr. Day', datetime.date(2018, 2, 19): "Washington's Birthday", datetime.date(2018, 5, 28): 'Memorial Day', datetime.date(2018, 7, 4): 'Independence Day', datetime.date(2018, 9, 3): 'Labor Day', datetime.date(2018, 10, 8): 'Columbus Day', datetime.date(2018, 11, 11): 'Veterans Day', datetime.date(2018, 11, 12): 'Veterans Day (Observed)', datetime.date(2018, 11, 22): 'Thanksgiving', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2019, 1, 1): "New Year's Day", datetime.date(2019, 1, 21): 'Martin Luther King Jr. Day', datetime.date(2019, 2, 18): "Washington's Birthday", datetime.date(2019, 5, 27): 'Memorial Day', datetime.date(2019, 7, 4): 'Independence Day', datetime.date(2019, 9, 2): 'Labor Day', datetime.date(2019, 10, 14): 'Columbus Day', datetime.date(2019, 11, 11): 'Veterans Day', datetime.date(2019, 11, 28): 'Thanksgiving', datetime.date(2019, 12, 25): 'Christmas Day', datetime.date(2020, 1, 1): "New Year's Day", datetime.date(2020, 1, 20): 'Martin Luther King Jr. Day', datetime.date(2020, 2, 17): "Washington's Birthday", datetime.date(2020, 5, 25): 'Memorial Day', datetime.date(2020, 7, 4): 'Independence Day', datetime.date(2020, 7, 3): 'Independence Day (Observed)', datetime.date(2020, 9, 7): 'Labor Day', datetime.date(2020, 10, 12): 'Columbus Day', datetime.date(2020, 11, 11): 'Veterans Day', datetime.date(2020, 11, 26): 'Thanksgiving', datetime.date(2020, 12, 25): 'Christmas Day', datetime.date(2021, 1, 1): "New Year's Day", datetime.date(2021, 12, 31): "New Year's Day (Observed)", datetime.date(2021, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2021, 2, 15): "Washington's Birthday", datetime.date(2021, 5, 31): 'Memorial Day', datetime.date(2021, 6, 19): 'Juneteenth National Independence Day', datetime.date(2021, 7, 4): 'Independence Day', datetime.date(2021, 7, 5): 'Independence Day (Observed)', datetime.date(2021, 9, 6): 'Labor Day', datetime.date(2021, 10, 11): 'Columbus Day', datetime.date(2021, 11, 11): 'Veterans Day', datetime.date(2021, 11, 25): 'Thanksgiving', datetime.date(2021, 12, 25): 'Christmas Day', datetime.date(2021, 12, 24): 'Christmas Day (Observed)', datetime.date(2011, 1, 1): "New Year's Day", datetime.date(2010, 12, 31): "New Year's Day (Observed)", datetime.date(2011, 1, 17): 'Martin Luther King Jr. Day', datetime.date(2011, 2, 21): "Washington's Birthday", datetime.date(2011, 5, 30): 'Memorial Day', datetime.date(2011, 7, 4): 'Independence Day', datetime.date(2011, 9, 5): 'Labor Day', datetime.date(2011, 10, 10): 'Columbus Day', datetime.date(2011, 11, 11): 'Veterans Day', datetime.date(2011, 11, 24): 'Thanksgiving', datetime.date(2011, 12, 25): 'Christmas Day', datetime.date(2011, 12, 26): 'Christmas Day (Observed)', datetime.date(2012, 1, 1): "New Year's Day", datetime.date(2012, 1, 2): "New Year's Day (Observed)", datetime.date(2012, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2012, 2, 20): "Washington's Birthday", datetime.date(2012, 5, 28): 'Memorial Day', datetime.date(2012, 7, 4): 'Independence Day', datetime.date(2012, 9, 3): 'Labor Day', datetime.date(2012, 10, 8): 'Columbus Day', datetime.date(2012, 11, 11): 'Veterans Day', datetime.date(2012, 11, 12): 'Veterans Day (Observed)', datetime.date(2012, 11, 22): 'Thanksgiving', datetime.date(2012, 12, 25): 'Christmas Day', datetime.date(2013, 1, 1): "New Year's Day", datetime.date(2013, 1, 21): 'Martin Luther King Jr. Day', datetime.date(2013, 2, 18): "Washington's Birthday", datetime.date(2013, 5, 27): 'Memorial Day', datetime.date(2013, 7, 4): 'Independence Day', datetime.date(2013, 9, 2): 'Labor Day', datetime.date(2013, 10, 14): 'Columbus Day', datetime.date(2013, 11, 11): 'Veterans Day', datetime.date(2013, 11, 28): 'Thanksgiving', datetime.date(2013, 12, 25): 'Christmas Day', datetime.date(2014, 1, 1): "New Year's Day", datetime.date(2014, 1, 20): 'Martin Luther King Jr. Day', datetime.date(2014, 2, 17): "Washington's Birthday", datetime.date(2014, 5, 26): 'Memorial Day', datetime.date(2014, 7, 4): 'Independence Day', datetime.date(2014, 9, 1): 'Labor Day', datetime.date(2014, 10, 13): 'Columbus Day', datetime.date(2014, 11, 11): 'Veterans Day', datetime.date(2014, 11, 27): 'Thanksgiving', datetime.date(2014, 12, 25): 'Christmas Day', datetime.date(2015, 1, 1): "New Year's Day", datetime.date(2015, 1, 19): 'Martin Luther King Jr. Day', datetime.date(2015, 2, 16): "Washington's Birthday", datetime.date(2015, 5, 25): 'Memorial Day', datetime.date(2015, 7, 4): 'Independence Day', datetime.date(2015, 7, 3): 'Independence Day (Observed)', datetime.date(2015, 9, 7): 'Labor Day', datetime.date(2015, 10, 12): 'Columbus Day', datetime.date(2015, 11, 11): 'Veterans Day', datetime.date(2015, 11, 26): 'Thanksgiving', datetime.date(2015, 12, 25): 'Christmas Day'}

Same goes with the latest beta version:
>>> import holidays
>>> import numpy as np
>>> print(holidays.__version__)
0.11.4
>>> years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
>>> x = holidays.US(years=years)
>>> x
{datetime.date(2016, 1, 1): "New Year's Day", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): "Washington's Birthday", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): "New Year's Day", datetime.date(2017, 1, 2): "New Year's Day (Observed)", [...]

I then assume that behaviour has to do with Databricks runtime, which I really don't know.
If you could investigate further / figure out what's wrong, I would really appreciate it.. Thx a lot! üëç
I got the same error (when using FBProphet).
from holidays.countries import US
year_list=[2022]
holidays = US(prov=None, state=None, years=year_list)
[(date, holidays.get_list(date)) for date in holidays]
@dr-prodigy I was able to replicate the issue:
>>> from holidays.countries import US
>>> holidays = US(prov=None, state=None, years=[2022])
>>> len(holidays)
14
>>> [(date, holidays.get_list(date)) for date in holidays]
Traceback (most recent call last):
  File "C:\Program Files\Python\Python39\lib\site-packages\IPython\core\interactiveshell.py", line 3457, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-5-75567ae737d3>", line 1, in <module>
    [(date, holidays.get_list(date)) for date in holidays]
  File "<ipython-input-5-75567ae737d3>", line 1, in <listcomp>
    [(date, holidays.get_list(date)) for date in holidays]
RuntimeError: dictionary changed size during iteration
>>> len(holidays)
28

I will try to find out why the dictionary expands to include 2021 when invoked in the list comprehension; my hunch is that it's somehow triggered by one of the holidays.get_list(date) calls.
@dr-prodigy  Do you remember why there's a get_list() method when the holiday's name is already the value of the dictionary entry? And why is the value a string...what happens when multiple holidays fall on the same day? Confused.
Hi @mborsetti
thank you for your contribution.. I think I need some more explanation here!
Although there could probably be sth to be checked in the year boundaries logic (ie: 2021 holidays in the list), if I caught it right, your code is "acting funny" (probably on purpose), in that it forces exactly a holiday list recalculation for each date in the previously initialized list itself.. which is why the dictionary changes!
Even it is not occurring on any country, IMHO it is therefore more than expectable to see that error.
I also don't find a match with @extrospective code, which is instead cleanly initializing the US holidays object providing an array of years.
If I'm mistaking / losing something on the way, please explain better.. thank you very much! :)
@dr-prodigy The code is simply a restatement of the "acting funny" code of @lior-lemonade.
Turns out that we were doing this in UnitedStates(HolidayBase) (and a few others):
            elif self.observed and date(year, JAN, 1).weekday() == SAT:
                # Add Dec 31st from the previous year without triggering
                # the entire year to be added
                expand = self.expand
                self.expand = False
                self[date(year, JAN, 1) + rd(days=-1)] = name + " (Observed)"
                self.expand = expand

So when you build the class with a year where the 1st of January is a Saturday (2021, for example), you'd also be getting a holiday in 2020(!). The code from @lior-lemonade (and my restatement) would iterate on this 2020 date with the call holidays.get_list(date), which in turn would trigger the expansion of 2020, changing the size of the dictionary.
It turns out that the code above was completely unneeded because we also have the (correct) code below to add the observed New Year's day into the correct, current, year:
            # The next year's observed New Year's Day can be in this year
            # when it falls on a Friday (Jan 1st is a Saturday)
            if self.observed and date(year, DEC, 31).weekday() == FRI:
                self[date(year, DEC, 31)] = name + " (Observed)"

I have authored a PR that fixes this (and many other countries, many not as easy to fix!) and ensures through a new test that only holidays for the year requested are returned.
I do not have an error with running @extrospective code so I can't debug it, but I wouldn't be surprised at all if it is related to this problem and therefore my PR will fix his issue too.
I just tried in my conda environment (Windows; not databricks) and got the same error:
Code:
import holidays
import numpy as np
print(holidays.__version__)
years = np.array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
x = holidays.US(years=years)
x

Code says I am using version 0.11.3.1
I get an error stack:
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
d:\Anaconda3\envs\py39\lib\site-packages\IPython\core\formatters.py in __call__(self, obj)
    700                 type_pprinters=self.type_printers,
    701                 deferred_pprinters=self.deferred_printers)
--> 702             printer.pretty(obj)
    703             printer.flush()
    704             return stream.getvalue()

d:\Anaconda3\envs\py39\lib\site-packages\IPython\lib\pretty.py in pretty(self, obj)
    375                 if cls in self.type_pprinters:
    376                     # printer registered in self.type_pprinters
--> 377                     return self.type_pprinters[cls](obj, self, cycle)
    378                 else:
    379                     # deferred printer

d:\Anaconda3\envs\py39\lib\site-packages\IPython\lib\pretty.py in inner(obj, p, cycle)
    599         p.begin_group(step, start)
    600         keys = obj.keys()
--> 601         for idx, key in p._enumerate(keys):
    602             if idx:
    603                 p.text(',')

d:\Anaconda3\envs\py39\lib\site-packages\IPython\lib\pretty.py in _enumerate(self, seq)
    278     def _enumerate(self, seq):
    279         """like enumerate, but with an upper limit on the number of items"""
--> 280         for idx, x in enumerate(seq):
    281             if self.max_seq_length and idx >= self.max_seq_length:
    282                 self.text(',')

RuntimeError: dictionary changed size during iteration

So the problem is not specific to Databricks or some unusual environment.
I have included the list of libraries here in case we need to go back and look at it at some point.  I am using python 3.9.4
conda_list_python_holidays.txt
An important note is that this error occurs on the line where I merely cause x to be printed (pretty printed I guess since I'm in jupyter notebook).  It is not the assignment to x which causes the error.
I can see that my original posting implies it is the assignment line which starts the call stack.  I do not believe that now.
A ha.  Running in jupyter and databricks has in common perhaps that they are calling this pretty printing function.
Insight
And now I have done an additional test and here seems to be the key: using the same conda environment, but a python in my windows command prompt, I do not get this error.  So it is specifically related to the pretty printing function invoked by notebooks (as you see in the callstack above).
In jupyter, when I call:
print(x)

I get a workable answer, which starts like:
{datetime.date(2016, 1, 1): "New Year's Day", datetime.date(2016, 1, 18): 'Martin Luther King Jr. Day', datetime.date(2016, 2, 15): "Washington's Birthday", datetime.date(2016, 5, 30): 'Memorial Day', datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2017, 1, 1): "New Year's Day", datetime.date(2017, 1, 2): "New Year's Day (Observed)", datetime.date(2017, 1, 16): 'Martin Luther King Jr. Day', datetime.date(2017, 2, 20): "Washington's Birthday", datetime.date(2017, 5, 29): 'Memorial Day', datetime.date(2017, 7, 4): 'Independence Day', datetime.date(2017, 9, 4): 'Labor Day', datetime.date(2017, 10, 9): 'Columbus Day', datetime.date(2017, 11, 11): 'Veterans Day', datetime.date(2017, 11, 10): 'Veterans Day (Observed)', datetime.date(2017, 11, 23): 'Thanksgiving', datetime.date(2017, 12, 25): 'Christmas Day', datetime.date(2018, 1, 1): "New Year's Day", datetime.date(2018, 1, 15): 'Martin Luther King Jr. Day', datetime.date(2018, 2, 19): "Washington's Birthday", datetime.date(2018, 5, 28): 'Memorial Day', datetime.date(2018, 7, 4): 'Independence Day', datetime.date(2018, 9, 3): 'Labor Day', datetime.date(2018, 10, 8): 'Columbus Day', datetime.date(2018, 11, 11): 'Veterans Day', datetime.date(2018, 11, 12): 'Veterans Day (Observed)', datetime.date(2018, 11, 22): 'Thanksgiving', datetime.date(2018, 12, 25): 'Christmas Day', date...

But in jupyter notebook when I simply call as the last line in my cell:
x

then I get the call stack with pretty.py in it and "dictionary changed size during iteration".
jupyter gave me a nicer call stack perhaps than databricks; could have saved some time here.  but glad it seems like another bug was surfaced too.
@extrospective Still cannot reproduce, at least with the currently published version (0.12):

Running
Python 3.9.9 (tags/v3.9.9:ccb0e6a, Nov 15 2021, 18:08:50) [MSC v.1929 64 bit (AMD64)]
IPython 7.30.1
Just ran in Jupyter with 0.12.
It works correctly.  Issue appears to be in 0.11.3.1 but not in 0.12.
Evidence of success pasted here:
Perhaps this fix should be added to release notes for 0.12.
Sorry @extrospective your last suggestion went unnoticed while working on v.0.12.
I reviewed CHANGES file accordingly and released it on beta branch (master will be updated upon next official release).
Thx for your support, cheers!

Wrong ISO code for Venezuela
Hello, nice work!
A friend's website uses this and I noticed that Venezuela is using YV code wich is used only for airplanes and telecomunications, the ISO should be VE.
You can see it here: https://laendercode.net/en/country/ve
Hi @Skatox ,
thank you!
Very easy fix, so I did it already.. it's released on beta branch.
Cheers! üëç
Thank you!!

England has different holidays to Scotland, NI and Wales yet can only select UK as a whole
one of my routines which i set up to use holidays didn't work today as it is a national holiday in scotland (but not in england where i am).
there doesn't appear to be a way of specifically stating these countries.   Yet there are a way to specifically state US states etc for them to use their specific holiday dates.
Any chance UK can be split out in the same way?
looked at the code and saw England as a usable variable.  Seems to be ok.
nothing to see here (but might be a better idea to make it obvious in the table of countries in the readme)
Great @thefunkygibbon, thanks!
We should in fact consider a possible refactoring, being UK a pretty unique case in python-holidays (being each of its regions a de-facto standalone country derived from the UK main class, instead of a state inside UK class as for the other countries, including US).
Being that a breaking change, anyway, it will take some extra-cares to add it (eg: deprecation in a release -> removal in a further release).. but we will do it, when possible.
Thanks, meanwhile! üëç
I don't know that it does need to change really.. using "England" instead of "UK" works properly and as presumably designed.
If you could maybe just add it to the documentation so it's a little easier to work out that using the full country name works for those specific countries .
The UK is an awkward beast.

Request: Option to get all holidays despite them being on a weekend day
No description provided.
@dr-prodigy this is probably related to Colombia, which is now fixed in 0.15
Hey @jahirfiquitiva, I'm going to close this now.
If it's still an issue for you please create a new ticket with detailed explanation of actual and expected behavior.
Thank you

Request: Method to get available countries and states
Hi
Would you mind adding a method to get the available countries, their ISO code and states for that country?
I'm planning to use this dynamically instead of limiting it to a single country, so that would help a lot!
Thanks in advance
It seems that you are not the only one: https://stackoverflow.com/q/70237552/2988730
You can get what you want with something like this:
for cname in holidays.list_supported_countries():
    country = getattr(holidays, cname)()
    if cname != country.country:
        continue
    # Do stuff with country object
    if hasattr(country, 'PROVINCES'):
        # Do stuff with provinces
    if hasattr(country, 'STATES'):
        # Do stuff with states
Yes, this is being discussed in #575 .. please follow up there!
Thx cheers

Add 'National Day for Truth and Reconciliation' holiday for Canada
In 2021 a new holiday called 'National Day for Truth and Reconciliation' was added in Canada on Sept 30th of each year.
https://www.canada.ca/en/canadian-heritage/campaigns/national-day-truth-reconciliation.html
I don't see this accounted for, unless I missed it.
Edit: I would gladly add this and submit a PR as it's probably an easy change but I am painfully short on time these days. Just putting it out there in case someone that is already setup for development on this project has time to add it in. Love this project, thanks to all who maintain and contribute!
Hi @bverkron
thank you!
This new holiday has been recently added (for MB and NS provinces only) by @cturra with #533 PR.
That PR has then been merged in beta and it will be released to master as soon as we release a new official python-holidays version (ETA still TBD).
I assume this covers your topic: I kindly ask you to please follow up here in case something else is still to be considered.. thx a lot!
Thanks for the response and pointing out the PR, I did not think to search for PRs on this topic.
Some added info / context for others who might come across this...
My original understanding was that this was a nation wide statutory holiday but it does indeed appear to be province specific. In BC my children did not have school that day and my employer treated it as a stat holiday due to the industry I'm in but it appears to not be the case for everyone. Definitely not clear-cut in all cases, at least in BC.

The national holiday will be observed this Sept. 30 by federal employees and workers in federally regulated workplaces. We have advised provincial public-sector employers to honour this day and in recognition of the obligations in the vast majority of collective agreements. Many public services will remain open but may be operating at reduced levels. However, most schools, post-secondary institutions, some health sector workplaces, and Crown corporations will be closed.

https://news.gov.bc.ca/releases/2021FIN0048-001531
This makes it a little more clear unless you're in one of the above mentioned sectors / institutions, etc that treats it as a statutory holiday. lol

Easter Sunday, Easter Monday, National Day for Truth and Reconciliation and Boxing Day are not statutory holidays in B.C.

https://www2.gov.bc.ca/gov/content/employment-business/employment-standards-advice/employment-standards/statutory-holidays
@bverkron
Oh gawrsh.. I must admit that this (interesting!) explanation doesn't clarify the topic so much to me ":-D
So in the end, given that BC seems not to be included in the list of provinces in which this holiday is observed, are MB and NS the only ones to be considered (at least, as of now)?
.. Thank you!
I only spot checked BC, AB, SK and none of them have it as an official statutory holiday. However, this article claims that PEI (Prince Edward Island) ...

... is recognizing Truth and Reconciliation as a holiday and closing schools and government office

and points to this official statement which says...

This Fall, Premier King will be introducing an amendment to the Employment Standards Act to officially recognize September 30 as a provincial statutory holiday for all Islanders

but earlier in the statement also says...

Provincial government offices, schools in the Public Schools Branch and la Commission scolaire de langue fran√ßaise will be closed for the day. Some Island businesses and organizations may decide to also observe the National Day of Truth and Reconciliation.

For comparison the official statement for NS states:

Provincial government offices, public schools and regulated child care will be closed. Businesses will have the choice, as they do on other occasions, to remain open.

which is not unlike PEI and even BC to an extend.
This really makes me question what the criteria for a "holiday" is from a python-holidays perspective or even my own province / country's perspective üòÖ. Then there are further nuances between a holiday and statutory holiday? Yikes.
In all seriousness it seems like NS's and PEI's criteria for a statutory holiday are that government offices and schools are closed, but even though BC is following those same (or similar) actions it's not considered a statutory holiday. Also at a federal level it's listed as a statutory holiday but each individual province is able to treat it how they want. Clear as mud!
Maybe the best thing to do is fall back on python-holiday's official definition of a holiday? Not sure if that will help clear it up or make things more confusing. ü§î
Yet another confusing example is Newfoundland and Labrador...

September 30 has been designated a government holiday but not a statutory holiday in Newfoundland and Labrador, meaning schools and government offices will close, but private sector workplaces can remain open.

which again sounds much like BC.
Maybe we only treat it as a holiday if the province deems it a statutory holiday regardless if each provinces definition of a statutory holiday is the same or not?
Maybe we only treat it as a holiday if the province deems it a statutory holiday regardless if each provinces definition of a statutory holiday is the same or not?

that was the approach i took when i implemented this holiday. figured i could circle back and add province‚Äôs or territories once they officially recognized the day as statutory.
i‚Äôm open to changing that approach if the community feels it‚Äôs more appropriate. ü§∑üèº
It is really not easy to say.. different countries, different rules!
In general, yes, only "statutory" holidays (as a rule of thumb, I'd put in this category all off (and usually paid) days for public & private workers, + schools) should be included as holidays in the lib.
Not being an expert of Canadian regulations / habits, I let you be judge for this case.. as soon as we have a clear answer, it'll be easy to implement it! :-)
Thank you and cheers everyone!
After reviewing the official statements for the few provinces noted above and discussing / thinking about it I believe @cturra's approach is correct and probably the best criteria at this time.
There is so much nuance and variation in how the provinces are handling this holiday (and some others) that it's probably the only sane way to do it without getting into the weeds and causing a bunch of decision overhead and potential confusion.
One of the root issues that makes this a challenge for my use case is that I'm attempting to use python-holidays to determine which days my children have off school for some home automations (via Home Assistant). Sometimes, like in the case of National Day for Truth and Reconciliation, they (and I because I'm in the public sector) get the day off even though it isn't a statutory holiday. It would almost be nice to have a feature of python-holidays that would track holidays that apply to specific sectors / institutions like public, private, education, etc. Maybe an extra parameter even more granular than is specific to each province / state that would accept which sector / institution you want the holidays for. ü§î That's very much another conversation though!
I will close this off. Thanks for the pleasant conversation around the topic!

Identify Spanish Province
Hi, trying this, im in doubt about REGION DE MURCIA code.
Hi @ldsmovil ,
thank you for your interest in python-holidays.
In case you noticed any issue / improvable features, you are encouraged to provide a fix: we will appreciate your contribution! For further info, pls refer to:
https://github.com/dr-prodigy/python-holidays#contributions
Thx in advance, best!
dr-p
Country codes used are from the ISO 3166 standard:

https://www.iso.org/obp/ui/#iso:code:3166:ES

Spain holidays, are defined by 'comunidad aut√≥noma', so the codes for 'regi√≥n de Murcia', must be:


holidays.Spain(prov='MC')


https://www.boe.es/boe/dias/2021/10/21/pdfs/BOE-A-2021-17113.pdf
Country codes used are from the ISO 3166 standard:

https://www.iso.org/obp/ui/#iso:code:3166:ES

Spain holidays, are defined by 'comunidad aut√≥noma', so the codes for 'regi√≥n de Murcia', must be:

holidays.Spain(prov='MC')
https://www.boe.es/boe/dias/2021/10/21/pdfs/BOE-A-2021-17113.pdf


Thanks!! Perfect answer.

Add type annotations?
I imported the library into my project and the CI warned me:
+ dmypy run ksiemgowy -- --strict
ksiemgowy/bookkeeping.py:14: error: Skipping analyzing "holidays": found module but no type hints or library stubs
ksiemgowy/bookkeeping.py:14: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports

Depending on the amount of effort, maybe it's worth to add type annotations? In some interesting cases, this might unlock new superpowers, such as being able to better JIT the code.
Hey there @d33tah
thank you for your suggestion!
This is an interesting code improvement, although I expect a significant effort to put it in place.
If you are interested in working on this feature implementing a PR, we will do our best to support you.. Pls let me know, thx!
Cheers
dr-p
Actually it does look like quite a few hours of work. I'm afraid might not have time to do that in the near future, sorry. It might be a good idea to leave the issue hanging though.
I think this should be fixed once #608 is merged.
Just merged in beta.. thx! üëç

US Viriginia Lee Jackson Day Removed After 2020
Jan 15th was removed as a state holiday by Virginia after 2020.
See Virginia Legislative Information System here
All Lee Jackson Jan 15th holidays for 2021 and on should be removed.
Seems like I don't have permissions to push...
holidays/countries/united_states.py lines 135, 138, 140 add in
2020 >= year...
for all of the year checks.  This will fix this issue.
Hi @evohnave
thank you!
In fact, direct pushes are not allowed: you need to create a PR to collaborate.
Being a very limited and clear change, I provided the fix myself: now pushed in beta.
Thx, cheers!

Add TN / Trento province for ITALY
Hi, I'd like to point out that the Trento (TN) province for Italy is missing from known provinces. Its patron saint holiday is on the 26th of june.
Hi, thank you!
I've just released this update on the beta branch.
Cheers!

Increase the usage of augmented assignment statements
üëÄ Some source code analysis tools can help to find opportunities for improving software components.
üí≠ I propose to increase the usage of augmented assignment statements accordingly.
Would you like to integrate anything from a transformation result which can be generated by a command like the following?
(:point_right: Please check also for questionable change suggestions because of an evolving search pattern.)
[Markus_Elfring@fedora lokal]$ perl -p -i.orig -0777 -e 's/^(?<indentation>\s+)(?<target>\S+)\s*=\s*\k<target>[ \t]*(?<operator>[+\-%&|^@]|\*\*?|\/\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find ~/Projekte/python-holidays/lokal -name '*.py')

How do you think about to improve 24 source code places? ü§î
Sorry, not really a regexp wizard.. even after fixing your command like this
python-holidays$ perl -p -i.orig -0777 -e 's/^(?<indentation>\s+)(?<target>\S+)\s*=\s*\k<target>[ \t]*(?<operator>[+\-%&|^@]|\*\*?|\/\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find . -name '*.py')
it still seems to fail for this reason:
-bash: /usr/local/bin/perl: Argument list too long
Any ideas?
How do you think about the generation of update candidates like the following? ü§î
Markus_Elfring@Sonne:/home/altes_Heim3/Markus_Elfring/Projekte/python-holidays/lokal> perl -p -i.orig -0777 -e 's/^(?<indentation>\s+)(?<target>\S+)\s*=\s*\k<target>[ \t]*(?<operator>[+\-%&|^@]|\*\*?|\/\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find . -name '*.py') && git diff > ../change_possibilities-20220723.diff

diff --git a/holidays/countries/angola.py b/holidays/countries/angola.py
index 9cdf2da..60e09be 100644
--- a/holidays/countries/angola.py
+++ b/holidays/countries/angola.py
@@ -54,7 +54,7 @@ class Angola(HolidayBase):
             # which is 40 days before easter excluding sundays
             carnival = e - rd(days=46)
             while carnival.weekday() != TUE:
-                carnival = carnival - rd(days=1)
+                carnival -= rd(days=1)
             self[carnival] = "Carnaval"
 
             self[date(year, FEB, 4)] = "Dia do In√≠cio da Luta Armada"
diff --git a/holidays/countries/aruba.py b/holidays/countries/aruba.py
index 00cac4a..3443bf5 100644
--- a/holidays/countries/aruba.py
+++ b/holidays/countries/aruba.py
@@ -59,7 +59,7 @@ class Aruba(HolidayBase):
         if year >= 2014:
             kings_day = date(year, APR, 27)
             if kings_day.weekday() == 6:
-                kings_day = kings_day - rd(days=1)
+                kings_day -= rd(days=1)
 
             self[kings_day] = "A√±a di Rey [King's Day]"
 
@@ -71,9 +71,9 @@ class Aruba(HolidayBase):
 
             if queens_day.weekday() == 6:
                 if year < 1980:
-                    queens_day = queens_day + rd(days=1)
+                    queens_day += rd(days=1)
                 else:
-                    queens_day = queens_day - rd(days=1)
+                    queens_day -= rd(days=1)
 
             self[queens_day] = "A√±a di La Reina [Queen's Day]"
 
diff --git a/holidays/countries/botswana.py b/holidays/countries/botswana.py
index 42eadd6..5e56689 100644
--- a/holidays/countries/botswana.py
+++ b/holidays/countries/botswana.py
@@ -56,7 +56,7 @@ class Botswana(HolidayBase):
             # for the given year
             d = date(year, 7, 15)
             while d.isoweekday() != 1 and (15 <= d.day <= 21):
-                d = d + rd(days=1)
+                d += rd(days=1)
 
             self[d] = "President's Day"
             self[d + rd(days=1)] = "President's Day Holiday"
diff --git a/holidays/countries/canada.py b/holidays/countries/canada.py
index 156f858..21c01d3 100644
--- a/holidays/countries/canada.py
+++ b/holidays/countries/canada.py
@@ -246,7 +246,7 @@ class Canada(HolidayBase):
         elif self.subdiv in ("NS", "NL", "NT", "PE", "SK") and year >= 1931:
             self[date(year, NOV, 11)] = name
             if self.observed and date(year, NOV, 11).weekday() == SUN:
-                name = name + " (Observed)"
+                name += " (Observed)"
                 self[date(year, NOV, 11) + rd(weekday=MO)] = name
 
         # Christmas Day
diff --git a/holidays/countries/curacao.py b/holidays/countries/curacao.py
index f031123..24171c8 100644
--- a/holidays/countries/curacao.py
+++ b/holidays/countries/curacao.py
@@ -49,7 +49,7 @@ class Curacao(HolidayBase):
         if year >= 2014:
             kings_day = date(year, APR, 27)
             if kings_day.weekday() == 6:
-                kings_day = kings_day - rd(days=1)
+                kings_day -= rd(days=1)
 
             self[kings_day] = "Koningsdag [King's Day]"
 
@@ -61,16 +61,16 @@ class Curacao(HolidayBase):
 
             if queens_day.weekday() == 6:
                 if year < 1980:
-                    queens_day = queens_day + rd(days=1)
+                    queens_day += rd(days=1)
                 else:
-                    queens_day = queens_day - rd(days=1)
+                    queens_day -= rd(days=1)
 
             self[queens_day] = "Anja di La Reina [Queen's Day]"
 
         # Labour Day
         labour_day = date(year, MAY, 1)
         if labour_day.weekday() == 6:
-            labour_day = labour_day + rd(days=1)
+            labour_day += rd(days=1)
         self[labour_day] = "Dia di Obrero [Labour Day]"
 
         # Ascension Day
diff --git a/holidays/countries/hongkong.py b/holidays/countries/hongkong.py
index dd68029..bc9debb 100644
--- a/holidays/countries/hongkong.py
+++ b/holidays/countries/hongkong.py
@@ -43,7 +43,7 @@ class HongKong(HolidayBase):
                 self[
                     first_date + rd(days=+1)
                 ] = day_following + self.first_lower(name)
-                first_date = first_date + rd(days=+1)
+                first_date += rd(days=+1)
             else:
                 self[first_date] = name
         else:
@@ -96,7 +96,7 @@ class HongKong(HolidayBase):
         if self.observed:
             if ching_ming_date.weekday() == SUN:
                 self[ching_ming_date + rd(days=+1)] = day_following + name
-                ching_ming_date = ching_ming_date + rd(days=+1)
+                ching_ming_date += rd(days=+1)
             else:
                 self[ching_ming_date] = name
         else:
@@ -189,7 +189,7 @@ class HongKong(HolidayBase):
                 self[mid_autumn_date + rd(days=+1)] = (
                     day_following + "the " + name
                 )
-            mid_autumn_date = mid_autumn_date + rd(days=+1)
+            mid_autumn_date += rd(days=+1)
         else:
             self[mid_autumn_date] = name
 
diff --git a/holidays/countries/korea.py b/holidays/countries/korea.py
index a9c2fe7..b3b030a 100644
--- a/holidays/countries/korea.py
+++ b/holidays/countries/korea.py
@@ -273,7 +273,7 @@ class Korea(HolidayBase):
             ) or (  # if it's weekend(may include sat or not)
                 cur in self and name != self[cur]
             ):  # if it's already another holiday
-                cur = cur + rd(days=1)
+                cur += rd(days=1)
                 is_alt = True
                 continue
             return is_alt, cur
diff --git a/holidays/countries/mozambique.py b/holidays/countries/mozambique.py
index ca2d598..200586d 100644
--- a/holidays/countries/mozambique.py
+++ b/holidays/countries/mozambique.py
@@ -38,7 +38,7 @@ class Mozambique(HolidayBase):
             # which is 40 days before easter excluding sundays
             carnival = e - rd(days=46)
             while carnival.weekday() != TUE:
-                carnival = carnival - rd(days=1)
+                carnival -= rd(days=1)
             self[carnival] = "Carnaval"
 
             self[date(year, FEB, 3)] = "Dia dos Her√≥is Mo√ßambicanos"
diff --git a/holidays/countries/netherlands.py b/holidays/countries/netherlands.py
index ddbbba9..5aeae44 100644
--- a/holidays/countries/netherlands.py
+++ b/holidays/countries/netherlands.py
@@ -64,7 +64,7 @@ class Netherlands(HolidayBase):
         if year >= 2014:
             kings_day = date(year, APR, 27)
             if kings_day.weekday() == SUN:
-                kings_day = kings_day - rd(days=1)
+                kings_day -= rd(days=1)
 
             self[kings_day] = "Koningsdag"
 
@@ -76,9 +76,9 @@ class Netherlands(HolidayBase):
 
             if queens_day.weekday() == SUN:
                 if year < 1980:
-                    queens_day = queens_day + rd(days=1)
+                    queens_day += rd(days=1)
                 else:
-                    queens_day = queens_day - rd(days=1)
+                    queens_day -= rd(days=1)
 
             self[queens_day] = "Koninginnedag"
 
diff --git a/holidays/countries/united_states.py b/holidays/countries/united_states.py
index 6064016..e59e9c8 100644
--- a/holidays/countries/united_states.py
+++ b/holidays/countries/united_states.py
@@ -576,7 +576,7 @@ class UnitedStates(HolidayBase):
         ):
             name = "Christmas Eve"
             self[date(year, DEC, 24)] = name
-            name = name + " (Observed)"
+            name += " (Observed)"
             # If on Friday, observed on Thursday
             if self.observed and date(year, DEC, 24).weekday() == FRI:
                 self[date(year, DEC, 24) + rd(days=-1)] = name
@@ -597,7 +597,7 @@ class UnitedStates(HolidayBase):
         if self.subdiv == "NC" and year >= 2013:
             name = "Day After Christmas"
             self[date(year, DEC, 26)] = name
-            name = name + " (Observed)"
+            name += " (Observed)"
             # If on Saturday or Sunday, observed on Monday
             if self.observed and date(year, DEC, 26).weekday() in WEEKEND:
                 self[date(year, DEC, 26) + rd(weekday=MO)] = name
diff --git a/holidays/countries/zambia.py b/holidays/countries/zambia.py
index c15604a..b529508 100644
--- a/holidays/countries/zambia.py
+++ b/holidays/countries/zambia.py
@@ -51,7 +51,7 @@ class Zambia(HolidayBase):
             # for the given year and month
             d1 = date(year, JUL, 7)
             offset = -d1.weekday()  # weekday = 0 means monday
-            d1 = d1 + rd(days=offset)
+            d1 += rd(days=offset)
 
             self[d1] = "Heroes' Day"
             self[d1 + rd(days=1)] = "Unity Day"
@@ -59,7 +59,7 @@ class Zambia(HolidayBase):
             # 1st Monday of Aug = "Farmers' Day"
             d2 = date(year, AUG, 7)
             offset = -d2.weekday()
-            d2 = d2 + rd(days=offset)
+            d2 += rd(days=offset)
 
             self[d2] = "Farmers' Day"
 
diff --git a/holidays/countries/zimbabwe.py b/holidays/countries/zimbabwe.py
index 8ffff1d..c1807a0 100644
--- a/holidays/countries/zimbabwe.py
+++ b/holidays/countries/zimbabwe.py
@@ -57,7 +57,7 @@ class Zimbabwe(HolidayBase):
             while zimbabwe_heroes_day.isoweekday() != MON and (
                 8 <= zimbabwe_heroes_day.day <= 14
             ):
-                zimbabwe_heroes_day = zimbabwe_heroes_day + rd(days=1)
+                zimbabwe_heroes_day += rd(days=1)
 
             self[zimbabwe_heroes_day] = "Zimbabwe Heroes' Day"
 
@@ -68,7 +68,7 @@ class Zimbabwe(HolidayBase):
             while defence_forces_day.isoweekday() != TUE and (
                 8 <= defence_forces_day.day <= 14
             ):
-                defence_forces_day = defence_forces_day + rd(days=1)
+                defence_forces_day += rd(days=1)
 
             self[defence_forces_day] = "Defense Forces Day"
Hi @elfring thank you for your clear explanation.. sorry but due to a different perl version, I cannot really get to your results, due to the previously reported issue.
This given, although I don't feel your optimizations as really high priority, I'm definitely interested in including them in our code: if you are available to develop a PR, I will surely merge it.
Thank you very much for your support, cheers! üëç
Which Perl versions would hinder adjustments (which can generally be generated by the mentioned source code search and replacement approach)?
üí≠ Would any other contributor be quicker with the integration of the shown change possibilities?
@elfring, @dr-prodigy thank you both! The issue is resolved and can be closed now.

October 25 is no longer holiday in Spain Prov=PV
I'm using the WORKDAY integration of Home Assistant to obtain a binary sensor for workdays.
AFAIK python-holidays is being used "under the hood" in this integration
Yesterday October 25th was wrongly marked as holiday.
It's not holiday since 2014.
More info (sorry, in spanish): [https://es.wikipedia.org/wiki/D%C3%ADa_del_Pa%C3%ADs_Vasco#Creaci%C3%B3n_y_desaparici%C3%B3n_de_la_festividad]
Released in beta.. thx! üëç

Easter is missing from .UnitedStates
I copied the code from the readme:
from datetime import date
import holidays
us_holidays = holidays.UnitedStates()

for date, name in sorted(holidays.US(years=2021).items()):
  print(date, name)

And it produced the following output:
2021-01-01 New Year's Day
2021-01-18 Martin Luther King Jr. Day
2021-02-15 Washington's Birthday
2021-05-31 Memorial Day
2021-06-19 Juneteenth National Independence Day
2021-07-04 Independence Day
2021-07-05 Independence Day (Observed)
2021-09-06 Labor Day
2021-10-11 Columbus Day
2021-11-11 Veterans Day
2021-11-25 Thanksgiving
2021-12-24 Christmas Day (Observed)
2021-12-25 Christmas Day
2021-12-31 New Year's Day (Observed)

Where is Easter?
Is there a Seperate Christian calendar with Ash Wednesday,  St. Valentines day, Good Friday, Easter, etc...
For the project  I am working on today, I only need Easter.
I don't think Easter is a national holiday in the US.
I don't think Easter is a national holiday in the US.

Turns out you're right per https://en.wikipedia.org/wiki/Federal_holidays_in_the_United_States
@DonBower if you go through the code of this library, you will find out that for those countries where Easter is a National holiday the date comes from the python-dateutil package, so if Easter is all you need you should us that package directly.
Might it be possible to add Christian, Jewish and Muslin as countries with their respective Holy days?
Hi @DonBower ,
thx for your interest in python-holidays.
The library aims to provide support on official national holidays, therefore religious holidays are (at least, as of now) out of scope.
Thx for your understanding, best regards
dr-p

Please enter holidays for Macedonia
Please enter holidays for Macedonia (North Macedonia)
https://en.m.wikipedia.org/wiki/Public_holidays_in_North_Macedonia
Hi @mojso,
thank for your interest in python-holidays.. any contribution is welcome!
Pls refer to here:
https://github.com/dr-prodigy/python-holidays#contributions
for more info.
Cheers
Thank you for entering the Macedonian holidays
Big kudos to @tserekh for providing this: it is now available on beta branch.
Cheers

Provincial holidays are not being Reported in case of India
I use this to know the status of stock exchanges in India. The stock exchange that I follow is the province with code MH where 15th of October is a holiday declared by state government. But it seems this is not recognized by this program. You can get the official list of holidays from this
https://mmrda.maharashtra.gov.in/public-holidays
@dr-prodigy I would like to submit a patch to fix this.
Did you submit the patch?
NO, not yet. I was waiting for the approval.
Will it help with all state holidays or  with maharastra or stock exchange holidays?
well, ideally there should be all state holidays.
Hi, just fixed and released in beta: thx!

Please add holidays from Prophet
Thank you for this great library. We at NeuralProphet would like to be able to rely 100% on your great package.
However, you are lacking a few important countries, which we have to manually sync from Prophet.
If you could add those, it would make NeuralProphet's and Prophet's codebase simpler to maintain.
Prophet supports the following countries missing in your library:

Indonesia
Thailand
Philippines
Pakistan
Belarus
India (currently defined: 8 holidays,  while Prophet has 22)

You can find the relevant code here:
https://github.com/facebook/prophet/blob/master/python/prophet/hdays.py
"All that is needed" is to write tests for these countries, the holidays are all already defined.
If someone would be down to take on this task, we would be very thankful!
Hi @ourownstory thank you for your interest in python_holidays.
It would be great if you could contribute to it, if you can, thx!
In the meanwhile, I mark this as "help wanted".
Cheers!
Hi @dr-prodigy I am happy to contribute everything but the tests...
I can work on it
Thank you @tserekh ! Please let me know when your work is merged!
The requested countries have been added in v0.20.
Please review ourownstory/neural_prophet#1176
Thank you for using python-holidays!

Wrong Observed Holiday for Korean National Foundation Day
Hello, it seems there is no adaptation for Observed Holiday for the Korean National Fundation. For example on the year 2021 it falls on a Sunday and should be observed on the following Monday, but it is not showed.
May you please check?
I have the same issue. so I issued this PR #535
PR is now merged in beta. Thx to both of you, cheers!

Using slice to get holidays between two dates only returns holidays from the start year and the end year
STEPS TO REPRODUCE

Aim: retrieve list of all holidays between 2014-12-31 and 2016-01-01

us_holidays = holidays.US()
us_holidays['2014-12-31': '2016-01-01']

EXPECTED BEHAVIOUR

Retuns a list of all holidays in 2015 plus 1st January 2016

OBSERVED BEHAVIOUR

Returns [datetime.date(2016, 1, 1)]
Hi,
I hope I'm not mistaking but, to be honest, in the provided example the 2 dates - written as strings - don't seem suitable for a python "slicing", and therefore are considered as 2 elements.
Then, the library works as expected / documented, ie: collecting holidays for the years of all the provided dates (2014, 2016), so
import holidays
us_holidays = holidays.US()
us_holidays['2014-12-31': '2016-01-01']
us_holidays

correctly shows holidays for both 2014 and 2016.
Please let me know if I didn't catch it right, I'm available for further clarifications.. thx!
@dr-prodigy
I took a look at the original code and it does seem to be set up for accepting slicing of two dates, as per the code below in __getitem__ (the call to __keytransform__ allows the keys to be in any of the supported formats, including an ISO 8601 string):
https://github.com/dr-prodigy/python-holidays/blob/5cde25b7e2e15578c7c1ab6e3f1a7ebda444fd80/holidays/holiday_base.py#L241-L274
However, I don't think that the recursive call to dict.__getitem__(self, day) in line 270 gets to expand (load) the dates, but calling self.__getitem__(day) instead does.
So it's basically a one-line fix that I will submit as a PR.
@justinwaf
Thanks for taking the time to report this.

EXPECTED BEHAVIOUR

Returns a list of all holidays in 2015 plus 1st January 2016


I just want to clarify that the expected behavior is incorrect: in Python, slicing is done with half-open intervals and upper bounds are exclusive . See https://stackoverflow.com/questions/11364533/why-are-slice-and-range-upper-bound-exclusive
Once the fix is in, the behavior is to return 2014-12-31 if it were a holiday (it isn't so it won't) and all holidays for 2015, but not return 2016-01-01.
Hi, I hope I'm not mistaking but, to be honest, in the provided example the 2 dates - written as strings - don't seem suitable for a python "slicing", and therefore are considered as 2 elements.
Then, the library works as expected / documented, ie: collecting holidays for the years of all the provided dates (2014, 2016), so
import holidays
us_holidays = holidays.US()
us_holidays['2014-12-31': '2016-01-01']
us_holidays

correctly shows holidays for both 2014 and 2016.
Please let me know if I didn't catch it right, I'm available for further clarifications.. thx!

The example I used was a slightly expanded one I got from the README.rst
us_holidays['2014-01-01': '2014-01-03']  # [date(2014, 1, 1)]
From this example I understood that you could send in 2 dates as strings and get back a list of all the holidays in between (and not including the end date).  What I observed is I only got holidays for the year of the first date, and the year of the last date, and the years in between were skipped.
Hi @justinwaf and @mborsetti
thank you both for your support!
After a further analisys on your points (sorry for not understanding them in first place), I confirm you are both right.
The issue was probably buried in the code since before I started working on the lib, so good shot!
I noticed the PR made by Mike has been closed, so I re-applied it (one row fix, quickwin! :-) ) in a new commit.
Thank you both again, KUTGW! üëç

Value Error when setting years
Since the ugrade to version '0.11.3' I have encountered the following error:
In [1]: import holidays
   ...: print(holidays.__version__)
   ...: years = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
   ...: holidays.CZ(years=years)
Out[1]: 
'0.11.3'
*** ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

Using the previous version I do not encounter this error.
Thank you so much for your awesome library!
Hmmm, I cannot reproduce the error:
import holidays
print(holidays.__version__)
years = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
holidays.CZ(years=years)
0.11.3
Traceback (most recent call last):
  File "C:\Program Files\Python\Python39\lib\site-packages\IPython\core\interactiveshell.py", line 3444, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-e5c753ba3e41>", line 3, in <module>
    years = array([2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021])
NameError: name 'array' is not defined

However, this works as advertised:
import holidays
print(holidays.__version__)
years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021]
holidays.CZ(years=years)
0.11.3
Out[4]: 
{datetime.date(2016, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2016, 3, 25): 'Velk√Ω p√°tek',
 datetime.date(2016, 3, 28): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2016, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2016, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2016, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2016, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2016, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2016, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2016, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2016, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2016, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2016, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2017, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2017, 4, 14): 'Velk√Ω p√°tek',
 datetime.date(2017, 4, 17): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2017, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2017, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2017, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2017, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2017, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2017, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2017, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2017, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2017, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2017, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2018, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2018, 3, 30): 'Velk√Ω p√°tek',
 datetime.date(2018, 4, 2): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2018, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2018, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2018, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2018, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2018, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2018, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2018, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2018, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2018, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2018, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2019, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2019, 4, 19): 'Velk√Ω p√°tek',
 datetime.date(2019, 4, 22): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2019, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2019, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2019, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2019, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2019, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2019, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2019, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2019, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2019, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2019, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2020, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2020, 4, 10): 'Velk√Ω p√°tek',
 datetime.date(2020, 4, 13): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2020, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2020, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2020, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2020, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2020, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2020, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2020, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2020, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2020, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2020, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2021, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2021, 4, 2): 'Velk√Ω p√°tek',
 datetime.date(2021, 4, 5): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2021, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2021, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2021, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2021, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2021, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2021, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2021, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2021, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2021, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2021, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2011, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2011, 4, 25): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2011, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2011, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2011, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2011, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2011, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2011, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2011, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2011, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2011, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2011, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2012, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2012, 4, 9): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2012, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2012, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2012, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2012, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2012, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2012, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2012, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2012, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2012, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2012, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2013, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2013, 4, 1): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2013, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2013, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2013, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2013, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2013, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2013, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2013, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2013, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2013, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2013, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2014, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2014, 4, 21): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2014, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2014, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2014, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2014, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2014, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2014, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2014, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2014, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2014, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2014, 12, 26): '2. sv√°tek v√°noƒçn√≠',
 datetime.date(2015, 1, 1): 'Den obnovy samostatn√©ho ƒçesk√©ho st√°tu',
 datetime.date(2015, 4, 6): 'Velikonoƒçn√≠ pondƒõl√≠',
 datetime.date(2015, 5, 1): 'Sv√°tek pr√°ce',
 datetime.date(2015, 5, 8): 'Den v√≠tƒõzstv√≠',
 datetime.date(2015, 7, 5): 'Den slovansk√Ωch vƒõrozvƒõst≈Ø Cyrila a Metodƒõje',
 datetime.date(2015, 7, 6): 'Den up√°len√≠ mistra Jana Husa',
 datetime.date(2015, 9, 28): 'Den ƒçesk√© st√°tnosti',
 datetime.date(2015, 10, 28): 'Den vzniku samostatn√©ho ƒçeskoslovensk√©ho st√°tu',
 datetime.date(2015, 11, 17): 'Den boje za svobodu a demokracii',
 datetime.date(2015, 12, 24): '≈†tƒõdr√Ω den',
 datetime.date(2015, 12, 25): '1. sv√°tek v√°noƒçn√≠',
 datetime.date(2015, 12, 26): '2. sv√°tek v√°noƒçn√≠'}
The issue should be fixed by #528 , which is about to be published as a hotfix release (v0.11.3.1).
@schwarzan I kindly ask you to confirm that the last release fixes your issue.
Thank you both üëçüëç

Documentation in Sphynx
@dr-prodigy Would you accept a reorganization of the documentation into Sphynx format, suggesting that it be hosted (for free) at https://readthedocs.org/ -- you'd have to set up an account for it?
You know, for sometime between now and 2030... ;)
@dr-prodigy any comments on the above?
Hey there Mike @mborsetti!
As you could (maybe) see, in these days I'm (slowly) trying to finally catch up with the open PRs/issues (quite a lot piled up in fact..).
Being yours often the most challenging (and clever!) ones, I usually leave them for last, to give them the required degree of attention.. btw, sorry if sometimes it seems I don't care too much about them, it's in fact the opposite! :)
I will come back to this one (and the other one regarding date slices too) soon!
Cheers
M.
At last, @mborsetti ! Sorry for getting to this so late, didn't have time to really get into it until the last days.
After some reading / learning  the topic, I agree: it's a very nice improvement.
As suggested, I've then opened an account on readthedocs.org , and created a linked project for python-holidays.
Then added sphinx dev dependency, and create the default stub project.
As a final "touch", I've added the relevant badge at the beginning of README.rst page.
All currently available on beta branch: you should be able to start your work from there (of course, no hurry.. take your time! :-) ).
Grazie üëç
Wonderful!
It may have to wait until the new year, but will submit a PR when I have it built.
@dr-prodigy Submitted in #601

Documentation/API typo
Currently the ISO abbreviation for Bangladesh is written as 'BDG' but it is actually 'BGD'. Really minor thing, but easy enough to tweak in the documentation.
Documentation for France needs to indicate if there are either provinces or states. It currently does not indicate if to access these local holidays you need one or the other.
Portugal Extension, PRTE does not work as abbreviation.
Hi, thank you for your support! All fixes are released on beta branch. Thx again

"Fronleichnam" is missing
In Germany some states have a holiday called "Fronleichnam". Its missing.
Hi @Doev
thx for your interest.
If possible, I kindly ask you to:

provide more complete info
even better, contribute code with the fix

More info here:
https://github.com/dr-prodigy/python-holidays#contributions
Thx in advance, cheers!
dr-p
Hello dr-p,
sorry for my late answer. It was my mistake. When I get the german holidays, I have to use the parameter 'prov' and not 'state'. It works as it should work.
Thank you!
for date, name in sorted(holidays.DE(prov='RP', years=2021).items()):
    print(date, name)
    
2021-01-01 Neujahr
2021-04-02 Karfreitag
2021-04-05 Ostermontag
2021-05-01 Erster Mai
2021-05-13 Christi Himmelfahrt
2021-05-24 Pfingstmontag
2021-06-03 Fronleichnam                                         <---------------------- there it is
2021-10-03 Tag der Deutschen Einheit
2021-11-01 Allerheiligen
2021-12-25 Erster Weihnachtstag
2021-12-26 Zweiter Weihnachtstag
Very good then.. thank you! üëç

"AttributeError: module 'holidays' has no attribute SA"
Dear Developer,
How are you today?
I'm writing to report and issue when pulling holidays in SA (SAU)
According to "Available Countries" table SaudiArabia is country that we have available.
However, when run the code, it returned error:
AttributeError: module 'holidays' has no attribute SA

I was wondering what could be the cause?
Thank you and have a wonderful afternoon!
All the best,
Kathy
Kathy, are you running the latest version of holidays?
>>> import holidays
>>> holidays.__version__
0.11.2
Thank you @mborsetti ! It worked after updating it to the latest version!
All the best,
Kathy

2021-08-16 Is not a holiday in Spain
08/16/2021 is not holiday in spain! It's holidays in some provinces:
Castilla y Le√≥n, Arag√≥n, Asturias, Andaluc√≠a y Canarias.
It's not a holiday at:
Galicia, Cantabria, La Rioja, Madrid, Extremadura, Pa√≠s Vasco, Navarra, Catalu√±a, Comunidad Valenciana, Baleares, Castilla-La Mancha, Murcia, Ceuta and Melilla.
Hi,
there is no direct reference to 16th Aug in Spanish holidays, therefore you probably have set observed flag.
I kindly ask you to double check.
Thx!
Hi, there is no direct reference to 16th Aug in Spanish holidays, therefore you probably have set observed flag. I kindly ask you to double check. Thx!

Hi, when I test the following code
`>>> from datetime import date



import holidays
sp = holidays.Spain()
spGalicia = holidays.Spain(state='GA')
'2021-08-16' in sp
True
'2021-08-16' in spGalicia
True`



The result is that 2021-08-16 is a holiday in Spain and Galicia (state of Spain)

16 Ago 2021 Spain Catalonia 
Today is not a holiday, it is a working day.
Hi, Aug 16 is not referenced as a holiday, unless observed flag is enabled, which is probably your case (in 2021 Aug 15 fell on Sunday). I kindly ask you to please double check.
Closing, thx!

Bulgarian holidays not alll
I suggest changing the source of information for holidays in Bulgaria to https://kik-info.com/spravochnik/calendar/2021/. This is the most legitimate source from where the business community is finding out the dates that they need. The sources which the module is using right now are not comprehensive (for example: 2021-05-03 for 2021 is missing). Hope you fix it...
Fixed in #509 . Thank you very much!

Duplicate Angola holiday
It seems that there is a duplicate holiday being added in the Angola public holidays.
@jusce17 I see you have made these changes and that you are from Angola.
What is the difference between Dia do Her√≥i Nacional and Dia dos Heroes Nacional and why do both of them fall on the same day from 1979.
Should this have been a name change? Or was it accidentally added?
Hi  @pietervdw115
thanks for the heads up, I should be fixing this soon
Thank you @jusce17 ! :)
Thank you both! üëç

ValueError: month must be in 1..12
Hey guy's,
I am currently trying to add holidays via an input but when running my script I get the following error:
Traceback (most recent call last):
  File "test.py", line 22, in <module>
    for date, name in sorted(addHolidays(years=year).items()):
  File "/home/user/anaconda3/lib/python3.8/site-packages/holidays/countries/germany.py", line 81, in __init__
    HolidayBase.__init__(self, **kwargs)
  File "/home/user/anaconda3/lib/python3.8/site-packages/holidays/holiday_base.py", line 37, in __init__
    self._populate(year)
  File "test.py", line 18, in _populate
    self[date(year, day_input, int(month_input))] = add_input
ValueError: month must be in 1..12

This is the code I try to run:
from datetime import date
import datetime
import holidays

add_input = input("give me the name of the holiday: ")
day_input = int(input("give me the day of the holiday: ")
month_input = int(input("give me the month: of the holiday: ")

print(add_input)

class addHolidays(holidays.DE):
    def _populate(self, year):
        holidays.DE._populate(self, year)
        self[date(year, day_input, month_input)] = add_input

print("added a new holiday successfully!")


I've also tried to input different variants of parameters. For example:
01, 02, 03, 04, 05...12 or 1,2,3,4,5...12
Is there something wrong with my code? If so I would be really glad if someone could tell me what I've made wrong and help  me solve this error:)
Thank's for every help and suggestion in advance:)
Hi, whenever creating a new date through date(...), you should set the values as here:
datetime.date(yyyy, mm, dd)
Cheers :)

Juneteenth Holiday Observed date
I noticed that there is no logic for the Juneteenth (Observed) date (i.e. June 20, 2022) and believe this needs to be updated
It looks like Juneteenth logic
https://github.com/dr-prodigy/python-holidays/blob/1a407bd970ded0966f8f9457e4e49563681dd2c7/holidays/countries/united_states.py#L382-L386
needs to be updated with observed logic, like West Virginia Day
https://github.com/dr-prodigy/python-holidays/blob/1a407bd970ded0966f8f9457e4e49563681dd2c7/holidays/countries/united_states.py#L390-L398
yes, according to this: https://www.federalreserve.gov/aboutthefed/k8.htm - 2021/06/18 and 2022/06/20 were the respective official holidays in '21 and '22, so the default python-holidays values seem incorrect.
@empgc02 this has been fixed by @khawley and then merged in beta.. thank you both! üëç
Cheers
dr-p

TypeError: __init__() got an unexpected keyword argument 'country'
Hey guy's,
I am trying to add a new holiday to the general german holiday list on my machine.
But when running my code I am getting the following error:
TypeError: __init__() got an unexpected keyword argument 'country'
This is the full error message:
Traceback (most recent call last):
  File "test.py", line 8, in <module>
    date(2021 ,8, 28) in CorporateHolidays(country="Germany")
  File "C:\Users\supre\anaconda3\lib\site-packages\holidays\countries\germany.py", line 81, in __init__
    HolidayBase.__init__(self, **kwargs)
TypeError: __init__() got an unexpected keyword argument 'country'

This is my code:
from datetime import date
import holidays

class CorporateHolidays(holidays.Germany):
    def _populate(self, year):
        holidays.Germany._populate(self, year)
        self[date(year, 8, 28)] = "My birthday"
date(2021 ,8, 28) in CorporateHolidays(country="Germany")#also tried with DE or DEU

Am I doing something wrong?
If so I would be really glad if someone could help me out with this problem and tell me what I've made wrong.
Thank's for every help and suggestion in advance:)
The keyword country is defined in holidays by the CountryHoliday function and it's used to instantiate the class from the correct country; however you are subclassing holidays.Germany directly, and if you look at its __init__ it does not take a country keyword as it would be pleonastic.
Just instantiate with CorporateHolidays() and that error will go away.
Oh, I see that the documentation needs to be updated.  Any volunteers? Should ideally be moved over to readthedocs as well.
Hey @mborsetti,
thank's for your fast response:)
This worked out great for me:)
Thank you both.. closing!

Holidays for Zambia
Howdy @dr-prodigy, this is an excellent library!
I have noticed that holidays for Zambia are missing and I'd like to add them. Can I send a PR for this?
Thanks.
Thank you very much for your great work.. Zambia support merged in beta! üëç

Alphabetically order the "prov/state" list in README for all countries.
Currently the following four countries' prov lists in the README file are not ordered alphabetically. It will be helpful to have them alphabetically ordered for the users of this library.

India
Brazil
Germany
NewZealand

=================== ========= =============================================================
Country             ISO code  Provinces/States Available
=================== ========= =============================================================
Brazil              BR/BRA    state = AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG,
                              PA, PB, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO
Germany             DE/DEU    prov = BW, BY, BYP, BE, BB, HB, HH, HE, MV, NI, NW, RP, SL,
                              SN, ST, SH, TH
India               IN/IND    prov = AS, SK, CG, KA, GJ, BR, RJ, OD, TN, AP, WB, KL, HR,
                              MH, MP, UP, UK, TN
NewZealand          NZ/NZL    prov = NTL, AUK, TKI, HKB, WGN, MBH, NSN, CAN, STC, WTL,
                              OTA, STL, CIT
I have already implemented this and will send a PR. So, please assign this to me (@sugatoray). Thank you.
Closed through #485 .. thank you! üëç

How can I print out the next holiday?
Hey guys and contributors,
is there any way to print out the next holiday?
For example, if there is no holiday today, the program prints the nearest holiday out.
Thank's for every help and suggestion in advance:)
HI @NoCodeAvaible ,
I believe you can just iterate to your holidays, this messy code my give you a hint
from datetime import date, timedelta
import holidays

brazlian_holidays = holidays.Brazil()
holiday = date.today() in brazlian_holidays
day = date.today()
while not holiday:
    day = day + timedelta(days=1)
    if day in brazlian_holidays:
        print(brazlian_holidays.get(day))
        break

OUTPUT
 Independ√™ncia do Brasil
Hey @jusce17 ,
sorry for my late response thank you very very much for your help:)
Worked great for me:)

Juneteenth Holiday Needed
I ran the latest version of holidays and see that there is no entry for Juneteenth, a new holiday starting in June 2021 in the United States.  Hopefully, you can add it soon.  Thanks
Hello @bhackett  I have submitted the PR #488 it should be fixed soon
Merged in beta.. thx!
Thank you.  It works great!

Brian
‚Ä¶
On Sun, Jul 18, 2021 at 4:00 AM Maurizio Montel ***@***.***> wrote:
 Closed #482 <https://github.com/dr-prodigy/python-holidays/issues/482>.

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/482#event-5034780638>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAEAOQPLB6CWIADFUPQRMSDTYKCZZANCNFSM477QG6PQ>
 .

Typo in prov causes holidays to be silently incorrect instead of raising
I believe this may apply to states and other countries as well, but for an example in Canada, the accepted values (from the docs) for prov are: prov = AB, BC, MB, NB, NL, NS, NT, NU, ON (default), PE, QC, SK, YU.
If there's a typo, such as NF instead of NL, or Quebec instead of QC, the default prov is used, which is likely unexpected behaviour for most users. I think raising an error with the allowed values for prov in the message may potentially be more desirable.
In [1]: import holidays
   ...: holiday_options = {'country': 'Canada', 'prov': 'NF'}
   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']
Out[1]: 
[datetime.date(2021, 1, 1),
 datetime.date(2021, 4, 2),
 datetime.date(2021, 5, 24),
 datetime.date(2021, 7, 1),
 datetime.date(2021, 9, 6),
 datetime.date(2021, 10, 11),
 datetime.date(2021, 11, 11),
 datetime.date(2021, 12, 24),
 datetime.date(2021, 12, 25),
 datetime.date(2021, 12, 27)]

In [2]: import holidays
   ...: holiday_options = {'country': 'Canada', 'prov': 'NL'}
   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']
Out[2]: 
[datetime.date(2021, 1, 1),
 datetime.date(2021, 3, 15),
 datetime.date(2021, 4, 2),
 datetime.date(2021, 4, 26),
 datetime.date(2021, 6, 21),
 datetime.date(2021, 7, 1),
 datetime.date(2021, 9, 6),
 datetime.date(2021, 11, 11),
 datetime.date(2021, 12, 24),
 datetime.date(2021, 12, 25),
 datetime.date(2021, 12, 27)]

Thanks! This is an excellent/very pythonic and helpful library!
Oh I just noticed, the default province is not used. It seems to maybe be an intersection of all the provinces' statutory holidays (Canada-wide). If this is intentional it does seem like useful behaviour if prov=None, but I think when there's a typo, it would still be more helpful to raise an error.
In [3]: import holidays
   ...: holiday_options = {'country': 'Canada', 'prov': 'ON'}
   ...: holidays.CountryHoliday(**holiday_options)['2021-01-01':'2021-12-31']
Out[3]: 
[datetime.date(2021, 1, 1),
 datetime.date(2021, 2, 15),
 datetime.date(2021, 4, 2),
 datetime.date(2021, 5, 24),
 datetime.date(2021, 7, 1),
 datetime.date(2021, 8, 2),
 datetime.date(2021, 9, 6),
 datetime.date(2021, 10, 11),
 datetime.date(2021, 12, 24),
 datetime.date(2021, 12, 25),
 datetime.date(2021, 12, 27)]
This is now available in beta.
Closing, thx! üëç

Add Juneteenth
https://www.nytimes.com/2021/06/17/us/politics/juneteenth-holiday-biden.html
Merged in beta.. thx a lot üëç

New Holiday In Chile
from June 19th 2021, in Chile we have a new holiday, D√≠a Nacional de los Prueblos Ind√≠genas (National Day of Native Peoples), the new holiday occurs every winter solstice in Chile from year 2022, for the year 2021, the holiday occurs June 21th.
References:
Ley 21.357 - https://www.bcn.cl/leychile/navegar?idNorma=1161743&idParte=&idVersion=2021-06-19
Thank you! Released on beta.
Cheers

Norway national holidays include all Sundays
When asking for the national holidays of Norway and Sweden, the returned dictionary also returns every Sunday at the beginning (S√∏ndag here).
Here an example for Norway for 2020:
dict_items([(datetime.date(2020, 1, 5), 'S√∏ndag'), (datetime.date(2020, 1, 12), 'S√∏ndag'), (datetime.date(2020, 1, 19), 'S√∏ndag'), (datetime.date(2020, 1, 26), 'S√∏ndag'), (datetime.date(2020, 2, 2), 'S√∏ndag'), (datetime.date(2020, 2, 9), 'S√∏ndag'), (datetime.date(2020, 2, 16), 'S√∏ndag'), (datetime.date(2020, 2, 23), 'S√∏ndag'), (datetime.date(2020, 3, 1), 'S√∏ndag'), (datetime.date(2020, 3, 8), 'S√∏ndag'), (datetime.date(2020, 3, 15), 'S√∏ndag'), (datetime.date(2020, 3, 22), 'S√∏ndag'), (datetime.date(2020, 3, 29), 'S√∏ndag'), (datetime.date(2020, 4, 5), 'S√∏ndag'), (datetime.date(2020, 4, 12), 'F√∏rste p√•skedag, S√∏ndag'), (datetime.date(2020, 4, 19), 'S√∏ndag'), (datetime.date(2020, 4, 26), 'S√∏ndag'), (datetime.date(2020, 5, 3), 'S√∏ndag'), (datetime.date(2020, 5, 10), 'S√∏ndag'), (datetime.date(2020, 5, 17), 'Grunnlovsdag, S√∏ndag'), (datetime.date(2020, 5, 24), 'S√∏ndag'), (datetime.date(2020, 5, 31), 'F√∏rste pinsedag, S√∏ndag'), (datetime.date(2020, 6, 7), 'S√∏ndag'), (datetime.date(2020, 6, 14), 'S√∏ndag'), (datetime.date(2020, 6, 21), 'S√∏ndag'), (datetime.date(2020, 6, 28), 'S√∏ndag'), (datetime.date(2020, 7, 5), 'S√∏ndag'), (datetime.date(2020, 7, 12), 'S√∏ndag'), (datetime.date(2020, 7, 19), 'S√∏ndag'), (datetime.date(2020, 7, 26), 'S√∏ndag'), (datetime.date(2020, 8, 2), 'S√∏ndag'), (datetime.date(2020, 8, 9), 'S√∏ndag'), (datetime.date(2020, 8, 16), 'S√∏ndag'), (datetime.date(2020, 8, 23), 'S√∏ndag'), (datetime.date(2020, 8, 30), 'S√∏ndag'), (datetime.date(2020, 9, 6), 'S√∏ndag'), (datetime.date(2020, 9, 13), 'S√∏ndag'), (datetime.date(2020, 9, 20), 'S√∏ndag'), (datetime.date(2020, 9, 27), 'S√∏ndag'), (datetime.date(2020, 10, 4), 'S√∏ndag'), (datetime.date(2020, 10, 11), 'S√∏ndag'), (datetime.date(2020, 10, 18), 'S√∏ndag'), (datetime.date(2020, 10, 25), 'S√∏ndag'), (datetime.date(2020, 11, 1), 'S√∏ndag'), (datetime.date(2020, 11, 8), 'S√∏ndag'), (datetime.date(2020, 11, 15), 'S√∏ndag'), (datetime.date(2020, 11, 22), 'S√∏ndag'), (datetime.date(2020, 11, 29), 'S√∏ndag'), (datetime.date(2020, 12, 6), 'S√∏ndag'), (datetime.date(2020, 12, 13), 'S√∏ndag'), (datetime.date(2020, 12, 20), 'S√∏ndag'), (datetime.date(2020, 12, 27), 'S√∏ndag'), (datetime.date(2020, 1, 1), 'F√∏rste nytt√•rsdag'), (datetime.date(2020, 5, 1), 'Arbeidernes dag'), (datetime.date(2020, 12, 25), 'F√∏rste juledag'), (datetime.date(2020, 12, 26), 'Andre juledag'), (datetime.date(2020, 4, 9), 'Skj√¶rtorsdag'), (datetime.date(2020, 4, 10), 'Langfredag'), (datetime.date(2020, 4, 13), 'Andre p√•skedag'), (datetime.date(2020, 5, 21), 'Kristi himmelfartsdag'), (datetime.date(2020, 6, 1), 'Andre pinsedag')])
Hi @JoLo90
Are you from Norway ? in the code I found that someone said that Sundays are considered holidays in Norway

Maybe this is the reason you are getting this ?
Hi @jusce17
I am not from Norway but I was working on a project in Norway where I needed the national holidays.
You are right this is probably due to this, even though we rather aim for the public holidays with this library, isn't it?
I would have rather expected the following dates  https://en.wikipedia.org/wiki/Public_holidays_in_Norway.
Hi @JoLo90
From what I can tell is that this library aim for national and regional holidays (For those countries with some holidays only in some states )
But I think the calendar for Norway is def off, I am gonna check it with some Norwegian friends and see if I can fix it
He actually added some links on his code that might help us understand this
class Norway(HolidayBase):
    """
    Norwegian holidays.
    Note that holidays falling on a sunday is "lost",
    it will not be moved to another day to make up for the collision.

    In Norway, ALL sundays are considered a holiday (https://snl.no/helligdag).
    Initialize this class with include_sundays=False
    to not include sundays as a holiday.

    Primary sources:
    https://lovdata.no/dokument/NL/lov/1947-04-26-1
    https://no.wikipedia.org/wiki/Helligdager_i_Norge
    https://www.timeanddate.no/merkedag/norge/
    """

Apparently every sunday is indeed a holiday, but it is a bit confused I will double check with someone else
I would have rather expected the following dates https://en.wikipedia.org/wiki/Public_holidays_in_Norway.

I believe you're correct: no other country in this library includes weekly "holidays", even though in pretty much all countries a day per week (typically Sunday or Friday) is considered a form of "holiday".
P.S. https://no.wikipedia.org/wiki/Helligdager_i_Norge agrees with you
Hi and thank you both!
After a check, I updated Norway to match all other countries (ie: Sundays are not considered holidays) while retaining the possibility to enable this with the flag include_sundays (now defaulting to False).
Released on beta.
Cheers üëç

Spring bank holiday 2022 in the United Kingdom
Spring bank holiday in 2022 is the 2nd June 2022 similar to 2012:
Current version gives 30th May 2022 instead of 2nd June 2022
https://www.gov.uk/bank-holidays
https://www.timeanddate.com/calendar/?year=2022&country=9
https://github.com/AhmosSansom/python-holidays/tree/patch-2
This issue still persists as of today. Please fix.
Issue is still present as of 20/09. Please fix this!
Hi, fixed in #487 . Thx, cheers

2 april 2021 in spain
hi,
dt.date(2021, 4, 2) in holidays.ES() don't work
This was fixed on #469 . Closing, thx!

Malaysia Holidays
Kindly request that Malaysia's holidays are added
Hi,
as this is a community-fueled open source project, we don't develop new features on request.. but if you would like to do it, we will surely support you in it..
Any contribution is welcome!
Thx,
dr-p
Malaysia's holiday is similar to Singapore's. I am new to github, any advice how to I start malaysia.py from singapore.py? Would like to do my part. Any guidance is appreciated.
@dr-prodigy  I can work on this one üòä
@mrkgoh, if you could be so kind in listing me Malaysian holidays would be amazing, I have done some research (just a quick one) and it looks like you guys have a lot of holidays
@jusce17 , thanks looking forward to learning from you.
I hacked a quick code that you can use to scrape the holidays for Malaysia from http://www.officeholidays.com/countries/malaysia/
It takes year range from 2018 to 2024 and output a 'MYholiday.csv'
  import requests
  import pandas as pd
  
  hol = pd.DataFrame()
  
  for year in range(2018, 2024):
  
      url = f'http://www.officeholidays.com/countries/malaysia/{str(year)}'
      
      header = 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36'
      
      with requests.get(url, headers={'User-Agent': header}, verify=False) as req:
          if req.status_code==200:
              sauce = req.content
              print('{:<47s} : {}'.format('Grab html','Done'))
          else:
              print('{:<47s} : {}'.format('Grab html',req.status_code))
      
      df = pd.read_html(sauce, header=0)[0]
      df.loc[:,'Date'] = [i + f' {str(year)}' for i in df.loc[:,'Date']]
      
      hol = pd.concat([hol, df], ignore_index = True)
      
  hol.to_csv('MYholiday.csv')
@jusce17  Thanks for leading the effort! I authored the code for Singapore, which is probably the closest one to clone (Singapore used to be a State part of Malaysia until 1965); feel free to reach out for help.
@mrkgoh Thanks for the info, but what is needed are the rules for the holidays, preferably official ones, so these can be coded and holidays generated annually.  For Singapore I was able to find the Holidays Act, which spells out such rules and also says that the day of some Muslim holidays are to be confirmed annually by the Ministry of Manpower, who publishes them here. So I was able to code an algorithmic baseline with guesstimates for future Muslim holidays based on the lunar calendar, and the exact dates of Muslim holidays are manually updated when the Ministry confirms them on an annual basis.   Can you provide similar references for Malaysia (Google Translate works for laws in Malay)?
@mborsetti , thanks. Looking forward to learning from you.

For Malaysia, we comply to Holiday Act 1951 [Act 369]. English link. PDF version. So no need to translate here.
Yes the government do publishes the holidays annually in Malay only at the following link. by the Prime minister's office.
Yes you are right. The muslim holiday is confirm annually.
Sorry @mrkgoh @mborsetti,  I have been very busy with work and didn't have much time to look into it, turns out Malaysia holidays are a bit harder than I expected, unlike Singapore it does have different states with their own regionals holidays,
I create the pull request #481 were you guys can take look. @mrkgoh it would be nice if you could double check the holidays, I founded a bit hard to understand them all.
@mborsetti since it was basically a copy of the Singapore one, perhaps you could take a look too. I wasn't able to add those holidays that follow the Islamic calendar, perhaps you can help with it ?
It was actually quite interesting to make this small contribution, I spent most of the time studying the regions and history of Malaysian than actually coding üòÖüòÖ
Hi @jusce17, nice work, and yeah quite a lot of regional holidays!
I will look into the Islamic holidays over this coming weekend and should be able to contribute a similar algorithmic baseline to the one I used for Singapore.
Hi everyone, the first implementation of Malaysian holidays, although not referenced in CHANGES file, has been added on v0.11.2.
Therefore, I fixed CHANGES accordingly and I close this issue (issues cleanup).
I ask you to please start a new PR in case you work on its improved version (islamic holidays).
Thank you both, best üëç

Movable holidays in ARG
There are 4 holidays in Argentina that are movable or transferable, meaning they aren't always on the exact same date. They're now set as fixed dates and that's not accurate.
This ones are:
D√≠a Pase a la Inmortalidad del General Mart√≠n Miguel de G√ºemes [Day Pass to the Immortality of General Mart√≠n Miguel de G√ºemes] --- it's set to XXXX-06-17
D√≠a Pase a la Inmortalidad del General D. Jos√© de San Martin [Day Pass to the Immortality of General D. Jos√© de San Martin] --- it's set to XXXX-08-17
D√≠a del Respeto a la Diversidad Cultural [Respect for Cultural Diversity Day] --- it's set to XXXX-10-12
D√≠a Nacional de la Soberan√≠a [National Sovereignty Day] --- it's set to XXXX-11-23
The dates of this holidays in the last few years are:
‚ñ∫D√≠a Pase a la Inmortalidad del General Mart√≠n Miguel de G√ºemes [Day Pass to the Immortality of General Mart√≠n Miguel de G√ºemes]
(this holiday didn't exist before 2018)
2018-06-17
2019-06-17
2020-06-15
2021-06-21
‚ñ∫D√≠a Pase a la Inmortalidad del General D. Jos√© de San Martin [Day Pass to the Immortality of General D. Jos√© de San Martin]
2015-08-17
2016-05-15
2017-08-21
2018-08-20
2019-08-17
2020-08-17
2021-08-16
‚ñ∫D√≠a del Respeto a la Diversidad Cultural [Respect for Cultural Diversity Day]
2015-10-12
2016-10-10
2017-10-16
2018-10-15
2019-10-12
2020-10-12
2021-10-11
2022-10-12
‚ñ∫D√≠a Nacional de la Soberan√≠a [National Sovereignty Day]
2015-11-23
2016-11-28
2017-11-20
2018-11-19
2019-11-18
2020-11-23
2021-11-20
2022-11-23
Is there any rhyme or reason for those dates (can they be computed), or are they based on the whims of lawmakers?
in AR there are bridge holidays, some move and sone don't depending on the government, there is no way to compute them as they change every year. the information source can be found on (in spanish): https://www.argentina.gob.ar/interior/feriados-nacionales-2022
additionally, google's public holidays' calendar has them right
in AR there are bridge holidays, some move and sone don't depending on the government, there is no way to compute them as they change every year. the information source can be found on (in spanish): https://www.argentina.gob.ar/interior/feriados-nacionales-2022
additionally, google's public holidays' calendar has them right
these dates are usually informed at the beginning of the year. In some exceptions, they are changed through the year through laws
Here's the info on moveable holidays in Argentina (listed as "citation needed" on Wikipedia, but should be usable for now):

The "movable holidays" whose dates coincide with Tuesdays and Wednesdays will be moved to the previous Monday. Those that coincide with Thursday, Friday, Saturday and Sunday will be moved to the following Monday. Every employee is entitled to 15 paid public holidays and every year the government adds a few more holidays known as "bridge holidays" which means that a holiday last two days.

As per Thailand's case, "Bridge Holidays" can be declared in the special_holidays = { ... } section separately.
@celispahn @leandrorojas Is there an Argentinian calendar online anywhere with data from previous years that we can cross-check with on the bridge holidays pre-2020? Otherwise we can probably begin with data for 2020, 2021, 2022, 2023
The rule wikipedia described is ok  and it is also the Law ü§£  (Ley 27399, also mentioned at the bottom of https://www.argentina.gob.ar/interior/feriados-nacionales-2023)
I did find previous' years data, some in text form other as screen captures, let me know if you need translation or assistance:
2019: both from official sites
--> https://www.argentina.gob.ar/noticias/feriados-2019-conoce-el-calendario-completo
--> https://www.cultura.gob.ar/feriados-2019-en-argentina_7326/
2019: from a local news paper
--> https://servicios.lanacion.com.ar/app-mobile/feriados/2019
2018: from a local news paper
--> https://servicios.lanacion.com.ar/app-mobile/feriados/2018
2017: from local news paper, you get the idea
--> https://servicios.lanacion.com.ar/app-mobile/feriados/2017
hope this helps
PS: the link on 2021 you posted points to 2020
Thanks for the help, I'll try to get them implemented soon enough :)
I tried to change AR holidays according to Law 27399 in #968. @leandrorojas, please look, if you can. Currently it's in beta branch.
As a side note, it seems like the current Ley 27399 only moved to the next Monday for the ones that fall on Thur/Fri, not Sat/Sun as per the current logic stated on Wikipedia above. This results in myriads of errors when checking with the official calendar data, so I will open up the pull request soon once I've finished the current code revamps. @leandrorojas @KJhellico
@dr-prodigy This is now fixed with #988, should be safe to close down now.
Resolved in #988.

country variable undefined
holidays/holiday_base.py
       country = getattr(self, "country", None) or getattr( other, "country", None )
The "country" variable should probably be changed to "self.country".
Hi @Z223I
I don't think this is the case: country is in fact a local variable set to be returned at the end of the function, ie:
        return HolidaySum(
            years=(self.years | other.years),
            expand=(self.expand or other.expand),
            observed=(self.observed or other.observed),
            country=country,
            prov=prov,
        )

Could you experience any issue? In that case, please provide some proof code.
Thx a lot, cheers!
Closing, thx

How to install repo for develop
I want to do:
python3 setup.py develop
What to do for this repo?
In the root of this repo.
Use pip install . to install it as a "normal" package. Alternatively use pip install --editable . this will update the package as you make changes to the repo or pull new changes without you having to do a pip upgrade.
Hope this helps

NYSE Holidays
I wish to add holidays for the NYSE.  Should I refer to it as a Country, Providence, or State.  I wish to also do NASDAQ.
The NYSE and NASDAQ both have early close days like the day after US Thanksgiving.  How would you suggest I do that?
Thanks in advance!
Z223I
I wish to add holidays for the NYSE. Should I refer to it as a Country, Providence, or State. I wish to also do NASDAQ.

@Z223I thanks for the contribution!! dr-prodigy will give the definitive answer here, but below are my suggestions.
@dr-prodigy to keep with ISO standardization, I suggest we use ISO 10383 (the standard which "specifies a universal method of identifying exchanges, trading platforms and regulated or non-regulated markets as sources of prices and related information in order to facilitate automated processing"). These codes are at https://www.iso20022.org/market-identifier-codes.
Maybe we create a pseudo-country called "MIC" (for Market Identifier Code) and use the ISO 10383 operating MIC as the identifier, so that it would look like this:
nyse_holidays = holidays.MIC('XNYS')
nasdaq_holidays = holidays.MIC('XNAS')
Alternatively we can keep the market within the country it belongs to (as listed in ISO 10383), hoping that there is no collision with a ISO 3166-2 subdivision code (see #374), so that it would look like this:
nyse_holidays = holidays.US('XNYS')
nasdaq_holidays = holidays.US('XNAS')
Personally, I prefer option 1, not only because there's no risk of collisions, but also because it's one less implementation step for anyone using this package (i.e. all they need is the MIC, they don't have to keep track, or look up, where that exchange is located; plus markets, which are mostly electronic anyway, may relocate to a different country, e.g. post-Brexit or whatever, creating maintenance and implementation headaches).

The NYSE and NASDAQ both have early close days like the day after US Thanksgiving. How would you suggest I do that?

Ugh. @dr-prodigy any ideas?  That's actually really useful information!
@mborsetti That info looks really good.  I will wait for @dr-prodigy to also respond.
Thanks!!
Z223I
Maybe the short market days can be handled like "Holiday Observed".  I need to dive into your code.
@dr-prodigy I went with option 1.  Inherited from Holidays so it may be easily used for any country.
For "Short Trading Days", I put it in the name just like "Observed."
Now I will write some tests.
Thanks again,
Z223I
Hey there sorry, I've been off for quite a long time.. more and more difficult to find time for python-holidays!
First of all, thank you both.. I really like this initiative, and I agree with you: option 1 seems definitely the best to me too.
I opened a new beta course today.. I'll be waiting for your work @Z223I !
Thx again, cheers everyone!
dr-p
Any updates on this I think this would be a fantastic addition to an already incredibly useful package!
@JustinKurland

Any updates on this I think this would be a fantastic addition to an already incredibly useful package!

It follows, then, that a contribution would therefore be extremely fantastic!
Do you have some spare time to contribute?
@mborsetti I would love to help contribute, and will do, but at this precise moment I am particularly swamped. Will check in with a friend who has implemented something similar in an R package he developed to see where/how he is pulling this from and circle back to try and assist on this very thing. üôåüèª
Just released in beta thru #651 . Closing this, thanks! üëç

Easter in Canada not included ?
I can't seem to find Easter holiday in Canada
Why is Easter Monday only listed for QC?
        # Easter Monday
        if self.prov == "QC" and year >= 1867:
            self[easter(year) + rd(weekday=MO)] = "Easter Monday"
Fixed in beta. Thx both! üëç

Observeed dates being duplicated
When trying to create a list of holidays for more than 1 year and the holiday falls on a sunday the Observed holiday duplicates itself to the monday and the tuesday but only for the first year
If I do for a single year there is no issue.
Example
holiday_za = holidays.CountryHoliday("ZA", years=[2021]) returns the correct list of holidays
{
    "date": "2021-03-21",
    "holiday": "Human Rights Day"
  },
  {
    "date": "2021-03-22",
    "holiday": "Human Rights Day (Observed)"
  }

holiday_za = holidays.CountryHoliday("ZA", years=[2021,2022]) will duplicate any public holiday falling on a sunday for year 2021
  {
    "date": "2021-03-21",
    "holiday": "Human Rights Day"
  },
  {
    "date": "2021-03-22",
    "holiday": "Human Rights Day (Observed)"
  },
  {
    "date": "2021-03-23",
    "holiday": "Human Rights Day (Observed)"
Fixed by mborsetti.. closing, thx!

UK Prov needs adding
In the UK the holidays of England are not the same as Scotland for example so holidays are reading incorrectly for say England aas it is adding the holidays of everyone together.
Hi! If you look at the country table, it includes separate entries for 'England', 'Scotland', 'Wales' and 'Northern Ireland'. Use one of those as your "country" variable instead.
Just spotted this myself, turned on the media system thinking it was not a week day - public holiday in Scotland, not England, was using GB previously :)
Hi! If you look at the country table, it includes separate entries for 'England', 'Scotland', 'Wales' and 'Northern Ireland'. Use one of those as your "country" variable instead.

Thank you for the heads up, I must have missed the "England" listing expecting to see it as a region of the UK.
Cheers!

"vervangingsdag" in Belgian holidays
In Belgium there is a concept of a "vervangingsdag" (literally translated: "replacement day"); from the Federal Public Service Employment, Labour and Social Dialogue (translated using Google Translate):

And if a public holiday coincides with a Sunday or a normal day of inactivity?
To guarantee the employee ten public holidays, the law states that if a public holiday coincides with a Sunday or an ordinary day of inactivity in the company, he must be replaced. This "replacement day" must be determined on an ordinary day of activity in the company. This replacement day becomes a public holiday for the employees employed in the company. The number of hours that would have been worked on the replacement day is of no importance.

From looking at the Belgium source code, I don't think this concept is currently supported in holidays.
Is this something that holidays wants to support? If so, I'd be happy to implement it and make a PR. If I'm welcome to do so, how would you want this to be designed? e.g., should it be always-on, behind an optional argument to the class that's on by default, the same but off by default, etc.?
@leonoverweel Take a look at observed feature, I think it might be what you're looking for
@leonoverweel I confirm, as stated by @giladmaya, that observed feature (ie: move holiday to next workday if it falls on Sunday) is what is currently being supported in holidays.
If this doesn't apply, any PR is, surely, always welcome!
Thx in advance, best

Natal Day, Nova Scotia, Canada
I believe this one is missing.   Nova Scotia, Canada is observing the Civic Holiday on the 1st Monday in August, called Natal Day. I am not able to find what year it started to fall on the first Monday in August.  Natal Day is the official birthday of the province.
Hi,
I get back to this very old issue to clarify that national official holidays are currently the only scope for python-holidays, therefore Natal Day seems not suitable to be added.
Thx for your understanding, cheers!

Runing tests for Python gives attribute error
My apologies: I mistakenly raised the issue. Closing it

Holidays for Georgia
Georgian (not the USA state) holidays are missing and if possible I'd like to add Georgian holidays. I'll send PR when it will be ready :)
Thank you üëç

New Zealand announces a new public holiday
Something you may not be aware of is that a new public holiday has been announced recently in New Zealand.
https://www.rnz.co.nz/news/national/435789/prime-minister-jacinda-ardern-reveals-date-of-first-matariki-public-holiday
The first date it will occur is Friday 24 June 2022. My understanding at this time is that it will be a wandering holiday as it is based on the position of a specific constellation in the sky. A committee has been formed to determine future dates based on consensus over when the position of said constellation is in the correct place in a given year. I am not clear as of writing on the definition of "correct place".
There will be legislation introduced to parliament in due course, but we may need to automate a cultural committee :)
Date is set for 2022 Friday, June 24th (source). Looks like there will be a 30-year table of the dates coming soon.
I'm working on it, pull request coming soon.
The 30 years of dates have been published, but I am not sure where. This News article has the dates, but I would not classify it as canonical https://www.rnz.co.nz/news/national/445990/matariki-public-holiday-dates-for-next-30-years-announced
#499 pull request created.
I used the file published by the government here: https://www.mbie.govt.nz/assets/matariki-dates-2022-to-2052-matariki-advisory-group.pdf
I tried to calculate the dates using a formula but isn't having much success at the moment so just listing them for now
import datetime
from lunarcalendar import Converter, Lunar

for year in range(2022,2053):


  lunar = Lunar(year, 5, 23)
  solar = Converter.Lunar2Solar(lunar)

  startdate = solar.to_date()
  
  convert = [4,3,2,1,0,-1,-2] 
  matariki = startdate + datetime.timedelta(days=convert[startdate.weekday()])
  print(matariki)

This gives correct dates except for 2028, 2033, 2036, 2039, 2041, 2047 so need further study.
Yeah I suspect that there is not a python module for the Maori star calendar :)
I could't even find a Gregorian-Maori calendar online so that might be a bit hard.
PR by @36wish is in beta! Closing this, thanks everyone! üëç

Could not find a version that satisfies the requirement hijri_converter (from holidays)
We are facing this issues. after taking the latest holiday pypi library 0.10.5.2
"runError": "Run result unavailable: job failed with error message\n Library installation failed for library due to user error for Some(pypi {\n package: "holidays"\n}\n). Error messages:\njava.lang.RuntimeException: ManagedLibraryInstallFailed: org.apache.spark.SparkException: Process List(/databricks/python/bin/pip, install, holidays, --disable-pip-version-check) exited with code 1. ERROR: Could not find a version that satisfies the requirement hijri_converter (from holidays) (from versions: none)\nERROR: No matching distribution found for hijri_converter (from holidays)\n for library:PythonPyPiPkgId(holidays,None,None,List()),isSharedLibrary=false", "effectiveIntegrationRuntime": "DefaultIntegrationRuntime (East US)"
Hi,
I've just uploaded to PyPi a build for Python3.9 ( holidays-0.10.5.2-py3.9.egg ), which in fact was not there yet.
Pls let me know if it sorts this out, thx
Closing this, thx

hijri_converter import issue still appearing
I see there was https://github.com/dr-prodigy/python-holidays/pull/380, but it seems the import still happens in
https://github.com/dr-prodigy/python-holidays/blob/v0.10.5/holidays/utils.py.
$ pip install holidays==0.10.5
Processing /Users/kamidzi/Library/Caches/pip/wheels/7b/2f/68/d2c8e568166cd211e21111534228227d956680005ab35d6adc/holidays-0.10.5-cp36-none-any.whl
Requirement already satisfied: six in /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages (from holidays==0.10.5) (1.15.0)
Requirement already satisfied: python-dateutil in /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages (from holidays==0.10.5) (2.8.1)
Collecting convertdate
  Using cached convertdate-2.3.0-py3-none-any.whl (45 kB)
Collecting korean-lunar-calendar
  Using cached korean_lunar_calendar-0.2.1-py3-none-any.whl (8.0 kB)
Collecting pytz>=2014.10
  Using cached pytz-2021.1-py2.py3-none-any.whl (510 kB)
Processing /Users/kamidzi/Library/Caches/pip/wheels/8d/1a/e7/684cd77a99aac294f976db834fe613b5424f7c4d75ffb0b84d/PyMeeus-0.3.7-cp36-none-any.whl
Installing collected packages: pytz, pymeeus, convertdate, korean-lunar-calendar, holidays
Successfully installed convertdate-2.3.0 holidays-0.10.5 korean-lunar-calendar-0.2.1 pymeeus-0.3.7 pytz-2021.1
WARNING: You are using pip version 20.0.2; however, version 21.0.1 is available.
You should consider upgrading via the '/Users/kamidzi/.pyenv/versions/3.6.9/bin/python3.6 -m pip install --upgrade pip' command.
$ python -m holidays
Traceback (most recent call last):
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 183, in _run_module_as_main
    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 142, in _get_module_details
    return _get_module_details(pkg_main_name, error)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 109, in _get_module_details
    __import__(pkg_name)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/__init__.py", line 13, in <module>
    from holidays.countries import *
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/__init__.py", line 22, in <module>
    from .burundi import Burundi, BI, BDI
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/burundi.py", line 21, in <module>
    from holidays.utils import get_gre_date
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/utils.py", line 17, in <module>
    from hijri_converter import convert
ModuleNotFoundError: No module named 'hijri_converter'
Hi,
it should be fixed now and released as 0.10.5.1 on pypi.
Pls let me know, thank you very much!
Thanks, though I think there are still some remaining issues:
$ pip show holidays
Name: holidays
Version: 0.10.5.1
Summary: Generate and work with holidays in Python
Home-page: https://github.com/dr-prodigy/python-holidays
Author: ryanss
Author-email: ryanssdev@icloud.com
License: MIT
Location: /Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages
Requires: python-dateutil, six, convertdate, korean-lunar-calendar, hijri-converter
Required-by:
$ python -m holidays
Traceback (most recent call last):
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 183, in _run_module_as_main
    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 142, in _get_module_details
    return _get_module_details(pkg_main_name, error)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/runpy.py", line 109, in _get_module_details
    __import__(pkg_name)
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/__init__.py", line 13, in <module>
    from holidays.countries import *
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/__init__.py", line 45, in <module>
    from .israel import Israel, IL, ISR
  File "/Users/kamidzi/.pyenv/versions/3.6.9/lib/python3.6/site-packages/holidays/countries/israel.py", line 16, in <module>
    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \
ImportError: cannot import name 'lag_baomer'
This seems related to an old convertdate package (the name is present only from 2.3.0 on).
Not clear why the updated requirement is not enforced upon holidays update: in my last version I reviewed setup.py to require it:
    install_requires=['python-dateutil', 'six', 'convertdate>=0.2.3', 'korean_lunar_calendar', 'hijri_converter'],
Could you please double-check?
Thanks
Right, updating convertdate works. I think there is a typo in the install_requires. I've sent you a PR.
Gawrsh!! I will fix and release again. So unlucky release tonight! :(
Thx a lot
Hi,
it is now fixed now and released as 0.10.5.2 on pypi.
Thank you very much, closing this!

Require convertdate>=2.3.0
With convertdate before 2.3.0 the tests fail, because they try to import lag_laomer which is only available in convertdate>=2.3.0, see https://github.com/fitnr/convertdate/blob/dfb84724c45a6ae1feff887cf28a3765193508d3/HISTORY.rst#230
ERROR: holidays (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: holidays
Traceback (most recent call last):
  File "/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py", line 470, in _find_test_path
    package = self._get_module_from_name(name)
  File "/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py", line 377, in _get_module_from_name
    __import__(name)
  File "/build/holidays-0.10.5/holidays/__init__.py", line 13, in <module>
    from holidays.countries import *
  File "/build/holidays-0.10.5/holidays/countries/__init__.py", line 45, in <module>
    from .israel import Israel, IL, ISR
  File "/build/holidays-0.10.5/holidays/countries/israel.py", line 16, in <module>
    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \
ImportError: cannot import name 'lag_baomer' from 'convertdate.holidays' (/nix/store/ljdqivnkfbawyrxc2gqiq51lpymlqrs1-python3.8-convertdate-2.2.1/lib/python3.8/site-packages/convertdate/holidays.py)


======================================================================
ERROR: tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: tests
Traceback (most recent call last):
  File "/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py", line 436, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/wkw6fsjasr7jbbrlakxxpbiapa8hws42-python3-3.8.7/lib/python3.8/unittest/loader.py", line 377, in _get_module_from_name
    __import__(name)
  File "/build/holidays-0.10.5/tests.py", line 25, in <module>
    import holidays
  File "/build/holidays-0.10.5/holidays/__init__.py", line 13, in <module>
    from holidays.countries import *
  File "/build/holidays-0.10.5/holidays/countries/__init__.py", line 45, in <module>
    from .israel import Israel, IL, ISR
  File "/build/holidays-0.10.5/holidays/countries/israel.py", line 16, in <module>
    from convertdate.holidays import hanukkah, lag_baomer, passover, purim, \
ImportError: cannot import name 'lag_baomer' from 'convertdate.holidays' (/nix/store/ljdqivnkfbawyrxc2gqiq51lpymlqrs1-python3.8-convertdate-2.2.1/lib/python3.8/site-packages/convertdate/holidays.py)
Hi,
it should be fixed now and released as 0.10.5.2 on pypi.
Pls let me know, thank you very much!
LGTM.
I want to use holidays on a win32 2008 Server and now can not because of convertdate>=2.3.0 - I only get convertdate==2.2.2
any chance?
Holidays doesn't use convertdate since v.0.24.

Tests don't pass because of flake8 E501 line too long
Tests run on 0.10.4 and 0.10.5.
FAIL: test_flake8 (tests.TestFlake8)
Test that we conform to PEP-8.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/build/holidays-0.10.5/tests.py", line 35, in test_flake8
    self.assertEqual(self.report.get_statistics('E'), [])
AssertionError: Lists differ: ['1 E501 line too long (82 > 79 characters)'] != []

First list contains 1 additional elements.
First extra element 0:
'1 E501 line too long (82 > 79 characters)'

- ['1 E501 line too long (82 > 79 characters)']
+ []

----------------------------------------------------------------------
Ran 579 tests in 23.641s
Hi,
I'm trying to reproduce this issue, but no luck, either calling
flake8
directly and either via
coverage run --omit=*site-packages* tests.py TestFlake8
Please let me know if you have any further details, thank you very much!
It seems to happen here:
/build/holidays-0.10.5.2/holidays/__init__.py:15:80: E501 line too long (82 > 79 characters)

https://github.com/dr-prodigy/python-holidays/blob/cb875fb87e91f8c555966659bca1636519c47d6f/holidays/__init__.py#L15
And it seems you are not seeing this, because you have excluded this file, but somehow that exclusion doesn't work for us when running the tests.
https://github.com/dr-prodigy/python-holidays/blob/master/.flake8#L3
Oh I see.. that's pretty weird: flake8 is in fact instructed by .flake8 file to skip some warnings / files (most notably init.py), which works both in local and on Travis CI since a large number of past releases.
Fixing that long row is easy and I will do it (thank you for your details btw) but still, if .flake8 file is ignored for any reason, some other issues should than arise, such as:
./holidays/__init__.py:13:1: F403 'from holidays.countries import *' used; unable to detect undefined names

Any ideas?
No idea. Though the flake8 test has its own style guide, too. Not sure how that influences the .flake8 file.
Ok, np.. in the meantime, I released the fix on beta. Thx cheers

Newest package version 0.10.5 not working
The newest version (0.10.5) of the holidays package is not working. Trying to import the package results in a ModuleNotFoundError
>>> import holidays
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/alex/.venv/lib/python3.8/site-packages/holidays/__init__.py", line 13, in <module>
    from holidays.countries import *
  File "/home/alex/.venv/lib/python3.8/site-packages/holidays/countries/__init__.py", line 22, in <module>
    from .burundi import Burundi, BI, BDI
  File "/home/alex/.venv/lib/python3.8/site-packages/holidays/countries/burundi.py", line 21, in <module>
    from holidays.utils import get_gre_date
  File "/home/alex/.venv/lib/python3.8/site-packages/holidays/utils.py", line 17, in <module>
    from hijri_converter import convert
ModuleNotFoundError: No module named 'hijri_converter'
That's because setup.py needs to require https://pypi.org/project/hijri-converter/.
The packaging is prone to this error, because it lists the dependencies separately in .travis.yml
https://github.com/dr-prodigy/python-holidays/blob/79dfc55777111d5a42b1ff3a0ed241fbea79b1ae/.travis.yml#L9-L17
The python setup.py install should take care of at least the normal runtime requirements.
Hi,
it should be fixed now and released as 0.10.5.1 on pypi.
Pls let me know, thank you very much!
Thank you. It's working in 0.10.5.1. I will close this.

Collecting holidays for Singapore takes to long!
Hi folks!
I noticed that, in newest version of you package (10.4), simple code which I'm already using takes a lot of time and at the end it raise error. I noticed that it happens only for 'Singapore'. In version 10.3 and earlier (10.2 for sure) it works normally. Please take a look into that. The following code is used daily in the popular fbprophet python package.
Code below
Best regards,
Mateusz Serocki
Checked on Windows and Linux
Python version 3.7
holiday version 10.4
hijri-converter version 2.1.1 # after uninstalled that package the problem still occurs with additional warning messages to install that one

import holidays #(version 10.4)
import numpy as np

country='Singapore'
years = np.arange(1995,2045)
holiday_names = getattr(holidays, country)(years=years).values() # <- it raise error

I attached error logs
holidays error.txt
I fixed the slowness issue with the above PR #419 (it was due to an architecture choice I had not taken into consideration), but I cannot replicate the separate OverflowError("date out of range") error from hijri_converter. Please make sure you have the latest version of that library, i.e. 2.1.1 (https://pypi.org/project/hijri-converter/)
>>> import holidays # (version 0.10.4 with speed patch)
... import numpy as np
... country = 'Singapore'
... years = np.arange(1995, 2045)
... holiday_names = getattr(holidays, country)(years=years).values() # <- no error
... print(f'{len(holiday_names)=}')
len(holiday_names)=628
@mborsetti  thank you for help! Waiting till PR will on master.
Best regards,
Mateusz Serocki
Hi @mateuszserocki-kinesso , this has seen release last April. Closing, thx!

Always generates 2020 calendar for Korea
t = holidays.CountryHoliday("KR", years = [2021])
returns 2021 calendar and also 2020 calendar
Yes, 2020 holidays is always added like below.
Released in beta, thx üëç

The alternative holiday in Korea is wrong.
I watched wrong korea holiday.
I watched under url,  182th line.
https://github.com/dr-prodigy/python-holidays/blame/master/holidays/countries/korea.py
name = "Alternative public holiday"
alt_date = date(2020, OCT, 17)
self[alt_date] = name
Korean Alternative public holiday was August.
Could you change holiday?
Yes, I agree. Please check it.
Hi, released in beta. Thank you both, cheers

Help with adding holidays for Sri Lanka
Hi, I'd like to add holidays for Sri Lanka. I'm a noob but I figure I could use another country's holiday code as a guide/template.
Apart from fixed date holidays (like Christmas) there are some that don't have the same date. For example Poya is a very frequent holiday where the dates usually match the full moon. I'm not sure how this could be implemented.
Any ideas on how this can be done?
@batmanscode try using pylunar package

RuntimeError when using get_named for year 2022
When trying to get a named holiday such as "Thanksgiving" for 2022 a RunTime error occurs.
RuntimeError: dictionary changed size during iteration

(same error as closed issue #355)
reproduction: https://repl.it/@katscott/holidays2022#main.py
sample code:
holidays = holidays.US(years=[2022])
thanksgiving = holidays.get_named("Thanksgiving")
Additional information regarding this bug:
When you use 2022 with US holidays, New Year's Day is observed and "goes back" 1 day into 2021.
During the search for any holiday using get_named function, at some point the observed date is reached and triggers the code to expand data for 2021 which results in the runtime change of holiday lists
Fix released in beta. Thank you both üëç

upgrade "convertdate" to >= 2.3.0
Hi, Is it possible to check if upgrading to convertdate version >=2.3.0 does not have a big impact ?
Thanks
Hi! Great package, thanks for that. I would very much support an update on convertdate. The current version limits pytz to be < 2020 which makes the library run into dependency problems with other libraries
Awesome library for holiday searching. but current pytz < 2020 conflict with many current popular libraries.
convertdate<=2.2.0 is an issue for the Fedora package.
Reference: https://bugzilla.redhat.com/show_bug.cgi?id=1905176
According to convertdate changes (https://github.com/fitnr/convertdate/releases/tag/v2.3.0) there are no changes, which should affect holidays.
Why there is version requirement for convertdate<=2.2?
Limitation introduced in b57cb2d by @mmontel-wgs and released in 0.10.4 - 0.10.3 is not affected.
Maybe he can give an explanation.
The limitation has in fact been introduced due to convertdate 2.2.0 breaking changes (most notable ones: support for Python 2 dropped, some method signature changes, etc.), which prevented us to accept it immediately.
I decided (mmontel-wgs is my 2nd account) to release a last Python 2 compatible version (0.10.4), to remove this limit in the upcoming, now in beta, version. This of course required a "keep-back" for convertdate.
Pls refer to https://github.com/dr-prodigy/python-holidays#development-version for how to change your holidays lib to beta version until it gets finalized and released in master, thx.
@dr-prodigy Thanks for the explanation. Do you have any ETA on the next release?
hi @lociii in fact, no, I don't have set a date yet: usually I sum up a reasonable number of updates before releasing: in the meantime, for who needs bleeding edge updates, the beta branch is the way to go (no untested / unstable features on it, never).
https://github.com/dr-prodigy/python-holidays#development-version
Does this suit your needs?
Pls let me know, thx
That might work for an end user but not for a package depending on python-holidays.
I'd deeply recommend releasing a new version even if you haven't accumulated too many changes as the pytz < 2020 might be blocking some important updates on other packages.
We are having the same problem in NixOS packaging sadly. Please release a version supporting recent convertdate versions.
Hi,
I confirm I've just released v0.10.5 on master and pypi to solve the issues: please keep me posted on your status.
Thank you all for your interest and support.
Thanks! One issue came up: hijri_converter is missing in the list of dependencies.
Hi,
it should be fixed now and released as 0.10.5.2 [EDIT: was 0.10.5.1] on pypi.
Pls let me know, thank you very much!
Confirmed as fixed on other similar issue. Closing, thx üëç

self.country values seem inconsistent.
Hi, is there a particular reason that all the country classes use the two letter abbreviation for their self.country value except these four:

Ireland --> using Ireland
India --> using IND
Honduras --> using HND

Feels inconsistent and makes my life much harder. Wondering if this is a typo or is it by design?
Hi,
thank you for your support: requested fixes have been released in beta.
Best regards

Slice doesn't sweep years in the middle
Problematic code
import holidays
print(holidays.US()["2019-1-1": "2021-12-31"])
Expected result
Holidays in 2019, 2020 and 2021 should be listed.
[datetime.date(2019, 1, 1),
 ...
 datetime.date(2019, 12, 25),
 datetime.date(2020, 1, 1),
 ...
 datetime.date(2020, 12, 25),
 datetime.date(2021, 1, 1),
 ...
 datetime.date(2021, 12, 25)]

Actual result
Holidays in 2020 are not listed at all.
[datetime.date(2019, 1, 1),
 datetime.date(2019, 1, 21),
 datetime.date(2019, 2, 18),
 datetime.date(2019, 5, 27),
 datetime.date(2019, 7, 4),
 datetime.date(2019, 9, 2),
 datetime.date(2019, 10, 14),
 datetime.date(2019, 11, 11),
 datetime.date(2019, 11, 28),
 datetime.date(2019, 12, 25),
 datetime.date(2021, 1, 1),
 datetime.date(2021, 1, 18),
 datetime.date(2021, 2, 15),
 datetime.date(2021, 5, 31),
 datetime.date(2021, 7, 4),
 datetime.date(2021, 7, 5),
 datetime.date(2021, 9, 6),
 datetime.date(2021, 10, 11),
 datetime.date(2021, 11, 11),
 datetime.date(2021, 11, 25),
 datetime.date(2021, 12, 24),
 datetime.date(2021, 12, 25)]

Environment

holidays: 0.10.3
Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
Hi,
this behaviour is by design. Please refer to project documentation, thx
Thank you. I could find it.

Intermediate years are only shown if they are listed in the years parameter.

hebrew.to_jd_gregorianyear(...) cannot unpack non-iterable float object in python 3
Hi,
I am using fbprophet 0.7.1 and holidays 0.10.3 but since Nov 8th I am getting an error when trying to add holidays from Israel.
In holidays it is used hebrew module from convertdate.
`When
30 # Passover
31 name = "Passover I"
---> 32 year, month, day = hebrew.to_jd_gregorianyear(year, hebrew.NISAN, 14)
33 passover_start_dt = date(year, month, day)
34 self[passover_start_dt] = name + ' - Eve'
TypeError: cannot unpack non-iterable float object`
¬øIs this related to last convertdate 2.3 release of Nov 7th?
Hi,
yes, in fact it is so.
For this issue, we decided to temporarily keep convertdate back to 2.2.0: we'll then investigate the issue.
Workaround released (and reviewed again just now) on beta branch.
Thx
@dr-prodigy did you start working on this? if not, I'll be happy to
Just released in beta. Thank you very much for your good work! üëç

Holiday on Observed Holiday
In South Africa, when a holiday falls on an observed holiday the observed holiday should be moved on to the next available day

one of Korea Holidays is wrong
Hi, Thanks for holidays package.
Before I decide to use it, I had tested it with below code
for date, name in sorted(holidays.Korea(years=2020).items()):
print(date, name)
and I got this result below,
2020-01-01 New Year's Day
2020-01-24 The day preceding of Lunar New Year's Day
2020-01-25 Lunar New Year's Day
2020-01-26 The second day of Lunar New Year's Day
2020-01-27 Alternative holiday of Lunar New Year's Day
2020-03-01 Independence Movement Day
2020-03-02 Alternative holiday of Independence Movement Day
2020-04-30 Birthday of the Buddha
2020-05-01 Labour Day
2020-05-05 Children's Day
2020-06-06 Memorial Day
2020-08-15 Liberation Day
2020-09-30 The day preceding of Chuseok
2020-10-01 Chuseok
2020-10-02 The second day of Chuseok
2020-10-03 National Foundation Day
2020-10-09 Hangeul Day
2020-12-25 Christmas Day
The problem is '2020-03-02 Alternative holiday of Independence Movement Day' is wrong data.
Alternative holiday is only for "Lunar New Year's Day, Children's Day and Chuseok' in Korea.
There is no Alternative holiday for Independence Movement Day.
Hi,
in fact that's correct: a former alternative calculation was wrongly attributed to Independence Day.
Fixed and released in beta, thx for your support

Cameroonian holidays missing from holidays list PLUS other issues
I'm a stubborn newcomer!
I attempted creating cameroon's list by comparing with your Burundi's and Nigeria's. Ok, no problem. But since it was my first copy-and-pasting AND since I cannot use pip on my python 3.9 for a reason or another I'm calling for help! I do hope to go round pip if possible because it seem like it would complicate everything.
What is the NORMAL procedure for getting AND making the import work on coding? I got your HOLIDAYS file in the LIB section of my python 3.9, and I added my cameroon file next to in the COUNTRIES folder. then I'm working on this GWD.py which stands for getworkingdate - if you care to look or have time, i'll share it with you here - and it cannot import the holidays folder for some reason. I tried everything.
##gwd.txt

Thailand bank holidays missing from the country list
It would be really helpful if the Thailand bank holidays could be added into this package please.
Hi,
thanks for your interest in this project.
We understand your point, but unfortunately there's not been space for its development until now.
As usual, any contribution is welcome, thx!
PS: Marking this request as "help wanted"

Problem when checking a date with unknown year in a pandas series
Intuitively I'd think the following test should work.
But the only the first assertEqual is fine.
The second fails, because _populate was never called with the year 2026.
us = holidays.UnitedStates(years=[2025])
df = pd.DataFrame.from_dict({"date": [date(2025, 1, 1), date(2025, 1, 2)]})
self.assertEqual(df["date"].isin(us).tolist(), [True, False])
df = pd.DataFrame.from_dict({"date": [date(2026, 1, 1), date(2026, 1, 2)]})
self.assertEqual(df["date"].isin(us).tolist(), [True, False])

I changed the contains method of the HolidayBase class.
    def __contains__(self, key):
        if str(type(key)) == "<class 'pandas.core.series.Series'>":
            res = []
            for k in key:
                res.append(dict.__contains__(self, self.__keytransform__(k)))
            return res
        return dict.__contains__(self, self.__keytransform__(key))

Using this it kind of works...
But I don't think it's a nice solution.
Hi,
unfortunately, although probably working, I don't think we can accept this code, sorry.
If you could design a cleaner code to accomplish that (I'm no pandas expert) I will surely consider your improvement.
Thank you very much, cheers
Hi,
I agree, it's bad code...
This is the first time I'm writing something for an opensource project and I can't find a good solution.
Maybe it's better to just add a few lines to the README.
Something like:
df = pd.DataFrame.from_dict({"date": [datetime(2026, 1, 1), datetime(2026, 1, 2)]})
us = holidays.UnitedStates(years=df.date.dt.year.unique())
@sebastianfastert which pandas version are you using? I've tried your initial solution with pandas 0.24.0 and HolidayBase.__contains__ isn't triggered at all when using .isin therefore 2026 isn't expanded and the second test fails

Support ISO 3166-2 codes for subdivisions of countries
python-holidays only supports prov and state subdivisions, however states are subdivided into one or more from these categories:

cantons
commune
councils
counties
departments
dependencies
districts
divisions
emirates
entities
governorates
governorates
islands, groups of islands
L√§nder
administrations
municipalities
parishes
prefectures
provinces
rayons
regions
sectors
states
territories
towns
unitary authorities
voivodships
wards

Instead of expanding the types of subdivisions naming supported by this library, I propose adopting ISO 3166-2 (https://en.wikipedia.org/wiki/ISO_3166-2) which already standardizes all types of subdivisions into a non-overlapping namespace.
I envision being able to initialize holidays for the state of California in the USA (ISO 3166-2 code US-CA) as follows:
us_ca_holidays = holidays.US('CA'),
for the Emirate of Dubai as follows:
dubai_holidays = holidays.AE('DU'),
for the Aƒüsu rayon in Azerbajan as follows:
az-agu_holidays = holidays.AZ('AGU')
and so on.
@dr-prodigy  I can work on a pull request [with backward compatibility] if I know it's going to be utilized, but won't work on it otherwise.
Hey there @mborsetti
sorry this proposal went unnoticed until now, my bad!
This is definitely a great idea, which would provide a definitely higher flexibility in the config/init phase.. especially if coupled to .CountryHoliday('[CODE]').
As long as we provide compatibility with previous versions, I totally agree with your analysis and would really appreciate your improvement. In the meanwhile, I can help you out with the task, if you wish.
thx loads üëç
Released with #608 merge. Thx!

Wrong workday info for country HR
Today (Oct. 8, 2020) my alarmclock automation did not go off, because my workday sensor gave the wrong info (no workday). This day used to be a holiday in Croatia, but is not anymore.
binary_sensor:

platform: workday
country: HR
Hi,
fix merged in beta.. thank you very much @haseat and @mborsetti !
Cheers
dr-p

Support for Non-Country Holidays
Other entities have holidays, like your company and a commonly followed holiday schedule is the stock market holidays - many companies follow NASDAQ holidays.  And, guess who all don't want their python programs running on NASDAQ holidays - many companies!    Maybe this gets into the realm of a custom holiday that people can add themselves, though thousands care about the NASDAQ holiday calendar.  Nice work. Cheers
ECB holidays are already supported.
Can you provide authoritative list of NASDAQ holidays?
Marking closed, thx both, cheers

Good Friday 2019-04-19 is not a holiday
The US holiday of good friday 2019-04-19 is not recognized as a holiday.
>>> import holidays
>>> us_holidays = holidays.UnitedStates()
>>> "2019-04-19" in us_holidays
False
Nevermind apparently it's not a federal holiday but is recognized by some states.

Reduce mandatory packages bloat
I installed the package in a new machine and it installed the following seldom-used packages:
pymeeus, convertdate, korean-lunar-calendar
Any work to reduce (and/or standardize) the number of packaged installed would be helpful to combat package bloat.  For example, I have no need for Korean holidays yet I find myself having to install a package that, by its name, is required only for those type of holidays.
Hi Mike @mborsetti ,
answers:
pymeeus -> no reference on this package in holidays.. please double-check!
korean-lunar-calendar -> currently used for Korea and Vietnam (complex calculations, not an easy task to code it into holidays)
convertdate -> you just added a fallback for hijri-converter based on it.. I consider it out of this scope now :-)
Any ideas for the lunar calendar?
A bit off-topic but on v0.10.4 convertdate was pinned to version convertdate<=2.2.0 witch means that pytz was pinned to  pytz<2020
Hi, sorted out and released to beta with #406
Closing, thx!
I would also welcome to have less package bloat. One option often considered by other packages ist to add optionals like holidays[lunar] or holidays[full] for convertdate and other advanced converters.
I also guess that many people won't need the full set of possible conversions
Moving some deps into optional dependencies that you can choose to install only if you need them would indeed be nice!
@dr-prodigy This should probably be reopened to inspire someone to produce a PR
Hi @mborsetti + everyone!
I definitely welcome this idea but, as already shared, holidays itself relies on a pretty limited number of dependencies.
Unfortunately, some of those (very often related to specific countries / cultures) require quite a large number of other dependencies, thus introducing some apparently unnecessary bloat.
Point is: in order to retain support for all the countries we currently do + provide test coverage for all of them, holidays package definition needs to require those dependencies.
A possible solution I have to defeat this constraint could be spinning off some countries and creating a new library like holidays-extras, holidays-lunar or so, depending in turn on holidays + all those usually unnecessary deps.. but I don't feel this as a good choice, because it would have huge impacts on every project currently using holidays.
@MRigal @stianjensen @mborsetti any other idea to sort this out?
Thx everyone üëç
https://creatronix.de/pip-optional-dependencies/
I think this can be solved with extras_require so that people who need all the calendars can install holidays[extras].
Hello @dr-prodigy!
I agree with @stianjensen:  https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies is a great tool for this use case.
Specifically:

We can target the dependencies that cause the most bloat and segregate them as optional dependencies to be installed as e.g. holidays[lunar] or holidays[islamic] or holidays[lunar,islamic] or whatever they turn out to be;
A small amount of code would need to be added to handle import failures with an explanatory error (e.g. "Could not import korean-lunar-calendar; please install using pip install -U holidays[korea]" or whatever the case may be).
No changes would be required for testing other than for this purpose we would install dependencies from a new requirements_test.txt file containing all dependencies, including optional ones;
The documentation would need to be updated, and the name of optional dependencies added to the relevant countries.

I wish I had time to volunteer to work on this at the moment, but sadly I don't.
This sounds very promising @stianjensen @mborsetti thank you both!
In fact in the past we managed similar import failures to back-support Python 2.. the same handling could apply to those cases.
It doesn't seem to be a very complex work per se, but it requires some structured effort on every side and level of the project (package definition / structure, country-level code, tests, doc).. I will think about it! If anyone is eager to contribute, it would be greatly appreciated! üëç
I guess this can be closed as we've reduced the runtime dependency list to a single package.
Truly an amazing job!
üëèüëèüëèüëè
(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)
üëç üëç üëç üëç

(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)

I believe korean-lunar-calendar was eliminated by @KJhellico in https://github.com/dr-prodigy/python-holidays/pull/1148
üëç üëç üëç üëç

(P.S. technically the dependencies are two, korean-lunar-calendar and python-dateutil, but the second one is widely installed.)

I believe korean-lunar-calendar was eliminated by @KJhellico in #1148

Ah, yes! The change is still in beta, so missed it.

Chinese holidays?
Is there a script for Chinese holidays in this library? If not, is there a reason why? as it's one of the biggest economies and thus this data is quite relevant in many fields.
It's open source.  You're welcome to contribute it, and thanks in advance!
Hi,
thanks for your interest in this project.
In fact, Chinese holidays, due to their peculiar language/alphabet and regulations, are clearly a pretty complex task.
Therefore (and due to lack of contributors) there's not been space for its development until now.
As already stated any contribution is welcome, thx!
dr-p
EDIT: marking this request as "help wanted"
I'm a Chinese,I want to help complete this work„ÄÇCan you give me some information and tell me where to start„ÄÇ
@HomeIntelligentCube if you can help discribe logic that is needed in order to determine if a given day is a holiday in China then it could be perfect. Alternatively take a look at the country files in https://github.com/dr-prodigy/python-holidays/tree/master/holidays/countries for how logic is coded up for different countries.
I found the following holiday package for javascript, which has Chinesse holidays: https://github.com/commenthol/date-holidays/blob/master/data/countries/CN.yaml which could be an inspiration.
I have a pull requiest on this issue #515
@tserekh hi, your PR is now merged in beta.. thank you very much for your support! üëç

Appearance of the object is that it's an empty dict, with a custom repr that would be solved
If you want I could make a PR that would look like the following:
>>> import holidays
>>> us_holidays = holidays.UnitedStates()
>>> us_holidays
holidays.UnitedStates(country="US", prov=None, state=None)
Wouldn't this be nice? Let me know if I should make the PR
Hi @kootenpv
thank you for your interest in python-holidays.
Being sincere, even if I consider this nice as somehow / sometimes useful, on the other hand it would impact on the current library behaviour, so due to the wide usage of it, I don't think we can release it as you suggest.
If you think of a different interface to access the current initialization state (possibly regarding the loaded years too), it would surely be very appreciated / merged.
Thanks again, cheers !
Hi @dr-prodigy! Thanks for this awesome library! I recently found it while looking for a solution to an ugly banking-related problem and I appreciate having an elegant solution to it.
I'd like you to reopen the issue, because I agree with @kootenpv's point. Here's why:
I found this library looking for a list of holidays in Poland. I didn't expect it to work, but got intrigued by hundreds of Github stars so I tried it out. So I flick through the README, pip install it, import it and try it out in my own way:
>>> import holidays
>>> holidays.Poland()
{}

So... an empty dictionary? "That's not a way to tell me that Poland isn't supported!" - I thought. So I looked at the README again, saw that Poland was marked as "None" and almost moved along, assuming it's just yet another popular Python library that doesn't seem to work for my use case. Curious why it's the case though, I looked at the code and found that it seems to make sense. So I tried another approach:
>>> d = {}
>>> import holidays
>>> holidays.Poland._populate(d, 2021)
>>> d
{datetime.date(2021, 1, 1): 'Nowy Rok', datetime.date(2021, 1, 6): '≈öwiƒôto Trzech Kr√≥li', datetime.date(2021, 4, 4): 'Niedziela Wielkanocna', datetime.date(2021, 4, 5): 'Poniedzia≈Çek Wielkanocny', datetime.date(2021, 5, 1): '≈öwiƒôto Pa≈Ñstwowe', datetime.date(2021, 5, 3): '≈öwiƒôto Narodowe Trzeciego Maja', datetime.date(2021, 5, 23): 'Zielone ≈öwiƒÖtki', datetime.date(2021, 6, 3): 'Dzie≈Ñ Bo≈ºego Cia≈Ça', datetime.date(2021, 8, 15): 'Wniebowziƒôcie Naj≈õwiƒôtszej Marii Panny', datetime.date(2021, 11, 1): 'Uroczysto≈õƒá Wszystkich ≈õwiƒôtych', datetime.date(2021, 11, 11): 'Narodowe ≈öwiƒôto Niepodleg≈Ço≈õci', datetime.date(2021, 12, 25): 'Bo≈ºe Narodzenie (pierwszy dzie≈Ñ)', datetime.date(2021, 12, 26): 'Bo≈ºe Narodzenie (drugi dzie≈Ñ)'}

Yay! Maybe I can use it after all then! You're probably shaking your head in disagreement... rightfully so, because I'm supposed to do something like datetime.date(2021, 1,1) in holidays.Poland(). To which I'd normally reply "but what's the point checking if I already got an empty dict...?"
So that's basically the problem. The __repr__ is misleading and should be changed. Because right now if you come with a lesser known country such as Poland, you're kind of used to libraries not working and you might just move along, humbly kind of agreeing with that assumed neglect.
Here are the solutions I propose:

like @kootenpv suggested, make __repr__ actually return a string that doesn't suggest it's a plain dict,
if you assume people rely on this behavior of __repr__ (which they probably shouldn't) and you want to be nice to them, throw a DeprecationWarning that this __repr__ is deprecated and you'd rather say it's an instance of holidays.countries.poland.Poland or something,
explicitly show in README that this {} is misleading and __contains__ is overloaded. Showing it in an interactive example is better than writing it as a part of text as some folks scan through dozens of libraries and might just omit something that doesn't seem to work,
expose a regular is_holiday() method, because mixing a misleading __repr__ with overloaded __contains__ might be just a bit too much magic.
Hi @d33tah
first of all thank you for your interest and time spent in explaining your point.
Although:

the doc provides Available Countries paragraph.. why in the world we should list unimplemented countries there? :-)
Examples paragraph starts with 4 rows of code explaining how to use the sw.. why not giving them a quick glance before blaming the sw for not working, and/or tinkering with the internals of the lib? :-)

I must admit anyway that the library, even being smart and convenient in its usage, isn't self-explanatory.
On a second thought, I came to the decision of reviewing both __repr__ and __str__ methods to return clearer / more useful information.
In order to preserve debug-friendliness, the reviewed values will be return only on uninitialized state, while for initialized objects the usual list of holiday dates will be returned.
I will soon release a fix for this, thank you again üëç
Done and pushed on beta.. cheers üëç
Ps: I was forgetting.. @d33tah please let me know your thoughts, thanks!
@dr-prodigy yup! That seems to solve the problem :) And once again, thanks for implementing this library!
Yay! :-)
And if you wish, I would really appreciate you collaborating to improve Poland holidays, or anything else in the lib.. we always need passionate and experienced coders to improve python-holidays!
Thanks a lot again, cheers! üëç
dr-p
@dr-prodigy I took a quick look at the Polish code, it seems to look fine. If there was any potential problem, I'd be looking for it in those two lines:
        self[e + rd(days=49)] = "Zielone ≈öwiƒÖtki"
        self[e + rd(days=60)] = "Dzie≈Ñ Bo≈ºego Cia≈Ça"

According to Polish Wiki, Zielone ≈öwiƒÖtki should always be on Sunday and Dzie≈Ñ Bo≈ºego Cia≈Ça on Thursday. Might be worth checking if that's actually the case during the coming and previous years.
There are also some historical dates not implemented, but I'm not sure how important it is to be able to reliably date back to before 1989.

How to get holidays 
No description provided.

MX holidays incorrect for "Benito Juarez's Birthday (observed)"
For MX, seems like Benito Juarez's Birthday is incorrect.
In 2021 it's March 21. But there are TWO instances of "Benito Juarez's Birthday (observed)", one on March 15 and one on April 30.
For MX in 2022, Benito Juarez's Birthday does not appear at all, and instead we again have TWO instances of "Benito Juarez's Birthday (observed)", one on March 21 and one on May 2.
In 2023, we again have "Benito Juarez's Birthday" on Tuesday March 21 and "Benito Juarez's Birthday (observed)" on Monday March 20.
Thanks for the report.
Am not sure why the package reports both the observed and the "base" (March 21) holiday, and am not changing this behavior until I hear from @dr-prodigy .
However, I have made a PR to fix the bug that led to the extra "Benito Juarez's Birthday (observed)" in 2021 as #377
Hi, thank you. This issue has been solved with @mborsetti 's work on #377
Closing, thank you both!

US Holidays crashes for 2022
Running the package for holidays.UnitedStates(years=2022) will result in the following errors, works for every other year
Out[27]: Traceback (most recent call last):
File "/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/core/formatters.py", line 224, in catch_format_error
r = method(self, *args, **kwargs)
File "/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/core/formatters.py", line 702, in call
printer.pretty(obj)
File "/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py", line 377, in pretty
return self.type_pprinters[cls](obj, self, cycle)
File "/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py", line 601, in inner
for idx, key in p._enumerate(keys):
File "/Users/pm/.conda/envs/MRA/lib/python3.7/site-packages/IPython/lib/pretty.py", line 280, in _enumerate
for idx, x in enumerate(seq):
RuntimeError: dictionary changed size during iteration
Hi,
thank you for reaching out.
In your stack trace there is no reference to holidays code (which seems to exclude issues depending on the library).. would you please provide some additional information?
Thx
dr-p

MLK still causes confusion at the state level
If multiple holidays occur on the same day, they are separated with a ,. This issue was fixed for Martin Luther King, Jr. Day by removing the comma (#295), however for Idaho the issue still exists:
https://github.com/dr-prodigy/python-holidays/blob/02d5d510202a02471cd0a939a11525cf02ca115c/holidays/countries/united_states.py#L107
I suggest removing the comma here as well. Or, in case this issue arises in other countries, maybe change the delimiter to a semicolon?
Originally posted by @raffg in #295 (comment)
Fixed and released in beta, thanks
dr-p

Northern Ireland should be NorthernIreland
Hey,
in the documentation the country Northern Ireland is mentioned. However, using this string results in the error

KeyError: 'Country Northern Ireland not available'

Using NorthernIreland however works. I believe, it would be preferable to adjust the documentation to reflect this behaviour, i.e. remove the space.
Many thanks!
Richard
Hi,
just fixed and released in beta.. thank you!
Cheers
dr-p

pop_named() sometimes generates an exception
This simple code block generates an exception when I try to pop "Columbus Day" (last line):
from datetime import date
  
import holidays

us_holidays = holidays.CountryHoliday('US', prov=None, state='CA', years=2022)

print(us_holidays.get('2022-10-10').format("%s"))

us_holidays.pop_named("Columbus Day")

The exception is dictionary changed size during iteration, and it seems to be related to popping elements out of a dictionary while you're iterating through it: https://stackoverflow.com/questions/11941817/how-to-avoid-runtimeerror-dictionary-changed-size-during-iteration-error.  The element to be popped isn't actually removed.
I'm far from a competent Python programmer, but iterating over list(self) seems to solve the problem for me - no exception, and the item is removed properly:
    def get_named(self, name):
        # find all dates matching provided name (accepting partial
        # strings too, case insensitive), returning them in a list
        return [key for key in list(self) if name.lower() in self[key].lower()]
Thank you @rccoleman + @mborsetti ! üëç Merged on beta.

Revisit #211 to include FR for France
This is an appeal to reconsider the request in #211
Started using this library and I really like it, but this one exception to the iso3166 standard is most unexpected. I'll skip a lengthy opinion on the value of standards and go directly to my question: if there was a pull request to adhere to iso3166, would it be considered? Or would that be wasted work because of reasons (backwards compatibility or anything else)?
Thanks,
rfm.
Two-letter standards would be heavily appreciated. Non-compatibility with certain countries is surprising, to say the least ;) Thank you very much!

Would it be possible to download all a country's holidays, including those of the states/provinces?
Hi, thank you for creating this. It has been really useful.
What I was wondering: would it be possible to download all a country's holidays, including those of the states/provinces. E.g. through enabling a states='all' or prov=[AB, BC, MB]?
Thanks again and regards, Eduard
Not that I can think of. Just create a loop to pull one state/province at a time.
Unfortunately, due to the project structure, this is not currently possible.
On the other hand, I confirm the solution from @mborsetti is perfectly adequate, yet easy to implement.
Thank you both, best regards
dr-p

UK bank holiday first monday in august is only scotland
Hi,
the UK gov.uk website (https://www.gov.uk/bank-holidays) shows ONLY Scotland has the first monday in august as a bank holiday
england and northern ireland dont have them as a bank holiday, only scotland does!
i wondered why my home-assistant was showing today as it wasnt a workday?
turns out because it was a work day, its just the holidays module calculates it wrong!
IGNORE:
set the country to 'England' instead of 'UK'
works a treat üëç

[Question] Tooling changes
As promissed in https://github.com/dr-prodigy/python-holidays/issues/338#issuecomment-662592391 I'm working on a PR to change the CI from travis to github actions and also add CD.
Since you liked the idea of using bump2version, for releas process.
I was wondering if would also be interested in some other changes:

Autoformat code with black, so formatting code to look nice is a no brainer
Add  pre-commit to run back and flake8 on commit, like that  there won't be commits like fix flake8 which I saw a lot on other projects
Style check the tests with flake8, IMHO tests should also comply with styling rules
Use pytest as testrunner, pytest is more prowerful (and gives prettier output) than good old unittest and would also allow to restructure the tests to mimic the projects structure, which again would make it easier to find corresponding tests
Use tox so contributors can tests multiple python version locally
Also, since the coveralls action doesn't support xml reports, I would use codecov instead.
Nevermind the python client for coveralls finally supports github actions.
This would be so nice!
We are on the way to release this soon.. Closing this question, thx! üëç

List with "Available countries" is wrong for 2020
I took a list of countries and checked "Available countries" with the command
make_holidays_df([2020],  country)



where: country = 'Latvia' or  'LV' or 'LVA'...

Results:

Countries that are on this list, but their holidays are not available


['Burundi', 'Latvia', 'Morocco']


Countries that are not on this list, but their holidays are available


['China', 'Indonesia', 'Philippines', 'Thailand']


A list of country codes, the holidays of which are available, but it is difficult to find them there because of incorrect names (not according to ISO, see pycountry):


['DO', 'GB', 'KR', 'NZ', 'RU', 'US', 'ZA']


There is a problem with short country codes (according to ISO):


there are 'France', 'FRA', 'Honduras', 'HND', 'Turkey' but there are not 'FR', 'HD', 'TR', TUR'.

Please correct it.
I add my vote to be 100% ISO 3166-1 (alpha-2) code compliant.  I don't think there's much use of the alpha-3 codes so I'd just drop them all; otherwise they also need to be present for all countries.
I fixed all these problems and added 5 new countries (Europe). But the holidays' format doesn't fit me for solving the coronavirus problem (I found a bug in Prophet and suggested that to
Prophet team makes changes to their code, but they refused and offered to change the parameters of the library "holidays" - see issue). I decided not to beg anyone and made my dataset in Kaggle. It doesn't contain all these errors, it is adapted to the coronavirus task, and I plan to develop it further (for more countries). You can take and carry on to "holidays" all the information that you think is necessary. Good luck!
Thank you! Good luck to you too! üëç

Unable to install version 0.10.3
For version 0.10.3 the uploaded files on PyPi only have a sdist for macos, this prevents installation on other operation systems.
Could you upload a general tarball as it was done before.
Thanks a lot
I have the same issue, on Windows 10 I managed to install it only with:
pip install --upgrade https://github.com/dr-prodigy/python-holidays/tarball/master
Using the normal installation I get the 0.10.2 version.
@dr-prodigy If you are interested I could make a PR that sets up github actions as CI+CD, so it will build and deploy automatically when you push a tag.
Hi,
unfortunately, in fact, PyPi has changed its behaviour, and now doesn't accept multiple source packages anymore.
Now it should be fixed (I've quit macos version in favour of the standard one), please confirm thank you! üëç
On the other hand, it would be really interesting to add CI+CD to the project: I would highly appreciate any help on this, thank you @s-weigand ! I'm at disposal for clarifications / suggestions.
Cheers,
dr-p
@dr-prodigy I can confirm that it works on Linuxs, Windows and MacOS, thanks a lot üòÑ
I will make a PR with github actions CI+CD workflow this week.
For managing versioning I use bump2version, with this (+CD) a new release is as easy as two command:
$ bump2version major|minor|patch
$ git push --follow-tags
Would you want to use that too?
Hi @s-weigand
great to know everything is in shape now thx!
Bump2version is very interesting too üëç
So yes please, let's work on it too, thank you very much! Please let me know if I can help you in any way.
Cheers
dr-p

Add Romania holidays
Month
Day
Name
Comment




1
1
Anul Nou
¬†


1
2
Anul Nou
¬†


1
24
Ziua Unirii   Principatelor Romane
¬†


4
17
Vinerea Mare
Use orthodox Easter calculator here for the Friday before Easter


4
19
Paste Ortodox
Use orthodox Easter calculator here for first day of Easter


4
20
Paste Ortodox
Use orthodox Easter calculator here for second day of Easter


5
1
Ziua Muncii
¬†


6
1
Ziua Copilului
¬†


6
7
Rusalii
Use orthodox Easter calculator here for first day of Orthodox Pentecost


6
8
Rusalii
Use orthodox Easter calculator here for second day of Orthodox Pentecost


8
15
Adormirea   Maicii Domnului
¬†


11
30
Sfantul Andrei
¬†


12
1
Ziua Nationala   a Romaniei
¬†


12
25
Craciunul
¬†


12
26
Craciunul
I prepared romania.py file as well (easy adaptation from Greece to overcome calculated dates).
romania.zip
Please also update the Splunk App accordingly. Thanks.
Hi,
thank you for your interest and support in python_holidays.
I have to point out that, although very appreciated, your work is not needed anymore, since I've just merged the support for Romania a few days ago, as proposed in a PR by dorianm (pls check beta branch).
If you still would like to help, I would then suggest you to double-check its correctness (although I'm pretty sure it's a very good job), and in case, apply fixes / improvements. Would you?
PS: I don't know nor have any control on "Splunk App", sorry!
Thanks, best regards
dr-p
Thanks, I will review as proposed, did not notice the beta branch update :)
I can confirm, the beta implementation is better than my own work. Thanks
Okay! Closing this, thank you very much :-)
Cheers
dr-p

Missing Swiss holidays
Hi,
The following Swiss holidays are missing:

2nd of January
1st of May
26th of December

See here:

https://vschweiz.ch/feiertage-schweiz/
https://de.wikipedia.org/wiki/Feiertage_in_der_Schweiz
Thanks for your input!
According to the code:

2nd of January is a holiday in cantons 'AG', 'BE', 'FR', 'GL', 'GR', 'JU', 'LU', 'NE', 'OW', 'SH', 'SO', 'TG', 'VD', 'ZG', 'ZH'
1st of may is a holiday in cantons 'BL', 'BS', 'JU', 'NE', 'SH', 'SO', 'TG', 'TI', 'ZH'
26th of December is a holiday in cantons 'AG', 'AR', 'AI', 'BL', 'BS', 'BE', 'FR', 'GL', 'GR', 'LU', 'NE', 'NW', 'OW', 'SG', 'SH', 'SZ', 'SO', 'TG', 'TI', 'UR', 'ZG', 'ZH'

This matches what's in Wikipedia.
Did you request the holidays for a specific Canton?  The code currently defaults to none (i.e. to reporting only holidays that are National in scope)
Hi, thanks for your comment. You are right, these are already properly defined in the code for the respective cantons. I was under the false impression that these three dates were national holidays where in fact it depends on the canton. I'll close the issue accordingly.

Iberian Peninsula dataset that can be easily adjusted to other countries
If you find it relevant, I have used two different approaches to build my own Holidays dataset for the Iberian Peninsula.
They can be easily adjusted to consider other countries/regions.
The scripts are available on this repo, on GitHub.
‚Ä¢ In this one, I have added the holidays dates manually.
‚Ä¢ In this one, I am taking advantage of Facebook Prophet.
Hi,
fbprophet in fact depends on python-holidays:
https://github.com/facebook/prophet/blob/master/python/requirements.txt
Cheers,
dr-p

Vietnam / South Korea initialization Bug
Running holidays.CountryHoliday(country, years=years) for countries like Vietnam and South Korea do not work, because the initialization function for those countries call the parent class init before creating a koreal_cal attribute, e.g.:
        self.country = "VN"
        HolidayBase.__init__(self, **kwargs)
        self.korean_cal = KoreanLunarCalendar()
The parent class calls the _populate method which depends on the korean_cal attribute raising an AttributeError.
Really minor issue, easy fix would be:
        self.country = "VN"
        self.korean_cal = KoreanLunarCalendar()
        HolidayBase.__init__(self, **kwargs)
WFM:
>>> import holidays
>>> a = holidays.CountryHoliday("VN", years=2020)
>>> b = holidays.VN(years=2020)
>>> a
{datetime.date(2020, 1, 1): "International New Year's Day", datetime.date(2020, 1, 24): "Vietnamese New Year's Eve", datetime.date(2020, 1, 25): 'Vietnamese New Year', datetime.date(2020, 1, 26): 'The second day of Tet Holiday', datetime.date(2020, 1, 27): 'The third day of Tet Holiday', datetime.date(2020, 1, 28): 'The forth day of Tet Holiday', datetime.date(2020, 1, 29): 'The fifth day of Tet Holiday', datetime.date(2020, 4, 2): 'Hung Kings Commemoration Day', datetime.date(2020, 4, 30): 'Liberation Day/Reunification Day', datetime.date(2020, 5, 1): 'International Labor Day', datetime.date(2020, 9, 2): 'Independence Day'}
>>> b
{datetime.date(2020, 1, 1): "International New Year's Day", datetime.date(2020, 1, 24): "Vietnamese New Year's Eve", datetime.date(2020, 1, 25): 'Vietnamese New Year', datetime.date(2020, 1, 26): 'The second day of Tet Holiday', datetime.date(2020, 1, 27): 'The third day of Tet Holiday', datetime.date(2020, 1, 28): 'The forth day of Tet Holiday', datetime.date(2020, 1, 29): 'The fifth day of Tet Holiday', datetime.date(2020, 4, 2): 'Hung Kings Commemoration Day', datetime.date(2020, 4, 30): 'Liberation Day/Reunification Day', datetime.date(2020, 5, 1): 'International Labor Day', datetime.date(2020, 9, 2): 'Independence Day'}

Can you better explain, please?
Thanks a lot
dr-p

Missing Holidays in Spain
If we run the following script to analyze the holidays in Spain for the year 2015
from datetime import date
import holidays
for date, name in sorted(holidays.ES(years=2015).items()):
    print(date, name)

We get the following output:

2015-01-01 A√±o nuevo
2015-01-06 Epifan√≠a del Se√±or
2015-08-15 Asunci√≥n de la Virgen
2015-10-12 D√≠a de la Hispanidad
2015-11-01 Todos los Santos
2015-12-06 D√≠a de la constituci√≥n Espa√±ola
2015-12-08 La Inmaculada Concepci√≥n
2015-12-25 Navidad

However, some dates are missing, such as:
"D√≠a del Trabajador" month=5, day=1
"Viernes Santo", which is equivalent to Easter-2 days.
Hi,
thank you for your interest in python_holidays.
About "D√≠a del Trabajador", WFM:

2015-01-01 A√±o nuevo
2015-01-06 Epifan√≠a del Se√±or
2015-05-01 D√≠a del Trabajador
2015-08-15 Asunci√≥n de la Virgen
2015-10-12 D√≠a de la Hispanidad
2015-11-01 Todos los Santos
2015-12-06 D√≠a de la constituci√≥n Espa√±ola
2015-12-08 La Inmaculada Concepci√≥n
2015-12-25 Navidad

About "Viernes Santo", it is not a general holiday in Spain. If you initialize prov properly, you'll get it right (along with "Jueves Santo"):
from datetime import date
import holidays
for date, name in sorted(holidays.ES(prov='MD', years=2015).items()):
    print(date, name)


2015-01-01 A√±o nuevo
2015-01-06 Epifan√≠a del Se√±or
2015-03-19 San Jos√©
2015-04-02 Jueves Santo
2015-04-03 Viernes Santo
2015-05-01 D√≠a del Trabajador
2015-05-02 D√≠a de Comunidad De Madrid
2015-08-15 Asunci√≥n de la Virgen
2015-10-12 D√≠a de la Hispanidad
2015-11-01 Todos los Santos
2015-12-06 D√≠a de la constituci√≥n Espa√±ola
2015-12-08 La Inmaculada Concepci√≥n
2015-12-25 Navidad

Please let me know, thank you
dr-p

Holidays in Chile
Hi.
There are some mistakes in Chile's holidays:

Nov 08 is "Asunci√≥n de la Virgen"
June 29 and October 12' are floating holidays (if it happens on Tuesday, Wednesay or Thursday, the holiday is the preceding Monday. If it happens on Friday, the following Monday is holiday)
HolySaturday is holiday ('Semana Santa (S√°bado Santo)  [Holy day (Holy Saturday)]')
There are 2 localizated holidays, The main administrative division is te region. The ragion codes are:  'AI', 'AN', 'AP', 'AR', 'AT', 'BI', 'CO', 'LI', 'LL', 'LR', 'MA', 'ML', 'NB', 'RM', 'TA', 'VS'.
The localizated holidays are:
'AP'; {June 7, "Asalto y Toma del Morro de Arica [Assault and Capture of Cape Arica]",}
'NB': {August 20, "Nacimiento de Bernardo O'Higgins [Nativity of Bernardo O'Higgins]"}

Sources:
https://en.wikipedia.org/wiki/ISO_3166-2:CL
https://feriados.cl/
https://feriados.cl/leyes.htm
https://en.wikipedia.org/wiki/Public_holidays_in_Chile
Thanks for the contribution!  I created pull #373.

The correct date for Asunci√≥n de la Virgen is 15 AUG (see law 2.977) and was already in the code
Confirmed and implemented (law 19.668, http://www.leychile.cl/Navegar?idNorma=160270)
Confirmed and implemented (Law 2.977)
Arica y Parinacota holiday confirmed with https://feriados.cl/index.php and Law 20.663 (implemented using the correct naming); similarly for √ëuble holiday Law 20.678
Thank you both! üëç Merged on beta.

Get date by holiday string
Hello! I feel like this is a dumb question but am just not seeing anything about it in the readme.
Is there a method that supports something like us_holidays.get('Thanksgiving')?
For example if I wanted to add the day after Thanksgiving to my custom calendar, I will need to first get that holiday, which feels like an odd thing to do manually with a library that handles holidays -
class MyCal(holidays.UnitedStates):
    def _populate(self, year):
        holidays.UnitedStates._populate(self, year)
        # Add Friday after Thanksgiving
        thanksgiving = date(year, 11, 1) + rd(weekday=TH(+4))
        thanksgiving_friday = thanksgiving + rd(days=1)
        self[thanksgiving_friday] = 'Thanksgiving Friday'

(this is just an example, I know I can get the day other ways)
I just added this to my new module, holidays_plus:
https://github.com/samtregar/python-holidays-plus
Hi,
thank you for your interest in holidays library.
I've added get_named(key) method, receiving a complete or partial string, which will be checked against all currently available holidays (ie: depending on initialization), applying a case insensitive match.
Results are returned in a list containing all matched dates.
Pushed on beta branch, thank you again, cheers!
dr-p
Excellent - this will make implementing pop_named() in my module much simpler - unless you'd like to take that suggestion now too?  There's a closed PR you could use!  :)
Oh and I see you did that.  Awesome all around - thanks!
@samtregar Glad to be helping! Sorry for getting there a little late, but better late than never.. :)

Failing to get non-mutual german state holidays 
so I run this-> holidays.DE(state= 'BY', years=2020). This is bavaria and I still get only the mutual holidays in Germany. How can I get the holidays per state?, is there something I am doing wrong?
Hi,
when you wish to refer to german federal states, you should initialize holidays with "prov" parameter:

import holidays
a = holidays.DE(prov='BY', years=2020)

Thank you very much, cheers
dr-p

Every Sunday in Norway is a holiday
While it's true that most people don't work on Sundays in Norway, they are certainly not public holidays in the normal sense. But the holidays package returns every single Sunday as a holiday for Norway. Second vote for having a flag to distinguish different sorts of holidays.
Hi,
thank you for your interest in python-holidays.
Please refer to here:
https://translate.google.it/translate?hl=&sl=auto&tl=en&u=https%3A%2F%2Fsnl.no%2Fhelligdag
"[...] The following days are holidays in Norway:

regular Sundays [...] "
This is explained here:
https://github.com/dr-prodigy/python-holidays/blob/master/holidays/countries/norway.py#L30

We will consider a specific flag adoption for this, but at the moment this is not a priority.
Thank you again, cheers
dr-p

Holidays returning always "False" when using no parameters?
I have a column "date" in ISO 8601 with days for 2018, 2019 and 2020.
When using the holiday package without parameters
de_holidays = holidays.DE()
traffic["holiday"] = traffic["date"].isin(de_holidays)

It returns "False" for every row.
When using "years" as a parameter it works
de_holidays = holidays.DE(years=[2018, 2019, 2020])
traffic["holiday"] = traffic["date"].isin(de_holidays)

Regarding to the documentation of the package it should work automatically when using "expand=False" but default is "expand=True".
So "years" should not be required in my case?
Yes it was working fine without parameters yesterday and for some reason it now requires the years parameter (no restart nor reinstall since yesterday).
Please either update the Example Usage or default to have no year parameters required.
Hi,
sorry but it's not clear what kind of object traffic["date"] is.
More in general, if no years parameter is provided, the library initializes itself as empty. Then, if expand is set to true (default behaviour) whenever a date object is queried for existence in the holidays object (usually done with in operator), all its relevant year's holidays are loaded in the library object, so from there on, it will contain all that year's holidays.
This applies to any further date existance check, which will append all the involved years to the holidays object list.
Would you please better explain your issue?
Thanks in advance, cheers
dr-p

France holidays
Hello,
First, thanks for your work ;-).
Currently, the french holidays are considered as "Metropole" vs others :

M√©tropole (default), Alsace-Moselle, Guadeloupe, Guyane, Martinique, Mayotte, Nouvelle-Cal√©donie, La R√©union, Polyn√©sie Fran√ßaise, Saint-Barth√©l√©my, Saint-Martin, Wallis-et-Futuna

.
But this is not accurate as M√©tropole is  in fact splitted into 3 zones named "A", "B" and "C". You can see this here : https://publicholidays.fr/school-holidays/.
Could you please take this into account ? I am not a developer but I found this which might help : https://pypi.org/project/vacances-scolaires-france/.
Tell me if you need more informations.
My bad, I thought this project was taking into account school holidays, but it is just about public holidays.
That would be wonderful though.

Only empty sets returned
Hello there,
I've just installed the most recent version of holidays on pip: holidays-0.10.2.
This only seems to return empty sets however:
>>> import holidays
>>> holidays.UnitedStates()
{}

Any idea what the problem may be?
Thanks,
Tom
Ah, it appears I need to pass a years argument too!
This is actually helpful as their official get started guide doesn't include that argument, and I was so confused...

CountryHoliday does not work as per readme
From the readme:
us_holidays = holidays.UnitedStates()
# or:
# us_holidays = holidays.US()
# or:
# us_holidays = holidays.CountryHoliday('US')
# or, for specific prov / states:
# us_holidays = holidays.CountryHoliday('US', prov=None, state='CA')

However, here's my result when trying this code:
>>> holidays.CountryHoliday('US')
{}
>>> holidays.CountryHoliday('US', prov=None, state='CA')
{}

PS: Python is at 3.7.5 and holidays at 0.10.2
Ok something is weird with my python console. In the actual code it started working after fixing an issue, in the python console it still gives me no results .

Spain Holidays that fall on Sunday are passed to Monday always
This year there are two days that fall on Sunday:

2020-11-01 Todos los Santos
2020-12-06 D√≠a de la constituci√≥n Espa√±ola

These days are not holidays. Right dates are:

2020-11-02 Todos los Santos
2020-12-07 D√≠a de la constituci√≥n Espa√±ola

More info in https://www.qppstudio.net/publicholidays2020/spain.htm
Please check my comments on #310 ..
Thank you!
dr-p
No updates on this: closing, thx
dr-p
Sorry @dr-prodigy I have recently had a baby, so no time to opensource.
In a close future, when i have time, i will open a new issue regarding this again.
I hope you understand it.

Error Labor Day in Spain
Hello!
Today is labor day in the whole country, but i see in the file that is only counted for some provinces!
https://github.com/dr-prodigy/python-holidays/blob/345b458b194198b51dfa4dd3207f6e0159151793/holidays/countries/spain.py#L57
Hi! Same here.
May 1 is holiday for all the country: https://en.wikipedia.org/wiki/Public_holidays_in_Spain
Thanks!
Fixed and released on beta branch, thx
dr-p

AttributeError: 'Korea' object has no attribute 'korean_cal'
To solve this issue #1437 in prophet by @chongdae
and this PR #1438 in prophet
cc @chongdae @1kko
code1:
import holidays
import numpy as np

holidays.__version__

output:
'0.10.2'

code2:
holidays.Korea(years=np.arange(1995, 2045))

output:
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-16-a964978a10b6> in <module>
----> 1 holidays.Korea(years=np.arange(1995, 2045))

~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in __init__(self, **kwargs)
     33     def __init__(self, **kwargs):
     34         self.country = "KR"
---> 35         HolidayBase.__init__(self, **kwargs)
     36         self.korean_cal = KoreanLunarCalendar()
     37 

~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/holiday_base.py in __init__(self, years, expand, observed, prov, state)
     32         self.state = state
     33         for year in list(self.years):
---> 34             self._populate(year)
     35 
     36     def __setattr__(self, key, value):

~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in _populate(self, year)
     59         second_day_lunar = "The second day of " + name
     60 
---> 61         dt = self.get_solar_date(year, 1, 1)
     62         new_year_date = date(dt.year, dt.month, dt.day)
     63         if self.observed and year >= 2015:

~/anaconda3/envs/tf36/lib/python3.7/site-packages/holidays/countries/korea.py in get_solar_date(self, year, month, day)
    187     # convert lunar calendar date to solar
    188     def get_solar_date(self, year, month, day):
--> 189         self.korean_cal.setLunarDate(year, month, day, False)
    190         return date(self.korean_cal.solarYear, self.korean_cal.solarMonth,
    191                     self.korean_cal.solarDay)

AttributeError: 'Korea' object has no attribute 'korean_cal'
Merged, thank you very much! üëç

Latvia holiday calendar
Thanks for the package! Just wanted to make it known that someone here is interested in Latvia holiday calendar. I might also do it myself if I find the time (and the information), we'll see.
Made that :) : https://github.com/dr-prodigy/python-holidays/pull/314
Merged! üëç
Thx
dr-p
@rolandinsh Wow, thanks a lot!!!

Any plan to add Mainland China holidays?
The official holidays of Mainland China are similar to those of Hong Kong SAR.
But Chinese government usually rearranges the working days to make the non-working days together with the holidays.
For example, 1/1/2019 Tue is an official holiday (New Year) in China. But 12/31/2018 Mon was also a non-working day. 12/30/2018 Sun is a normal weekend day, non-working. And 12/29/2018 Sat was a working day to make up for 12/31.

Thailand Holiday
Please add support for Thailand Holiday
https://en.wikipedia.org/wiki/Public_holidays_in_Thailand

Fix March 19 on Spain
Hello,
I think this date should be removed from the Holidays because each year it randomly changes between the states.. for example this year only the following states celebrates it:
Galicia, Pa√≠s Vasco, Navarra, Castilla-La Mancha, Regi√≥n de Murcia y Comunidad Valenciana.
It would be impossible to follow it each year as it is a "exchangable holiday" so each year only 6 states in the country gets to celebrate it. for example in the current file MADRID its on it. but MADRID does not celebrate it..
I just realized all this because it did not wake me up for work haha
Hi,
thank you for your interest and support. We have updated Spanish holidays according to this:
https://www.timeanddate.com/holidays/spain/san-jose
Thank you very much, cheers
dr-p

MLK day causes confusion
If multiple holidays occur on the same day, they are separated with ", ".  However, Martin Luther King day also contains a ", ", so my program doesn't know if that's a sequence of holidays or what.  I recommend removing the "," from the name of MLK day - in fact I subclassed Holidays and did just that!
Good point.. fixed and pushed on beta branch.
Cheers!
dr-p
This issue still exists with the Idaho holiday:
https://github.com/dr-prodigy/python-holidays/blob/02d5d510202a02471cd0a939a11525cf02ca115c/holidays/countries/united_states.py#L107
I suggest removing the comma here as well. Or, in case this issue arises in other countries, maybe change the delimiter to a semicolon?

Australian non-public holiday
Hello! Love this package :) Just wanted to check - one of the holidays for NSW Australia returned is a bank holiday on 3rd Aug 2020, but this is actually a holiday just for banks and not a public holiday. is there a way to differentiate between these somehow? Or is this a problem in source data?
c.f. https://www.nsw.gov.au/about-new-south-wales/public-holidays/
Hey there, thank you :-)
Unfortunately, we don't have a differentiation for this yet.. but we will possible consider it for a future release: keeping this open as a reminder.
Thanks again for your help, cheers!
dr-p
Remembrance Day, November 11, isn't a public holiday across Canada either. In Ontario, it is for government employees but not across the board.
Hi
Well done on maintaining library!
Further to the original request, which I see has been closed, this 3rd August Subdiv=NSW Australia Holiday remains.
It is a ‚ÄòBank employee‚Äô only holiday and not a public holiday for the vast majority of population.  Seems to be misreported still currently in 0.41
Could be removed, in my mind altogether, OR have add a new category for bank for AU added- and include this current entry as a bank only holiday?
Thanks for reviewing.

Ash Wednesday holiday in Brazil should not last the whole day
The Ash Wednesday in Brazil ends at 12pm, and the rest of the day is considered a business day.
Not sure if this is achievable in the lib, but just opening the issue to make sure it can be treated if possible and if other people have the same issue, they can find the possible reason.
Hey there!
Thank you for your report.
Unfortunately, at the moment there is no way to express half days in the results returned by the library, so as for now, we won't be implementing this; anyway, we will possibly evaluate this in a future, so thanks for pointing this out!
Cheers
dr-p

Differentiate between European Central Bank holidays and Target2 closing days
The EuropeanCentralBank class is inherited by the ECB and TAR classes.
The holidays correspond to the Target2 closing days as of 2002:

http://www.ecb.europa.eu/press/pr/date/2000/html/pr001214_4.en.html

As for European Central Bank holidays, the institution has its own calendar:

https://www.ecb.europa.eu/home/contacts/working-hours/html/index.en.html

How are institutional holidays supposed to be handled? For my use case, I would keep ECB holidays and Target2 closing days in separate classes, although not necessarily in different files.

Incorrect England holiday
Following code shows incorrect holiday dates for England.
from datetime import date
import holidays
holiday = holidays.England()
date(2020, 5, 4) in holiday # outputs True
date(2020, 5, 8) in holiday # outputs False

in fact 4 May is not a holiday and 8 May is.
Running latest version (0.10.1)
FYI for a reference: https://www.gov.uk/bank-holidays.  The holiday has been moved for 2020 only (to celebrate VE day).
Hi @sammaule ,
library behaviour is in fact correct: thank you very much @lukedyer-peak for your contribution.
Closing issue, best regards to both of you.

French country code
Hello,
Would it be possible to add the alpha-2 country code for France? It is the only one that only has an alpha-3 code, which creates inconsistencies in our code by forcing us to validate if the country is France before inserting the code (our software uses alpha-2).
Thank you!
Hi,
thank you very much for pointing this out.
Unfortunately, "FR" is used internally to represent Friday, so we had to leave it out to avoid a name clash. At the moment it is not in the plans, but we will possibly re-consider this request in a future.
Thank you again, cheers!

 Some Croatian holidays have different dates in 2020
Hi,
I found this package on another github page (https://github.com/christopherthompson81/pgsql_holidays) and saw that your data for Croatia has also some mistakes so I want to help :)
Last year, the government decided to change some state holidays - https://publicholidays.com.hr/2020-dates/
For fixing this issue, the holiday on the 25th of June should be deleted and a new one should be added on the 18th of November. This one should be named 'Dan sjeƒáanja'.
Keep up the good work!
Just released on beta.. Thank you very much! üëç
Cheers
dr-p

US and BR are not working
I tried with these 2 parameters and didn't work. Always returning an empty dictionary.
us_holidays = holidays.CountryHoliday('US', prov=None, state='CA') holidays.CountryHoliday('BR', prov=None, state='PE')
Please refer to doc/examples for proper usage, thanks

Use recognised subdivisions for Austria
As per #283, is is possible to use standard ISO 3166-2 codes for Austria?
Per wikipedia:
AT-1  Burgenland Burgenland
AT-2  K√§rnten Carinthia
AT-3  Nieder√∂sterreich Lower Austria
AT-4  Ober√∂sterreich Upper Austria
AT-5  Salzburg Salzburg
AT-6  Steiermark Styria
AT-7  Tirol Tyrol
AT-8  Vorarlberg Vorarlberg
AT-9  Wien Vienna
Per python-holidays - the codes for AT subdivisions are: 'B', 'K', 'N', 'O', 'S', 'ST', 'T', 'V', 'W' (W is the default) which appears to be the first letter of the subdivision name (see wikipedia list).
Hi, released in beta, thank you!
Hi,
in order to maintain consistency with other countries behaviour, these codes have been chosen instead:
1, 2, 3, 4, 5, 6, 7, 8, 9 (default)

Use recognised subdivisions for Spain
"Would it be possible to apply the use of ISO codes to Spain? The use of recognised ISO codes would make integration into other projects easier as a common standard is followed.
Wikipedia lists the ISO 3166-2 codes for Spain at https://en.wikipedia.org/wiki/ISO_3166-2:ES.
The mappings look like they should be as follows
ISO (ES-AN) = AND
ISO (ES-AR) = ARG
ISO (ES-AS) = AST
ISO (ES-CN) = ICA
ISO (ES-CB) = CAN
ISO (ES-CL) = CAL
ISO (ES-CM) = CAM
ISO (ES-CT) = CAT
ISO (ES-CE) = not supported by python-holidays
ISO (ES-EX) = EXT
ISO (ES-GA) = GAL
ISO (ES-IB) = IBA
ISO (ES-RI) = RIO
ISO (ES-MD) = MAD
ISO (ES-ML) = not supported by python-holidays
ISO (ES-MC) = MUR
ISO (ES-NC) = NAV
ISO (ES-PV) = PVA
ISO (ES-VC) = CVA
"
Hi, it makes sense: updated in beta for Spain too. Thank you cheers üëç

State Holiday incorrect (Subdivision: US-GA / Year: 2020)
Per https://georgia.gov/popular-topic/state-holidays Friday, April 10 is a State Holiday in 2020, however we are currently getting 2020-04-27
https://github.com/dr-prodigy/python-holidays/blob/b523509367869228e97f33824e241137920483f3/holidays/countries/united_states.py#L243
Released in beta.. thank you üëç

US Easter Holiday Issues
Version 0.10.1 Easter is unable to import. Previous version works fine.
ImportError: cannot import name 'easter' from 'holidays' (/usr/local/lib/python3.7/site-packages/holidays/__init__.py)
https://github.com/dr-prodigy/python-holidays/issues/277
Thank you for the response. The ticket you linked was the exact same issue I was having. I've updated the fbprophet files and have verified your recommendation does work correctly. Thank you for the feedback and I apologize for not reviewing previously submitted tickets before creating my own ticket (I'm new to github).
No problem, glad to help you!
Cheers
dr-p

I found issue when import fbprophet when using holidays Library
When I importing fbprophet version = 0.5
and holidays version =0.10.1
I faced this issue. Can anyone help me?

ImportError                               Traceback (most recent call last)
 in 
----> 1 import fbprophet
/opt/anaconda3/lib/python3.7/site-packages/fbprophet/init.py in 
6 # of patent rights can be found in the PATENTS file in the same directory.
7
----> 8 from fbprophet.forecaster import Prophet
9
10 version = '0.5'
/opt/anaconda3/lib/python3.7/site-packages/fbprophet/forecaster.py in 
18
19 from fbprophet.diagnostics import prophet_copy
---> 20 from fbprophet.make_holidays import get_holiday_names, make_holidays_df
21 from fbprophet.models import prophet_stan_model
22 from fbprophet.plot import (plot, plot_components, plot_forecast_component,
/opt/anaconda3/lib/python3.7/site-packages/fbprophet/make_holidays.py in 
14 import pandas as pd
15
---> 16 import fbprophet.hdays as hdays_part2
17 import holidays as hdays_part1
18
/opt/anaconda3/lib/python3.7/site-packages/fbprophet/hdays.py in 
14
15 from convertdate.islamic import from_gregorian, to_gregorian
---> 16 from holidays import WEEKEND, HolidayBase, easter, rd
17 from lunardate import LunarDate
18
ImportError: cannot import name 'easter' from 'holidays' (/opt/anaconda3/lib/python3.7/site-packages/holidays/init.py)
Hi,
"easter" is not a holidays function, but instead a dateutil library function.
Until the previous version of holidays (0.9.12) it was "accidentally" accessible, due to it being imported in holidays.py (main library module, now removed in favour of single country modules), but its direct reference made in prophet is basically wrong (same goes for WEEKEND, HolidayBase etc., not meant for being accessed from outside holidays library).
In order to fix fbprophet, replacing the erroring import with

from dateutil.easter import easter

should be sufficient.
I will consider re-adding in a future the availability of "easter" to support cases like this even if, as said, this doesn't fall in the documented / official usages of holidays library.
Thank man, I will try.
hey @dr-prodigy , after i did replace the easter from holidays to :
from dateutil.easter import easter
now i got this error:
ImportError: cannot import name 'rd' from 'holidays' (C:\Users\ASUS\Anaconda3\lib\site-packages\holidays_init_.py)
and i have no idea the library that i can import rd from
I don't know why these references have been implemented in fbprophet, but they're pretty clearly not well designed..
This specifically seems to refer to this import line in holidays' code:
from dateutil.relativedelta import relativedelta as rd
(formerly reachable from outside, now not accessible anymore).
"rd" in the end is just an internal alias for dateutil.relativedelta (whose name has been shortened to reduce code length), and therefore makes no sense outside holidays' code.
Given this (+ the previous issue about easter), I strongly suggest to open an issue / pull request for complete refactoring on fbprophet in order to fix these poor coding cases.
PS: in order to avoid new issues opened on these cases, please keep this issue open. Thanks
Replace line 16 in fbprophet/hdays.py:
from holidays import WEEKEND, HolidayBase, easter, rd

to
from holidays import WEEKEND, HolidayBase
from dateutil.easter import easter
from dateutil.relativedelta import relativedelta as rd
Hi, this issue has been confirmed, fixed and released on github by fbprophet maintainers.
A new version of fbprophet will be soon released on PyPI. In the meanwhile, fixed package can be cloned by github.
Complete info here:
facebook/prophet#1293
Keeping this open until fbprophet is released to PyPI: thank you for not adding new comments referring to this same error.
Prophet's maintainers report the fix has been now pushed to PyPi / Anaconda, so there should be no more issues.
Please refer to here for details:
facebook/prophet#1293 (comment)
I have installed fbprophet using conda install -c conda-forge fbprophet -y in my python 3.7 on windows 10.but import fbprophet  is throwing error ImportError: cannot import name 'easter' Can you suggest how to fix that issue?

0.10.0 install issue
I suspect you're aware, but I'm seeing an install issue with the just released 0.10.0.
(My CI is running against holidays>=0.9.5)
         cwd: /tmp/pip-install-smsefye4/holidays/
    Complete output (7 lines):
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-install-smsefye4/holidays/setup.py", line 20, in <module>
        with codecs.open('holidays/__init__.py', 'r', 'utf-8') as fd:
      File "[redacted path]/lib/python3.6/codecs.py", line 897, in open
        file = builtins.open(filename, mode, buffering)
    FileNotFoundError: [Errno 2] No such file or directory: 'holidays/__init__.py'
Yes, I noticed this, in fact I've already removed 0.10.0 version from PyPi.
I will fix it and release a new version on PyPi ASAP.
Thank you for pointing this out: I'll keep you posted.
Cheers
Fixed and released on v0.10.1.. thank you again!

holidays in 'India' is an empty dictionary
holidays in 'India' is an empty dictionary
Please refer to documentation for proper usage. Thanks

Martin Luther King Day is not a federal holiday
I believe in line 1444, we need to specify which states should have Martin Lurther King day as a holiday. I know that MA is definitely not one of them.
Hi,
thank you very much for your support.
The code is already managing differences among states about MLK day, and MA is in fact working as you expect.
Would you please provide more complete information on this issue?
Thanks in advance
No news.. closing.
Sorry... I just saw this today...

Anyways, when I use the holiday function, it is telling me MLK is a holiday
in MA. Isn't that wrong?

Or do you actually tested it and it says that it is not a holiday?

Maybe I am using the older version?
‚Ä¶
On Sat, Jan 25, 2020 at 9:58 AM Maurizio Montel ***@***.***> wrote:
 Closed #273 <https://github.com/dr-prodigy/python-holidays/issues/273>.

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/273?email_source=notifications&email_token=AC25RL65KEW5AA62ZODTXILQ7RHQRA5CNFSM4KJMFLS2YY3PNVWWK3TUL52HS4DFWZEXG43VMVCXMZLOORHG65DJMZUWGYLUNFXW5KTDN5WW2ZLOORPWSZGOWGKUTIY#event-2979350947>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AC25RL3SU3CDOGAHF6W6VWDQ7RHQRANCNFSM4KJMFLSQ>
 .

Observed Holiday Problem 
Hello all,
I am new to this python holidays library, so I apologize in advance for any trivial questions that I might be asking.
My main problem is that I am not sure how to modify the 'observed' values in holidays. I need a holiday to be observed on a Monday only if it falls on a Sunday.  I do not need Friday holidays to be observed on Saturday.
The documentation only seems to have a solution if I want to remove 'observed' holidays completely and not partially. My workaround for this was to create a NewCountrysHolidays class and populate it with the holidays and the observed statuses I wanted. I attached my code for the new class below.
My new problem is the I get the error code: 'datetime.date' object is not callable when I do '1-1-2015 in us_electric_holidays, but it does work with the timestamps with my data. When I use my data I get a new error name 'SUN' is not defined. It seems to not recognize Weekdays ex. SUN, and Months ex. DEC. I am not sure why.
I apologize if this was wordy, but I appreciate and thank you for any assistance with this problem.
Background for the problem: (If interested)
I am a Electrical Engineering Ph.D. student who specializes in the Power Grid. One of my tasks is to analyze data from power companies. Power companies define a holiday as:

Holidays are New Year‚Äôs Day, President‚Äôs Day, Memorial Day, Independence Day, Labor Day, Veterans Day, Thanksgiving Day, and Christmas. When any holiday falls on a Sunday, the following Monday will be recognized as a holiday. However, no change will be made for holidays falling on a Saturday.

For all the data to be labelled correctly, I need to remove Martin Luther King Day and Columbus Day. Then remove the Observed Saturday from a Friday Holiday.
I implemented all this in the code below, but it will not run.
US_Electric_Holiday.py.zip
In order to use the predefined weekdays and months, you need to import them from holidays package (or redefine them yourself in the code)
In addition, you don't have to copy-paste the entire holiday definition. You can inherit from UsHolidays class and override the _populate method so that it would call the original USHolidays implementation and clean the irrelevant holidays afterward
In order to use the predefined weekdays and months, you need to import them from holidays package (or redefine them yourself in the code)
In addition, you don't have to copy-paste the entire holiday definition. You can inherit from UsHolidays class and override the _populate method so that it would call the original USHolidays implementation and clean the irrelevant holidays afterward

Hello, thank you for the input. Would I need to define a new class or would the library override the original class, or would I need to define a new class that inherits from UsHolidays. Also, should I replace my SUN with 6 and the months with numerical values? Thank you again for the help.
from dateutil.relativedelta import relativedelta
class UsHolidays(holidays.UnitedStates):
    def _populate(self, year):
        # New Year's Day
        if year > 1870:
            name = "New Year's Day"
            self[date(year, JAN, 1)] = name
            if self.observed and date(year, JAN, 1).weekday() == SUN:
                self[date(year, JAN, 1) + rd(days=+1)] = name + \
                    " (Observed)"

        # Independence Day
        if year > 1870:
            name = "Independence Day"
            self[date(year, JUL, 4)] = name
            if self.observed and date(year, JUL, 4).weekday() == SUN:
                self[date(year, JUL, 4) + rd(days=+1)] = name + " (Observed)"

        # Veterans Day
        if year > 1953:
            name = "Veterans Day"
        else:
            name = "Armistice Day"
        if 1978 > year > 1970:
            self[date(year, OCT, 1) + rd(weekday=MO(+4))] = name
        elif year >= 1938:
            self[date(year, NOV, 11)] = name
            if self.observed \
                    and date(year, NOV, 11).weekday() == SUN:
                self[date(year, NOV, 11) + rd(days=+1)] = name + \
                    " (Observed)"

        # Christmas Day
        if year > 1870:
            name = "Christmas Day"
            self[date(year, DEC, 25)] = "Christmas Day"
            if self.observed \
                    and date(year, DEC, 25).weekday() == SUN:
                self[date(year, DEC, 25) + rd(days=+1)] = name + \
                    " (Observed)"
        
 us_holidays = UsHolidays()

# Or would it be us_holidays = holidays.CountryHoliday('US')

Code change for subdivision (CA-YU)
The project records the following PROVINCE for Canada:
YU
https://github.com/dr-prodigy/python-holidays/blob/61274d44f04f2a1cf8b1cb98a9b57c81ee585d2f/holidays.py#L731
It appears from https://en.wikipedia.org/wiki/ISO_3166-2:CA that the subdivision Yukon should be referred to as CA-YT (not CA-YU).
Can you please confirm this and then we could submit a PR?
Fix released on beta. Closing, thx

Invalid subdivisions in Italy IT
The bulk of provinces listed for Italy use ISO codes apart from the following:
Cesena
Forli
Pesaro
Urbino
According to the ISO subdivisions list these provinces should be merged. Additionally IT-GO and IT-TS appear to have been abolished.
What's the best way to update these subdivisions on the basis that you agree they need updating?
The 4 aforementioned cities as provinces are indeed administratively "merged" like this:
Forl√¨ + Cesena = FC
Pesaro + Urbino = PU
Unfortunately, the 4 cities have all different patron days, so from the holidays PoV they need to be kept apart.
Not being an ISO code for them in existence, they have been referred to with their complete name, as it already was done for French departments.


Meanwhile, instead:
GO = Gorizia
TS = Trieste
are both valid provinces.

New subdivision request (BR-PR: Brazil, Paran√°)
See https://github.com/dr-prodigy/python-holidays/blob/61274d44f04f2a1cf8b1cb98a9b57c81ee585d2f/holidays.py#L510
The Brazilian State of Paran√° (https://en.wikipedia.org/wiki/Paran%C3%A1_(state)) appears to be the only ISO subdivision of Brazil that is not currently supported by python-holidays.
Is it possible to add support for it?
Done and released on beta branch, thx

UAE Holidays
Any chance of adding the UAE holidays?
Even just the fixed date ones would be ok.
@newillusions I suggest you to have a look at the code and try to fix and make a PR. Otherwhise it will be great if you could make list of wrong holidays.
Hi @rpanai thank you.
Just a short clarification : in this case we are not talking about fixes on wrong holidays, but instead support for a new country (United Arab Emirates), not currently available in the library.
This task is not easy due to specific regulations / language - cultural differences, that's why a help for it is desirable.
Thanks, best
dr-p
@newillusions do you have an authoritative source (law, ministry, or similar) for the holidays?

Indonesian holiday
Is there away to make Indonesian holiday into this project? Thanks
https://www.timeanddate.com/calendar/?year=2020&country=65
Hi,
this is mainly a voluntary crowd sourcing project.
If you want soon any specific features, you will have to code them on your own.
Otherwise, you can provide any useful information and wait for someone to do them.
Best regards
dr-p
I there away for me to contribute maybe adding my country holiday? if yes.. how?

Split up code file
Hi @dr-prodigy,
the holidays.py file has grown quite big over time. I suggest to split it up and have a separate file for each country to make maintaining the codebase more manageable in the future. However, all names should still be exported from the main module. Do you want me to do this kind of refactoring and submit a pull request?
Hi,
thank you very much for your help..
This sounds pretty good! And that's something we would like to work on soon.
If you want to start the work, yes, please, do it (note: please start from and target "unstable" branch), and let me review it after the first changes applied (naming convention, structure, etc).
After that we will be completing it.
Okay for you?
Thank you very much again!
Cheers
dr-p
I was just thinking the same thing! I agree with this.
Hey there @MaxHaertwig
I finally completed the whole refactoring (added header comments, PEP8 / flake8 fixes, TravisCI review etc. etc.) and released to beta branch.
Thank you very much for your contribution!
Cheers
dr-p

ZA holiday list error 
hi,
The code snippet from https://pypi.org/project/holidays/:
for date, name in sorted(holidays.ZA(state=' ', years= XXXX).items()):
print(date, name)
gives all holidays since 1999 instead of just those from year XXXX, for any XXXX. Same happens for holidays.SouthAfrica.
Cheers
B
Hi,
this does not seem to happen.
Please remember that, if expand=True, whenever you test a new date against the holidays object, it will add all dates in its containing year.
If you want to have a list of years, you should instead write, for instance:
for date, name in sorted(holidays.ZA(state=' ', years=range(2010,2013)).items()):
     print(date, name)
Cheers,
dr-p

Mexico holidays are not correct anymore.
Hi! Mexico holidays are not correct anymore. Can you add them please?
They seem to be these ones: https://publicholidays.mx/es/2019-dates/
Thanks!
Originally posted by @juanesfonsecan in #217 (comment)
@juanesfonsecan
Thank you for your interest in the project.
Would you please be more specific (ie: provide specific date issues)?
That page reports all 2019 holidays, but doesn't provide any required additional logic (eg: "holiday xxx is on the 3rd monday of september").
Thanks in advance
Hi,
I try to solve it.
I will also try to have a mexican friend to have a look at it - but I can't promise that he is good at python üòÑ .
Fixed with #281 PR. Well done, thank you very much!
That the Federal Labor Law and the Federal Law of Workers in the Service of the State, through the Official Calendar published in the Official Gazette of the Federation on October 6, 1993 and modified on January 27, 2006, coincide in determining The following days will be observed as compulsory rest days:

January 1;
the first Monday of February in commemoration of February 5;
the third Monday of March in commemoration of March 21;
May 1;
16 of September;
the third Monday of November in commemoration of November 20;
December 1 of every six years, on the occasion of the transmission of the Federal Executive Power,
December 25th.

source: http://dof.gob.mx/nota_detalle.php?codigo=5639091&fecha=22/12/2021

Support for School-Holidays in Germany?
Hi,
is it planned to provide regular school holidays for Germany (for each prov)? Maybe by integrating an API?
Hi,
thank you for your interest in the project.
Unfortunately, this is currently not in the development plans (to make sense, this logic should be applied to all countries).
Moreover, library is self-containing and doesn't rely on any external service to work, so this would cause a requirements / compatibility break we don't want.
Closing this, thanks all the same!
@T-Born there is an API for germany:
That's a valid strategic choice. For people who want school holidays (because they do matter), check out the workalender project. A colleague of mine just added the Dutch school holidays there.

Singapore Holiday Not Available
Hi there!
Seems like Singapore's holiday is not included. Any plans to increase country coverage?
Thanks!
https://github.com/dr-prodigy/python-holidays/pull/254
Now available (still on beta branch, soon to be published).. thanks to @mborsetti !

Support timezones?
Would it be possible to support timezones? One could query holidays based on timezones like "Europe/Helsinki". Doesn't make sense for all timezones like UTC, though. In Pandas, timeseries indices may have timezones attached to them, so would be great if one could determine holidays based on that. Does it sound reasonable? Here's some discussion on how to get the country code based on a timezone, but that might not be sufficient if state or province information is needed too. But even just using the country code for a timezone would be great.
EDIT: Forgot to put the link: https://stackoverflow.com/questions/13020690/get-country-code-for-timezone-using-pytz
Unfortunately, nobody has shown interest in implementing this feature, nor having it available.
Being pretty expensive, I'm going to put it in standby ( = closing issue), to prioritize other tasks. Sorry for this, please reach out if you're interested in its development: I'll be glad to include your work. Thank you

Missing one Easter holiday in the icelandic holiday calendar
You have
'Sk√≠rdagur' and 'P√°skadagur' but you are missing 'F√∂studagurinn langi' which is the Friday between Sk√≠rdagur and P√°skadagur (its a national holiday).
In 2019 the dates would be
Sk√≠rdagur 18th of April
F√∂studagurinn langi 19th of April
P√°skadagur 21st of April
Thank you, cheers!

2020 UK Early May Bank Holiday Wrong
The early May bank holiday for 2020 has been changed to 8th May from 4th May to mark Victory in Europe (VE) Day. This applies to England, Wales and Northern Ireland.
Source: https://www.gov.uk/bank-holidays#england-and-wales
Please update.
and also Scotland*
Hi,
this is already done:
if year == 2020 and self.country != 'Ireland': # Moved to Friday to mark 75th anniversary of VE Day. self[date(year, MAY, 8)] = name
Test:
from datetime import date import holidays date(2020, 5, 8) in holidays.UK()
Closing, cheers.
Hi,
This is still not working. Please see attached where 8th May is showing False and 4th is showing True -> should be other way around.

Italian Holiday to add
Hi,
I'm not a developer but I can suggest some holiday for italy:
        elif self.prov == 'ME':
            self[date(year, JUN, 3)] = "Madonna della Lettera"
        elif self.prov == 'TO':
            self[date(year, JUN, 24)] = "San Giovanni Battista"

this is enough?
Good point!
Just added these 2.. thank you üëç
You're more than welcome :)

Tests fail after 2020-01-01
Background:
As part of my work on reproducible builds for openSUSE, I check that software still gives identical build results in the future.
The usual offset is +15 years, because that is how long I expect some software will be used in some places.
This showed up failing tests in our package build.
See https://reproducible-builds.org/ for why this matters.
The 3 observed failures were
File "holidays-0.9.11/tests.py", line 5205, in test_commerce_day
File "holidays-0.9.11/tests.py", line 5199, in test_first_day_of_summer
File "holidays-0.9.11/tests.py", line 5194, in test_maundy_thursday

Steps To Reproduce on openSUSE or Debian:
osc co openSUSE:Factory/python-holidays && cd $_
osc build --build-opt=--vm-custom-opt="-rtc base=2020-01-01T00:00:00" --vm-type=kvm --noservice --clean
Likely broke from #203 by @justinasfour04
Thank you very much!

Support for Nigeria
Hello,
I am willing to contribute this support if you approve :)
Fixed holidays include
New year's day: 1 January
Workers day: 1 May
Children's day: 27 May
Democracy day: 12 June
Independence day: 1 October
Christmas daya: 25 December
Boxing day: 26 December
I'd be happy to contribute this support.
Pull request to resolve this issue.
Of course I do.. just merged it.
Thank you very much again mate! üëç

Italian Holiday, prov FE is wrong
hello,
just to point out that holiday.py at line no.3165  should be 23rd April rathern than 22nd
thanks for the effort in creating this library, saved my day
sbk
Done.. thank you mate üëç

CountryHoliday doesn't support all HolidayBase options
Related to #128
CountryHoliday provides a useful mechanism to returns dates for countries and states that are only know at run time. However it doesn't support all the options that HolidayBase supports such as expand & observed which are documented in the README.
Can these either be added or reconsider the original proposal in #128 of using **kwargs ?
Hi,
I finally preferred to add those 2 missing parameters as optional ones. Done!

bug: an incomplete list of holidays is returned when the periods include more than one whole year
Hi,
I noticed a bug when I tried to get a list of Irish holidays. When there is a complete year between the year of the start date and the year of the end date (e.g. start in 2018 and end in 2020), only the holidays of the start year and end year are returned.
Example:
import pandas as pd
import holidays
start=pd.Timestamp('2010-12-20')
end=pd.Timestamp('2012-01-03')
cal_ie = holidays.CountryHoliday('IE', prov=None, state=None)
hld_ind = cal_ie[start:end]
print(hld_ind)
# returns: [datetime.date(2018, 12, 25), datetime.date(2018, 12, 26), datetime.date(2020, 1, 1)]
As you can see the holidays of 2019 are missing.
Thanks and keep up the great work!
Hi,
thank you for your interest in the library, and sorry for the delay.
In fact, a new year is initialized whenever an enclosed date is searched. This in your case initialized, correctly, 2010 and 2012 only.
If you want to initialize a list of contiguous years, instead, you should proceed like this:
import holidays
holidays_ie = holidays.Ireland(years=range(2010,2013))
print sorted(holidays_ie)
It's instead not currently possible to initialize all holidays from date1 to date2, as you tried to.
Cheers
dr-p
I use this workaround:
type(holidays.CountryHoliday(country_code))(years=range(start_date.year, end_date.year))[ start_date:end_date ]
I use this workaround:
type(holidays.CountryHoliday(country_code))(years=range(start_date.year, end_date.year))[ start_date:end_date ]

Nice one! üëç

Flag to detect observed vs non-observed holidays
At the moment to determine if a date is an actual holiday you need to iterate through a list of all holidays to check if there is one that contains the string "(Observed)" in the name. This seems clunky.
Is there interest in defining another get method that returns an object containing flags such as "observed"?
Hi,
until now, this is the first request on this topic. At the moment there is no place for such information, and in a lot of countries observed holidays apply, so surely it will be a quite expensive development.
Also, we won't be breaking compatibility with previous versions, so implementation must be well designed.
If you are interested in doing it, I will surely consider it for production.. thank you very much!
No news.. closing this ;-)
Simple script for those who need it:
Just note you need the full name I think for this to work, not part of name
def getObserved(name):
        day = us_holidays.get_named(name+" (Observed)")
        if(len(day)==0):
            day = us_holidays.get_named(name)
        return day

Provided countries in documentation is not supported
There are 40+ countries are supported in this package. But for a few provided countries error throw up
Not supported countries but provided in documentation are :

KE - kenya
PE -peru
IS -Iceland
ISLEOFMAN
EE - ESTONIA
Hi,
I can't replicate your issue: all values are available in code and work as expected.
Please note, correct values are:
KE - Kenya
PE -Peru
IS -Iceland
IsleOfMan
EE - Estonia
Please double-check your setup and let us know, thanks

support for new country: Romania
Hi,
Could you add support for Romania too, please ?
Thank you !
You can use this page as a start:
https://publicholidays.ro/2019-dates/
No specific country requests accepted as issues, sorry :) .. closing.

Holidays in Japan are not correct anymore, from May 2019
In May 2019, Japan changed their king, it led the changes in the holiday system. Please update it.
Hi,
would you please provide us with the correct information?
Thank you very much, cheers
dr-p
Hi dr-prodigy,
Thank you for your reply.
Filtering the official holiday in Japan holiday will give the exact result.
Thank you for your concern.
Hi dr-prodigy,
Thank you for your reply.
Filtering the official holiday in Japan holiday will give the exact result.
Thank you for your concern.

Hi,
according to your link, and comparing it with the current code, it results that the new holidays to be managed are:
14 Jan	Monday	Coming of Age Day	National holiday
14 Feb	Thursday	Valentine's Day	Observance
3 Mar	Sunday	Dolls' Festival/Girls' Festival	Observance
21 Mar	Thursday	Spring Equinox	National holiday
30 Apr	Tuesday	Coronation Day holiday	National holiday
2 May	Thursday	Coronation Day holiday	National holiday
6 May	Monday	Children's Day observed	National holiday
7 Jul	Sunday	Star Festival	Observance
15 Jul	Monday	Sea Day	National holiday
6 Aug	Tuesday	Hiroshima Memorial Day	Observance
9 Aug	Friday	Nagasaki Memorial Day	Observance
12 Aug	Monday	Mountain Day observed	National holiday
16 Sep	Monday	Respect for the Aged Day	National holiday
4 Nov	Monday	Culture Day observed	National holiday
15 Nov	Friday	7-5-3 Day	Observance
25 Dec	Wednesday	Christmas	Observance
Unfortunately, I don't speak a word of Japanese.. even worse to write in it :-)
Would you please help us with the japanese translation of them?
Thank you very much!
Hi dr-prodigy,
Thank you for your reply.
Filtering the official holiday in Japan holiday will give the exact result.
Thank you for your concern.

Hi,
according to your link, and comparing it with the current code, it results that the new holidays to be managed are:
14 Jan Monday Coming of Age Day National holiday
14 Feb Thursday Valentine's Day Observance
3 Mar Sunday Dolls' Festival/Girls' Festival Observance
21 Mar Thursday Spring Equinox National holiday
30 Apr Tuesday Coronation Day holiday National holiday
2 May Thursday Coronation Day holiday National holiday
6 May Monday Children's Day observed National holiday
7 Jul Sunday Star Festival Observance
15 Jul Monday Sea Day National holiday
6 Aug Tuesday Hiroshima Memorial Day Observance
9 Aug Friday Nagasaki Memorial Day Observance
12 Aug Monday Mountain Day observed National holiday
16 Sep Monday Respect for the Aged Day National holiday
4 Nov Monday Culture Day observed National holiday
15 Nov Friday 7-5-3 Day Observance
25 Dec Wednesday Christmas Observance
Unfortunately, I don't speak a word of Japanese.. even worse to write in it :-)
Would you please help us with the japanese translation of them?
Thank you very much!

Hi,
Thank you for your reply.
Here you are:
only for 2019:
2019/01/01      | 2019Âπ¥1Êúà1Êó•ÔºàÁÅ´Ôºâ | ÂÖÉÊó• | New Year's Day
2019/01/14      | 2019Âπ¥1Êúà14Êó•ÔºàÊúàÔºâ | Êàê‰∫∫„ÅÆÊó• | Coming-of-age Day
2019/02/11      | 2019Âπ¥2Êúà11Êó•ÔºàÊúàÔºâ | Âª∫ÂõΩË®òÂøµ„ÅÆÊó• | National Foundation Day
2019/03/21      | 2019Âπ¥3Êúà21Êó•ÔºàÊú®Ôºâ | Êò•ÂàÜ„ÅÆÊó• | Vernal Equinox Day
2019/04/29      | 2019Âπ¥4Êúà29Êó•ÔºàÊúàÔºâ | Êò≠Âíå„ÅÆÊó• | Sh≈çwa Day
2019/04/30      | 2019Âπ¥4Êúà30Êó•ÔºàÁÅ´Ôºâ | ‰ºëÊó• | Holiday
2019/05/01      | 2019Âπ¥5Êúà1Êó•ÔºàÊ∞¥Ôºâ | Âç≥‰Ωç„ÅÆÊó• | Throne day
2019/05/02      | 2019Âπ¥5Êúà2Êó•ÔºàÊú®Ôºâ | ‰ºëÊó• | Holiday
2019/05/03      | 2019Âπ¥5Êúà3Êó•ÔºàÈáëÔºâ | ÊÜ≤Ê≥ïË®òÂøµÊó• | Constitution Memorial Day
2019/05/04      | 2019Âπ¥5Êúà4Êó•ÔºàÂúüÔºâ | „Åø„Å©„Çä„ÅÆÊó• | Greenery Day
2019/05/05      | 2019Âπ¥5Êúà5Êó•ÔºàÊó•Ôºâ | Â≠ê‰æõ„ÅÆÊó• | Children's Day
2019/05/06      | 2019Âπ¥5Êúà6Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday
2019/07/15      | 2019Âπ¥7Êúà15Êó•ÔºàÊúàÔºâ | Êµ∑„ÅÆÊó• | Marine Day
2019/08/11      | 2019Âπ¥8Êúà11Êó•ÔºàÊó•Ôºâ | Â±±„ÅÆÊó• | Mountain Day
2019/08/12      | 2019Âπ¥8Êúà12Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday
2019/09/16      | 2019Âπ¥9Êúà16Êó•ÔºàÊúàÔºâ | Êï¨ËÄÅ„ÅÆÊó• | Respect for the Aged Day
2019/09/23      | 2019Âπ¥9Êúà23Êó•ÔºàÊúàÔºâ | ÁßãÂàÜ„ÅÆÊó• | Autumnal Equinox Day
2019/10/14      | 2019Âπ¥10Êúà14Êó•ÔºàÊúàÔºâ | ‰ΩìËÇ≤„ÅÆÊó• | Health-Sports Day
2019/10/22      | 2019Âπ¥10Êúà22Êó•ÔºàÁÅ´Ôºâ | Âç≥‰ΩçÁ§ºÊ≠£ÊÆø„ÅÆÂÑÄ„ÅÆË°å„Çè„Çå„ÇãÊó• | Day of The Coronation Court
2019/11/03      | 2019Âπ¥11Êúà3Êó•ÔºàÊó•Ôºâ | ÊñáÂåñ„ÅÆÊó• | Culture Day
2019/11/04      | 2019Âπ¥11Êúà4Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday
2019/11/23      | 2019Âπ¥11Êúà23Êó•ÔºàÂúüÔºâ | Âã§Âä¥ÊÑüË¨ù„ÅÆÊó• | Labour Thanksgiving Day
from 2020 ---> ..... (until they change their King again)
2020/01/01      | 2020Âπ¥1Êúà1Êó•ÔºàÊ∞¥Ôºâ | ÂÖÉÊó• | New Year's Day
2020/01/13      | 2020Âπ¥1Êúà13Êó•ÔºàÊúàÔºâ | Êàê‰∫∫„ÅÆÊó• | Coming-of-age Day ---> (Second Monday of January)
2020/02/11      | 2020Âπ¥2Êúà11Êó•ÔºàÁÅ´Ôºâ | Âª∫ÂõΩË®òÂøµ„ÅÆÊó• | National Foundation Day
2020/02/23      | 2020Âπ¥2Êúà23Êó•ÔºàÊó•Ôºâ | Â§©ÁöáË™ïÁîüÊó• | Emperor's Birthday
2020/02/24      | 2020Âπ¥2Êúà24Êó•ÔºàÊúàÔºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday
2020/03/20      | 2020Âπ¥3Êúà20Êó•ÔºàÈáëÔºâ | Êò•ÂàÜ„ÅÆÊó• | Vernal Equinox Day
2020/04/29      | 2020Âπ¥4Êúà29Êó•ÔºàÊ∞¥Ôºâ | Êò≠Âíå„ÅÆÊó• | Sh≈çwa Day
2020/05/03      | 2020Âπ¥5Êúà3Êó•ÔºàÊó•Ôºâ | ÊÜ≤Ê≥ïË®òÂøµÊó• | Constitution Memorial Day
2020/05/04      | 2020Âπ¥5Êúà4Êó•ÔºàÊúàÔºâ | „Åø„Å©„Çä„ÅÆÊó• | Greenery Day
2020/05/05      | 2020Âπ¥5Êúà5Êó•ÔºàÁÅ´Ôºâ | Â≠ê‰æõ„ÅÆÊó• | Children's Day
2020/05/06      | 2020Âπ¥5Êúà6Êó•ÔºàÊ∞¥Ôºâ | ÊåØÊõø‰ºëÊó• | Substitute Holiday
2020/07/23      | 2020Âπ¥7Êúà23Êó•ÔºàÊú®Ôºâ | Êµ∑„ÅÆÊó• | Marine Day ---> (Third Monday of July)
2020/07/24      | 2020Âπ¥7Êúà24Êó•ÔºàÈáëÔºâ | „Çπ„Éù„Éº„ÉÑ„ÅÆÊó• | Sports Day  ---> (Second Monday of October). In 2020, this holiday is will be moved exceptionally to July 24 in order to create a prolonged holiday around the opening ceremony of the 2020 Tokyo Olympics.
2020/08/10      | 2020Âπ¥8Êúà10Êó•ÔºàÊúàÔºâ | Â±±„ÅÆÊó• | Mountain Day
2020/09/21      | 2020Âπ¥9Êúà21Êó•ÔºàÊúàÔºâ | Êï¨ËÄÅ„ÅÆÊó• | Respect for the Aged Day ---> (Third Monday of September)
2020/09/22      | 2020Âπ¥9Êúà22Êó•ÔºàÁÅ´Ôºâ | ÁßãÂàÜ„ÅÆÊó• | Autumnal Equinox Day
2020/11/03      | 2020Âπ¥11Êúà3Êó•ÔºàÁÅ´Ôºâ | ÊñáÂåñ„ÅÆÊó• | Culture Day
2020/11/23      | 2020Âπ¥11Êúà23Êó•ÔºàÊúàÔºâ | Âã§Âä¥ÊÑüË¨ù„ÅÆÊó• | Labour Thanksgiving Day
Thank you so much!
Hi @dr-prodigy , is there any update for this issue? I tested your library and found that for the following Japanese holidays in 2020, the results are incorrect. Would you be kind enough to update them?
Marine Day | Thu, Jul 23, 2020 (2020-07-23)
Health and Sports Day | Fri, Jul 24, 2020 (2020-07-24)
Mountain Day | Mon, Aug 10, 2020 (2020-08-10)

However, when these holidays occur in 2021, they are correctly identified, which are :
"2021-07-19": "Marine Day"
"2021-08-11": "Mountain day"
"2021-10-11": "Health and Sports day"

Looks like issue is only with 2020. Maybe you assumed that Mountain day occurs on 11th of August every year, which is not the case as it seems. That's because it's observed on 10th instead of 11th this year, according to Google, may be to accommodate for a 3-day weekend. Hence this result is also false:
>>> date(2020,8,11) in holidays.Japan()
True

Instead of 2020-8-11, the actual holiday is on 2020-8-10.
Regarding Sports day, as explained in the previous comment, it's due to Tokyo Olympics.
And for Sea/Marine day, though it should be on 3rd Monday of July that is 20th July 2020, but it's being observed on 23rd July 2020 instead because of Tokyo Olympics again.
References taken from : https://holidays-jp.github.io/api/v1/date.json
Fixed and released on beta branch. Thank you!

Region support for the United Kindgom
The UK locale is not granular enough for holidays within the United Kingdom, and treats any holiday specific to a country within the UK as effective against the whole.
For specifically, today is the Battle of the Boyne, a national holiday only witnessed within Northern Ireland ‚Äì the other countries are unaffected by this holiday.
An option to be more specific at the witnessed country (i.e. England, Wales, Scotland‚Ä¶) would be welcome.
Hmmm.. this sounds to be already there:

    # Battle of the Boyne
    if self.country in ('UK', 'Northern Ireland'):
        name = "Battle of the Boyne"
        .....


For specific holidays only, you got
"England", "Wales", "Scotland", "IsleOfMan", "NorthernIreland", "Ireland"
while
"UK" (or "GB") sums up all country holidays (excluding Irish ones).
Please let me know, cheers
dr-p
In [1]: from datetime import date                                                                             

In [2]: import holidays                                                                                       

In [3]: holidays_in_england = holidays.England()                                                              

In [4]: date(2019, 8, 26) in holidays_in_england                                                              
Out[4]: True

In [5]: holidays_in_england                                                                                   
Out[5]: 
{datetime.date(2019, 1, 1): "New Year's Day",
 datetime.date(2019, 4, 19): 'Good Friday',
 datetime.date(2019, 4, 22): 'Easter Monday',
 datetime.date(2019, 5, 6): 'May Day',
 datetime.date(2019, 5, 27): 'Spring Bank Holiday',
 datetime.date(2019, 8, 26): 'Late Summer Bank Holiday',
 datetime.date(2019, 12, 25): 'Christmas Day',
 datetime.date(2019, 12, 26): 'Boxing Day'}
Apologies, meant to get back to you on this one. Can confirm all looks good, not sure if this is something I just missed on the documentation.

Detecting only holidays recognized in the banking/financial industry
Hello. I have a requirement for detecting only holidays that are recognized in the banking/financial industry. A colleague and I would like to add support for this type of detection. Is this something that you would consider adding the your open-source package if we were to provide you with a solution?
Hi, thank you for your contribution.
This is truely interesting!
What is difficult, IMHO, is applying it to all country holidays we've collected until now (or at least a good part of them).
Do you think it would be feasible?
Thank you again, cheers
dr-p

FR instead of FRA for France
Hi there,
I am using CountryField within your project. Everything works great, but France. I know you wrote in the code: "FR already exists (Friday), we don't want to mess it up".
I changed it locally and all works (as it should). Don't you want to consider change your mind on this and change the class to 'FR' instead of 'FRA'?
Hi,
I don't think it would be a great idea: code would get less robust, and we would go to break compatibility with previous versions.
Why would you expect to have FR instead of FRA? France support has been like that since the initial implementation, and there are a number of other managed states named with 3 letters instead of 2..
Please let me know, thank you
dr-p
Okay, time to close this.. cheers

Issue with Czech
>>> hols = holidays.CountryHoliday('CZ')
>>> hols = holidays.CountryHoliday('Czech')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python3.7/site-packages/holidays.py", line 233, in CountryHoliday
    country_holiday = globals()[country](prov=prov, state=state)
TypeError: __init__() got an unexpected keyword argument 'prov'
Hey, I am using:
cz_holidays = holidays.CZ()
It works.
CZ works, 'Czech' doesnt... Thats what I'm showing above...'Czech' is mentioned in the docs as it should be able to be used.
Sorry you are right.. That's because:


keyword "Czech" has been deprecated. The currently correct one is "Czechia"
class Czech(Czechia): def __init__(self): warnings.warn("Czech is deprecated, use Czechia instead.", DeprecationWarning) super(Czech, self).__init__()
so I need to update the doc accordingly. I'll do it, thx


there's an issue when deprecation happens during holidays.CountryHoliday('XXX') call. Should dive into it and fix it. Will do soon.


Thank you very much, pls let me know how it goes
Just pushed a fix for those issues..  thanks again üëç
EDIT: please confirm so I'll close the ticket, cheers
No complaints => all OK.. closing ;-)

Croatian holiday date
Hi, can you please change:
in holidays.py line 4188 - Croatian Statehood day is june 25, not june 22.
Everything else looks good for Croatia.
Thank you, this repo helped a bunch
Fixed üëç
Thank you, cheers

The observed date for Canada and US New Years Day not correct
Thanks, this is a great package.
In North America, if Dec 31 is Friday, the New Year's holiday is observed on the following Monday. It seems like there is special code here to force the observance to Friday Dec 31, but that's incorrect.
#The next year's observed New Year's Day can be in this year
# when it falls on a Friday (Jan 1st is a Saturday)
if self.observed and date(year, DEC, 31).weekday() == FRI:
self[date(year, DEC, 31)] = name + " (Observed)"
The issue comes up in Dec 2022, because Dec 31 2021 is on Friday.
I'm not sure if you need anything official to verify that? The following site agrees with my claim:
https://www.timeanddate.com/calendar/?year=2022&country=27
OR
https://www.marketbeat.com/stock-market-holidays/canada/
Thanks!
Also, per the Bond Market calendar, New Year's Eve in 2023 is observed on Dec 29th.  Your code for NYE doesn't handle that.  (The market closes early that day.)
The code correctly follows U.S. law, which stipulates that if holiday falls on a Saturday, the Friday immediately before is a legal public holiday: https://www.law.cornell.edu/uscode/text/5/6103.
For January 3, 2022 to be a public holiday in the U.S. it would require a new law or a Presidential Proclamation, which I haven't found.  Private companies (such as stock exchanges and bond markets), of course, are free to make their own holidays, but this library appears to track official holidays only.
Hi,
thank you @mborsetti for sorting this out! I confirm this as closed.
Thanks to everybody, cheers

Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......
Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......
so  do you think you can use it?
Thank you ~~
Originally posted by @DaisyLL in https://github.com/dr-prodigy/python-holidays/issues/201#issuecomment-501516847
file

Add support for hongkong
Please add support for Hong Kong and China Mainland, please.
I'm sorry, no development requests are accepted, and this especially applies to very specific ones (HK and China support are "expensive" features, due to their language structure).
Would you be able to contribute in some way?
Thanks.
I can provide the date of the holidays for HongKong if you wish
In order to be able to start working, we should at least receive the complete list of all HK holidays containing, for each item:

name in native language
name translation in English
date (for holidays on fixed dates), or date logic

If you can arrange these materials, we'll do our best to integrate it: thanks.
dr-p
Hi here I attached holiday-calendar from 2012 to 2025 for China, but the question is that it may be a little different with the real holiday cause we don't know the accual date untill The Government announce it.......
so do you think you can use it?
Thank you ~~
holidayname_Chinese	holidayname_English	date
ÂÖÉÊó¶	New Yesr's Day	2012/1/1
ÂÖÉÊó¶	New Yesr's Day	2012/1/2
ÂÖÉÊó¶	New Yesr's Day	2012/1/3
Êò•ËäÇ	The Spring Festival	2012/1/22
Êò•ËäÇ	The Spring Festival	2012/1/23
Êò•ËäÇ	The Spring Festival	2012/1/24
Êò•ËäÇ	The Spring Festival	2012/1/25
Êò•ËäÇ	The Spring Festival	2012/1/26
Êò•ËäÇ	The Spring Festival	2012/1/27
Êò•ËäÇ	The Spring Festival	2012/1/28
Ê∏ÖÊòé	Qingming Festival	2012/4/2
Ê∏ÖÊòé	Qingming Festival	2012/4/3
Ê∏ÖÊòé	Qingming Festival	2012/4/4
Âä≥Âä®	Labour Day	2012/4/29
Âä≥Âä®	Labour Day	2012/4/30
Âä≥Âä®	Labour Day	2012/5/1
Á´ØÂçà	The Dragon Boat Festival	2012/6/22
Á´ØÂçà	The Dragon Boat Festival	2012/6/23
Á´ØÂçà	The Dragon Boat Festival	2012/6/24
ÂõΩÂ∫Ü	National Day	2012/9/30
ÂõΩÂ∫Ü	National Day	2012/10/1
ÂõΩÂ∫Ü	National Day	2012/10/2
ÂõΩÂ∫Ü	National Day	2012/10/3
ÂõΩÂ∫Ü	National Day	2012/10/4
ÂõΩÂ∫Ü	National Day	2012/10/5
ÂõΩÂ∫Ü	National Day	2012/10/6
ÂõΩÂ∫Ü	National Day	2012/10/7
ÂÖÉÊó¶	New Yesr's Day	2013/1/1
ÂÖÉÊó¶	New Yesr's Day	2013/1/2
ÂÖÉÊó¶	New Yesr's Day	2013/1/3
Êò•ËäÇ	The Spring Festival	2013/2/9
Êò•ËäÇ	The Spring Festival	2013/2/10
Êò•ËäÇ	The Spring Festival	2013/2/11
Êò•ËäÇ	The Spring Festival	2013/2/12
Êò•ËäÇ	The Spring Festival	2013/2/13
Êò•ËäÇ	The Spring Festival	2013/2/14
Êò•ËäÇ	The Spring Festival	2013/2/15
Ê∏ÖÊòé	Qingming Festival	2013/4/4
Ê∏ÖÊòé	Qingming Festival	2013/4/5
Ê∏ÖÊòé	Qingming Festival	2013/4/6
Âä≥Âä®	Labour Day	2013/4/29
Âä≥Âä®	Labour Day	2013/4/30
Âä≥Âä®	Labour Day	2013/5/1
Á´ØÂçà	The Dragon Boat Festival	2013/6/10
Á´ØÂçà	The Dragon Boat Festival	2013/6/11
Á´ØÂçà	The Dragon Boat Festival	2013/6/12
‰∏≠Áßã	Mid_Autumn Festival	2013/9/19
‰∏≠Áßã	Mid_Autumn Festival	2013/9/20
‰∏≠Áßã	Mid_Autumn Festival	2013/9/21
ÂõΩÂ∫Ü	National Day	2013/10/1
ÂõΩÂ∫Ü	National Day	2013/10/2
ÂõΩÂ∫Ü	National Day	2013/10/3
ÂõΩÂ∫Ü	National Day	2013/10/4
ÂõΩÂ∫Ü	National Day	2013/10/5
ÂõΩÂ∫Ü	National Day	2013/10/6
ÂõΩÂ∫Ü	National Day	2013/10/7
ÂÖÉÊó¶	New Yesr's Day	2014/1/1
Êò•ËäÇ	The Spring Festival	2014/1/31
Êò•ËäÇ	The Spring Festival	2014/2/1
Êò•ËäÇ	The Spring Festival	2014/2/2
Êò•ËäÇ	The Spring Festival	2014/2/3
Êò•ËäÇ	The Spring Festival	2014/2/4
Êò•ËäÇ	The Spring Festival	2014/2/5
Êò•ËäÇ	The Spring Festival	2014/2/6
Ê∏ÖÊòé	Qingming Festival	2014/4/5
Ê∏ÖÊòé	Qingming Festival	2014/4/6
Ê∏ÖÊòé	Qingming Festival	2014/4/7
Âä≥Âä®	Labour Day	2014/5/1
Âä≥Âä®	Labour Day	2014/5/2
Âä≥Âä®	Labour Day	2014/5/3
Á´ØÂçà	The Dragon Boat Festival	2014/5/31
Á´ØÂçà	The Dragon Boat Festival	2014/6/1
Á´ØÂçà	The Dragon Boat Festival	2014/6/2
‰∏≠Áßã	Mid_Autumn Festival	2014/9/6
‰∏≠Áßã	Mid_Autumn Festival	2014/9/7
‰∏≠Áßã	Mid_Autumn Festival	2014/9/8
ÂõΩÂ∫Ü	National Day	2014/10/1
ÂõΩÂ∫Ü	National Day	2014/10/2
ÂõΩÂ∫Ü	National Day	2014/10/3
ÂõΩÂ∫Ü	National Day	2014/10/4
ÂõΩÂ∫Ü	National Day	2014/10/5
ÂõΩÂ∫Ü	National Day	2014/10/6
ÂõΩÂ∫Ü	National Day	2014/10/7
ÂÖÉÊó¶	New Yesr's Day	2015/1/1
ÂÖÉÊó¶	New Yesr's Day	2015/1/2
ÂÖÉÊó¶	New Yesr's Day	2015/1/3
Êò•ËäÇ	The Spring Festival	2015/2/18
Êò•ËäÇ	The Spring Festival	2015/2/19
Êò•ËäÇ	The Spring Festival	2015/2/20
Êò•ËäÇ	The Spring Festival	2015/2/21
Êò•ËäÇ	The Spring Festival	2015/2/22
Êò•ËäÇ	The Spring Festival	2015/2/23
Êò•ËäÇ	The Spring Festival	2015/2/24
Ê∏ÖÊòé	Qingming Festival	2015/4/4
Ê∏ÖÊòé	Qingming Festival	2015/4/5
Ê∏ÖÊòé	Qingming Festival	2015/4/6
Âä≥Âä®	Labour Day	2015/5/1
Âä≥Âä®	Labour Day	2015/5/2
Âä≥Âä®	Labour Day	2015/5/3
Á´ØÂçà	The Dragon Boat Festival	2015/6/20
Á´ØÂçà	The Dragon Boat Festival	2015/6/21
Á´ØÂçà	The Dragon Boat Festival	2015/6/22
‰∏≠Áßã	Mid_Autumn Festival	2015/9/26
‰∏≠Áßã	Mid_Autumn Festival	2015/9/27
ÂõΩÂ∫Ü	National Day	2015/10/1
ÂõΩÂ∫Ü	National Day	2015/10/2
ÂõΩÂ∫Ü	National Day	2015/10/3
ÂõΩÂ∫Ü	National Day	2015/10/4
ÂõΩÂ∫Ü	National Day	2015/10/5
ÂõΩÂ∫Ü	National Day	2015/10/6
ÂõΩÂ∫Ü	National Day	2015/10/7
ÂÖÉÊó¶	New Yesr's Day	2016/1/1
ÂÖÉÊó¶	New Yesr's Day	2016/1/2
ÂÖÉÊó¶	New Yesr's Day	2016/1/3
Êò•ËäÇ	The Spring Festival	2016/2/7
Êò•ËäÇ	The Spring Festival	2016/2/8
Êò•ËäÇ	The Spring Festival	2016/2/9
Êò•ËäÇ	The Spring Festival	2016/2/10
Êò•ËäÇ	The Spring Festival	2016/2/11
Êò•ËäÇ	The Spring Festival	2016/2/12
Êò•ËäÇ	The Spring Festival	2016/2/13
Ê∏ÖÊòé	Qingming Festival	2016/4/2
Ê∏ÖÊòé	Qingming Festival	2016/4/3
Ê∏ÖÊòé	Qingming Festival	2016/4/4
Âä≥Âä®	Labour Day	2016/4/30
Âä≥Âä®	Labour Day	2016/5/1
Âä≥Âä®	Labour Day	2016/5/2
Á´ØÂçà	The Dragon Boat Festival	2016/6/9
Á´ØÂçà	The Dragon Boat Festival	2016/6/10
Á´ØÂçà	The Dragon Boat Festival	2016/6/11
‰∏≠Áßã	Mid_Autumn Festival	2016/9/15
‰∏≠Áßã	Mid_Autumn Festival	2016/9/16
‰∏≠Áßã	Mid_Autumn Festival	2016/9/17
ÂõΩÂ∫Ü	National Day	2016/10/1
ÂõΩÂ∫Ü	National Day	2016/10/2
ÂõΩÂ∫Ü	National Day	2016/10/3
ÂõΩÂ∫Ü	National Day	2016/10/4
ÂõΩÂ∫Ü	National Day	2016/10/5
ÂõΩÂ∫Ü	National Day	2016/10/6
ÂõΩÂ∫Ü	National Day	2016/10/7
ÂÖÉÊó¶	New Yesr's Day	2016/12/31
ÂÖÉÊó¶	New Yesr's Day	2017/1/1
ÂÖÉÊó¶	New Yesr's Day	2017/1/2
Êò•ËäÇ	The Spring Festival	2017/1/27
Êò•ËäÇ	The Spring Festival	2017/1/28
Êò•ËäÇ	The Spring Festival	2017/1/29
Êò•ËäÇ	The Spring Festival	2017/1/30
Êò•ËäÇ	The Spring Festival	2017/1/31
Êò•ËäÇ	The Spring Festival	2017/2/1
Êò•ËäÇ	The Spring Festival	2017/2/2
Ê∏ÖÊòé	Qingming Festival	2017/4/2
Ê∏ÖÊòé	Qingming Festival	2017/4/3
Ê∏ÖÊòé	Qingming Festival	2017/4/4
Âä≥Âä®	Labour Day	2017/4/29
Âä≥Âä®	Labour Day	2017/4/30
Âä≥Âä®	Labour Day	2017/5/1
Á´ØÂçà	The Dragon Boat Festival	2017/5/28
Á´ØÂçà	The Dragon Boat Festival	2017/5/29
Á´ØÂçà	The Dragon Boat Festival	2017/5/30
ÂõΩÂ∫Ü	National Day	2017/10/1
ÂõΩÂ∫Ü	National Day	2017/10/2
ÂõΩÂ∫Ü	National Day	2017/10/3
ÂõΩÂ∫Ü	National Day	2017/10/4
ÂõΩÂ∫Ü	National Day	2017/10/5
ÂõΩÂ∫Ü	National Day	2017/10/6
ÂõΩÂ∫Ü	National Day	2017/10/7
ÂõΩÂ∫Ü	National Day	2017/10/8
ÂÖÉÊó¶	New Yesr's Day	2017/12/30
ÂÖÉÊó¶	New Yesr's Day	2017/12/31
ÂÖÉÊó¶	New Yesr's Day	2018/1/1
Êò•ËäÇ	The Spring Festival	2018/2/15
Êò•ËäÇ	The Spring Festival	2018/2/16
Êò•ËäÇ	The Spring Festival	2018/2/17
Êò•ËäÇ	The Spring Festival	2018/2/18
Êò•ËäÇ	The Spring Festival	2018/2/19
Êò•ËäÇ	The Spring Festival	2018/2/20
Êò•ËäÇ	The Spring Festival	2018/2/21
Ê∏ÖÊòé	Qingming Festival	2018/4/5
Ê∏ÖÊòé	Qingming Festival	2018/4/6
Ê∏ÖÊòé	Qingming Festival	2018/4/7
Âä≥Âä®	Labour Day	2018/4/29
Âä≥Âä®	Labour Day	2018/4/30
Âä≥Âä®	Labour Day	2018/5/1
Á´ØÂçà	The Dragon Boat Festival	2018/6/16
Á´ØÂçà	The Dragon Boat Festival	2018/6/17
Á´ØÂçà	The Dragon Boat Festival	2018/6/18
‰∏≠Áßã	Mid_Autumn Festival	2018/9/22
‰∏≠Áßã	Mid_Autumn Festival	2018/9/23
‰∏≠Áßã	Mid_Autumn Festival	2018/9/24
ÂõΩÂ∫Ü	National Day	2018/10/1
ÂõΩÂ∫Ü	National Day	2018/10/2
ÂõΩÂ∫Ü	National Day	2018/10/3
ÂõΩÂ∫Ü	National Day	2018/10/4
ÂõΩÂ∫Ü	National Day	2018/10/5
ÂõΩÂ∫Ü	National Day	2018/10/6
ÂõΩÂ∫Ü	National Day	2018/10/7
ÂÖÉÊó¶	New Yesr's Day	2018/12/30
ÂÖÉÊó¶	New Yesr's Day	2018/12/31
ÂÖÉÊó¶	New Yesr's Day	2019/1/1
Êò•ËäÇ	The Spring Festival	2019/2/4
Êò•ËäÇ	The Spring Festival	2019/2/5
Êò•ËäÇ	The Spring Festival	2019/2/6
Êò•ËäÇ	The Spring Festival	2019/2/7
Êò•ËäÇ	The Spring Festival	2019/2/8
Êò•ËäÇ	The Spring Festival	2019/2/9
Êò•ËäÇ	The Spring Festival	2019/2/10
Ê∏ÖÊòé	Qingming Festival	2019/4/5
Ê∏ÖÊòé	Qingming Festival	2019/4/6
Ê∏ÖÊòé	Qingming Festival	2019/4/7
Âä≥Âä®	Labour Day	2019/5/1
Âä≥Âä®	Labour Day	2019/5/2
Âä≥Âä®	Labour Day	2019/5/3
Âä≥Âä®	Labour Day	2019/5/4
Á´ØÂçà	The Dragon Boat Festival	2019/6/7
Á´ØÂçà	The Dragon Boat Festival	2019/6/8
Á´ØÂçà	The Dragon Boat Festival	2019/6/9
‰∏≠Áßã	Mid_Autumn Festival	2019/9/13
‰∏≠Áßã	Mid_Autumn Festival	2019/9/14
‰∏≠Áßã	Mid_Autumn Festival	2019/9/15
ÂõΩÂ∫Ü	National Day	2019/10/1
ÂõΩÂ∫Ü	National Day	2019/10/2
ÂõΩÂ∫Ü	National Day	2019/10/3
ÂõΩÂ∫Ü	National Day	2019/10/4
ÂõΩÂ∫Ü	National Day	2019/10/5
ÂõΩÂ∫Ü	National Day	2019/10/6
ÂõΩÂ∫Ü	National Day	2019/10/7
ÂÖÉÊó¶	New Yesr's Day	2020/1/1
ÂÖÉÊó¶	New Yesr's Day	2020/1/2
ÂÖÉÊó¶	New Yesr's Day	2020/1/3
Êò•ËäÇ	The Spring Festival	2020/1/24
Êò•ËäÇ	The Spring Festival	2020/1/25
Êò•ËäÇ	The Spring Festival	2020/1/26
Êò•ËäÇ	The Spring Festival	2020/1/27
Êò•ËäÇ	The Spring Festival	2020/1/28
Êò•ËäÇ	The Spring Festival	2020/1/29
Êò•ËäÇ	The Spring Festival	2020/1/30
Ê∏ÖÊòé	Qingming Festival	2020/4/4
Ê∏ÖÊòé	Qingming Festival	2020/4/5
Ê∏ÖÊòé	Qingming Festival	2020/4/6
Âä≥Âä®	Labour Day	2020/5/1
Âä≥Âä®	Labour Day	2020/5/2
Âä≥Âä®	Labour Day	2020/5/3
Á´ØÂçà	The Dragon Boat Festival	2020/6/25
Á´ØÂçà	The Dragon Boat Festival	2020/6/26
Á´ØÂçà	The Dragon Boat Festival	2020/6/27
ÂõΩÂ∫Ü	National Day	2020/10/1
ÂõΩÂ∫Ü	National Day	2020/10/2
ÂõΩÂ∫Ü	National Day	2020/10/3
ÂõΩÂ∫Ü	National Day	2020/10/4
ÂõΩÂ∫Ü	National Day	2020/10/5
ÂõΩÂ∫Ü	National Day	2020/10/6
ÂõΩÂ∫Ü	National Day	2020/10/7
ÂõΩÂ∫Ü	National Day	2020/10/8
ÂÖÉÊó¶	New Yesr's Day	2021/1/1
ÂÖÉÊó¶	New Yesr's Day	2021/1/2
ÂÖÉÊó¶	New Yesr's Day	2021/1/3
Êò•ËäÇ	The Spring Festival	2021/2/11
Êò•ËäÇ	The Spring Festival	2021/2/12
Êò•ËäÇ	The Spring Festival	2021/2/13
Êò•ËäÇ	The Spring Festival	2021/2/14
Êò•ËäÇ	The Spring Festival	2021/2/15
Êò•ËäÇ	The Spring Festival	2021/2/16
Êò•ËäÇ	The Spring Festival	2021/2/17
Ê∏ÖÊòé	Qingming Festival	2021/4/2
Ê∏ÖÊòé	Qingming Festival	2021/4/3
Ê∏ÖÊòé	Qingming Festival	2021/4/4
Âä≥Âä®	Labour Day	2021/4/30
Âä≥Âä®	Labour Day	2021/5/1
Âä≥Âä®	Labour Day	2021/5/2
Á´ØÂçà	The Dragon Boat Festival	2021/6/12
Á´ØÂçà	The Dragon Boat Festival	2021/6/13
Á´ØÂçà	The Dragon Boat Festival	2021/6/14
‰∏≠Áßã	Mid_Autumn Festival	2021/9/19
‰∏≠Áßã	Mid_Autumn Festival	2021/9/20
‰∏≠Áßã	Mid_Autumn Festival	2021/9/21
ÂõΩÂ∫Ü	National Day	2021/10/1
ÂõΩÂ∫Ü	National Day	2021/10/2
ÂõΩÂ∫Ü	National Day	2021/10/3
ÂõΩÂ∫Ü	National Day	2021/10/4
ÂõΩÂ∫Ü	National Day	2021/10/5
ÂõΩÂ∫Ü	National Day	2021/10/6
ÂõΩÂ∫Ü	National Day	2021/10/7
ÂÖÉÊó¶	New Yesr's Day	2021/12/31
ÂÖÉÊó¶	New Yesr's Day	2022/1/1
ÂÖÉÊó¶	New Yesr's Day	2022/1/2
Êò•ËäÇ	The Spring Festival	2022/1/31
Êò•ËäÇ	The Spring Festival	2022/2/1
Êò•ËäÇ	The Spring Festival	2022/2/2
Êò•ËäÇ	The Spring Festival	2022/2/3
Êò•ËäÇ	The Spring Festival	2022/2/4
Êò•ËäÇ	The Spring Festival	2022/2/5
Êò•ËäÇ	The Spring Festival	2022/2/6
Ê∏ÖÊòé	Qingming Festival	2022/4/3
Ê∏ÖÊòé	Qingming Festival	2022/4/4
Ê∏ÖÊòé	Qingming Festival	2022/4/5
Âä≥Âä®	Labour Day	2022/4/29
Âä≥Âä®	Labour Day	2022/4/30
Âä≥Âä®	Labour Day	2022/5/1
Á´ØÂçà	The Dragon Boat Festival	2022/6/3
Á´ØÂçà	The Dragon Boat Festival	2022/6/4
Á´ØÂçà	The Dragon Boat Festival	2022/6/5
‰∏≠Áßã	Mid_Autumn Festival	2022/9/9
‰∏≠Áßã	Mid_Autumn Festival	2022/9/10
‰∏≠Áßã	Mid_Autumn Festival	2022/9/11
ÂõΩÂ∫Ü	National Day	2022/10/1
ÂõΩÂ∫Ü	National Day	2022/10/2
ÂõΩÂ∫Ü	National Day	2022/10/3
ÂõΩÂ∫Ü	National Day	2022/10/4
ÂõΩÂ∫Ü	National Day	2022/10/5
ÂõΩÂ∫Ü	National Day	2022/10/6
ÂõΩÂ∫Ü	National Day	2022/10/7
ÂÖÉÊó¶	New Yesr's Day	2022/12/30
ÂÖÉÊó¶	New Yesr's Day	2022/12/31
ÂÖÉÊó¶	New Yesr's Day	2023/1/1
Êò•ËäÇ	The Spring Festival	2023/1/21
Êò•ËäÇ	The Spring Festival	2023/1/22
Êò•ËäÇ	The Spring Festival	2023/1/23
Êò•ËäÇ	The Spring Festival	2023/1/24
Êò•ËäÇ	The Spring Festival	2023/1/25
Êò•ËäÇ	The Spring Festival	2023/1/26
Êò•ËäÇ	The Spring Festival	2023/1/27
Ê∏ÖÊòé	Qingming Festival	2023/4/5
Ê∏ÖÊòé	Qingming Festival	2023/4/6
Ê∏ÖÊòé	Qingming Festival	2023/4/7
Âä≥Âä®	Labour Day	2023/4/29
Âä≥Âä®	Labour Day	2023/4/30
Âä≥Âä®	Labour Day	2023/5/1
Á´ØÂçà	The Dragon Boat Festival	2023/6/22
Á´ØÂçà	The Dragon Boat Festival	2023/6/23
Á´ØÂçà	The Dragon Boat Festival	2023/6/24
‰∏≠Áßã	Mid_Autumn Festival	2023/9/29
‰∏≠Áßã	Mid_Autumn Festival	2023/9/30
ÂõΩÂ∫Ü	National Day	2023/10/1
ÂõΩÂ∫Ü	National Day	2023/10/2
ÂõΩÂ∫Ü	National Day	2023/10/3
ÂõΩÂ∫Ü	National Day	2023/10/4
ÂõΩÂ∫Ü	National Day	2023/10/5
ÂõΩÂ∫Ü	National Day	2023/10/6
ÂÖÉÊó¶	New Yesr's Day	2023/12/30
ÂÖÉÊó¶	New Yesr's Day	2023/12/31
ÂÖÉÊó¶	New Yesr's Day	2024/1/1
Êò•ËäÇ	The Spring Festival	2024/2/9
Êò•ËäÇ	The Spring Festival	2024/2/10
Êò•ËäÇ	The Spring Festival	2024/2/11
Êò•ËäÇ	The Spring Festival	2024/2/12
Êò•ËäÇ	The Spring Festival	2024/2/13
Êò•ËäÇ	The Spring Festival	2024/2/14
Êò•ËäÇ	The Spring Festival	2024/2/15
Ê∏ÖÊòé	Qingming Festival	2024/4/4
Ê∏ÖÊòé	Qingming Festival	2024/4/5
Ê∏ÖÊòé	Qingming Festival	2024/4/6
Âä≥Âä®	Labour Day	2024/5/1
Âä≥Âä®	Labour Day	2024/5/2
Âä≥Âä®	Labour Day	2024/5/3
Á´ØÂçà	The Dragon Boat Festival	2024/6/8
Á´ØÂçà	The Dragon Boat Festival	2024/6/9
Á´ØÂçà	The Dragon Boat Festival	2024/6/10
‰∏≠Áßã	Mid_Autumn Festival	2024/9/15
‰∏≠Áßã	Mid_Autumn Festival	2024/9/16
‰∏≠Áßã	Mid_Autumn Festival	2024/9/17
ÂõΩÂ∫Ü	National Day	2024/9/28
ÂõΩÂ∫Ü	National Day	2024/9/29
ÂõΩÂ∫Ü	National Day	2024/9/30
ÂõΩÂ∫Ü	National Day	2024/10/1
ÂõΩÂ∫Ü	National Day	2024/10/2
ÂõΩÂ∫Ü	National Day	2024/10/3
ÂõΩÂ∫Ü	National Day	2024/10/4
ÂÖÉÊó¶	New Yesr's Day	2025/1/1
ÂÖÉÊó¶	New Yesr's Day	2025/1/2
ÂÖÉÊó¶	New Yesr's Day	2025/1/3
Êò•ËäÇ	The Spring Festival	2025/1/28
Êò•ËäÇ	The Spring Festival	2025/1/29
Êò•ËäÇ	The Spring Festival	2025/1/30
Êò•ËäÇ	The Spring Festival	2025/1/31
Êò•ËäÇ	The Spring Festival	2025/2/1
Êò•ËäÇ	The Spring Festival	2025/2/2
Êò•ËäÇ	The Spring Festival	2025/2/3
Ê∏ÖÊòé	Qingming Festival	2025/4/4
Ê∏ÖÊòé	Qingming Festival	2025/4/5
Ê∏ÖÊòé	Qingming Festival	2025/4/6
Âä≥Âä®	Labour Day	2025/5/1
Âä≥Âä®	Labour Day	2025/5/2
Âä≥Âä®	Labour Day	2025/5/3
Á´ØÂçà	The Dragon Boat Festival	2025/5/30
Á´ØÂçà	The Dragon Boat Festival	2025/5/31
Á´ØÂçà	The Dragon Boat Festival	2025/6/1
ÂõΩÂ∫Ü	National Day	2025/10/1
ÂõΩÂ∫Ü	National Day	2025/10/2
ÂõΩÂ∫Ü	National Day	2025/10/3
ÂõΩÂ∫Ü	National Day	2025/10/4
ÂõΩÂ∫Ü	National Day	2025/10/5
ÂõΩÂ∫Ü	National Day	2025/10/6
ÂõΩÂ∫Ü	National Day	2025/10/7
ÂõΩÂ∫Ü	National Day	2025/10/8
Hi there @DaisyLL , thank you for your help.
Some questions:


the main goal of the library is to provide a business logic to setup holidays for past present and (possibly) future.
So in the end, instead of collecting fixed dates (which are very verbose and are not future-proof), we always try to implement code like "Labour day happens in the first workday of May" (just an example: the sentence is probably wrong).
Then of course, when this is not possible, we try to manage the exceptions.
Do you think this approach is feasible/applicable to HK/Chinese holidays too?


In the list above I see a lot of holidays made up of multiple days (eg: National Day from 2025/10/1 to 2025/10/8): is this correct?


Can you rearrange your data according to these requests?
Thank you very much, KUTGW
Hi there @DaisyLL , thank you for your help.
Some questions:
1. the main goal of the library is to provide a business logic to setup holidays for past present and (possibly) future.
   So in the end, instead of collecting fixed dates (which are very verbose and are not future-proof), we always try to implement code like "Labour day happens in the first workday of May" (just an example: the sentence is probably wrong).
   Then of course, when this is not possible, we try to manage the exceptions.
   Do you think this approach is feasible/applicable to HK/Chinese holidays too?

2. In the list above I see a lot of holidays made up of multiple days (eg: National Day from 2025/10/1 to 2025/10/8): is this correct?

Can you rearrange your data according to these requests?
Thank you very much, KUTGW

The dates provided by @DaisyLL was China's holidays, and Hong Kong would have another holidays dates.  Therefore, I suggest using another separate thread for @DaisyLL case on China's holidays.
#208 I have implemented support for Hong Kong calendar and a pull request has been made.

Add support for IS (Iceland) and KE (Kenya)
Could you please add support for Iceland and Kenya
#203
All done... thx üëç

Passing a year to .get and .get_list yields only New Year's Day
If I try pass a year to .get or .get_list, only New Year's Day is returned. I would expect to get a list of all the holidays in that year.
To expand, I am using the CountryHoliday class, but don't know the exact dates of the holidays, so would like to retrieve them by passing the year.
Hi,
you haven't provided any code in your issue, but anyway it seems, being using the year only, you're implicitly passing a single date (i.e.: ????/1/1) to the method, so that's why you receive only New Year's Day.
You should instead be using a date range, like this ( = https://github.com/dr-prodigy/python-holidays#example-usage 's last snippet ):
>>> from datetime import date
>>> holidays.US()[date(2018, 1, 1): date(2018, 12, 31)]

Cheers
dr-p

GB representation for UK
üëã
ISO standard country code for United Kingdom is actually GB
Having GB as well as UK makes lookup with ISO codes cleaner
Thank you üëç
no, thank you, that was blazing fast üòª
Oh well y'know, 2 rows of code overall! :-D

Cant import the library
I already install the library, as shown here:
(djangoDev) C:\Users\Jdash\Documents\gitlab\working-days>pip install holidays
Requirement already satisfied: holidays in c:\users\jdash\anaconda3\envs\djangodev\lib\site-packages (0.9.10)
Requirement already satisfied: six in c:\users\jdash\anaconda3\envs\djangodev\lib\site-packages (from holidays) (1.12.0)
Requirement already satisfied: python-dateutil in c:\users\jdash\anaconda3\envs\djangodev\lib\site-packages (from holidays) (2.8.0)

But when trying to import it with import holidays, I get the message that there is no module name holidays
What i'm doing wrong?
Hi,
at a first glance, it seems you're not doing anything particularly wrong: the issue has sth to do with your virtualenv, not doing what it's expected to (have you relocated it?).
Anyway, given that this is a setup issue, not depending on the package itself, I'm afraid I won't be able to provide more support.
Best regards
I just had the same issue.
I created a fresh conda environment with the pandas seaborn and scikit-learn libraries. Then I tried to install holidays with pip, then with conda, and finally with easy_install (I removed the package after each attempt). No difference:
In [1]: import holidays                                                                                                                                       
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-1-fa4bcd159274> in <module>
----> 1 import holidays

ModuleNotFoundError: No module named 'holidays'

Family Day in New Brunswick
New Brunswick started observing Family Day beginning on February 19, 2018.
Sorry, this issue has too few details (is this about Canada? which day is it on?).
Please update it with complete information, thx.
My apologies.  I forget that other places are called New Brunswick.
New Brunswick, Canada started observing Family Day in 2018 on the 3rd Monday in February.
Okay, updated on beta. Thank you

Holidays for Malta
Good morning :)
Can we get holidays for Malta please?
Good morning!
Unfortunately, this ain't no restaurant, so no orders accepted, sorry :-)
In order to have your request satisfied, I would suggest you to provide your preferred degree of contribution to the project (holidays information / code implementation / unit tests): the more contribution you provide, the more likely to see the work done in a short time.
Best regards, have a nice day!

Czech -> Czechia or CzechRepublic
Nice library!
However, I'd slightly change the name of class for Czech holidays. "Czech" is an adjective (like "Italian" or "Milanese"), not a country name. The short or the long name should be used instead.
Should I make a PR (perhaps with some deprecation warning)?
Hi Jan,
thank you very much!
I see your point.. It's not my fault, Czech implementation has been added in the past by another dev..
Anyway I agree we should better fix it.
If you could contribute with your own PR, it would be great!
Some tips:

for now, don't remove support for current name (Czech), just add a deprecation hint to it
add a synonym for it (let's say czechia)
add tests for your new code, so that coveralls doesn't complain :)
In a next release we will remove support for the misspelled name.

Last but not least, start your work from "dev" branch, because I'll be merging your PR to it.
Thanks a lot for your contribution, cheers!
Dr. P
Ok,
I'll follow the tips. However, there is no dev branch in your repository... Which one should I create the pull request against?
Jan
Hi Jan,
I made a mistake: I wrote "dev" branch, but I was meaning "beta".
Please work starting from it, thank you very much!

holidays returns empty
Hi there,
I recently installed holidays into a fresh environment and holidays.US() returns {}.
I'm on Python 3.7 and holidays 0.9.9.
Any help is appreciated.
Allan
pip list
altair            2.3.0     
asn1crypto        0.24.0    
attrs             18.2.0    
backcall          0.1.0     
bleach            3.1.0     
certifi           2018.11.29
cffi              1.11.5    
chardet           3.0.4     
cryptography      2.4.2     
cycler            0.10.0    
decorator         4.3.0     
entrypoints       0.3       
holidays          0.9.9     
idna              2.8       
ipykernel         5.1.0     
ipython           7.2.0     
ipython-genutils  0.2.0     
jedi              0.13.1    
Jinja2            2.10      
jsonschema        3.0.0a3   
jupyter-client    5.2.4     
jupyter-core      4.4.0     
jupyterlab        0.35.4    
jupyterlab-server 0.2.0     
kiwisolver        1.0.1     
MarkupSafe        1.1.0     
matplotlib        3.0.2     
mistune           0.8.4     
mkl-fft           1.0.6     
mkl-random        1.0.1     
nbconvert         5.3.1     
nbformat          4.4.0     
notebook          5.7.4     
numpy             1.15.4    
pandas            0.23.4    
pandocfilters     1.4.2     
parso             0.3.1     
patsy             0.5.1     
pexpect           4.6.0     
pickleshare       0.7.5     
pip               18.1      
prometheus-client 0.5.0     
prompt-toolkit    2.0.7     
ptyprocess        0.6.0     
pycparser         2.19      
Pygments          2.2.0     
pyodbc            4.0.24    
pyOpenSSL         18.0.0    
pyparsing         2.3.1     
pyrsistent        0.14.9    
PySocks           1.6.8     
python-dateutil   2.7.5     
pytz              2018.7    
pyzmq             17.1.2    
requests          2.21.0    
scipy             1.2.0     
Send2Trash        1.5.0     
setuptools        40.6.2    
six               1.11.0    
statsmodels       0.9.0     
StringDist        1.0.9     
terminado         0.8.1     
testpath          0.4.2     
toolz             0.9.0     
tornado           5.1.1     
traitlets         4.3.2     
urllib3           1.24.1    
vega-datasets     0.7.0     
wcwidth           0.1.7     
webencodings      0.5.1     
wheel             0.32.3
Hi,
that's how you do it:
>>> holidays.US(years=2019).items()
[(datetime.date(2019, 7, 4), 'Independence Day'), (datetime.date(2019, 2, 18), "Washington's Birthday"), (datetime.date(2019, 12, 25), 'Christmas Day'), (datetime.date(2019, 11, 28), 'Thanksgiving'), (datetime.date(2019, 5, 27), 'Memorial Day'), (datetime.date(2019, 1, 1), "New Year's Day"), (datetime.date(2019, 9, 2), 'Labor Day'), (datetime.date(2019, 10, 14), 'Columbus Day'), (datetime.date(2019, 1, 21), 'Martin Luther King, Jr. Day'), (datetime.date(2019, 11, 11), 'Veterans Day')]

as explained here https://github.com/dr-prodigy/python-holidays#more-examples
Cheers!
Thanks very much.

Spanish Regions Codes
Hi, I really love the project.
I have found that the nomenclature of the regions of Spain do not follow the ISO 3166-2 standard. I was thinking about changing it, but I don't know whether to maintain compatibility with the current names or not. What is preferred?
Best regards and thank you for your time.
Hi,
thank you very much!
I would surely suggest to add support for Spanish ISO codes, aside to the currently supported codes, so to keep "the best of both worlds" ;-)
If you could implement this, I'd surely include it in the next releases.
Thx a lot, KUTGW!

Support Holidays in Russia
No description provided.

Easter Sunday and Whit Sunday are holidays in BB
The issue https://github.com/dr-prodigy/python-holidays/issues/110 is not correct.
Easter Sunday (Ostersonntag) and Whit Sunday (Pfingstsonntag) are Holidays only in BB (Berlin-Brandenburg). For HE (Hessen) every Sunday is a holiday.
https://de.wikipedia.org/wiki/Gesetzliche_Feiertage_in_Deutschland

2 Missing Dates in Germany
So the 24th and 31st december are afternoon-only holidays in Germany. Though most people take half-days off there anyway. In our case we use this for opening times of doctor's offices and the 24th and 31th december are closed times.
Could a GermanyExt be added similar to PortugalExt? Or could they even be added to Germany entirely?
I don't entirely know why they're missing, it seems intentional, hence me asking.
They are not even afternoon-only holidays, they are regular working days by the law. However, most companies let their employees go home the afternoon for free (or, rather have them only spend half a day of vacation for each of the days).
Sorry for my late answer.
Thank you both for your contributions. Given this, I'm going to close the issue.
@Achimh3011 , thanks again for your always prompt and valuable interventions.. tchuss!

queen birthday in WA, AU is wrong
Queen birthday is on last Monday of September.
line 1911 in holidays.py
Hi,
if possible, I would kindly ask you to implement the changes and tests, and pack them in a PR: I'll surely be merging it in the next release.
Thank you very much, cheers
Already fixed. Closing

public holiday returning false even when I can see it in print command
here is my print command output for NSW, AU showing that 1st Oct,2018 is Labour day public holiday.
But when you try to print if it is public holiday, it return false.
Same for queen birthday holiday.
>>> au_holidays = holidays.AU(prov='NSW')
>>> print('1-10-2018' in au_holidays)
False
>>> print('11-6-2018' in au_holidays)
False
>>> print(au_holidays)
{datetime.date(2018, 1, 1): "New Year's Day", datetime.date(2018, 1, 26): 'Australia Day', datetime.date(2018, 3, 30): 'Good Friday', datetime.date(2018, 3, 31): 'Easter Saturday', datetime.date(2018, 4, 1): 'Easter Sunday', datetime.date(2018, 4, 2): 'Easter Monday', datetime.date(2018, 4, 25): 'Anzac Day', datetime.date(2018, 6, 11): "Queen's Birthday", datetime.date(2018, 10, 1): 'Labour Day', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2018, 12, 26): 'Boxing Day'}
I just tried for VIC. Same issue.
3-12-2018 (3 dec) is showing as true instead of 12-3-2018(12 march).
And 6/11/2018 and 11/6/2018 both are coming as public holidays.
>>> au_holidays = holidays.AU(prov='VIC')
>>> print('11-6-2018' in au_holidays)
True
>>> print(au_holidays)
{datetime.date(2018, 1, 1): "New Year's Day", datetime.date(2018, 1, 26): 'Australia Day', datetime.date(2018, 3, 30): 'Good Friday', datetime.date(2018, 3, 31): 'Easter Saturday', datetime.date(2018, 4, 2): 'Easter Monday', datetime.date(2018, 4, 25): 'Anzac Day', datetime.date(2018, 6, 11): "Queen's Birthday", datetime.date(2018, 3, 12): 'Labour Day', datetime.date(2018, 9, 28): 'Grand Final Day', datetime.date(2018, 11, 6): 'Melbourne Cup', datetime.date(2018, 12, 25): 'Christmas Day', datetime.date(2018, 12, 26): 'Boxing Day'}
>>> print('11-6-2018' in au_holidays)
True
>>> print('6-11-2018' in au_holidays)
True
>>> print('12-3-2018' in au_holidays)
False
>>> print('3-12-2018' in au_holidays)
True
Hi isha1111, thank you for your support and interest in the prj.
Generally speaking, you are experiencing issues due to how you initialize dates from strings.
More specifically, to avoid day/month inversions, you'd better stick to the format:
yyyy-mm-dd
which is always recognized. You should get correct results then.
Please let me know, thank you
Okay cool.
Actually in 2018, 6-11-2018 and 11-6-2018 both were public holidays that got me confused.

WA day not correct in AU
WA day is on the first Monday of June and not on 1st June.
Hi,
this is relevant code:
        if self.prov == 'WA' and year > 1832:
            if year >= 2015:
                name = "Western Australia Day"
            else:
                name = "Foundation Day"
            self[date(year, JUN, 1) + rd(weekday=MO(+1))] = name

which returns correct results for Western Australia province.
Please double-check and close this issue if everything makes sense to you too, thank you.

England holidays
Hi,
Love the project.
Would it be possible to get an abbreviation for England, or provinces for UK?
I'm using your project as a workday/holiday sensor in my Home Assistant install, as shown here.
Currently I believe it is getting all UK holidays, some of which are not relevant in England (i.e. Scotland, Wales and N. Ireland have some different public holidays).
It would be awesome if I could narrow it down to only get holidays for England to prevent any issues with my Home Assistant automations.
Cheers.
Hi,
thank you very much for your support and interest in the project. Yours is a very nice one too üëç
I had a look at UK implementation (which was done in the very early days of the prj, while I was not involved), and possibly found what you're looking for.
In particular, you can initialize holidays using:
holidays.UK() or holidays.UnitedKingdom() => holidays for all provinces
or
holidays.England()
holidays.Scotland()
holidays.IsleOfMan()
holidays.Wales()
holidays.NorthernIreland()
holidays.Ireland() # (of course IE is not in the UK, but it's probably been put in the list to simplify things)

=> holidays only for requested province
Please let me know if this covers your needs, thank you very much
Hi,
I did see that issue before, I should've mentioned that to make my request more clear!
Unfortunately I don't think that method is a possibility for me, as outlined here it's only possible to specify the country abbreviation from the module that has been included in Home Assistant.
Please correct me if I'm wrong, I'm unfamiliar with Python and not that experienced with HA as I've only started using it recently!
As I'm writing this, I'm thinking I probably should have opened an issue on the Home Assistant project instead.
Sorry if this is a pain for you. Let me know what you think.
Cheers.
Hi,
sorry for late answering!
Thus probably not completely intuitive, you can provide any state description (both full or shortened, indistinctly) to CountryHoliday(...) method, like here:
my_holidays = holidays.CountryHoliday('Wales')
Given this, you should be able to provide any of those state names (yep, they're not provinces!) in your configuration.yaml, like this:
Example configuration.yaml entry
binary_sensor:

platform: workday
country: England
workdays: [mon, wed, fri]

Please let me know, cheers
Hi @tigattack ,
not hearing from you in the last month, I assume this issue has been resolved.
Please let me know, in case of no news I'll be closing it in some days.
Thank you very much
Solved :)

Easter sunday is holiday in VIC, QLD, ACT in AU
in file python.py , line 1871
if self.prov == 'NSW':
            self[easter(year)] = "Easter Sunday"


Can you please ACT, VIC, QLD states as well. As they also consider easter sunday as public holiday. Thanks
Hi,
if possible, I would kindly ask you to implement the changes and tests, and pack them in a PR: I'll surely be merging it in the next release.
Thank you very much, cheers
Fixed in 64d2366

Grand final day no holiday in VIC, AU
Grand final day is not coming as a holiday in Victoria, Australia
Thanks for your contribution: I added this on beta branch.

Columbus Day no holiday in AR?
Hi,
I'm retrieving holidays for Arkansas and it shows that Columbus day is a holiday, e.g.:
import holidays
us_holidays = holidays.CountryHoliday('US', state='AR')
us_holidays.get('2021-10-11') -> 'Columbus Day'

Is this true? According to my quick research (please note I'm not from the US, so I might confuse something), it isn't:

https://www.officeholidays.com/countries/usa/regional.php?list_year=2018&list_region=Arkansas
https://www.employmentlawhandbook.com/leave-laws/state-leave-laws/arkansas/holidays/

Thank you.
Hi,
thank you for your contribution.
Your analisys seems correct: I've just released a fix on beta branch.
Thank you very much, cheers

TypeError: Canada Holiday
https://github.com/dr-prodigy/python-holidays/blob/7d9c4ed98bfb90f01d1278c9bd9b7d591c70a5b8/holidays.py#L578
TypeError: 'in ' requires string as left operand, not NoneType
it should be elif self.prov == 'NS' and year >= 2015:
Also on https://github.com/dr-prodigy/python-holidays/blob/7d9c4ed98bfb90f01d1278c9bd9b7d591c70a5b8/holidays.py#L581
and possibly other places
It should be fixed now on beta.. please let me know.
Thx!

Confusion around Australian holidays
In my particular use case, I'd like to show all the holidays for all states of Australia (referred to as provinces in this project) on a calendar, as we have staff working across the country. I know it's possible to add a number of Holiday base classes together, but we then lose the ability to know which holiday is for which state - especially since a holiday can have the same name but is held on a different date depending on the state.
Additionally, if I was to call the Australia class, my expectation would be to get all the national holidays and not additionally the ACT holidays. In my mind the default behaviour should be that we get given state/province specific holidays only when we need/request them.
To combat this, I'd suggest the following:

When adding different holiday classes together, they are appended with information about the state/province each holiday is for (eg Labour Day (ACT, NSW, SA))
Dropping the default for countries provinces so that, like the US, a specific state can be requested when needed but otherwise only national holidays are returned by default

I'm happy to try and produce a PR that will achieve the first point - when I get a moment - if it's a direction the maintainers think would be useful.
Hi @jameskirsop ,
thank you very much for your contribution.
I surely can see your points, and they make good sense to me too.
What I feel important is to avoid / reduce at min any incompatibility with previous versions, but as long as your code is respectful about this (it seems quite so), I will for sure merge your PR.
NOTES

I maybe wrong but, if I catch your idea well, it will take quite an extensive work to achieve point 1, due to how provincial holidays are appended to national ones (ie: only the selected prov holidays are considered, so the other ones are not available in any way at runtime).
Point 2 changes lib's default behaviour a little (warn), but in a way which is surely preferable and more precise ( => ok), so I don't have any objections on it.

If you consider providing your work on these upgrades, please go on and I will be glad to release it.
Thank you very much again, cheers!
Closing this issue until a PR comes out .. thx ;-)

Please, add Russian holidays
No Russia :( Please add.
No Russia? Please contribute! :)

Country list
Are you interested of holidays for more countries?  I can provide Cyprus
Of course: all contributions are welcome!
In case you work to add a new country, please remember to:

run flake8 checks about PEP8 compliance
provide unit tests for all your new code (we expect to maintain 100% code coverage)

Thank you very much, best regards
Hi.
I am for from a programmer so what I can do is to provide a list of all
holidays in Cyprus.  Unfortunately I cant help with something else

Anders
‚Ä¶
On Wed, 10 Oct 2018, 16:15 Maurizio Montel, ***@***.***> wrote:
 Of course: all contributions are welcome!

 In case you work to add a new country, please remember to:

    - run flake8 checks about PEP8 compliance
    - provide unit tests for all your new code (we expect to maintain 100%
    code coverage)

 Thank you very much, best regards

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#139 (comment)>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/Ap_EEWgBCA7s5lC5KgOt8q0tF-w-_nZwks5ujfLWgaJpZM4XVJIn>
 .
Hi,
in my experience we should be able to find holidays for any country quite easily on the web so, unless your pages are very specific / very well documented, you could avoid worrying about this.
In case no code contribution is provided, addition of new countries (such as Cyprus or any other) will be developed when possible.
Thank you very much, best regards
If you dont want the help I will ofc not give it. I just wanted to make the
workday sensor usable also for us on Cyprus.
‚Ä¶
On Wed, Oct 10, 2018 at 5:10 PM Maurizio Montel ***@***.***> wrote:
 Hi,
 in my experience we should be able to find holidays for any country quite
 easily on the web so, unless your pages are very specific / very well
 documented, you could avoid worrying about this.

 In case no code contribution is provided, addition of new countries (such
 as Cyprus or any other) will be developed when possible.

 Thank you very much, best regards

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/139#issuecomment-428587048>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/Ap_EEdud8X7pMvd-Zh7XYa0tjccD9b9Sks5ujf_NgaJpZM4XVJIn>
 .


-- 
Kind Regards

Anders Yuran

Havouza 15
4607 Pissouri
Cyprus
Hi,
I haven't said we don't want your help: as stated, apart from very specific cases, it's not really difficult to obtain information about country holidays all over the world, so unfortunately your proposed work wouldn't be of so much help.
Currently we cover 38 countries out of nearly 200 existing in the world (so, not a small number, but still very far from completion).
It goes without saying that, if no code contribution is provided, any of these missing 162 countries will share the same priority, so we can't "promise" any specific country implementation, especially in a short time.
I hope this makes sense to you; I'm closing this issue.
Thanks all the same for your interest.

setting state/province using CountryHoliday
Assuming that, CountryHoliday is used as described in the README and the country is not know until runtime (e.g. it is read from a config or user input):
import holidays

country = "DE"  # from sys.argv, for example
ch = holidays.CountryHoliday(country)
This of course yields a perfectly fine instance. The problem comes up when the state or province is also relevant. Since CountryHoliday returns an instance, there is no way to add a state, which is set using the constructor.
A couple of workarounds:

use type() or .__class__ to get the class; create a new instance
use getattr(holidays, country) to get the class directly, skips the nice error handling

Neither of those seem like a sleek and easy to understand solution to me.
To resolve this, I propose that all keyword arguments to CountryHoliday should be passed onto the class, like so (omitting error handling):
def CountryHoliday(country, **kwargs):
    country_holiday = globals()[country](**kwargs)
    return country_holiday

holidays_de_he = CountryHoliday("DE", prov="HE")
This enables setting the state/province and of course all other options like expand or observed, even when using the very friendly CountryHoliday. The external API stays stable, since arguments are only added and the single existing one just stays in place.
What do you think? :) I am happy to code up a quick PR including docs and a test, if you'd like.
Hi,
thanks for your very good analysis! üëç
I totally agree with you: province / state initialization should find their place in CountryHoliday method as well.
But instead of providing **kwargs (not explicit parameters), I'd better like to see a clearer method signature (ie: thru optional parameters), such as
def CountryHoliday(country, prov='', state=''):
    [...]

Of course, go on coding if you like: I'll be glad to include this upgrade in the next releases.
Please let me know, thank you
Thanks a lot for your contribution.. closing, cheers!
@dr-prodigy Thanks :) do you know when this will be released?
Hi.. nope, not yet: not having a real release scheduling, I usually pile up some updates on beta branch, then when they're a considerable amount (no specific rule about this: it's just up to my sense), I "pour" them on master and release a new official version to github and pypi.
Meanwhile, if you can't wait, there's always the possibility to install the beta directly from the repo.
As much as possible, I always care about stability, test coverage etc. before committing any change, and I never apply refactorings which could break compatibility with previous code (even beta), so you should never have issues basing your solution on Holidays beta versions.
Please refer to:
https://github.com/dr-prodigy/python-holidays#development-version
Thank you again, ciao! ;)

Day after Thanksgiving is a holiday in CA
Day after Thanksgiving is a holiday in CA: https://www.dmv.ca.gov/portal/dmv/detail/about/holidays
In fact, it appears to be one in a number of US states: https://www.officeholidays.com/countries/usa/black_friday.php
Hi, thank you.
Day after TG is already managed in the lib for a lot of US states (but, as you stated, not currently for CA).
Unfortunately, in your links I can't find since when it's been holiday, and if it is going to remain like this in the future.
Would you please integrate your issue with these data?
Thank you very much
Ping..

Multi-locale support
Hello there!
As long as the library provides verbose human-readable pieces of text (names of holidays), it would make a lot of sense to make that locale-aware. It is especially relevant for countries that have several official languages (like Switzerland, Canada or Belarus).
I see the simplest implementation as adding another parameter to HolidayBase.__init__  as well as the respective get() and its variations.
>>> h = holidays.Canada()
>>>  h.get('2018-09-03')
Labour Day

>>> h.get('2018-09-03', locale='fr_CA')
F√™te du travail

Would love to hear if that sounds reasonable...
Thank you!
Well it sure is reasonable.. thank you!
We should theoretically complete this new feature by managing all multi-language countries.
I will think of it and let you know ASAP.
Thanks again, best regards
Hi there.. just completed a new release, so it's time to start thinking about next updates..
Could you be possibly providing translations for all Belarus locales? In this case I would be able to implementing this new feature for it.
Then, in the future next countries will hopefully come over..
Please let me know what you think, thanks in advance!
Thanks for keeping this on the radar!
Sure, I'll be glad to provide the translations for Belarus. Shall I contribute to a branch where you implement multi-locale?
Hi @Gennady-Andreyev ,
sorry for being late..
I have made some analysis on this subject: it seems it would take quite a large refactoring to achieve your (still good) proposal.
I will try to start this so you can complete the work, but due to other priorities, I currently can't provide a precise scheduling.
I'll let you know, thank you very much for your support!
I'd just like to add my support for this feature. I'll happily translate Switzerland where a French, Italian, and possibly an English translation would be useful.
Why, of course: if you want to contribute with this useful feature, I'll surely be glad to support you and include your work in the proj.
Thank you very much, KUTGW!
Closing this issue until somebody will make some work on it ;-)

Adding a Singapore Calendar
Similarly to what has been requested for Israel, Singapore public holidays are made of fixed dates (New Year, Labour day, National Day and Christmas). Other public holidays are "religious" celebrations taken from muslim, Hinddu and Buddhist calendars). These "religious" celebrations vary every year but the Ministry of Manpower in Singapore publishes the official public holidays with 1 year in advance (currently published are 2018 and 2019).
There is no accurate way to calculate (or I do not know it) what will be the dates for these religious holidays for 2020 and beyond. Which means that this library, if it is created will have to be updated at the beginning or every year.
I have prepared a SG class covering 2018 and 2019. I could submit it but I will need some guidance as I am a newbie to all this (Github, python,...)
Here is the code:
`# -- coding: utf-8 --
class Singapore(HolidayBase):
PROVINCES = []
def __init__(self, **kwargs):
    self.country = 'SG'
    HolidayBase.__init__(self, **kwargs)

def _populate(self, year):
# Singapore became independent on 9th August 1965
    if year < 1965:
        return

    # New Year's Day
    name = "New Year's Day"
    jan1 = date(year, 1, 1)
    self[jan1] = name
    # If New year falls on Sunday, Monday becomes public Holiday
    if self.observed and jan1.weekday() == 6:
        self[date(year, 1, 2)] = name + " (Observed)"

    # Chinese New Year
    name = "Chinese New Year (1)"
    if year == 2018:
        self[date(year, 2, 16) = name
    if year == 2019:
        self[date(year, 2, 5) = name

    # Chinese New Year
    name = "Chinese New Year (2)"
    if year == 2018:
        self[date(year, 2, 17) = name
    if year == 2019:
        self[date(year, 2, 6) = name

    # Good Friday
    self[easter(year) + rd(weekday=FR(-1))] = "Good Friday"

    # Labour Day
    name = "Labour Day"
    # Started being celebrated in 1960 after People Action Party went into power
    # Reference Wikipedia (Labour Day Singapore)
    if year >= 1960:
        self[date(year, 5, 1) = name
    # if Labour day falls on a Sunday, Monday is observed
    if self.observed and may1.weekday() == 6:
        self[date(year, 5, 2)] = name + " (Observed)"

    # Vesak Day
    name = "Vesak day"
    if year == 2018:
        self[date(year, 5, 29) = name
    if year == 2019:
        self[date(year, 5, 19) = name

    # Hari Raya Puasa
    # End of Ramadan
    name = "Hari Raya Puasa"
    if year == 2018:
        self[date(year, 6, 15) = name
    if year == 2019:
        self[date(year, 6, 5) = name

    # National Day
    if year > 1965:
        name = "National Day"
        aug9 = date(year, 8, 9)
        self[feb6] = name
    # if National day falls on a Sunday, Monday is observed
        if self.observed and year >= 1965 and aug9.weekday() == 6:
            self[date(year, 8, 10)] = name + " (Observed)"

    # Hari Raya Hadji
    # First day of muslim pilgrimage to Mecca
      name = "Hari Raya Hadji"
      if year == 2018:
          self[date(year, 8, 22) = name
      if year == 2019:
          self[date(year, 8, 11) = name

    # Deepavali
      name = "Deepavali"
      if year == 2018:
          self[date(year, 11, 6) = name
      if year == 2019:
          self[date(year, 10, 27) = name

    # Christmas Day
    name = "Christmas Day"
    dec25 = date(year, 12, 25)
    self[dec25] = name
    # if Christms day falls on a Sunday, Monday is observed
    if self.observed and dec25.weekday() == 6 :
        self[date(year, 12, 26)] = name + " (Observed)"

class SG(Singapore):
pass
`
Hi,
thank you for your work.
Unfortunately, IMHO, a good library (or sw in general) is supposed to work as-is for a reasonable time (say: 10 years at least?) with no need for mandatory upgrades (which could instead be applied in case of bug fixing or more functionalities added / needed).
Moreover, a future release could, for other reasons, break compatibility with previous versions: this would impose code refactoring to anyone using it, only to keep it working from a year to the next.
For these reasons, I have to say that this approach (ie: impose a new release every year to include new year's data) is not acceptable in the official version.
But, of course, we still can receive logic for all the fixed and known holidays.
Then, I would suggest you to:

create your own fork of the library
add and commit your code there
so you can play around and test everything with no harm and, when you're done, we will be able to separate and include the compliant part of the code in the mainstream.

This way (which, btw, is the "standard" :) ) you still can stick to your custom version if the official library doesn't cover all your needs.
Thank you very much, best regards
Hi
Thank you for your quick answer. I understand your point (work as-is for a reasonable time).
If I create my own fork, will I be able to use it for the works I do in my home automation (Home Assistant binary_sensor.workday_sensor)? (This is my main objective in trying to build this "Singapore" Class).
I will follow your recommendation anyway and try my best to come out with something viable.
Best regards
The 10+ years stability will not work with other holidays as well (e.g., the newly introduced "Reformationstag" holiday in Germany (single occurence holiday for entire Germany with one year lead time, newly set up holiday in parts later on).
Given that, definition of holidays two years in advance does not sound so bad...
I think it's important to be clear with what users can expect from the library and that holidays are a moving (sometimes even fast moving) target.
I see the point, but - still - an exception can't become rule.
As a maintained library, python-holidays - of course - will always try to reflect any change that will occur in the future.
On the other hand, it must be up to the user whether to update or not, which means, among other assumptions, it won't impose cadenced updating to remain operational.
In other words, every version released aims to be a "final" version (even if of course, it won't be).
As I already explained in a direct email to @popsyann, a good approach to these use cases would be to integrate external services providing the required data as soon as they become available (ie: consume some holiday web service) but, being an impacting and disruptive modification, at least for now, we must consider it out of scope.
PS @popsyann : of course, you will be able to use your library fork if needed, either installing it manually with a "git clone .." or, if using virtualenv or similar, also adding your repo to project through requirement files.
Some info here:
https://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source
Please keep me updated, thx!

Adding Israeli holidays
I'd like to suggest adding Israeli holidays.
Note that Israel has a few different calendars for holidays: they are not different between states (no states in Israel) but rather between religions: Jewish, Christian and Muslim holidays are all different.
Furthermore, they don't all follow the Georgian calendar. Libraries such as pyluach might be convenient in implementing these holidays.
I will try to address the issue, and update accordingly.
Hi,
contributions are welcome!
I'll be waiting for yours, thank you very much

Is there a way to get school vacation ?
Days off are great, but holidays may also be understood as school vacation. did someone already spend some time on this topic ?
Hi,
thank you.
Nope. Unfortunately I think it's not feasible, because school days (and vacations) are set on year basis with no specific logic.

Push archive of 0.9.6 to PyPI
Could you please push 0.9.6 as archive to PyPI? At the moment only the .egg is available.
Thanks.
Is required by home-assistant/core#15831
Thank you for your issue reporting: I've just released 0.9.6 with tar.gz format.
Pls let me know, thanks
Works.
Thanks again for your fast reaction.

Not able to access Indian Holidays
I am trying to run holidays.IND() for Indian Holidays but it is showing me following error:
AttributeError                            Traceback (most recent call last)
 in ()
----> 1 holidays.IND()
AttributeError: module 'holidays' has no attribute 'IND'
please suggest any solution for this.
Hi,
unfortunately, indian holidays still have to be released in PyPi lib release.
Either wait for the current source version to be released in PyPi, or use it through sources (which already contain indian holidays implementation).
Thanks
Just released v.0.9.6 to pypi. Thanks
Thanks.
‚Ä¶
On Thu, Aug 2, 2018 at 3:15 AM, Maurizio Montel ***@***.***> wrote:
 Just released v.0.9.6 to pypi. Thanks

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <https://github.com/dr-prodigy/python-holidays/issues/117#issuecomment-409734561>,
 or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AhtXvdOGOMfhXaurrq01UVzjZzVD8Debks5uMiFqgaJpZM4VhTZB>
 .
Hi,
I am getting similar error when I run the following
from datetime import date
import holidays
uk_holidays = holidays.UnitedKingdom()
for ptr in holidays.UnitedKingdom(years = 2020).items():
print(ptr)
Error: AttributeError: module 'holidays' has no attribute 'UnitedKingdom'
May you please advise on a solution

Holidays for state BW in Germany are missing (?)
Hi,
thanks for coming up with this nice package, I am using 0.9.5 from Debian :-)
I just realized, that the holidays for BW in Germany are incomplete:
import holidays
        
bw_holidays = holidays.DE(state='BW',years=2018)

for date, name in sorted(bw_holidays.items()):
    print(date, name)


results in

rd@b370:~$ python3 test-holidays.py 
2018-01-01 Neujahr
2018-03-30 Karfreitag
2018-04-02 Ostermontag
2018-05-01 Maifeiertag
2018-05-10 Christi Himmelfahrt
2018-05-21 Pfingstmontag
2018-10-03 Tag der Deutschen Einheit
2018-12-25 Erster Weihnachtstag
2018-12-26 Zweiter Weihnachtstag
rd@b370:~$ 

A full list is give e.g. here:
https://www.schulferien.org/Feiertage/Feiertage_Baden_Wuerttemberg.html
I just realized that I need
holidays.DE(prov='BW',years=2018)
Not sure what is the exact difference, but this gives a correct result:
rd@b370:~$ python3 test-holidays.py 
2018-01-01 Neujahr
2018-03-30 Karfreitag
2018-04-02 Ostermontag
2018-05-01 Maifeiertag
2018-05-10 Christi Himmelfahrt
2018-05-21 Pfingstmontag
2018-10-03 Tag der Deutschen Einheit
2018-12-25 Erster Weihnachtstag
2018-12-26 Zweiter Weihnachtstag
rd@b370:~$ 

The bugreport should than be rather clarify difference between state and prov (?)
State code is currently used for United States only, while single states (such as Germany) are divided into provinces (in some states this definition may be not totally exact, but should be acceptable as a generic name for districts / departments / etc.).
I'll try to clarify this in README.rst, thanks
Done, thank you

Canada Day vs. Dominion Day
You currently report Canada Day as being valid all the way back to 1867, but before 1983, the holiday was called "Dominion Day".
Also, it was not a statutory holiday until 1879, which means there should be no "(Observed)" version of Dominion Day before 1879.
Okay, all clear.. will fix it in next release.
I assume these considerations are valid both for NL province (whose holiday is currently named "Canada Day") and for other provinces (whose holiday is named "Memorial Day").
Hope this makes sense: please let me know, otherwise we'll rearrange code consequently.
Thank you
Released in v.0.9.6. Thank you

pull date range
Hi
I am a newbie to this library and I tried to find the holidays in a date range that started from date A to date B in Canada.
for example, this is what I would do with the U.S. holidays:
from pandas.tseries.holiday import USFederalHolidayCalendar as calendar
cal = calendar()
holidays = cal.holidays(start='05-13-2014, end=05-13-2016)
print(holidays)
I would appreciate if you help me with that.
Regards
I solved the problem outside. But it could be a nice function for the library.
def holidays_from_range(lower_date, upper_date, prov):
    # smallest and biggest year
    smallest_year = lower_date.year
    biggest_year = upper_date.year
    # list_holidays has all holidays
    list_holidays = sorted(holidays.CH(prov=prov, years=range(smallest_year, biggest_year+1)))
    df_holidays = pd.DataFrame(index=list_holidays)
    # return just the holidays between lower- and upper-date
    df_holidays = df_holidays[lower_date:upper_date]
    ls_holidays = []
    for row_index, row in df_holidays.iterrows():
        ls_holidays.append(row_index.strftime('%Y%m%d'))
    return ls_holidays
I will release this solution after some more analysis: thank you very much for your contribution.
Hey @dr-prodigy I've got an idea to tackle this, mind if I take a shot and get some feedback if you haven't had a chance to get started?
Hey elln2,
in fact unfortunately I couldn't work on this until now, but still it's an interesting feature.
So, of course, I'll surely be happy to consider/include your work, if you want to contribute in any way.
Thank you very much, cheers!
Thank you very much for your contribution @elln2 .. much appreciated! üëç

Add support for Singapore country
Add support for new country: Singapore
http://www.mom.gov.sg/newsroom/press-releases/2017/0405-singapore-public-holidays-2018
A potential way to implement this differently could be using Holiday API, but this might be a better feature for Hassio repository maybe.
If you could contribute with your help I would surely apply to integrating your code in the project mainstream ASAP.
Your contribution is much appreciated, thank you very much.

Bu√ü- und Bettag was a Germany-wide holiday from 1990-1994
Hi,
from 1990 until 1994, Bu√ü- und Bettag was a Germany-wide holiday after which it was removed except for federal state Saxonia (prov == 'SN'). python-holidays` incorrectly lists it as a Saxonia-specific holiday from 1990 onward.
https://en.wikipedia.org/wiki/Bu%C3%9F-_und_Bettag#As_a_statutory_non-working_holiday
https://de.wikipedia.org/wiki/Bu%C3%9F-_und_Bettag#Abschaffung
Okay, will be fixed in next release, thank you
Fixed in just released v.0.9.6. Thank you

Easter Sunday is a holiday in all of Germany, not only in Brandenburg.
For some reason I don't understand python-holidays only defines Easter Sunday for country == 'DE' as holiday in prov = 'BB' which I guess means Brandenburg. Easter Monday and Good Friday are (correctly) set up for entire Germany.
I'm not aware of any special regulation in Brandenburg, so I'd say this is a bug. Of course, Easter Sunday is always a Sunday, so the consequences aren't that great from a work time perspective, but anyhow...
P.S.: https://www.youtube.com/watch?v=kdwKbiMyvu0
P.P.S: Same issue with Pentecost (Pfingstsonntag)...
Thank you: it will be fixed in the next release.
Released in v.0.9.6. Thank you

Push archive of 0.9.5 to PyPI
Please push 0.9.5 as archive to PyPI. Thanks.
It's been already released on 23rd of April:
https://pypi.org/manage/project/holidays/release/0.9.5/
Thanks.
Yes, it has but only the .egg is available.
Okay, now everything should be in place! Pls let me know, thank you!
Works. At least for home-assistant/core#14274 üòâ
Thanks for your effort.

Should province and state be synonyms?
Hi,
shouldn't states and provinces be synonyms so that they can be used interchangeably?
For example, so that
holidays.DE(state='BW') == holidays.DE(prov='BW') # True
Regards,
Achim
Hi,
functionally, states and provinces behave and work the same, in that you have specific holidays for a given state or province among all the ones belonging to a country.
On the other hand, "state" concept makes sense for, for instance, USA, but makes no sense in "normal" countries (ie: not federal union or similar), so it's correct to keep them separated.
Thank you regards
Maurizio
Hi Maurizio,

In case of Germany then, states should be permitted as it is a federal country. Thus, can you reopen the issue.

Best regards,
Achim

Am 17. Apr. 2018, 13:30 +0200 schrieb Maurizio Montel <notifications@github.com>:
‚Ä¶
 Hi,
 functionally, states and provinces behave and work the same, in that you have specific holidays for a given state or province among all the ones belonging to a country.
 On the other hand, "state" concept makes sense for, for instance, USA, but makes no sense in "normal" countries (ie: not federal union or similar), so it's correct to keep them separated.
 Thank you regards
 Maurizio
 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.
Okay, but in this case, for Germany we should move from provinces (as-is) to states, breaking compatibility with lib previous versions..
At the time this would carry more cons than pros, so we will consider this only in case of a remarkable refactoring.
Thank you very much

How register some strange holidays
Hello,
I am working on Argentina Holidays, and I have an issue.
In addition to 'traditional holidays', we have some holidays named 'Non-work day' for some religions and 'Bridge holidays' or 'tourist holidays'. The last, is not fixed each year. How could I register this holidays?
Regards!
Well, there should be a way to "predict" those holidays.. or are they just defined at the beginning of each year?
If you can predict them, you should provide a complete algorithm to do so.. otherwise, I think they can't be supported..
Please let me know, thank you very much
Thanks for your response.
No, they have not a "logic" depends of political decisions. You are right, this can not be supported.
Maybe,  it would be interesting to have some way to make update of holidays by an api, or something similar, a way to update the holidays database, and don't have to modify the code to add a holiday.
What do you think?
But for now, I close this issue.
Well it sure would be an interesting upgrade..
Unfortunately, python-holidays is a statically-installed standalone library (which is standard for any pip package, I would say) and theoretically it should work as-is, with no network connection, so it's not really easy to manage this new requirement remaining in scope..
Moreover, we should have that API installed somewhere, and grant it will stay up&running for a sufficiently long time..
We'll see, thank you as for now! üëç

Is there a way to get dates of holidays in following years?
Is it possible to get dates of specific holidays in next few years? Like holidays.get_dates('Labor Day', next=5) will return the dates of labor day in next 5 years?
Thanks.
No, currently there ain't such feature.. But I see the point: we will see if an implementation is feasible.
Thank you very much

Retrive calendar by country name/abbreviation
In many occasions the country for which we want to retrive the calendar is a parameter of the program/analysis itself so don't want to hardcode an infinite list of if ... elif.
Is it possible to have a function like get_calendar(country), from which we can retrive a calendar class by passing a string with the country name/abbreviation?
Thanks
It would be nice to have a simple way of doing this out of the box but this is also possible by dynamically loading the class you need:
import holidays

country = 'US'
CountryHolidays = getattr(holidays, country)
country_holidays = CountryHolidays()
Just done! Thx to both ;)

Queen's birthday in AU/Queensland is wrong
Yes, we are bit odd state that we celebrate her birthday on a different date compared to all other Australian states, just like WA does.
We used to have same exact date up until 2012 (that we decided to celebrate twice) than turned back to normal for a few years. In 2016, we again decided that we could move her birthday to completely different month, first Monday of October (same as in 2012) and it remained permanent (so far).
https://www.timeanddate.com/holidays/australia/queens-birthday
PR will be provided within the cumulative merge #84.

Include the Ekka show of Queensland AU
The Royal Queensland Show (known as Ekka)

The Show starts on the first Friday of August - providing this is not prior to the 5th - in which case it will begin on the second Friday.

https://www.rna.org.au/about-us/ekka-dates-2013-2050.aspx
So the Wednesday during the show is a public holiday in our state.
PR will be provided including a test.

12th of October is a national day in Spain
12th of October is a national holiday in Spain.
It currently reports "D√≠a de la Hispanidad"

CI build error: E722 do not use bare 'except'
Latest master is failing due to a new flake8 warning:
$ flake8 holidays.py tests.py
holidays.py:71:13: E722 do not use bare except'

https://travis-ci.org/hugovk/python-holidays/jobs/294448964
Fixed in 1452cc3

October Bank Holiday in Ireland is wrong
In the code, it should be 10, not 8.
 # October Bank Holiday (last Monday in October) if self.country == 'Ireland': name = "October Bank Holiday" self[date(year, 8, 31) + rd(weekday=MO(-1))] = name
Fixed in 1452cc3

Missing Spanish Holiday
The national day of Spain seems to be missing from the holiday list. It is held every year on October 12.
>>> import holidays
>>> hd = holidays.ES()
>>> hd.get('2016-10-12')

More information can be found on the Wikipedia page: https://en.wikipedia.org/wiki/Fiesta_Nacional_de_Espa%C3%B1a
I added this as a pull request in #74. Just waiting for the merge! In the meanwhile, you can use my fork
Merged in 1452cc3

Reformationstag Germany
Reformationstag 31.10. is always a public holiday in Germanys state Brandenburg (BR)
Furthermore in 2017 it is a public holiday in all states (500. Anniversary of Martin Luthers 95 Thesis)
Brandenburg is BB and not BR and BB is already in the list. The 2017 issue is correct though.
Fixed in 1452cc3

12 July 2017 is a holiday in UK
Why is today holiday in uk?
if datetime.date.today() in holidays.UK():
        print('UK holiday')
>>> holidays.UK()[datetime.date.today()]
'Battle of the Boyne [Northern Ireland]'
However, it seems to concern only Northern Ireland.
Thanks for the explanation. Is there a "UK Bank Holiday" equivalent?
There's quite a few which are only for Northern Ireland or Scotland. I think all the England and Wales ones are also holidays in NI and Scotland.
https://www.gov.uk/bank-holidays
Perhaps the home nations should be added for the UK as "Provinces/States Available"?
https://github.com/ryanss/python-holidays#available-countries
From the code, it seems like that by design. Not really sure if it's correct or not anyway! What do you think?
Use holidays.England() for UK Bank Holidays.  I've checked this against https://www.gov.uk/bank-holidays
This is a bug.
This particular holiday should only be in holidays.NorthernIreland().
Or rather, this is by design.
>>> import holidays
>>> for date, name in sorted(holidays.UK(years=2018).items()):
...     print(date, name)
...
2018-01-01 New Year's Day
2018-01-02 New Year Holiday [Scotland]
2018-03-30 Good Friday
2018-04-02 Easter Monday [England, Wales, Northern Ireland]
2018-05-07 May Day
2018-05-28 Spring Bank Holiday
2018-08-06 Summer Bank Holiday [Scotland]
2018-08-27 Late Summer Bank Holiday [England, Wales, Northern Ireland]
2018-11-30 St. Andrew's Day [Scotland]
2018-12-25 Christmas Day
2018-12-26 Boxing Day
>>>
See https://github.com/dr-prodigy/python-holidays/issues/40 for details.
If the holiday has square brackets, you'll need to check the country you're interested in is mentioned.
Or you can check holidays.England() or whichever ones you're interested in.
@hugovk : how should we manage this?
Well, at the moment it is working as designed, as detailed in #40.
If that's fine for everyone then this can be closed.
Okay, that's what I wanted to hear.. ;)
Thx mate!

Black Friday/Cyber Monday
Did you not include these on purpuse ? i dont mind writing a pull request and fix it
Indeed, they're not to be included in bank holidays.

in Colombia 2017 don't show the  "A√±o Nuevo [New Year's Day]"???
for date, name in sorted(holidays.CO(years=2017).items()):
print(date, name)
?????
2017-01-09 D√≠a de los Reyes Magos Epiphany
2017-03-20 D√≠a de San Jos√© Saint Joseph's Day
2017-04-13 Jueves Santo [Maundy Thursday]
2017-04-14 Viernes Santo [Good Friday]
2017-05-01 D√≠a del Trabajo [Labour Day]
2017-05-29 Ascensi√≥n del se√±or Ascension of Jesus
2017-06-19 Corpus Christi [Corpus
.
.
.
on 2016 and 2018 appears ok
thanks, good job
According to code, New Year's Day is not considered as holiday when it falls in weekend.
Not totally sure about this, but it makes some sense.
Please review this issue, thx!
We can assume described behaviour is correct :)

Problem with travis?
It appears that there is a problem with the build configuration. pip install $DATEUTIL fails on Python 3.2 (and therefore also pypy3). This may be because pip>=8.0.0 no longer supports python 3.2.
See eg https://travis-ci.org/ryanss/python-holidays/jobs/232419470
I imagine it would be easiest to drop Python 3.2, it's no longer supported.
Here's a PR to drop Python 3.2: #78.
Fixed in 1452cc3

Add support for Swedish Holidays
Doing some googling the following could be used as data source:
http://api.dryg.net/dagar/v2.1/YYYY, http://api.dryg.net/dagar/v2.1/YYYY/MM, http://api.dryg.net/dagar/v2.1/YYYY/MM/DD
Result for 2017
{
  "cachetid": "2017-05-10 14:05:17",
  "version": "2.1",
  "uri": "/dagar/v2.1/2017",
  "startdatum": "2017-01-01",
  "slutdatum": "2017-12-31",
  "dagar": [
    {
      "datum": "2017-01-01",
      "veckodag": "S√∂ndag",
      "arbetsfri dag": "Ja",
      "r√∂d dag": "Ja",
      "vecka": "52",
      "dag i vecka": "7",
      "helgdag": "Ny√•rsdagen",
      "namnsdag": [],
      "flaggdag": "Ny√•rsdagen"
    },
    {
      "datum": "2017-01-02",
      "veckodag": "M√•ndag",
      "arbetsfri dag": "Nej",
      "r√∂d dag": "Nej",
      "vecka": "01",
      "dag i vecka": "1",
      "namnsdag": [
        "Svea"
      ],
      "flaggdag": ""
    },
    {
...
Documentation can be found at: https://api.dryg.net
Support added in 1452cc3

Add France Holidays
Could it be possible to include France national holidays?
I made a pull request (#48) for that, feel free to contribute.
Hello, in which milestone this feature will be available ? please
Merged in 1452cc3

Brazilian national and state holidays
Could it be possible to include Brazilian national (federal) and state holidays? I am working on an app where I need to calculate odd workdays, that is single weekdays squeezed between holidays, or holiday and weekend. What I need for now is the federal + the state of Esp√≠rito Santo.
Could you possibly implement it? Thank you very much, your help is much appreciated! ;)
Okay, I'd say "timeout expired" for this request :)

can we get indian holidays also along with other countries in this list? 
No description provided.
Could you possibly implement it? Thank you very much, your help is much appreciated! ;)
Okay, I think this is no issue anymore.. :)

UK Needs province
Currently the United Kingdom has no province/state member but there are different bank holidays between the countries that make up the UK.
Specifically with E=England, W=Wales, S=Scotland, N=Northern Ireland, R=Republic of Ireland & M=Isle of Man and with all holidays movable to the next working day in the case of not falling on a working day:

1 January (New Year's Day) - EWSNRM
2 January - S
17 March (St Patrick's Day) - NR
The Friday before Easter Sunday (Good Friday) - EWSN M
The Monday after Easter Sunday (Easter Monday) - EW NRM
First Monday in May[2][3] (May Day, Early May Bank Holiday) - EWSNRM
Last Monday in May[4][5] (Spring Bank Holiday) - EWSN M
First Monday in June (June Bank Holiday) - R
First Friday in June (TT Bank Holiday) - M
5 July (Tynwald Day) - M
12 July (The Twelfth, Battle of the Boyne) - N
First Monday in August (Summer Bank Holiday) - S R
Last Monday in August (Late Summer Bank Holiday, August Bank Holiday) - EW N M
Last Monday in October (October Bank Holiday) - R
30 November (St Andrew's Day) - S
25 December (Christmas Day) - EWSNRM
26 December (Boxing Day, St Stephen's Day) - EWSNRM

The really confusing one is that if Christmas day falls on a weekend day it is move to the day after Boxing Day so that if the 25th is Saturday then Boxing Day will be moved from Sunday to Monday and Christmas Day will have a substitute day on the 28th.
Please consider adding these regions with their specific holidays to this tool
I added the individual countries separately as they are countries and not provinces. If you could take a look at the new additions and let me know if you see any problems that would be terrific, thanks!
holidays.England()
holidays.Wales()
holidays.Scotland()
holidays.NorthernIreland()
holidays.Ireland()
holidays.IsleOfMan()
Thanks for the quick response. The only problem is that while you are correct that all of them are individual countries they are also a part of the UK, (except Isle of Man, a self-governing crown dependency and the Republic of Ireland, no longer a part of the United Kingdom), so the entries for UK should either require a member state/country, possibly defaulting to England & Wales which will annoy some or do as diaries do and show them all with qualifiers on those that are not for all of England, Wales, Scotland, Northern Ireland & Isle of Man - some physical diaries include Eire or RoI so as to increase their distribution.
Maybe if the constructor for UK were to have members for each of them, get the holidays for each of the member states and any that weren't common to all add a suffix for which.
N.B. If you go for the suffix or the adding a state/province/country to UK please don't include Ireland/Eire/RoI as that will cause upset as well.
Here is an attempt at adding qualifiers to the holiday names (only when generated with holidays.UnitedKingdom() or holidays.UK()). What do you think of this?
>>> import holidays
>>> for date, name in sorted(holidays.UK(years=2016).items()):
...     print date, name
... 
'2016-01-01' New Year's Day
'2016-01-02' New Year Holiday [Scotland]
'2016-01-04' New Year Holiday [Scotland] (Observed)
'2016-03-17' St. Patrick's Day [Northern Ireland]
'2016-03-25' Good Friday
'2016-03-28' Easter Monday [England, Wales, Northern Ireland]
'2016-05-02' May Day
'2016-05-30' Spring Bank Holiday
'2016-07-12' Battle of the Boyne [Northern Ireland]
'2016-08-01' Summer Bank Holiday [Scotland]
'2016-08-29' Late Summer Bank Holiday [England, Wales, Northern Ireland]
'2016-11-30' St. Andrew's Day [Scotland]
'2016-12-25' Christmas Day
'2016-12-26' Boxing Day
'2016-12-27' Christmas Day (Observed)
>>>
Looks good!
Great, thanks for the help on this!

"Bevrijdingsdag" logic for Netherlands not correct
Hi,
The logic for "Bevrijdingsdag" in the Netherlands is not entirely correct:
Related code: https://github.com/ryanss/python-holidays/blob/master/holidays.py#L2015
Related PR: #37
Official government page about this day (in Dutch): https://www.rijksoverheid.nl/onderwerpen/arbeidsovereenkomst-en-cao/vraag-en-antwoord/bevrijdingsdag-5-mei-vrije-dag
Summary: It is an official holiday every year but people do not necessarily get a day off. For a lot of people (but not all) their contract states that they have a day off every 5 years (year % 5) so in those cases the current logic is correct.
Solution: The solution depends on the definition of holiday. If it has to be a day that nobody has to work, then bevrijdingsdag is never a holiday. If it is 'just' an official holiday, bevrijdingsdag is a holiday every year.
I might have time to work on the solution during the weekend.
Cheers,
Aart

setup.py fails in non-utf8 locales
When setup.py us run in non-unicode locales, it crashes with the error below. This is caused by the implicit use of codecs. To find the version number, holidays.py is read using the codecs module, but no codec is specified. Because of this, the codec used depends on the locale, which is ascii for non-unicode locales. Holidays.py contains many non-ascii characters in the holiday names, so this fails.
Non-unicode locales are the default in most minimal setups (such as docker images), so this has quite a bit of impact. Fortunately the fix is trivial; I'll add a merge request.
Collecting holidays (from -r requirements.txt (line 22))
  Downloading holidays-0.6.tar.gz (40kB)
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-build-a2dby65n/holidays/setup.py", line 21, in <module>
        fd.read(), re.MULTILINE).group(1)
      File "/usr/lib/python3.5/encodings/ascii.py", line 26, in decode
        return codecs.ascii_decode(input, self.errors)[0]
    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 16417: ordinal not in range(128)

Workaround for those who depend on the pypi version (requires the C.UTF-8 locale to be generated on your system. Ubuntu docker image has that by default.)
LC_CTYPE=C.UTF-8 python setup.py install  # or whatever pip command you need

Holiday object doesn't generate holidays until __contains__() ran
As shown below holidays won't appear in the object until I check if a date is in the holiday object.
Python 2.7.5 (default, Oct 11 2015, 17:47:16) 
[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import holidays
>>> print holidays.__version__
0.5
>>> h = holidays.UnitedStates()
>>> h
{}
>>> datetime.datetime.now() in h
False
>>> h
{datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 2, 15): "Washington's Birthday", datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 1, 1): "New Year's Day", datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 1, 18): 'Martin Luther King, Jr. Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 5, 30): 'Memorial Day'}
This is on purpose. There is an optional years parameter you can use to force it to generate specific years before checking any dates.
>>> h = holidays.US(years=2016)
>>> h
{datetime.date(2016, 11, 24): 'Thanksgiving', datetime.date(2016, 2, 15): "Washington's Birthday", datetime.date(2016, 7, 4): 'Independence Day', datetime.date(2016, 9, 5): 'Labor Day', datetime.date(2016, 12, 25): 'Christmas Day', datetime.date(2016, 1, 1): "New Year's Day", datetime.date(2016, 10, 10): 'Columbus Day', datetime.date(2016, 1, 18): 'Martin Luther King, Jr. Day', datetime.date(2016, 12, 26): 'Christmas Day (Observed)', datetime.date(2016, 11, 11): 'Veterans Day', datetime.date(2016, 5, 30): 'Memorial Day'}

# or multiple years
>>> h = holidays.US(years[2015, 2016, 2017])
One option would be to default the years argument to the current year but my thinking was as follows:
At the time of creating object h it doesn't know what year(s) you are going to be working with and you wouldn't want to waste cpu cycles generating the current year if you plan on working with another year, or perhaps you initialize the holiday object and never need to use it.
If you think this is not the ideal default I'm open to be persuaded differently.
@ryanss that makes sense. Appreciate your response. No I think your reasoning is valid. Mind if create a Pull Request that updates the README with an example of initiating the object with the years? As I'm using it to get a list of holidays to exclude from dateutil rrule set.
Sure, better documentation is always helpful.
You may be interested in another one of my projects https://github.com/ryanss/bdateutil.
The main feature is adding a new bday option to relativedelta and BDAILY to rrule. The last example in the top Example Usage section might be what you're looking for.
import holidays
from bdateutil import rrule, BDAILY
from datetime import date

for dt in rrule(BDAILY, count=10, dtstart=date(2015, 12, 23), holidays=holidays.US()):
    print dt
Unfortunately, the holidays keyword is only available in the master branch, not the latest release v0.1, so you would have to clone the repository and python setup.py install instead of installing using easy_install or pip. I will be releasing v0.2 to PyPI sometime in the next week.

Ad-hoc UK bank holidays not included
The UK definitions are based on a calculation of when holidays would fall in a given year. However this fails to take into account additional bank holidays. For example 29 April 2011 was a bank holiday but the library reports that it was not.
Thanks. Are there any other one-off holidays like this you are aware of?
There's a list of a few in the Notes section of:
https://en.wikipedia.org/wiki/Public_holidays_in_the_United_Kingdom#England.2C_Northern_Ireland_and_Wales.

Option for ignoring "unobserved" holidays
It might be nice to allow for not adding holidays that are not going to be observed on their normal date. I'm guessing that this only happens when the actual holiday falls on a weekend so maybe it doesn't matter.
To get a list like this you could just check if there's an "(Observed)" version of that holiday name and if there is not include it. Example:
import holidays

us_holidays = holidays.US(years=2016)

# Print all holidays
for date, name in sorted(us_holidays.items()):
    print date, name

# Print only observed holidays
# skip holidays that fall on weekends that have an "(Observed)" version
for date, name in sorted(us_holidays.items()):
    if name + " (Observed)" not in us_holidays.values():
        print date, name

Georgia: Martin Luther King Day
Is it possible that Martin Luther King, Jr. Day is missing for Georgia?
for date,holiday in sorted(holidays.US(state='GA', years=range(2011,2014)).items()):
    print date, holiday
2010-12-31 New Year's Day (Observed)
2011-01-01 New Year's Day
2011-01-17 Robert E. Lee's Birthday
2011-04-25 Confederate Memorial Day
...
2012-01-01 New Year's Day
2012-01-02 New Year's Day (Observed)
2012-04-23 Confederate Memorial Day
...
2012-11-22 Thanksgiving
2012-11-23 Robert E. Lee's Birthday
2012-12-24 Washington's Birthday
2012-12-25 Christmas Day
2013-01-01 New Year's Day
2013-04-22 Confederate Memorial Day
2013-05-27 Memorial Day
...

(For brevity, I replaced some holidays with ... )
The code seems to associate Martin Luther King, Jr. Day with Robert E. Lee's Birthday prior to 2012.
        # Martin Luther King, Jr. Day
        if year >= 1986:
            name = "Martin Luther King, Jr. Day"
            if self.state == 'AL':
                name = "Robert E. Lee/Martin Luther King Birthday"
            elif self.state in ('AS', 'MS'):
                name = ("Dr. Martin Luther King Jr. "
                        "and Robert E. Lee's Birthdays")
            elif self.state in ('AZ', 'NH'):
                name = "Dr. Martin Luther King Jr./Civil Rights Day"
            elif self.state == 'GA' and year < 2012:
                name = "Robert E. Lee's Birthday"
            elif self.state == 'ID' and year >= 2006:
                name = "Martin Luther King, Jr. - Idaho Human Rights Day"
            if self.state != 'GA' or year < 2012:
                self[date(year, 1, 1) + rd(weekday=MO(+3))] = name

However, there are two issues. First, for Martin Luther King, Jr. Day to be included for Georgia after 2012, the last two lines should probably read
            if self.state != 'GA' or year >= 2012:
                self[date(year, 1, 1) + rd(weekday=MO(+3))] = name

Second, it seems that Martin Luther King, Jr. Day has been a state holiday in Georgia already prior to 2012. See https://web.archive.org/web/20110224172609/http://www.georgia.gov/00/channel_modifieddate/0,2096,4802_64437763,00.html, https://web.archive.org/web/20100304032739/http://www.georgia.gov/00/channel_modifieddate/0,2096,4802_64437763,00.html, and https://georgia.gov/popular-topic/observing-state-holidays.
Besides, the above links also seem to suggest that Lincoln's Birthday does not necessarily coincide with Martin Luther King, Jr. Day in Georgia.
Originally the information regarding Martin Luther King, Jr. Day in Georgia came from here: http://www.timeanddate.com/holidays/us/martin-luther-king-day
It is clearly not correct. It looks like the federal holiday was adopted right away in 1986 and Robert E. Lee's Birthday was moved to the last Friday on or before Nov. 29th the same year.

Part-day public holiday
Hi there.
South Australia has a part day public holiday after 7pm on Christmas Eve and New Years Eve:
http://www.safework.sa.gov.au/show_page.jsp?id=2483#.VyR-0GNvN0c
(I'm guessing this is not something that will be supported any time soon: I've still not implemented it in my manual public-holiday stuff internally).
If these days are only considered holidays after 7pm -- and therefore banks, government buildings, etc are open during the day -- I think these days should not be considered holidays considering the types of uses this library has.
Since the library makes it very easy to create custom holiday lists I think we should ignore these for now unless enough "part-day" holidays exist in other countries to warrant adding an optional part_day argument to the Holiday class.
In Australia, it's not just "business hours" that are important: we have different pay rates for employees who work on public holidays.

Installation error via pip under Python 3.5
Got the following error while trying to install under Python 3.5:

Complete output from command python setup.py egg_info:
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/tmp/pip-e2vwj6jf-build/setup.py", line 29, in <module>
    long_description=open('README.rst').read(),
  File "/root/miniconda2/envs/keras/lib/python3.5/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 5823: ordinal not in range(128)


Thank you for the package, BTW!

Determining true holiday, verses observed. 
When generating the US holidays for 2022, the observed new year's day is in 2021 (Dec. 31).
us_holidays = holidays.US()
date(2022, 1, 1) in us_holidays

The observed new year's day in not among the us_holidays. To have the observed holiday, you need to also populate 2021:
date(2021, 1, 1) in us_holidays
>>> for d, name in sorted(holidays.US(years=[2022]).items()):
...     print d, name
... 
2021-12-31 New Year's Day (Observed)
2022-01-01 New Year's Day
2022-01-17 Martin Luther King, Jr. Day
2022-02-21 Washington's Birthday
2022-05-30 Memorial Day
2022-07-04 Independence Day
2022-09-05 Labor Day
2022-10-10 Columbus Day
2022-11-11 Veterans Day
2022-11-24 Thanksgiving
2022-12-25 Christmas Day
2022-12-26 Christmas Day (Observed)

US Presidential Inauguration Day
Is there a reason why you didn't include the US Presidential Inauguration Day:
http://www.opm.gov/policy-data-oversight/pay-leave/pay-administration/fact-sheets/holidays-work-schedules-and-pay
From your link it looks like a very small percentage of the United States gets this day as a holiday so leaving it off the list of default US holidays is the correct thing to do. In the future I plan on adding an optional state parameter that will allow state-specific holidays like Presidential Inauguration Day, Election Day, Good Friday, etc.
At this time, if you need holidays that differ from the default holidays, it is very easy to subclass holidays.UnitedStates to modify the holidays:
from datetime import date
from dateutil.relativedelta import relative delta

import holidays

class MyUSHolidays(holidays.UnitedStates):
    def _populate(self, year):
        # Populate the holiday list with the default US holidays
        holidays.UnitedStates._populate(self, year)
        # Add Presidential Inauguration Day
        # Occurs every four years starting in 1937
        if (year - 1937) % 4 == 0:
            # If Jan 20 is a Sunday holiday falls on Jan 21
            if date(year, 1, 20).weekday() != 6:
                self[date(year, 1, 20)] = "Presidential Inauguration Day"
            else:
                self[date(year, 1, 21)] = "Presidential Inauguration Day"

print date(2013, 1, 21) in MyUSHolidays()
That makes sense. Thank you for creating this module.

Add requirements file
pip install holidays fails if python-dateutil is not already present
I believe the project needs to include a requirement file to ensure the dependencies get installed.
This is essential for including this package into any automated deployments...
Still failing even with requirements.txt file
$ pip install holidays
Downloading/unpacking holidays
  Downloading holidays-0.3.1.tar.gz
  Running setup.py (path:/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py) egg_info for package holidays
    Traceback (most recent call last):
      File "<string>", line 17, in <module>
      File "/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py", line 17, in <module>
        import holidays
      File "holidays.py", line 17, in <module>
        from dateutil.easter import easter
    ImportError: No module named dateutil.easter
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File "<string>", line 17, in <module>

  File "/private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays/setup.py", line 17, in <module>

    import holidays

  File "holidays.py", line 17, in <module>

    from dateutil.easter import easter

ImportError: No module named dateutil.easter

----------------------------------------
Cleaning up...
Command python setup.py egg_info failed with error code 1 in /private/var/folders/93/w12fmdks6_lff6v50dz71fgm0000gn/T/pip_build_ryan/holidays
Storing debug log for failure in /Users/ryan/.pip/pip.log
Most likely because it is importing holidays inside the setup.py before python-dateutil has been installed. Removing the import and hardcoding the version in setup.py should fix this.
Confirmed to work for me, thanks for the fix!

Error when combining holiday objects for different provinces
>>> import holidays
>>> bc = holidays.CA(prov='BC')
>>> on = holidays.CA(prov='ON')
>>> bc + on

Traceback (most recent call last):
  File "sum.py", line 4, in <module>
    bc + on
  File "/Users/ryan/Code/holidays.py/holidays.py", line 104, in __add__
    HolidaySum = createHolidaySum(c1, c2)
  File "/Users/ryan/Code/holidays.py/holidays.py", line 115, in createHolidaySum
    class HolidaySum(class1, class2):
TypeError: Error when calling the metaclass bases
    duplicate base class CA

RuntimeError when creating custom class with Dec 31st holiday
>>> from datetime import date
>>> import holidays
>>> 
>>> class TestHolidays(holidays.US):
...     def _populate(self, year):
...         holidays.US._populate(self, year)
...         self[date(year, 12, 31)] = "New Year's Eve"
... 
>>> '2014-12-31' in TestHolidays()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "holidays.py", line 79, in __contains__
    return dict.__contains__(self, self.__keytransform__(key))
  File "holidays.py", line 75, in __keytransform__
    self._populate(year)
  File "<stdin>", line 4, in _populate
  File "holidays.py", line 85, in __setitem__
    return dict.__setitem__(self, self.__keytransform__(key), value)
  File "holidays.py", line 75, in __keytransform__
    self._populate(year)
  File "<stdin>", line 4, in _populate
  File "holidays.py", line 85, in __setitem__
    return dict.__setitem__(self, self.__keytransform__(key), value))
...
  File "holidays.py", line 75, in __keytransform__
    self._populate(year)
  File "<stdin>", line 3, in _populate
  File "holidays.py", line 112, in _populate
    self[date(year, 1, 1)] = name
  File "holidays.py", line 85, in __setitem__
    return dict.__setitem__(self, self.__keytransform__(key), value)
  File "holidays.py", line 72, in __keytransform__
    year = (key + rd(days=+1)).year
RuntimeError: maximum recursion depth exceeded while calling a Python object

US business days - configurable options 
I have reviewed/tested the code to check what exactly it does with US.
My assumption is that the main use for the module is to identify business vs. non-business days. Seems like there might some discrepancies / options at least within US.
The current list seems to reflect US Post Office schedule, though most businesses are likely to follow Bank Holiday schedule (no business if bank is closed - main difference banks closed on Easter).
Moreover, there are some special cases (e.g. "long weekends" with extra Friday on Thanksgiving, etc, early business closing on "pre-holiday" days, like xmas/new year and possibly others).
I wonder if it might be valuable to make things like this configurable beyond the basic USPS schedule?
References -
http://www.theholidayschedule.com/post-office-holidays.php
http://www.theholidayschedule.com/bank-holidays.php
http://www.theholidayschedule.com/nyse-holidays.php
I have not heard of there being an Easter bank holiday before. Admittedly I am not as familiar with US holidays as Canadian, but I've written a lot of software that deals with processing ACH transactions in the US system where holidays have to be taken into account and I've never seen transactions delayed due to Easter. The Federal Reserve does not consider it a holiday[1].
I'd definitely be open to adding some additional options for the US if there were some clear standards that appeared to be agreed on, but that doesn't seem to be the case?
For special cases like Christmas Eve and New Year's Eve, which only some industries/companies observe, it is quite easy to create your own custom holiday class by inheriting from one of the existing classes.
Example:
>>> from datetime import date
>>> import holidays
>>> 
>>> class NYSEHolidays(holidays.US):
>>>     def _populate(self, year):
>>>         # Add standard holidays from holidays.US class
>>>         holidays.US._populate(self, year)
>>>         # Add custom holiday
>>>         self[date(year, 12, 24)] = "Christmas Eve"
>>> 
>>> print '2014-12-24' in NYSEHolidays()
True
[1] - http://www.federalreserve.gov/aboutthefed/k8.htm

PyPI failures
The package is now "not found" on PyPI ( https://pypi.python.org/pypi/holidays/0.1 ), pip install command fails as well
Sorry about that. Version 0.1 is back up on PyPI now, as well as new version 0.2.
There are backward incompatible changes in v0.2 so check out the new examples in the README for more info.
Thanks for the prompt resolution!

